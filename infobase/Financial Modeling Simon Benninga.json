{
  "title": "Financial Modeling Simon Benninga",
  "source": "Libros/Financial Modeling Simon Benninga.pdf",
  "content": "FINANCIAL MODELING FINANCIAL MODELING Simon Benninga With a section on Visual Basic for Applications by Benjamin Czaczkes F ourth E dition The MIT Press Cambridge, Massachusetts London, England © 2014 Massachusetts Institute of Technology All rights reserved. No part of this book may be reproduced in any form by any electronic or mechanical means (including photocopying, recording, or information storage and retrieval) without permission in writing from the publisher. MIT Press books may be purchased at special quantity discounts for business or sales promotional use. For information, please email special_sales@mitpress.mit.edu . This book was set in Times Roman by Toppan Best-set Premedia Limited. Printed and bound in the United States of America. Library of Congress Cataloging-in-Publication Data Benninga, Simon. Financial modeling / Simon Benninga.—Fourth edition. pages cm Includes bibliographical references and index. ISBN 978-0-262-02728-1 (hardcover : alk. paper) 1. Finance—Mathematical models. 2. Microsoft Visual Basic for applications. I. Title. HG173.B46 2014 332.01’5118—dc23 2013032409 10 9 8 7 6 5 4 3 2 1 To the memory of our parents: Helen Benninga (1913–2008) Groningen, Netherlands – Jerusalem, Israel Noach Benninga (1909–1994) Eenrum, Netherlands – Asheville, North Carolina Esther Czaczkes (1931–2012) Jerusalem, Israel – Jerusalem, Israel Alfred Czaczkes (1923–1997) Vienna, Austria – Jerusalem, Israel Contents Preface xxi Before All Else 1 0.1 Data Tables 1 0.2 What Is Getformula? 10.3 How to Put Getformula into Your Excel Notebook 10.4 Saving the Excel Workbook: Windows 40.5 Saving the Excel Workbook: Mac 50.6 Do You Have to Put Getformula into Each Excel Workbook? 60.7 A Shortcut to Use Getformula 60.8 Recording Getformula: The Windows Case 70.9 Recording Getformula: The Mac Case 10 I CORPORATE FINANCE AND V ALUATION 11 1 Basic Financial Calculations 13 1.1 Overview 131.2 Present Value and Net Present Value 141.3 The Internal Rate of Return (IRR) and Loan Tables 201.4 Multiple Internal Rates of Return 271.5 Flat Payment Schedules 291.6 Future Values and Applications 301.7 A Pension Problem—Complicating the Future Value Problem 331.8 Continuous Compounding 381.9 Discounting Using Dated Cash Flows 42Exercises 45 2 Corporate Valuation Overview 53 2.1 Overview 532.2 Four Methods to Compute Enterprise Value (EV) 532.3 Using Accounting Book Values to Value a Company: The Firm’s Accounting Enterprise Value 54 2.4 The Efficient Markets Approach to Corporate Valuation 582.5 Enterprise Value (EV) as the Present Value of the Free Cash Flows: DCF “Top Down” Valuation 60 viii Contents 2.6 Free Cash Flows Based on Consolidated Statement of Cash Flows (CSCF) 63 2.7 ABC Corp., Consolidated Statement of Cash Flows (CSCF) 64 2.8 Free Cash Flows Based on Pro Forma Financial Statements 672.9 Summary 69Exercises 70 3 Calculating the Weighted Average Cost of Capital (WACC) 71 3.1 Overview 713.2 Computing the Value of the Firm’s Equity, E 733.3 Computing the Value of the Firm’s Debt, D 74 3.4 Computing the Firm’s Tax Rate, T C 75 3.5 Computing the Firm’s Cost of Debt, r D 76 3.6 Two Approaches to Computing the Firm’s Cost of Equity, r E 82 3.7 Implementing the Gordon Model for r E 82 3.8 The CAPM: Computing the Beta, β 89 3.9 Using the Security Market Line (SML) to Calculate Merck’s Cost of Equity, r E 96 3.10 Three Approaches to Computing the Expected Return on the Market, E(r M) 98 3.11 What’s the Risk-Free Rate r f in the CAPM? 102 3.12 Computing the WACC, Three Cases 102 3.13 Computing the WACC for Merck (MRK) 103 3.14 Computing the WACC for Whole Foods (WFM) 104 3.15 Computing the WACC for Caterpillar (CAT) 106 3.16 When Don’t the Models Work? 109 3.17 Summary 113 Exercises 113 4 Valuation Based on the Consolidated Statement of Cash Flows 117 4.1 Overview 117 4.2 Free Cash Flow (FCF): Measuring the Cash Produced by the Business 119 4.3 A Simple Example 121 4.4 Merck: Reverse Engineering the Market Value 124 4.5 Summary 126 Exercise 126 ix Contents 5 Pro Forma Financial Statement Modeling 127 5.1 Overview 127 5.2 How Financial Models Work: Theory and an Initial Example 1275.3 Free Cash Flow (FCF): Measuring the Cash Produced by the Business 136 5.4 Using the Free Cash Flow (FCF) to Value the Firm and Its Equity 138 5.5 Some Notes on the Valuation Procedure 1405.6 Alternative Modeling of Fixed Assets 1425.7 Sensitivity Analysis 1445.8 Debt as a Plug 1455.9 Incorporating a Target Debt/Equity Ratio into a Pro Forma 1485.10 Project Finance: Debt Repayment Schedules 1505.11 Calculating the Return on Equity 1535.12 Tax Loss Carryforwards 1555.13 Summary 157Exercises 157 6 Building a Pro Forma Model: The Case of Caterpillar 161 6.1 Overview 1616.2 Caterpillar’s Financial Statements, 2007–2011 1626.3 Analyzing the Financial Statements 1666.4 A Model for Caterpillar 1766.5 Using the Model to Value Caterpillar 1776.6 Summary 178 7 Financial Analysis of Leasing 179 7.1 Overview 1797.2 A Simple but Misleading Example 1797.3 Leasing and Firm Financing—The Equivalent-Loan Method 1817.4 The Lessor’s Problem: Calculating the Highest Acceptable Lease Rental 184 7.5 Asset Residual Value and Other Considerations 1877.6 Leveraged Leasing 1897.7 A Leveraged Lease Example 1907.8 Summary 193Exercises 193 x Contents II PORTFOLIO MODELS 195 8 Portfolio Models—Introduction 197 8.1 Overview 197 8.2 Computing Returns for Apple (AAPL) and Google (GOOG) 1978.3 Calculating Portfolio Means and Variances 2028.4 Portfolio Mean and Variance—Case of N Assets 205 8.5 Envelope Portfolios 210 8.6 Summary 213 Exercises 213Appendix 8.1: Adjusting for Dividends 215 Appendix 8.2: Continuously Compounded Versus Geometric Returns 218 9 Calculating Efficient Portfolios 221 9.1 Overview 221 9.2 Some Preliminary Definitions and Notation 221 9.3 Five Propositions on Efficient Portfolios and the CAPM 2239.4 Calculating the Efficient Frontier: An Example 227 9.5 Finding Efficient Portfolios in One Step 234 9.6 Three Notes on the Optimization Procedure 236 9.7 Finding the Market Portfolio: The Capital Market Line (CML) 2399.8 Testing the SML—Implementing Propositions 3–5 242 9.9 Summary 245 Exercises 246Mathematical Appendix 248 10 Calculating the Variance-Covariance Matrix 251 10.1 Overview 251 10.2 Computing the Sample Variance-Covariance Matrix 251 10.3 The Correlation Matrix 256 10.4 Computing the Global Minimum Variance Portfolio (GMVP) 25910.5 Four Alternatives to the Sample Variance-Covariance Matrix 26110.6 Alternatives to the Sample Variance-Covariance: The Single-Index Model (SIM) 262 10.7 Alternatives to the Sample Variance-Covariance: Constant Correlation 264 xi Contents 10.8 Alternatives to the Sample Variance-Covariance: Shrinkage Methods 266 10.9 Using Option Information to Compute the Variance Matrix 268 10.10 Which Method to Compute the Variance-Covariance Matrix? 27110.11 Summary 272Exercises 272 11 Estimating Betas and the Security Market Line 273 11.1 Overview 27311.2 Testing the SML 27611.3 Did We Learn Something? 28011.4 The Non-Efficiency of the “Market Portfolio” 28311.5 So What’s the Real Market Portfolio? How Can We Test the CAPM? 285 11.6 Using Excess Returns 28611.7 Summary: Does the CAPM Have Any Uses? 288Exercises 288 12 Efficient Portfolios Without Short Sales 291 12.1 Overview 29112.2 A Numerical Example 29212.3 The Efficient Frontier with Short-Sale Restrictions 29812.4 A VBA Program for the Efficient Frontier Without Short Sales 299 12.5 Other Position Restrictions 30212.6 Summary 303Exercise 303 13 The Black-Litterman Approach to Portfolio Optimization 305 13.1 Overview 30513.2 A Naive Problem 30713.3 Black and Litterman’s Solution to the Optimization Problem 31313.4 BL Step 1: What Does the Market Think? 31313.5 BL Step 2: Introducing Opinions—What Does Joanna Think? 316 13.6 Using Black-Litterman for International Asset Allocation 32413.7 Summary 328Exercises 329 xii Contents 14 Event Studies 331 14.1 Overview 331 14.2 Outline of an Event Study 33114.3 An Initial Event Study: Procter & Gamble Buys Gillette 33514.4 A Fuller Event Study: Impact of Earnings Announcements on Stock Prices 342 14.5 Using a Two-Factor Model of Returns for an Event Study 35014.6 Using Excel’s Offset Function to Locate a Regression in a Data Set 355 14.7 Summary 357 III V ALUATION OF OPTIONS 359 15 Introduction to Options 361 15.1 Overview 36115.2 Basic Option Definitions and Terminology 36115.3 Some Examples 36415.4 Option Payoff and Profit Patterns 36515.5 Option Strategies: Payoffs from Portfolios of Options and Stocks 370 15.6 Option Arbitrage Propositions 37215.7 Summary 379Exercises 380 16 The Binomial Option Pricing Model 383 16.1 Overview 38316.2 Two-Date Binomial Pricing 38316.3 State Prices 38516.4 The Multi-Period Binomial Model 38916.5 Pricing American Options Using the Binomial Pricing Model 39516.6 Programming the Binomial Option Pricing Model in VBA 39816.7 Convergence of Binomial Pricing to the Black-Scholes Price 40416.8 Using the Binomial Model to Price Employee Stock Options 40816.9 Using the Binomial Model to Price Non-Standard Options: An Example 417 16.10 Summary 419Exercises 419 xiii Contents 17 The Black-Scholes Model 425 17.1 Overview 425 17.2 The Black-Scholes Model 42517.3 Using VBA to Define a Black-Scholes Pricing Function 42717.4 Calculating the V olatility 43017.5 A VBA Function to Find the Implied V olatility 43417.6 Dividend Adjustments to the Black-Scholes 43717.7 Using the Black-Scholes Formula to Price Structured Securities 441 17.8 Bang for the Buck with Options 45717.9 The Black (1976) Model for Bond Option Valuation 45917.10 Summary 462Exercises 462 18 Option Greeks 467 18.1 Overview 46718.2 Defining and Computing the Greeks 46818.3 Delta Hedging a Call 47418.4 Hedging a Collar 47618.5 Summary 485Exercises 486Appendix: VBA for Greeks 486 19 Real Options 493 19.1 Overview 49319.2 A Simple Example of the Option to Expand 49419.3 The Abandonment Option 49719.4 Valuing the Abandonment Option as a Series of Puts 50319.5 Valuing a Biotechnology Project 50519.6 Summary 511Exercises 512 IV V ALUING BONDS 515 20 Duration 517 20.1 Overview 51720.2 Two Examples 517 xiv Contents 20.3 What Does Duration Mean? 520 20.4 Duration Patterns 524 20.5 The Duration of a Bond with Uneven Payments 525 20.6 Non-Flat Term Structures and Duration 533 20.7 Summary 536 Exercises 536 21 Immunization Strategies 539 21.1 Overview 539 21.2 A Basic Simple Model of Immunization 539 21.3 A Numerical Example 541 21.4 Convexity: A Continuation of Our Immunization Experiment 545 21.5 Building a Better Mousetrap 547 21.6 Summary 551 Exercises 551 22 Modeling the Term Structure 553 22.1 Overview 553 22.2 Basic Example 553 22.3 Several Bonds with the Same Maturity 558 22.4 Fitting a Functional Form to the Term Structure 562 22.5 The Properties of the Nelson-Siegel Term Structure 566 22.6 Term Structure for Treasury Notes 569 22.7 An Additional Computational Improvement 571 22.8 Nelson-Siegel-Svensson Model 573 22.9 Summary 574 Appendix: VBA Functions Used in This Chapter 575 23 Calculating Default-Adjusted Expected Bond Returns 579 23.1 Overview 579 23.2 Calculating the Expected Return in a One-Period Framework 581 23.3 Calculating the Bond Expected Return in a Multi-Period Framework 582 23.4 A Numerical Example 587 23.5 Experimenting with the Example 589 23.6 Computing the Bond Expected Return for an Actual Bond 591 xv Content s 23.7 Semiannual Transition Matrices 596 23.8 Computin g Bond Beta 599 23.9 Summar y 602 Exercises 603 V MONTE CARLO METHOD S 605 24 Generatin g and Usin g Random Numbers 607 24.1 Overview 607 24.2 Ran d( ) and Rnd: The Exce l and VBA Ran dom-Num ber Generators 608 24.3 Testin g Random-Number Generators 611 24.4 Generatin g Normall y Distributed Random Numbers 617 24.5 Norm.Inv: Another Wa y to Generate Normal Deviates 628 24.6 Generatin g Correlated Random Numbers 630 24.7 What’s Our Interest in Correlation? A Small Case 635 24.8 Multi ple Random Variables with Correlation: The Cholesky Decomposition 638 24.9 Multivariate Normal with Non-Zero Means 646 24.10 Multi variate Uniform Simulations 648 24.11 Summar y 6 51 Exercises 651 25 An Introduct ion to Monte Carlo Methods 655 25.1 Overview 655 25.2 Computin g π Usin g Monte Carlo 655 25.3 Writin g a VBA Pro gram 66 1 25.4 Another Monte Carlo Problem: In vestment and Retirement 663 25.5 A Monte Carlo Simulation of the In vestment Problem 667 25.6 Summar y 671 Exercises 671 26 Simulatin g Stock Prices 675 26.1 Overview 675 26.2 What Do Stock Prices Look Like? 676 26.3 Lo gnormal Price Distributions and Geometric Diffusions 681 26.4 What Does the Lo gnormal Distribution Look Like? 684 xvi Contents 26.5 Simulating Lognormal Price Paths 688 26.6 Technical Analysis 692 26.7 Calculating the Parameters of the Lognormal Distribution from Stock Prices 694 26.8 Summary 696 Exercises 696 27 Monte Carlo Simulations for Investments 699 27.1 Overview 699 27.2 Simulating Price and Returns for a Single Stock 699 27.3 Portfolio of Two Stocks 702 27.4 Adding a Risk-Free Asset 706 27.5 Multiple Stock Portfolios 708 27.6 Simulating Savings for Pensions 710 27.7 Beta and Return 715 27.8 Summary 720 Exercises 720 28 Value at Risk (VaR) 723 28.1 Overview 723 28.2 A Really Simple Example 723 28.3 Defining Quantiles in Excel 725 28.4 A Three-Asset Problem: The Importance of the Variance-Covariance Matrix 728 28.5 Simulating Data: Bootstrapping 730 Appendix: How to Bootstrap: Making a Bingo Card in Excel 736 29 Simulating Options and Option Strategies 745 29.1 Overview 745 29.2 Imperfect but Cashless Replication of a Call Option 747 29.3 Simulating Portfolio Insurance 750 29.4 Some Properties of Portfolio Insurance 758 29.5 Digression: Insuring Total Portfolio Returns 759 29.6 Simulating a Butterfly 765 29.7 Summary 771 Exercises 772 xvii Contents 30 Using Monte Carlo Methods for Option Pricing 775 30.1 Overview 775 30.2 Pricing a Plain-Vanilla Call Using Monte Carlo Methods 77630.3 State Prices, Probabilities, and Risk Neutrality 78030.4 Pricing a Call Using the Binomial Monte Carlo Model 78230.5 Monte Carlo Plain-Vanilla Call Pricing Converges to Black-Scholes 786 30.6 Pricing Asian Options 79430.7 Pricing Asian Options with a VBA Program 80230.8 Pricing Barrier Options with Monte Carlo 80730.9 Using VBA and Monte Carlo to Price a Barrier Option 81130.10 Summary 817Exercises 817 VI EXCEL TECHNIQUES 821 31 Data Tables 823 31.1 Overview 82331.2 An Example 82331.3 Setting Up a One-Dimensional Data Table 82431.4 Building a Two-Dimensional Data Table 82631.5 An Aesthetic Note: Hiding the Formula Cells 82731.6 Excel Data Tables Are Arrays 82831.7 Data Tables on Blank Cells (Advanced) 82931.8 Data Tables Can Stop Your Computer 835Exercises 836 32 Matrices 839 32.1 Overview 83932.2 Matrix Operations 84032.3 Matrix Inverses 84332.4 Solving Systems of Simultaneous Linear Equations 84532.5 Some Homemade Matrix Functions 846Exercises 851 xviii Contents 33 Excel Functions 855 33.1 Overview 855 33.2 Financial Functions 85533.3 Dates and Date Functions 86333.4 The Functions XIRR, XNPV 86933.5 Statistical Functions 87533.6 Regressions with Excel 87933.7 Conditional Functions 88933.8 Large and Rank, Percentile, and PercentRank 89033.9 Count, CountA, CountIf, CountIfs, AverageIf, AverageIfs 89133.10 Boolean Functions 89433.11 Offset 896 34 Array Functions 899 34.1 Overview 89934.2 Some Built-In Excel Array Functions 89934.3 Homemade Array Functions 90434.4 Array Formulas with Matrices 907Exercises 911 35 Some Excel Hints 913 35.1 Overview 91335.2 Fast Copy: Filling in Data Next to Filled-In Column 91335.3 Filling Cells with a Series 91535.4 Multi-Line Cells 91635.5 Multi-Line Cells with Text Formulas 91735.6 Writing on Multiple Spreadsheets 91835.7 Moving Multiple Sheets of an Excel Notebook 91935.8 Text Functions in Excel 92035.9 Chart Titles That Update 92035.10 Putting Greek Symbols in Cells 92435.11 Superscripts and Subscripts 92535.12 Named Cells 92635.13 Hiding Cells (in Data Tables and Other Places) 92835.14 Formula Auditing 93035.15 Formatting Millions as Thousands 93235.16 Excel’s Personal Notebook: Automating Frequent Procedures 934 xix Contents VII VISUAL BASIC FOR APPLICATIONS (VBA) 943 36 User-Defined Functions with VBA 945 36.1 Overview 945 36.2 Using the VBA Editor to Build a User-Defined Function 94536.3 Providing Help for User-Defined Functions in the Function Wizard 955 36.4 Saving Excel Workbook with VBA Content 95836.5 Fixing Mistakes in VBA 96036.6 Conditional Execution: Using If Statements in VBA Functions 963 36.7 The Boolean and Comparison Operators 96736.8 Loops 97036.9 Using Excel Functions in VBA 97736.10 Using User-Defined Functions in User-Defined Functions 979Exercises 981Appendix: Cell Errors in Excel and VBA 986 37 Variables and Arrays 989 37.1 Overview 98937.2 Defining Function Variables 98937.3 Arrays and Excel Ranges 99237.4 Simple VBA Arrays 99537.5 Multidimensional Arrays 100537.6 Dynamic Arrays and the ReDim Statement 100737.7 Array Assignment 100937.8 Variants Containing an Array 101137.9 Arrays as Parameters to Functions 101237.10 Using Types 101537.11 Summary 1016Exercises 1017 38 Subroutines and User Interaction 1023 38.1 Overview 102338.2 Subroutines 102338.3 User Interaction 103038.4 Using Subroutines to Change the Excel Workbook 1033 xx Contents 38.5 Modules 1036 38.6 Summary 1040 Exercises 1040 39 Objects and Add-Ins 1047 39.1 Overview 1047 39.2 Introduction to Worksheet Objects 1047 39.3 The Range Object 1049 39.4 The With Statement 1053 39.5 Collections 1055 39.6 Names 1061 39.7 Add-Ins and Integration 1064 39.8 Summary 1068 Exercises 1068 Selected References 1073 Index 1085 Preface The three previous editions of Financial Modeling have received a gratifyingly positive response from readers. The combination of a “cookbook,” mixing explanation and implementation using Excel, has fulfilled a need in both the academic and the practitioner markets from readers who realize that the imple-mentation of the finance basics typically studied in an introductory finance course requires another, more heavily computational and implementational approach. Excel, the most widely used computational tool in finance, is a natural vehicle for deepening our understanding of the materials. In this fourth edition of Financial Modeling , I have added a section (Chap- ters 24–30) on Monte Carlo methods. The intention is to add a focus on the simulation of financial models. I have become convinced that a statistical understanding of modeling (“What is the mean and sigma of the portfolio return?”) understates the impact of the uncertainty. Only by simulating the models and the return processes can we get a good feel for the dimensions of the uncertainty. With the added section on Monte Carlo, Financial Modeling now consists of seven sections. Each of the first five sections of the book relates to a specific area of finance. These sections are independent of each other, though the reader should realize that they all assume some familiarity with the finance area— Financial Modeling is not an introductory text. Section I (Chapters 1–7) deals with corporate finance topics; Section II (Chapters 8–14) with portfolio models; Section III (Chapters 15–19) with option models; and Section IV (Chapters 20–23) with bond-related topics. Section V , as discussed above, introduces the reader to Monte Carlo methods in finance. The last two sections of Financial Modeling are technical in nature. Section VI (Chapters 31–35) relates to various Excel topics which are used throughout the book. Chapters in Section VI can be read and accessed as necessary. Section VII (Chapters 36–39) deals with Excel ’ s programming language, Visual Basic for Applications (VBA). VBA is used throughout Financial Modeling to create functions and routines which make life easier, but it is never intrusive—in principle the reader can understand the materials in all of the other chapters of Financial Modeling without needing the VBA chapters. New Materials and Updates This edition of Financial Modeling contains much new and updated material. We have already mentioned the new section on Monte Carlo methods. Also new are two chapters on valuation (Chapters 2 and 4) and a chapter on term structure modeling (Chapter 22). Much of the material has been tweaked xxii Preface and improved. For example, the discussion of Excel financial functions now includes a discussion of XIRR and XNPV , including a fix for the bugs in these functions. Getformula The Excel files with this edition include a function called Getformula that enables the user to track cell contents. Getformula is discussed in Chapter 0 and also on a file on the disk that is included with Financial Modeling . To allow Getformula to work, go to File|Options|Trust Center : In the Trust Center settings, I recommend the following setting: xxiii Preface If you have done this, then when opening an Excel notebook for the first time, you will be confronted by the following warning: For notebooks that come with this book, you can safely click Enable Content , which enables the formulas on the notebook. Excel Versions In the examples throughout the book I have used Excel 2013. To the best of my knowledge, all of the spreadsheets work in Excel versions 2003, 2007, 2010, and 2011 (for Mac), although some minor and obvious adaptations by the reader may be called for. Files for the Fourth Edition Purchasers of Financial Modeling get access to all the Excel files for the chapters and exercises. Using Financial Modeling in a University Course Financial Modeling has become the book of choice in many advanced finance classes that stress the combination of modeling/Excel skills and a deeper understanding of the underlying financial models. The Financial Modeling – based courses are often a third- or fourth-year undergraduate or second-year MBA course. The courses are very different and include much instructor-specific input, but they seem to have a few general features in common: • A typical course starts with two or three classes which stress the Excel skills needed for financial modeling. Often these courses are held in a computer lab. Though almost all business school students know Excel, they often do not know the finesses of data tables (Chapter 31), some of the basic financial functions (Chapters 1 and 33), and array functions (Chapter 34). • Most one-semester courses then cover at most one of the Financial Modeling sections. If we assume that in a typical university course, covering one chapter per week is an upper limit (and many chapters will require two weeks), then a typical course might concentrate on either corporate finance (Chapters 1–7), xxiv Preface portfolio models (Chapters 8–14), or options (Chapters 15–19). At a stretch, the instructor could perhaps throw in the shorter bond section (Chapters 20–23). • I suggest that after the initial classes in a computer lab, the instructor move to a regular classroom. This enables the classroom emphasis to be on discus-sions of theory and implementation, with student homework concentrating on actual spreadsheets. A major problem with a computer-based course is how to structure the final examination. Two solutions seem to work well. One alternative is to have students (whether alone or in teams) submit a final project; examples might be a corporate valuation if the course is based on Section I of the book, an event study for Section II, an option-based project for Section III, or the com-putation of a bond-expected return if the emphasis is on Section IV . A second alternative is to have students submit, by e-mail, a spreadsheet-based examina-tion with severe time limits. One instructor using this book sends his class the final exam (a compendium of spreadsheet problems) at 9 in the morning and requires an e-mail with a spreadsheet answer by noon. Acknowledgments I thank a number of people who have made materially significant comments to this edition: Meni Abudy, Zvika Afik, Javierma Bedoya, Lisa Bergé, Elizabeth Caulk, Sharon Garyn-Tal, Victor Lampe, Jongdoo Lee, Erez Levy, Warren Miller, Tal Mofkadi, Roger Myerson, Siddhartha Sarkar, Maxim Sharov, Permjit Singh, Sondre Aarseth Skjerven, Alexander Suhov, Kien-Quoc Van Pham, Chao Wang, Tim Wuu. Finally, I would like to thank: my editor John Covell of MIT Press, Ellen Faran, the Director of MIT Press, and Nancy Benjamin and her editorial team at Books By Design. They have all been unfailingly helpful and patient. Disclaimer The materials in this book are intended for instructional and educational purposes only, to illustrate situations similar to those encountered in the real world. They may not apply directly to real-world situations. The author and MIT Press disclaim any responsibility for the consequences of implementation. From the Preface to the Third Edition The two previous editions of Financial Modeling have received a gratifyingly positive response from readers. The combination of a “cookbook,” mixing explanation and implementation using Excel has fulfilled a need in both the academic and the practitioner markets from readers who realize that the imple-mentation of the finance basics typically studied in an introductory finance course requires another, more heavily computational and implementational, approach. Excel, the most widely used computational tool in finance, is a natural vehicle for deepening our understanding of the materials. Acknowledgments I want to start by thanking a group of wonderful editors: John Covell, Nancy Lombardi, Elizabeth Murry, Ellen Pope, and Peter Reinhart. My next thanks go to a dedicated group of colleagues who read the typescripts for Financial Modeling : Michael Chau, Jaksa Cvitanic, Arindam Bandopadhyaya, Richard Harris, Aurele Houngbedji, Iordanis Karagiannidis, Yvan Lengwiler, Nejat Seyhun, Gök ç e Soydemir, David Y . Suk. Many of the changes in this edition of Financial Modeling are due to the comments of readers, who have been assiduous in offering suggestions and improvements in the book. I follow a tradition started with the first two edi-tions of Financial Modeling by acknowledging those readers whose comments have been incorporated into this edition: Meni Abudy, Zvika Afik, Gordon Alexander, Apostol Bakalov, Naomi Belfer, David Biere, Vitaliy Bilyk, Oded Braverman, Roeland Brinkers, Craig Brody, Salvio Cardozo, Sharad Chaudhary, Israel Dac, Jeremy Darhansoff, Toon de Bakker, Govindvyas Dharwada, Davey Disatnik, Kevin P. Dowd, Brice Dupoyet, Cederik Engel, Orit Eshel, Yaara Geyra, Rana P. Ghosh, Bjarne Jensen, Marek Jochec, Milton Joseph, Erez Kamer, Saggi Katz, Emir Kiamilev, Brennan Lansing, Paul Ledin, Paul Legerer, Quinn Lewis, David Martin, Tom McCurdy, Tsahi Melamed, Tal Mofkadi, Geoffrey Morrisett, Sandip Mukherji, Max Nokhrin, Michael Oczkowski, David Pedersen, Mikael Petitjean, Georgio Questo, Alex Riahi, Arad Rostampour, Joseph Rubin, Andres Rubio, Ofir Shatz, Natalia Simakina, Ashutosh Singh, Permjit Singh, Gerald Strever, Shavkat Sultanbekov, Ilya Talman, Mel Tukman, Daniel Vainder, Guy Vishnia, Torben V oetmann, Chao Wang, James Ward, Roberto Wessels, Geva Yaniv, Richard Yeh, and Werner Zitzman. Finally, I want to thank my very patient wife, Terry, who has maintained her own and my equilibrium through two books and a business school deanship in the past five years. From the Preface to the Second Edition The purpose of this book remains to provide a “cookbook” for implementing common financial models in Excel. This edition has been expanded by six additional chapters, covering financial calculations, cost of capital, value at risk (VaR), real options, early exercise boundaries, and term-structure model-ing. There is also an additional technical chapter containing a potpourri of Excel hints. I am indebted to a number of people (in addition to those mentioned in the previous preface) for help and suggestions: Andrew A. Adamovich, Alejandro Sanchez Arevalo, Yoni Aziz, Thierry Berger-Helmchen, Roman Weissman Bermann, Michael Giacomo Bertolino, John Bollinger, Enrico Camerini, Manuel Carrera, Roy Carson, John Carson, Lydia Cassorla, Philippe Charlier, Michael J. Clarke, Alvaro Cobo, Beni Daniel, Ismail Dawood, Ian Dickson, Moacyr Dutra, Hector Tassinari Eldridge, Shlomy Elias, Peng Eng, Jon Fantell, Erik Ferning, Raz Gilad, Nir Gluzman, Michael Gofman, Doron Greenberg, Phil Hamilton, Morten Helbak, Hitoshi Hibino, Foo Siat Hong, Marek Jochec, Russell W. Judson, Tiffani Kaliko, Boris Karasik, Rick Labs, Allen Lee, Paul Legerer, Guoli Li, Moti Marcus, Gershon Mensher, Tal Mofkadi, Stephen O’Neil, Steven Ong, Oren Ossad, Jackie Rosner, Steve Rubin, Dvir Sabah, Ori Salinger, Meir Shahar, Roger Shelor, David Siu, Maja Sliwinski, Bob Taggart, Maurry Tamarkin, Mun Hon Tham, Efrat Tolkowsky, Mel Tukman, Sandra van Balen, Michael Verhofen, Lia Wang, Roberto Wessels, Ethan Weyand, Ubbo Wiersema, Weiqin Xie, Ke Yang, Ken Yook, George Yuan, Khurshid Zaynutdinov, Ehud Ziegelman, and Eric Zivot. I also want to thank my editors, who again have been a great help: Nancy Lombardi, Peter Reinhart, Victoria Richardson, and Terry Vaughn. From the Preface to the First Edition Like its predecessor Numerical Techniques in Finance, the aim of this book is to present some important financial models and to show how they can be solved numerically and/or simulated using Excel. In this sense this is a finance “cookbook;” like any cookbook, it gives recipes with a list of ingredients and instructions for making and baking. As any cook knows, a recipe is just a starting point; having followed the recipe a number of times, you can think of your own variations and make the results suit your tastes and needs. Financial Modeling covers standard financial models in the areas of corpo- rate finance, financial statement simulation, portfolio problems, options, port-folio insurance, duration, and immunization. The aim in each case has been to explain clearly and concisely the implementation of the models using Excel. Very little theory is offered except where necessary to understand the numeri-cal implementations. While Excel is often not the tool to use for high-level, industrial-strength calculations (portfolios are an example), it is an excellent tool for understand-ing the computational intricacies involved in financial modeling. It is often the case that the fullest understanding of the models comes by calculating them, and Excel is one of the most accessible and powerful tools available for this purpose. Along the way a lot of students, colleagues, and friends (these are nonex- clusive categories) have helped me with advice and comments. In particular I would like to thank Olivier Blechner, Miryam Brand, Elizabeth Caulk, John Caulk, Benjamin Czaczkes, John Ferrari, John P. Flagler, Dan Fylstra, Kuni-hiko Higashi, Julia Hynes, Don Keim, Anthony Kim, Ken Kunimoto, Rick Labs, Adrian Lawson, Philippe Nore, Isidro Sanchez Alvarez, Nir Sharabi, Edwin Strayer, Robert Taggart, Mark Thaler, Terry Vaughn, and Xiaoge Zhou. Finally, my thanks go to a wonderful set of editors: Nancy Lombardi, Peter Reinhart, Victoria Richardson, and Terry Vaughn. 0 Before All Else 0.1 Data Tables Financial Modeling makes extensive use of data tables. I advise readers of the book to fi rst make sure that they understand data tables (read Chapter 31, sec-tions 1–5). Data tables are absolutely critical in the sensitivity analysis that is part of most fi nancial models. They are a little bit complicated, but an invalu- able addition to the modeling arsenal of the fi nancial modeler. In the remainder of this short chapter, I discuss Getformula . 0.2 What Is Getformula? The Excel notebooks in Financial Modeling , fourth edition, contain a function called Getformula that aids in annotating your spreadsheets. In the example below, cell C5 shows the formula contained in cell B5; the formula in question computes the annual repayment of a loan of 165,000 for 7 years at 8%. Cell C5 contains the function = Getformula(B5) . 2 345AB C Principal 165,000 Interest 8% s r a e y - - < 7 m r e T Annual payment 31,691.95 <-- =PMT(B3,B4,-B2) In this short chapter, we describe how to add this formula to your Excel note- book. Mac users: This works only in Excel 2011. 0.3 How to Put Getformula into Your Excel Notebook 1. Open the Excel workbook in which you want the formula to work. 2. Open the VBA editor: • On Windows computers: Press [Alt] + F11. • On Mac (Excel 2011): Choose Tools|Macro|Visual Basic Editor 2 Chapter 0 n e e r c s c a M n e e r c s s w o d n i W 3. This will open the VBA editor. 3 Before All Else 4. Select Insert|Module at the top of the screen. Å Windows screen Å Mac screen 5. Now insert the following text into the Module window (where it says General ). Just copy/paste the text below. 4 Chapter 0 ‘8/5/2006 Thanks to Maja Sliwinski and ‘Beni Czaczkes Function getformula(r As Range) As String Application.Volatile If r.HasArray Then getformula = “ < –– “ & _ “ {“ & r.FormulaArray & “}” Else getformula = “ < –– “ & _ “ “ & r.FormulaArray End If End Function In Windows, close the VBA window (no need to save). On the Mac, just continue to work on the spreadsheet. The formula is now part of the spread- sheet and will be saved along with it. 0.4 Saving the Excel Workbook: Windows To save the notebook with the Getformula macro in VBA, you will have to save it as a Macro-enabled workbook . 5 Before All Else Macro-enabled workbooks have the extension .xlsm, whereas regular Excel workbooks have the extension .xlsx. Your users will never know the difference. We have changed our Excel settings ( File|Options|Save ) to make the Macro- enabled workbook our default: 0.5 Saving the Excel Workbook: Mac The Mac screen for saving as a Macro-enabled workbook looks like this: 6 Chapter 0 0.6 Do You Have to Put Getformula into Each Excel Workbook? The short answer is “yes.” You could create an add-in to Excel (see Chapter 39) that contains Getformula , but this will make it more diffi cult for you to share your workbooks. We prefer to put Getformula in each new spreadsheet we create. 0.7 A Shortcut to Use Getformula Once you have put Getformula into your Excel workbook, you will have to use it! Ninety percent of our uses of this function point to the cell to the left of the formula itself: We ’ ve put a short macro into our Personal workbook that automates this procedure. The remainder of this section describes how to automate the Getformula procedure. Automating the Procedure We want to automate this procedure of putting Getformula into a cell: • Turn it into a macro. • Attach a key sequence (in our case, [Ctrl] + t) to the macro. • Make the macro and key sequence available in your Excel spreadsheets. 7 Before All Else We will save the macro to our Personal.xlsb fi le. This fi le activates each time you start Excel. It ’ s yours only—other readers of your spreadsheets won ’ t see it. Below we describe the steps, for both Windows and the Mac. 0.8 Recording Getformula: The Windows Case Here are the steps to recording the macro in Windows: • Activate the Developer tab on the menu bar. • Use Record Macro to save a macro as a personal notebook. Activate the Developer Tab Go to File|Options|Customize Ribbon and activate the Developer tab as shown below: Use Record Macro The Developer tab allows you to record a macro and save it as part of the Personal.xlsb notebook. We will illustrate with the copy as picture feature. 8 Chapter 0 1. Open a blank Excel notebook and click on the Developer tab and then on Record Macro : Excel will ask for details of the recording. Here ’ s what I wrote. We will save this as a Personal Macro Workbook and then use the shortcut [Ctrl] + t: 2. Now go to your spreadsheet and use Getformula , pointing to the cell to the left of where you want Getformula to appear. In the spreadsheet below, we have typed = Getformula(A3) into cell B4: 9 Before All Else 3. Go back to the Developer tab and stop the recording: 4. Close down Excel. Excel will ask you if you want to save the Personal workbook. The answer is, of course, positive: This creates the following fi le (“simon benninga” is of course my user name on my computer—you will substitute your user name). C:\\Users\\simon benninga\\AppData\\Roaming\\Microsoft\\Excel\\XLSTART\\ PERSONAL.XLSB Using the Macro From now on, whenever you open a fi le on your computer , you can use [Ctrl] + t to copy a region as a picture. Cool! 10 Chapter 0 0.9 Recording Getformula: The Mac Case To record a macro in Excel, use Tools|Macro|Record New Macro : To stop the recording: As in the Windows case, you will be prompted to name the macro and assign it a control key sequence. When you save the spreadsheet, you will be asked if you want to save the Personal Workbook. Done! I CORPORATE FINANCE AND V ALUATION The seven chapters that open Financial Modeling cover basic problems and techniques in corporate finance. Chapter 1 is an introduction to basic financial calculations using Excel. Chapter 2 is a short overview of various valuation methods as applied to corporations. The cost of capital, discussed in Chapter 3, is the rate at which corporate cash flows are discounted to arrive at enterprise value. Calculating this rate is not trivial and involves a combination of theoreti-cal models and numerical computation, both discussed in the chapter. Chapters 4 and 5 discuss two primary valuation methods. Chapter 4 shows how to derive the free cash flows required for valuation from the consolidated statement of cash flows. Chapter 5 shows how to build pro forma models, which simulate the corporate income statement and balance sheets. Pro forma models are at the heart of many corporate finance applications, including busi-ness plans, credit analyses, and valuations. The models require a mixture of finance, accounting, and Excel. Chapter 6 develops a pro forma model to value Caterpillar Corporation. The example we develop is typical of an exercise which accompanies many merger and acquisition valuations. Section I closes with a discussion of the financial analysis of leasing in Chapter 7. 1 Basic Financial Calculations 1.1 Overview This chapter aims to give you some fi nance basics and their Excel implementa- tion. If you have had a good introductory course in fi nance, this chapter is likely to be at best a refresher. 1 This chapter covers: • Net present value (NPV) • Internal rate of return (IRR) • Payment schedules and loan tables • Future value • Pension and accumulation problems • Continuously compounded interest • Time-dated cash fl ows (Excel functions XNPV and XIRR ) Almost all fi nancial problems are centered on fi nding the value today of a series of cash receipts over time . The cash receipts (or cash fl ows, as we will call them) may be certain or uncertain. The present value of a cash fl ow CF t anticipated to be received at time t is CF rt t1+() . The numerator of this expression is usually understood to be the expected time t cash fl ow , and the discount rate r in the denominator is adjusted for the riskiness of this expected cash fl ow—the higher the risk, the higher the discount rate. The basic concept in present value calculations is the concept of opportunity cost . Opportunity cost is the return which would be required of an investment to make it a viable alternative to other, similar investments. In the fi nancial literature there are many synonyms for opportunity cost, among them: discount rate, cost of capital, and interest rate. When applied to risky cash fl ows, we will sometimes call the opportunity cost the risk-adjusted discount rate (RADR) or the weighted average cost of capital (WACC). It goes without saying that this discount rate should be risk-adjusted, and much of the standard fi nance literature discusses how to do this. As illustrated below, when we calculate the net present value, we use the investment ’ s opportunity cost as a discount rate. When we calculate the internal rate of return, we compare the calculated return to the investment ’ s opportunity cost to judge its value. 1. In my book Principles of Finance with Excel (Oxford University Press, 2nd edition, 2008) I have discussed many basic Excel/fi nance topics at greater length. 14 Chapter 1 1.2 Present Value and Net Present Value Both of these concepts are related to the value today of a set of future antici- pated cash fl ows. As an example, suppose we are valuing an investment which promises $100 per year at the end of this and the next 4 years. We suppose that these cash fl ows are risk free: There is no doubt that this series of 5 pay-ments of $100 each will actually be paid. If a bank pays an annual interest rate of 10% on a 5-year deposit, then this 10% is the investment ’ s opportunity cost, the alternative benchmark return to which we want to compare the invest-ment. We can calculate the value of the investment by discounting its cash fl ows using this opportunity cost as a discount rate: 1 2 3 4 567 8 9 101112 13 14AB C D % 0 1 e t a r t n u o c s i D Year Cash flowPresent value 5 A ^ ) 2 $ B $ + 1 ( / 5 B = - - < 1 9 0 9 . 0 9 0 0 1 1 6 A ^ ) 2 $ B $ + 1 ( / 6 B = - - < 6 4 4 6 . 2 8 0 0 1 2 7 A ^ ) 2 $ B $ + 1 ( / 7 B = - - < 5 1 3 1 . 5 7 0 0 1 3 8 A ^ ) 2 $ B $ + 1 ( / 8 B = - - < 3 1 0 3 . 8 6 0 0 1 4 9 A ^ ) 2 $ B $ + 1 ( / 9 B = - - < 1 2 9 0 . 2 6 0 0 1 5 Net present value Summing cells C5:C9 379.08 <-- =SUM(C5:C9) Using Excel's NPV function 379.08 <-- =NPV(B2,B5:B9) Using Excel's PV function 379.08 <-- =PV(B2,5,-100)COMPUTING THE PRESENT VALUE The present value , 379.08, is the value today of the investment. In a competi- tive market, the present value should correspond to the market price of the cash fl ows. The spreadsheet illustrates three ways of obtaining this value: • Summing the individual present values in cells C5:C9. To simplify the copying, note the use of “ ∧ ” to represent the power and the use of both the relative and absolute references; for example: = B5/(1 + $B$2) ∧ A5 in cell C5. • Using the Excel NPV function. As we show on the next page, Excel ’ s NPV function is unfortunately misnamed—it actually computes the present value and not the net present value. 15 Basic Financial Calculations • Using the Excel PV function. This function computes the present value of a series of constant payments. PV(B2,5,-100) is the present value of 5 pay- ments of 100 each at the discount rate in cell B2. The PV function returns a negative value for positive cash fl ows; to prevent this unfortunate occurrence, we have made the cash fl ows negative. 2 The Difference Between Excel ’ s PV and NPV Functions The above spreadsheet may leave the misimpression that PV and NPV perform exactly the same computation. But this is not true—whereas NPV can handle any series of cash fl ows, PV can handle only constant cash fl ows: 1 2 3 4 567 8 9 10 11 1213AB C D % 0 1 e t a r t n u o c s i D YearCash flowPresent valuePresent value of each cash flow 5 A ^ ) 2 $ B $ + 1 ( / 5 B = - - < 1 9 0 9 . 0 9 0 0 1 1 6 A ^ ) 2 $ B $ + 1 ( / 6 B = - - < 3 9 8 2 . 5 6 1 0 0 2 2 7 A ^ ) 2 $ B $ + 1 ( / 7 B = - - < 4 4 9 3 . 5 2 2 0 0 3 3 8 A ^ ) 2 $ B $ + 1 ( / 8 B = - - < 4 5 0 2 . 3 7 2 0 0 4 4 9 A ^ ) 2 $ B $ + 1 ( / 9 B = - - < 7 0 6 4 . 0 1 3 0 0 5 5 Net present value Summing cells C5:C9 1065.26 <-- =SUM(C5:C9) Using Excel's NPV function 1065.26 <-- =NPV(B2,B5:B9)COMPUTING THE PRESENT VALUE In this example the cash flows are not equal Either discount each cash flow separately or use Excel's NPV function Excel's PV doesn't work for this case Excel ’ s NPV Function Is Misnamed! In standard fi nance terminology, the present value of a series of cash fl ows is the value today of the future cash fl ows: Present valueCF rt t tN = +()=∑11 2. This strange property—returning negative values for positive cash fl ows—is shared by a number of otherwise impeccable Excel functions such as PMT and PV . The somewhat convoluted logic which led Microsoft to write these functions this way is not worth explaining. 16 Chapter 1 The net present value is the present value minus the cost of acquiring the asset (the cash fl ow at time zero): Net present valueCF rCFt t tN CF= +()= =↑ <∑100 0 0In many cases me ,aaning that it represents the price paid for the asset./verticalbraceright+CF t 1 11+()= ↑ ′∑rt tN This is the present value given by Excel s NPV , ffunction./dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/dncurlybracketright/horizcurlybracketext Excel ’ s language about discounted cash fl ows differs somewhat from the standard fi nance nomenclature. To calculate the fi nance net present value of a series of cash fl ows using Excel, we have to calculate the present value of the future cash fl ows (using the Excel NPV function), taking into account the time-zero cash fl ow (this is often the cost of the asset in question). The Net Present Value, NPV Suppose that the above investment is sold for $400. Clearly it would not be worth its purchase price, since—given the alternative return (discount rate) of 10%—the investment is worth only $379.08. The net present value (NPV) is the applicable concept here. Denoting by r the discount rate applicable to the investment, the NPV is calculated as follows: NPV CFCF rt t tN =+ +()=∑ 0 11 where CF t is the investment ’ s cash fl ow at time t and CF 0 is today ’ s cash fl ow. Suppose, for example, that the series of 5 cash fl ows of $100 is sold for $250. Then, as shown below, the NPV = 129.08. 1 2 3 4 5 6789 1011 12 1314AB C D % 0 1 e t a r t n u o c s i D Year Cash flowPresent value 0 -250 -250.00 <-- =B5/(1+$B$2)^A5 6 A ^ ) 2 $ B $ + 1 ( / 6 B = - - < 1 9 . 0 9 0 0 1 1 7 A ^ ) 2 $ B $ + 1 ( / 7 B = - - < 4 6 . 2 8 0 0 1 2 8 A ^ ) 2 $ B $ + 1 ( / 8 B = - - < 3 1 . 5 7 0 0 1 3 9 A ^ ) 2 $ B $ + 1 ( / 9 B = - - < 0 3 . 8 6 0 0 1 4 0 1 A ^ ) 2 $ B $ + 1 ( / 0 1 B = - - < 9 0 . 2 6 0 0 1 5 Net present value Summing cells C5:C10 129.08 <-- =SUM(C5:C10) Using Excel's NPV function 129.08 <-- =B5+NPV(B2,B6:B10)COMPUTING THE NET PRESENT VALUE 17 Basic Financial Calculations The NPV represents the wealth increment of the purchaser of the cash fl ows. If you buy the series of 5 cash fl ows of 100 for 250, then you have gained 129.08 in wealth today. In a competitive market the NPV of a series of cash fl ows ought to be zero: Since the present value should correspond to the market price of the cash fl ows, the NPV should be zero. In other words, the market price of our 5 cash fl ows of 100 ought—in a competitive market, assuming that 10% is the correct risk-adjusted discount rate—be 379.08. The Present Value of an Annuity—Some Useful Formulas 3 An annuity is a security which pays a constant sum in each period in the future. Annuities may have a fi nite or infi nite series of payments. If the annuity is fi nite, and the appropriate discount rate is r , then the value today of the annuity is its present value: PV of finite annuityC rC rC r Cr rn n=++ +()+…+ +() =− +()⎛ ⎝⎜ ⎜⎜⎞1 11 11 12 ⎠ ⎠⎟⎟⎟ If the annuity promises an infi nite series of constant future payments, then this formula reduces to: PV of infinite annuityC rC rC r=++ +()+…=1 12 Both of these formulas can be computed with Excel. Below we compute the value of a fi nite annuity in three ways: using the formula (cell B6), using Excel ’ s PV function (cell B7), and using Excel ’ s NPV function: 3. All the formulas in this subsection depend on some well-known but oft-forgotten high school algebra. 18 Chapter 1 1 2 3 45 6 7 8 9 10 11 1213 14 1516C B A 0 0 0 , 1 C , t n e m y a p c i d o i r e P Number of future periods paid, n 5 % 2 1 r , e t a r t n u o c s i D Present value of annuity 4 B / ) 3 B ^ ) 4 B + 1 ( / 1 - 1 ( * 2 B = - - < 8 7 . 4 0 6 , 3 a l u m r o f g n i s U Using Excel's PV function 3,604.78 <-- =PV(B4,B3,-B2) PeriodAnnuit y payment 2 B = - - < 0 0 . 0 0 0 , 1 1 0 0 . 0 0 0 , 1 2 0 0 . 0 0 0 , 1 3 0 0 . 0 0 0 , 1 4 0 0 . 0 0 0 , 1 5 Present value using Excel's NPV function 3,604.78 <-- =NPV(B4,B10:B14)COMPUTING THE VALUE OF A FINITE ANNUITY 1 2 3 4C B A 0 0 0 , 1 C , t n e m y a p c i d o i r e P % 2 1 r , e t a r t n u o c s i D 3 B / 2 B = - - < 3 3 . 3 3 3 , 8 y t i u n n a f o e u l a v t n e s e r PCOMPUTING THE VALUE OF AN INFINITE ANNUITY Computing the value of an infi nite annuity is even simpler: The Value of a Growing Annuity A growing annuity pays out a sum C , which grows at a periodic growth rate g . If the annuity is fi nite, its value today is given by: PV of finite growing annuityC rCg rCg r=+++() +()++() +() +11 11 122 3 …+ ++() +() =−+ +⎛ ⎝⎞⎠⎛ ⎝⎜⎞⎠⎟ −−Cg r Cg r rgn n n1 1 11 11 19 Basic Financial Calculations Taking this formula and letting n → ∞ , we can compute the value of infi nite growing annuity : PV of infinite growing annuityC rCg rCg r=+++() +()++() +() 11 11 122 3++… =−+ +<C rgg r, provided1 11 These formulas can easily be implemented in Excel. Below we compute the value of a fi nite growing annuity using the formula above and using Excel ’ s NPV function: 1 2 34 5 6 7 8 9 10 11 12 13 14 15 16C B A 0 0 0 , 1 C , t n e m y a p t s r i F % 6 g , s t n e m y a p f o e t a r h t w o r G Number of future periods paid, n 5 % 2 1 r , e t a r t n u o c s i D Present value of annuity 3 B - 5 B ( / ) 4 B ^ ) ) 5 B + 1 ( / ) 3 B + 1 ( ( - 1 ( * 2 B = - - < 1 9 . 0 1 0 , 4 a l u m r o f g n i s U ) PeriodAnnuit y payment 2 B = - - < 0 0 . 0 0 0 , 1 1 ) 1 - 1 1 A ( ^ ) 3 $ B $ + 1 ( * 2 $ B $ = - - < 0 0 . 0 6 0 , 1 2 ) 1 - 2 1 A ( ^ ) 3 $ B $ + 1 ( * 2 $ B $ = - - < 0 6 . 3 2 1 , 1 3 ) 1 - 3 1 A ( ^ ) 3 $ B $ + 1 ( * 2 $ B $ = - - < 2 0 . 1 9 1 , 1 4 ) 1 - 4 1 A ( ^ ) 3 $ B $ + 1 ( * 2 $ B $ = - - < 8 4 . 2 6 2 , 1 5 Present value using Excel's NPV function 4,010.91 <-- =NPV(B5,B10:B14)COMPUTING THE VALUE OF A FINITE GROWING ANNUITY When the growing annuity has an infi nite life: 1 2 34 5C B A 1 e t a d t a g n i t r a t S - - < 0 0 0 , 1 C , t n e m y a p c i d o i r e P Growth rate of payments, g 6% Discount rate, r 12% Present value of annuity 16,666.67 <-- =B2/(B4-B3)COMPUTING THE VALUE OF AN INFINITE GROWING ANNUITY 20 Chapter 1 The Gordon Formula The Gordon formula values a stock by discounting its future anticipated dividends at the cost of equity r E . Letting P 0 be the current stock price, Div 0 the current dividend, and g the growth rate of future dividends, then PDiv g rDiv g rgt Et t E00 10 1 11=+() +()=+() −=∞ ∑ Using the formula for an infi nite growing annuity, we can write this as PDiv g rggr EE 001=+() −< provided Inverting this formula shows that rDiv g Pg E=+()+0 01 The Gordon formula is used in Financial Modeling ’ s Chapters 2, 4, 5, and 6 to model the fi rm ’ s terminal value and in Chapter 3 to model the fi rm ’ s cost of equity r E . 1.3 The Internal Rate of Return (IRR) and Loan Tables The internal rate of return (IRR) is defi ned as the compound rate of return r which makes the NPV equal to zero: CFCF rt t tN 0 110 + +()= =∑ To illustrate, consider the example given in rows 2–10 below: A project costing 800 in year zero returns a variable series of cash fl ows at the end of years 1–5. The IRR of the project (cell B10) is 22.16%: 21 Basic Financial Calculations Note that the Excel IRR function includes as arguments all of the cash fl ows of the investment, including the fi rst—in this case negative—cash fl ow of –800. Determining the IRR by Trial and Error There is no simple formula to compute the IRR. Excel ’ s IRR function uses trial and error, which can be simulated by using trial and error in a spreadsheet as illustrated below: 1 2 3 4 5 67 8 9 10AB C YearCash flow 0- 800 12 00 22 50 33 00 43 50 54 00 Internal rate of return 22.16% <-- =IRR(B3:B8)INTERNAL RATE OF RETURN 1 2 3 4 5 6 7 8 9 10 11 12AB C Discount rate 12% Year Cash flow 0- 800 12 00 22 50 33 00 43 50 54 00 Net present value (NPV) 240.81 <-- =B5+NPV(B2,B6:B10)INTERNAL RATE OF RETURN By playing with the discount rate or by using Excel ’ s Goal Seek (found under Data|What-if analysis , see Chapter 31), we can determine that at 22.16% the NPV in cell B12 is zero: 22 Chapter 1 Here ’ s the way the Goal Seek screen looked before we got the correct answer: 1 2 3 4 5 6 7 8 9 10 11 12AB C Discount rate 22.16% Year Cash flow 0- 800 12 00 22 50 33 00 43 50 54 00 Net present value (NPV) 0.00 <-- =B5+NPV(B2,B6:B10)INTERNAL RATE OF RETURN 23 Basic Financial Calculations Loan Tables and the Internal Rate of Return The IRR is the compound rate of return paid by the investment . To understand this fully, it helps to make a loan table , which shows the division of the invest- ment ’ s cash fl ows between investment income and the return of the investment principal: 1 2345 6 789 10 11 12 13 14 15 1617 18 19 20 21 22 23 2425 26AB C D E F Year Cash flow 0 -800 0 0 2 1 0 5 2 2 0 0 3 3 0 5 3 4 0 0 4 5 Internal rate of return 22.16% <-- =IRR(B3:B8) USING THE IRR IN A LOAN TABLE YearInvestment at beginning of yearCash flow at end of year IncomeReturn of principal 1 800.00 200.00 177.28 22.72 <-- =C15-D15 2 777.28 250.00 172.25 77.75 3 699.53 300.00 155.02 144.98 4 554.55 350.00 122.89 227.11 5 327.44 400.00 72.56 327.44 6 0.00INTERNAL RATE OF RETURN Division of cash flow between investment income and return of principal=-B3 =B15-E15=$B$10*B15 The remaining investment principal in the year after the last cash flow is zero, indicating that all the principal has been repaid. 24 Chapter 1 The loan table divides each of the cash fl ows of the asset into an income component and a return-of-principal component. The income component at the end of each year is IRR times the principal balance at the beginning of that year. Notice that the principal at the beginning of the last year (327.44 in the example) exactly equals the return of principal at the end of that year. We can use the loan table to fi nd the internal rate of return. Consider an investment costing 1,000 today that pays off the cash fl ows indicated below at the end of years 1, 2, … 5. At a rate of 15% (cell B2), the principal at the beginning of year 6 is negative, indicating that too little has been paid out in income. Thus the IRR must be larger than 15%: 1 2 3 4 5 6 7 89 10111213AB C D E F IRR? 15.00% YearPrincipal at beginning of yearCash flow at end of year Income Principal 1 1,000.00 300 150.00 150.00 <-- =C6-D6 2 850.00 200 127.50 72.50 3 777.50 150 116.63 33.38 4 744.13 600 111.62 488.38 5 255.74 900 38.36 861.64 6 -605.89USING A LOAN TABLE TO FIND THE IRR Division of cash flow between investment income and return of principal =$B$2*B6 =B6-E6 If the interest rate in cell B3 is indeed the IRR, then cell B11 should be 0. We can use Excel ’ s Goal Seek (found under Data|What-if analysis ) to calculate the IRR: 25 Basic Financial Calculations As shown below, the IRR is 24.44%: 1 2 3 4 5 67 8 9 1011 12 13AB C D E F IRR? 24.44% YearPrincipal at beginning of yearCash flow at end of year Income Principal 1 1,000.00 300 244.36 55.64 <-- =C6-D6 2 944.36 200 230.76 -30.76 3 975.13 150 238.28 -88.28 4 1,063.41 600 259.86 340.14 5 723.26 900 176.74 723.26 60 .00USING A LOAN TABLE TO FIND THE IRR Division of cash flow between investment income and return of principal =$B$2*B6 =B6-E6 26 Chapter 1 The loan table is an effective illustration that the IRR is the interest rate that pays off an investment over its term. Of course, we could have simplifi ed life by just using the IRR function: 15 16 171819 20 21222324AB C D Year Cash flow 0 -1,000 13 00 22 00 31 50 46 00 59 00 IRR 24.44% <-- =IRR(B17:B22)Direct calculation of IRR Excel ’ s Rate Function Excel ’ s Rate function computes the IRR of a series of constant future pay- ments. In the example below, we pay $1,000 today for an annual payment of $100 for the next 30 years. Rate shows that the IRR is 9.307%: 1 2 345AB C Initial investment 1,000 Periodic cash flow 100 Number of payments 30IRR 9.307% <-- =RATE(B4,B3,-B2)USING EXCEL'S RATE FUNCTION TO COMPUTE THE IRR Note: Rate works much like PMT and PV discussed elsewhere in this chapter; it requires a sign change between the initial investment and the peri- odic cash fl ow (note that we have used –B2 in cell B5). It also has switches to allow for payments which start today and payments which start one period from now (not shown in the above example). 27 Basic Financial Calculations 1.4 Multiple Internal Rates of Return Sometimes a series of cash fl ows has more than one IRR. In the next example we can tell that the cash fl ows in cells B6:B11 have two IRRs, since the NPV graph crosses the x-axis twice: 1 2 3 4 5 6789 101112131415161718 19 20 2122232425262728293031AB C D E F G H I Discount rate 6%NPV -3.99 <-- =NPV(B2,B7:B11)+B6 DATA TABLE Discoun t rate NPV Year Cash flow -3.99 Table header, <-- =B3 0 -145 0% -20.00 1 100 3% -10.51 2 100 6% -3.99 3 100 9% 0.24 4 100 12% 2.69 5 -275 15% 3.77 18% 3.8021% 3.0224% 1.6227% -0.2430% -2.4433% -4.9036% -7.53 39% -10.27 Identifying the two IRRsFirst IRR 8.78% <-- =IRR(B6:B11,0) Second IRR 26.65% <-- =IRR(B6:B11,0.3)MULTIPLE INTERNAL RATES OF RETURN Note : For a discussion of how to create data tables in Excel, see Chapter 31. -25.00-20.00-15.00-10.00-5.000.005.00 0% 10% 20% 30% 40%Net present valueDiscount rateTwo IRRs Excel ’ s IRR function allows us to add an extra argument which will help us fi nd both IRRs. Instead of writing = IRR(B6:B11) , we write = IRR(B6:B11,guess) . The argument guess is a starting point for the algorithm which Excel uses to fi nd the IRR; by adjusting the guess , we can identify both the IRRs. Cells B30 and B31 give an illustration. 28 Chapter 1 There are two things to note about this procedure: • The argument guess merely has to be close to the IRR; it is not unique. For example, by setting the guesses equal to 0.1 and 0.5, we will still get the same IRRs: 29 30 31AB C D Identifying the two IRRs First IRR 8.78% <-- =IRR(B6:B11,0.1) Second IRR 26.65% <-- =IRR(B6:B11,0.5) • In order to identify the number and the approximate value of the IRRs, it helps greatly to graph (as we did above) the NPV of the investment as a func-tion of various discount rates. The internal rates of return are then the points where the graph crosses the x-axis, and the approximate location of these points should be used as the guesses in the IRR function. 4 From a purely technical point of view, a set of cash fl ows can have multiple IRRs only if it has at least two changes of sign. Many typical cash fl ows have only one change of sign. Consider, for example, the cash fl ows from purchas-ing a bond having a 10% coupon, a face value of $1,000, and 8 more years to maturity. If the current market price of the bond is $800, then the stream of cash fl ows changes signs only once (from negative in year 0 to positive in years 1–8). Thus there is only one IRR: 1 2 34 5 6789 101112 13 14151617AB C D EFGH I JK Year Cash flow Data table: Effect of 0 -800 discount rate on NPV B , 4 E ( V P N = - - < 0 0 . 0 0 0 , 1 0 0 1 1 4:B11)+B3, table header 0 0 . 0 0 0 , 1 % 0 0 0 1 2 4 0 . 6 8 7 % 2 0 0 1 3 6 9 . 3 0 6 % 4 0 0 1 4 9 3 . 8 4 4 % 6 0 0 1 5 3 9 . 4 1 3 % 8 0 0 1 6 0 0 . 0 0 2 % 0 1 0 0 1 7 5 6 . 0 0 1 % 2 1 0 0 1 , 1 8 14% 14.45 IRR 14.36% <-- =IRR(B3:B11) 16% -60.62 18% -126.21 20% -183.72BOND CASH FLOWS: NPV CROSSES X-AXIS ONLY ONCE, SO THERE IS ONLY ONE IRR -400-200020040060080010001200 0% 5% 10% 15% 20%NPV Discount rateNPV of Bond Cash Flows 4. If you don ’ t put in a guess (as we did in the previous section), Excel defaults to a guess of 0.1. Thus, in the current example, IRR(B34:B39) will return 8.78%. 29 Basic Financial Calculations 1.5 Flat Payment Schedules Another common problem is to compute a “fl at” repayment for a loan. For example: You take a loan for $10,000 at an interest rate of 7% per year. The bank wants you to make a series of payments which will pay off the loan and the interest over 10 years. We can use Excel ’ s PMT function to determine how much each annual payment should be: Notice that we have put “PV”—Excel ’ s nomenclature for the initial loan principal—with a minus sign. As discussed above, if we do not do this Excel returns a negative payment (a minor irritant). You can confi rm that the answer of 2,097.96 is correct by creating a loan table: 30 Chapter 1 The zero in cell C15 indicates that the loan is fully repaid over its term of 6 years. You can easily confi rm that the present value of the payments over the 6 years is the initial principal of 10,000. 1.6 Future Values and Applications We start with a triviality. Suppose you deposit 1,000 in an account today, leaving it there for 10 years. Suppose the account draws annual interest of 10%. How much will you have at the end of 10 years? The answer, as shown in the following spreadsheet, is 2,593.74: 1 2 3 4 567 8 9 10 1112131415AB C D E F G Loan principal 10,000Interest rate 7% Loan term 6 <-- Number of years over which loan is repaid Annual payment 2,097.96 <-- =PMT(B3,B4,-B2) Split payment into: YearPrincipal at beginning of yearPayment at end of year InterestReturn of principal 1 10,000.00 2,097.96 700.00 1,397.96 2 8,602.04 2,097.96 602.14 1,495.823 7,106.23 2,097.96 497.44 1,600.524 5,505.70 2,097.96 385.40 1,712.565 3,793.15 2,097.96 265.52 1,832.446 1,960.71 2,097.96 137.25 1,960.7170 .00FLAT PAYMENT SCHEDULES =$B$3*C9 =D9-E9 =C9-F9 31 Basic Financial Calculations 1 2 3 4 56789 10 11 121314151617AB C D E Interest 10% YearAccount balance, beginning of yearInterest earned during yearTotal in account, end year 1 1,000.00 100.00 1,100.00 <-- =C5+B5 2 1,100.00 110.00 1,210.00 <-- =C6+B6 3 1,210.00 121.00 1,331.00 4 1,331.00 133.10 1,464.10 5 1,464.10 146.41 1,610.51 6 1,610.51 161.05 1,771.56 7 1,771.56 177.16 1,948.72 8 1,948.72 194.87 2,143.59 9 2,143.59 214.36 2,357.95 10 2,357.95 235.79 2,593.74 11 2,593.74 A simpler way 2,593.74 <-- =B5*(1+B2)^10SIMPLE FUTURE VALUE =D5=$B$2*B5 As cell C17 shows, you don ’ t need all these complicated calculations: The future value of 1,000 in 10 years at 10% per year is given by: FV=+ () = 1 000 1 10 2 593 7410,% , .* Now consider the following, slightly more complicated, problem: Again, you intend to open a savings account. Your initial deposit of 1,000 today will be followed by a similar deposit at the beginning of years 1, 2, … , 9. If the account earns 10% per year, how much will you have in the account at the start of year 10? 32 Chapter 1 This problem is easily modeled in Excel: 1 2 3 4 5 6 7 8 9 1011 12 13 14 1516 17 18AB C D E F % 0 1 t s e r e t n I Annual deposit 1,000 <-- Made today and at beginning of each of next 9 years Number of deposits 10 YearAccount balance, beginning of yearDeposit at beginning of yearInterest earned during yearTotal in account, end year 1 0.00 1,000 100.00 1,100.00 <-- =D7+C7+B7 2 1,100.00 1,000 210.00 2,310.00 <-- =D8+C8+B8 3 2,310.00 1,000 331.00 3,641.00 4 3,641.00 1,000 464.10 5,105.10 5 5,105.10 1,000 610.51 6,715.61 6 6,715.61 1,000 771.56 8,487.17 7 8,487.17 1,000 948.72 10,435.89 8 10,435.89 1,000 1,143.59 12,579.48 9 12,579.48 1,000 1,357.95 14,937.42 10 14,937.42 1,000 1,593.74 17,531.17 Future value 17,531.17 <-- =FV(B2,B4,-B3,,1)FUTURE VALUE WITH ANNUAL DEPOSITS =$B$2*(B7+C7) =E7 Thus the answer is that we will have 17,531.17 in the account at the end of year 10. This same answer can be represented as a formula that sums the future values of each deposit: Total at beginning of year 10 1 000 1 10 1 000 1 1010 9=+ () ++ () ++,% ,%** … 1 1 000 1 10 1 000 1 101 110,* % ,%+() =+ () =∑ *t t An Excel function : Note from cell B18 that Excel has a function FV which gives this sum. The dialog box brought up by FV is the following: 33 Basic Financial Calculations We note three things about this function: • For positive deposits FV returns a negative number. This is an irritating property of this function, which it shares with PV and PMT . To avoid negative numbers, we have put the Pmt in as − 1,000. • The line Pv in the dialog box refers to a situation wherein the account has some initial value other than 0 when the series of deposits is made. In the above example, this has been left blank, which indicates that the initial account value is zero. • As noted in the picture, “Type” (either 1 or 0) refers to whether the deposit is made at the beginning or the end of each period (in our example the former is the case). 1.7 A Pension Problem—Complicating the Future Value Problem A typical exercise is the following: You are currently 55 years old and intend to retire at age 60. To make your retirement easier, you intend to start a retire-ment account: • At the beginning of each of years 1, 2, 3, 4 (that is, starting today and at the beginning of each of the next four years), you intend to make a deposit into the retirement account. You think that the account will earn 8% per year. 34 Chapter 1 • After retirement at age 60, you anticipate living 8 more years. 5 At the begin- ning of each of these years you want to withdraw $30,000 from your retirement account. Your account balances will continue to earn 8%. How much should you deposit annually in the account? The following spreadsheet fragment below shows how easily you can go wrong in this kind of problem—in this case, you ’ ve calculated that in order to provide $30,000 per year for 8 years, you need to contribute $240,000/5 = $48,000 in each of the fi rst 5 years. As the spreadsheet shows, you ’ ll end up with a lot of money at the end of 8 years! (The reason—you ’ ve ignored the powerful effects of compound interest. If you set the interest rate in the spreadsheet equal to 0%, you ’ ll see that you ’ re right.) 1 2 345 6 7 89 1011 12 131415 16 171819 20 21AB C D E F % 8 t s e r e t n I Annual deposit 48,000.00 Annual retirement withdrawal 30,000.00 =$B$2*(C7+B7) YearAccount balance, beginning ofyearDeposit at beginning of yearInterest earned during yearTotal in account, end year 7 B + 7 C + 7 D = - - < 0 0 . 0 4 8 , 1 5 0 0 . 0 4 8 , 3 0 0 . 0 0 0 , 8 4 0 0 . 0 1 2 51,840.00 48,000.00 7,987.20 107,827.20 3 107,827.20 48,000.00 12,466.18 168,293.38 4 168,293.38 48,000.00 17,303.47 233,596.85 5 233,596.85 48,000.00 22,527.75 304,124.59 6 304,124.59 -30,000.00 21,929.97 296,054.56 7 296,054.56 -30,000.00 21,284.36 287,338.93 8 287,338.93 -30,000.00 20,587.11 277,926.04 9 277,926.04 -30,000.00 19,834.08 267,760.12 10 267,760.12 -30,000.00 19,020.81 256,780.93 11 256,780.93 -30,000.00 18,142.47 244,923.41 12 244,923.41 -30,000.00 17,193.87 232,117.28 13 232,117.28 -30,000.00 16,169.38 218,286.66A RETIREMENT PROBLEM Note : This problem has 5 deposits and 8 annual withdrawals, all made at the beginning of the year. The beginning of year 13 is the last year of the retirement plan; if the annual deposit is correctly computed, the balance at the beginning of year 13 after the withdrawal should be zero. 5. Of course you ’ re going to live much longer! And I wish you good health! The dimensions of this problem have been chosen to make it fi t nicely on a page. 35 Basic Financial Calculations There are several ways to solve this problem. The fi rst involves Excel ’ s Solver . This can be found on the Data menu. 6 6. If the Solver does not appear on the Tools menu, then you have to load it. Go to File|Options|Add- ins and click Solver Add-In on the list of programs. Note that you could also use the Goal Seek tool to solve this problem. For simple problems such as this one, there is not much difference between the Solver and Goal Seek ; the one (not inconsiderable) advantage of the Solver is that it remembers its previous arguments, so that if you bring it up again on the same spreadsheet, you can see what you did in the previous iteration. In later chapters we will illustrate problems that cannot be solved by Goal Seek and in which the use of the Solver is a necessity. 36 Chapter 1 Clicking on Solver opens a dialog box. Below we ’ ve fi lled it in: 37 Basic Financial Calculations If we now click on the Solve box, we get the answer: 1 2 3 45 6 7 8 9 10 11 1213 14 15 16 1718 19AB C D E F % 8 t s e r e t n I Annual deposit 29,386.55 Annual retirement withdrawal 30,000.00 =$B$2*(C7+B7) YearAccount balance, beginning of yearDeposit at beginning of yearInterest earned during yearTotal in account, end year 7 B + 7 C + 7 D = - - < 8 4 . 7 3 7 , 1 3 2 9 . 0 5 3 , 2 5 5 . 6 8 3 , 9 2 0 0 . 0 12 31,737.48 29,386.55 4,889.92 66,013.95 3 66,013.95 29,386.55 7,632.04 103,032.54 4 103,032.54 29,386.55 10,593.53 143,012.62 5 143,012.62 29,386.55 13,791.93 186,191.10 6 186,191.10 -30,000.00 12,495.29 168,686.39 7 168,686.39 -30,000.00 11,094.91 149,781.30 8 149,781.30 -30,000.00 9,582.50 129,363.81 9 129,363.81 -30,000.00 7,949.10 107,312.91 10 107,312.91 -30,000.00 6,185.03 83,497.94 11 83,497.94 -30,000.00 4,279.84 57,777.78 12 57,777.78 -30,000.00 2,222.22 30,000.00 13 30,000.00 -30,000.00 0.00 0.00A RETIREMENT PROBLEM Solving the Retirement Problem Using Financial Formulas We can solve this problem in a more intelligent fashion if we understand the discounting process. The present value of the whole series of payments, dis-counted at 8%, must be zero: Initial deposit Initial det tt t 10 830 000 10 80 04 512 ., . ()− ()= ⇒==∑∑ ppositt tt t=() ()==∑∑30 000 10 81 10 8 512 04, .. Rewrite 30 000 10 81 10 830 000 10 8 512 4 18, .., . ()=()() ==∑∑ t tt t . We can now use Excel ’ s PV and PMT functions to solve the problem: 38 Chapter 1 1.8 Continuous Compounding Suppose you deposit $1,000 in a bank account which pays 5% per year. This means that at the end of the year you will have $1,000*(1.05) = $1,050. Now suppose that the bank interprets “5% per year” to mean that it pays you 2.5% interest twice a year. Thus after 6 months you ’ ll have $1,025, and after 1 year you will have $, *.$, . 1 000 100 5 21 050 6252 +⎛ ⎝⎞⎠= . By this logic, if you get paid interest n times per year, your accretion at the end of the year will be $, *.1 000 100 5+⎛⎝⎞⎠ n n . As n increases this amount gets larger, converging (rather quickly, as you will soon see) to e 0.05 , which in Excel is written as the function Exp . When n is infi nite, we refer to this as continuous compounding . (By typing Exp(1) in a spreadsheet cell, you can see that e = 2.7182818285. … ) As you can see in the next display, $1,000 continuously compounded for 1 year at 5% grows to $1,000* e 0.05 = $1,051.271 at the end of the year. Continu- ously compounded for t years, it will grow to $1,000* e 0.05* t , where t need not be a whole number (for example, when t = 4.25 then the accumulation factor e 0.05*4.25 measures the growth of the initial investment at 5% annually, continu- ously compounded for 4 years and 3 months). 1 2 34 5 67C B A % 8 t s e r e t n I Annual retirement withdrawal 30,000.00 Years of withdrawal 8 5 t i s o p e d f o s r a e Y Present value of withdrawals 117,331.98 <-- =-PV(B2,B4,B3)/(1+B2)^B5Annual deposit 29,386.55 <-- =PMT(B2,B5,-B6)A RETIREMENT PROBLEM 39 Basic Financial Calculations 1 2 3456789 1011121314151617181920212223 24 252627282930313233C B A 0 0 0 , 1 t i s o p e d l a i t i n I % 5 e t a r t s e r e t n I Number of compounding periods per year 2 Interest per compounding period 2.500% <-- =B3/B4 4 B ^ ) 5 B + 1 ( * 2 B = - - < 5 2 6 . 0 5 0 , 1 r a e y e n o n i n o i t e r c c A Continuous compounding with Exp 1,051.271 <-- =B2*EXP(B3) Compounding periods per yearEnd-year accretion 5 2 A ^ ) 5 2 A / 3 $ B $ + 1 ( * 2 $ B $ = - - < 0 0 0 . 0 5 0 , 1 1 6 2 A ^ ) 6 2 A / 3 $ B $ + 1 ( * 2 $ B $ = - - < 5 2 6 . 0 5 0 , 1 2 0 4 1 . 1 5 0 , 1 0 1 6 0 2 . 1 5 0 , 1 0 2 5 4 2 . 1 5 0 , 1 0 5 8 5 2 . 1 5 0 , 1 0 0 1 2 6 2 . 1 5 0 , 1 0 5 1 7 6 2 . 1 5 0 , 1 0 0 3 9 6 2 . 1 5 0 , 1 0 0 8MULTIPLE COMPOUNDING PERIODS Effect of Multiple Compounding Periods 1,049.801,050.001,050.201,050.401,050.601,050.801,051.001,051.201,051.40 1 10 100 1000Number of compounding intervals End-year accretion The conclusion: More compounding periods increase the future value, though there is a clear asymptotic value; as we will see below, for accretion over t years, this value is e rt . Back to Finance—Continuous Discounting If the accretion factor for continuous compounding at interest r over t years is e rt , then the discount factor for the same period is e − rt . Thus a cash fl ow C t occurring in year t and discounted at continuously compounded rate r will be worth C t e – rt today. This is illustrated below: 40 Chapter 1 Calculating the Continuously Compounded Return from Price Data Suppose at time 0 you had $1,000 in the bank and suppose that 1 year later you had $1,200. What was your percentage return? Although the answer may appear obvious, it actually depends on the compounding method. If the bank paid interest only once a year, then the return would be 20%: 1 200 1 00012 0, ,% −= However, if the bank paid interest twice a year, you would need to solve the following equation to calculate the return: 1 000 121 20021 200 1 0001 9 54452 12 ,* ,, ,.%/ +⎛ ⎝⎞⎠=⇒ =⎛ ⎝⎜⎞⎠⎟−=rr The annual percentage return when interest is paid twice a year is therefore 2*9.5445% = 19.089%. In general, if there are n compounding periods per year, you have to solve r nn =⎛ ⎝⎜⎞⎠⎟−1 200 1 0001 1, ,/ and then multiply the result appropriately. If n is very large, this converges to r=⎛ ⎝⎜⎞⎠⎟= ln, ,.%1 200 1 00018 2322 : 1 2 3 4 5 6 7 8 9 1011AB C D Interest 8% Year Cash flowContinously discounted PV 1 100 92.312 <-- =B5*EXP(-$B$2*A5) 2 200 170.429 <-- =B6*EXP(-$B$2*A6) 3 300 235.988 4 400 290.460 5 500 335.160 Present value 1,124 .348 <-- =SUM(C5:C9)CONTINUOUS DISCOUNTING 41 Basic Financial Calculations 1 2 3 4 5 6 78 9 10 11 12 13 1415 16 17AB C 0 0 0 , 1 t i s o p e d l a i t i n I End-of-year value 1,200 Number of compounding periods 2Implied annual interest rate 19.09% <-- =((B3/B2)^(1/B4)-1)*B4 Continuous return 18.23% <-- =LN(B3/B2) Number of compounding periods Rate 19.09% <-- =B5, data table header 1 20.00% 2 19.09% 4 18.65% 8 18.44% 20 18.32% 1,000 18.23%CALCULATING RETURNS FROM PRICES Implied annual interest rate with n compounding periods Why Use Continuous Compounding? All of this may seem somewhat esoteric. However, continuous compounding/ discounting is often used in fi nancial calculations. In this book, it is used to calculate portfolio returns (Chapters 8–13) and in practically all of the options calculations (Chapters 15–19). There ’ s another reason to use continuous compounding—its ease of calcula- tion. Suppose, for example, that your $1,000 grew to $1,500 in 1 year and 9 months. What ’ s the annualized rate of return? The easiest—and most consistent—way to do this is to calculate the continuously compounded annual return. Since 1 year and 9 months equals 1.75 years, this return is: 1 000 1 75 1 5001 17 51 500 1 00023 1694 , *exp * . ,.ln, ,.% rr[] =⇒ =⎡ ⎣⎢⎤⎦⎥= 42 Chapter 1 1.9 Discounting Using Dated Cash Flows Most of the computations in this chapter consider cash fl ows which occur at fi xed periodic intervals. Typically we look at cash fl ows which occur on dates 0, 1, … , n , where the period indicates an annual, semi-annual, or other fi xed interval. Two Excel functions, XIRR and XNPV , allow us to do computations on cash fl ows which occur on specifi c dates that need not be at even intervals. 7 In the following example we compute the IRR of an investment of $1,000 made on 1 January 2014 with payments on specifi c dates: 7. If you do not see these functions, add them in by going to Tools|Add-ins on the toolbar and checking Analysis ToolPak . 1 2 3 45 6 7 8 9AB C Date Cash flow 01-Jan-14 -1,000 03-Mar-14 150 04-Jul-14 100 12-Oct-14 50 25-Dec-14 1,000 IRR 37.19% <-- =XIRR(B3:B7,A3:A7)USING XIRR TO COMPUTE THE ANNUALIZED INTERNAL RATE OF RETURN The function XIRR outputs an annualized return. It works by computing the daily IRR and annualizing it, XIRR daily IRR =+() − 11365 . XNPV computes the net present value of a series of cash fl ows occurring on specifi c dates: 43 Basic Financial Calculations 1 2 3 45 6 789 10 11 12 13AB C Annual discount rate 12% Date Cash flow 01-Jan-14 -1,000 03-Mar-15 100 04-Jul-15 195 12-Oct-16 350 25-Dec-17 800 Net present value 16.80 <-- =XNPV(B2,B5:B9,A5:A9)USING XNPV TO COMPUTE THE NET PRESENT VALUE Note that XNPV has a different syntax from NPV! XNPV requires all the cash flows, including the initial cash flow, whereas NPV assumes that the first cash flow occurs one period hence. Fixing Bugs in XNPV and XIRR Both XNPV and XIRR have bugs, which Microsoft has not fi xed in several versions of Excel. The fi le with this chapter includes functions that fi x these bugs, called NXNPV and NXIRR . 8 • XNPV doesn ’ t work with zero or negative interest rates. • XIRR does not identify multiple internal rates of return. The XNPV relates to the failure of this function to correctly deal with zero or negative discount rates. 8. These bug fi xes were developed by my colleague Benjamin Czaczkes. 44 Chapter 1 1 2 3 4 567 8 9 1011 12 13C B A Discount rate -3.00%Net present value #NUM! <-- =XNPV(B2,B7:B13,A7:A13) -194.87 <-- =nXNPV(B2,B7:B13,A7:A13) Date Cash flow 30-Jun-14 -500 14-Feb-15 100 14-Feb-16 300 14-Feb-17 400 14-Feb-18 600 14-Feb-19 800 14-Feb-20 -1,800PROBLEM WITH XNPV XNPV does not work with zero or negative discount rates The NXNPV function fi xes this problem. The bug in XIRR is that the Guess switch on XIRR doesn ’ t work. Consider the following problem: 1 2 3456789 10111213141516171819202122232425262728293031323334AB C D E F Discount rate 22.00%Net present value 64.96186 <-- =XNPV(B2,B9:B15,A9:A15)IRR #NUM! <-- =XIRR(B9:B15,A9:A15) , no Guess #NUM! <-- =XIRR(B9:B15,A9:A15,35%), Guess = 35%#NUM! <-- =XIRR(B9:B15,A9:A15,5%) , Guess = 5% Date Cash flow Data table: XNPV as function of discount rate 30-Jun-14 -500 14-Feb-15 100 Rate 64.962 <-- =B3, data table header 14-Feb-16 300 0.1% -97.366 14-Feb-17 400 2.5% -42.753 14-Feb-18 600 4.9% -2.310 14-Feb-19 800 7.3% 26.837 14-Feb-20 -1,800 9.7% 46.983 12.1% 59.96114.5% 67.24016.9% 70.00019.3% 69.19121.7% 65.57824.1% 59.78026.5% 52.29628.9% 43.52831.3% 33.80333.7% 23.38436.1% 12.48438.5% 1.27240.9% -10.113PROBLEMS WITH XIRR -120-100-80-60-40-20020406080 0% 3% 6% 9% 12% 15% 18% 21% 24% 27% 30% 33% 36% 39% 42%XNPV as Function of Discount Rate 45 Basic Financial Calculations From the data table, it is evident that there are two internal rates of return (around 5% and around 39%). But the XIRR function does not identify either (see cells B4:B6). The function NXIRR fi xes this bug: 1 2 3456789 1011121314AB C Discount rate -3.00%IRR 5.06% <-- =nXIRR(B8:B14,A8:A14) , no Guess 38.77% <-- =nXIRR(B8:B14,A8:A14,35%), Guess = 35% 5.06% <-- =nXIRR(B8:B14,A8:A14,5%) , Guess = 5% Date Cash flow 30-Jun-14 -500 14-Feb-15 100 14-Feb-16 300 14-Feb-17 400 14-Feb-18 600 14-Feb-19 800 14-Feb-20 -1,800NXIRR FIXES THE XIRR BUG Exercises 1. You are offered an asset costing $600 that has cash fl ows of $100 at the end of each of the next 10 years. a. If the appropriate discount rate for the asset is 8%, should you purchase it? b. What is the IRR of the asset? 2. You just took a $10,000, 5-year loan. Payments at the end of each year are fl at (equal in every year) at an interest rate of 15%. Calculate the appropriate loan table, showing the breakdown in each year between principal and interest. 3. You are offered an investment with the following conditions: • The cost of the investment is 1,000. • The investment pays out a sum X at the end of the fi rst year; this payout grows at the rate of 10% per year for 11 years. If your discount rate is 15%, calculate the smallest X which would entice you to purchase the asset. For example, as you can see in the following display, X = $100 is too small—the NPV is negative: 46 Chapter 1 1 23 4 567 8 9 101112 13 141516 17AB C Discount rate 15% Initial payment 129.2852NPV -226.52 <-- =B6+NPV(B1,B7:B17) Yea r Cash flow 0 -1,000.001 100.00 <-- 100 2 110.00 <-- =B7*1.1 3 121.00 <-- =B8*1.1 4 133.10 5 146.41 6 161.05 7 177.16 8 194.87 9 214.36 10 235.79 11 259.37 4. The following cash-fl ow pattern has two IRRs. Use Excel to draw a graph of the NPV of these cash fl ows as a function of the discount rate. Then use the IRR function to identify the two IRRs. Would you invest in this project if the opportunity cost were 20%? 4 56789 10AB Year Cash flow 0 -500 1 600 2 300 3 300 4 200 5 -1,000 5. In this exercise we solve iteratively for the internal rate of return. Consider an investment which costs 800 and has cash fl ows of 300, 200, 150, 122, 133 in years 1–5. Setting up the loan table below shows that 10% is greater than the IRR (since the return of principal at the end of year 5 is less than the principal at the beginning of the year): 47 Basic Financial Calculations Setting the IRR? cell equal to 3% shows that 3% is less than the IRR, since the return of principal at the end of year 5 is greater than the principal at the beginning of year 5. By changing the IRR? cell, fi nd the internal rate of return of the investment. 1 2 3 4 5 6 7 8 9ABCD E FGH IRR? 10.00% LOAN TABLE Year Cash flow YearPrincipal at beginning of yearPayment at end of yearInterest Principal 0 -800 1 800.00 300.00 80.00 220.00 1 300 2 580.00 200.00 58.00 142.00 2 200 3 438.00 150.00 43.80 106.20 3 150 4 331.80 122.00 33.18 88.82 4 122 5 242.98 133.00 24.30 108.70 5 133 6 134.28 <-- Should be zero for IRRDivision of payment between: 1 2 3 4 5 6 7 8 9ABCD E FGH IRR? 3.00% LOAN TABLE Year Cash flow YearPrincipal at beginning of yearPayment at end of yearInterest Principal 0 -800 1 800.00 300.00 24.00 276.00 1 300 2 524.00 200.00 15.72 184.28 2 200 3 339.72 150.00 10.19 139.81 3 150 4 199.91 122.00 6.00 116.00 4 122 5 83.91 133.00 2.52 130.48 5 133 6 -46.57 <-- Should be zero for IRRDivision of payment between: 6. An alternative defi nition of the IRR is the rate which makes the principal at the beginning of year 6 equal to zero. 9 This is shown in the printout above, in which cell E9 gives the principal at the beginning of year 6. Using the Goal Seek function of Excel, fi nd this rate (below we illustrate how the screen should look). 9. In general, of course, the IRR is the rate of return that makes the principal in the year following the last payment equal to zero. 48 Chapter 1 (Of course you should check your calculations by using the Excel IRR function.) 7. Calculate the fl at annual payment required to pay off a 13%, 5-year loan of $100,000. 8. You have just taken a car loan of $15,000. The loan is for 48 months at an annual interest rate of 15% (which the bank translates to a monthly rate of 15%/12 = 1.25%). The 48 payments (to be made at the end of each of the next 48 months) are all equal. a. Calculate the monthly payment on the loan. b. In a loan table calculate, for each month: the principal remaining on the loan at the beginning of the month and the split of that month ’ s payment between interest and repayment of principal. c. Show that the principal at the beginning of each month is the present value of the remaining loan payments at the loan interest rate (use either NPV or the PV functions). 9. You are considering buying a car from a local auto dealer. The dealer offers you one of two payment options: • You can pay $30,000 cash. • The “deferred payment plan”: You can pay the dealer $5,000 cash today and a payment of $1,050 at the end of each of the next 30 months. As an alternative to the dealer fi nancing, you have approached a local bank, which is willing to give you a car loan of $25,000 at the rate of 1.25% per month. 49 Basic Financial Calculations 2 3 4 5 6 7 8 9 1011DE F G H Month Cash paymentPayment under deferred payment planDifference 0 30,000 5,000 25,000 <-- =E3-F3 1 0 1,050 -1,050 <-- =E4-F4 2 0 1,050 -1,050 3 0 1,050 -1,050 4 0 1,050 -1,050 5 0 1,050 -1,050 6 0 1,050 -1,050 7 0 1,050 -1,050 8 0 1,050 -1,050 Now calculate the IRR of the difference column; this is the monthly effective interest rate on the deferred payment plan. 10. You are considering a savings plan which calls for a deposit of $15,000 at the end of each of the next 5 years. If the plan offers an interest rate of 10%, how much will you accumulate at the end of year 5? Do this calculation by completing the following spreadsheet. This spreadsheet does the calculation twice—once using the FV function and once using a simple table which shows the accumulation at the beginning of each year. 1 2 3 4 5 6 7 8 9 1011 12AB C D Annual payment 15,000 Interest rate 10% Number of years 5 Total value $91,576.50 <-- =FV(B2,B3,-B1,,0) YearAccumulation at beginning of yearPayment at end of yearAnnual interest 0 0 . 0 0 0 0 , 5 1 0 1 2 15,000 15,000 1,500.00 3 31,500 45 6 a. Assuming that 1.25% is the opportunity cost, calculate the present value of all the payments on the dealer ’ s deferred payment plan. b. What is the effective interest rate being charged by the dealer? Do this calculation by preparing a spreadsheet like this (only part of the spreadsheet is shown—you have to do this calculation for all 30 months): 50 Chapter 1 11. Redo the previous calculation, this time assuming that you make 5 deposits at the begin- ning of this year and the following 4 years. How much will you accumulate by the end of year 5? 12. A mutual fund has been advertising that, had you deposited $250 per month in the fund for the last 10 years, you would now have accumulated $85,000. Assuming that these deposits were made at the beginning of each month for a period of 120 months, calculate the effective annual return fund investors got. Hint: Set up the following spreadsheet and then use Goal Seek . 1 2 34 5C B A 0 5 2 t n e m y a p y l h t n o M 0 2 1 s h t n o m f o r e b m u N Effective monthly return? ) 1 , , 1 B - , 2 B , 4 B ( V F = - - < n o i t a l u m u c c A The effective annual return can then be calculated in one of two ways: • ( 1 + monthly return ) 12 − 1: This is the compound annual return, which is preferable, since it makes allowance for the reinvestment of each month ’ s earnings. • 12* monthly return : This method is often used by banks. 13. You have just turned 35, and you intend to start saving for your retirement. Once you retire in 30 years (when you turn 65), you would like to have an income of $100,000 per year for the next 20 years. Calculate how much you would have to save between now and age 65 in order to fi nance your retirement income. Make the following assumptions: • All savings draw compound interest of 10% per year. • You make the fi rst payment today and the last payment on the day you turn 64 (30 payments). • You make the fi rst withdrawal when you turn 65 and the last withdrawal when you turn 84 (20 payments). 14. You currently have $25,000 in the bank, in a savings account that draws 5% interest. Your business needs $25,000, and you are considering two options: (a) Use the money in your savings account. (b) Borrow the money from the bank at 6%, leaving the money in the savings account. 51 Basic Financial Calculations 1 2 3 4 5 6 7 8 9 1011 12 13 1415 16F E D C B A % 5 d e n r a e t s e r e t n I % 6 d i a p t s e r e t n I 0 0 0 , 5 2 t i s o p e d l a i t i n I YearPrincipal at beginning of yearPayment at end of yearInterest paidRepayment of principal 1 25,000.00 13,635.92 1,500.00 12,135.92 <-- =C8-D8 2 12,864.08 13,635.92 771.84 12,864.08 Total interest paid 2,271.84 YearIn savings account at beginning of yearEnd-year interest earnedIn account at end of year 1 25,000.00 1,250.00 26,250.002 26,250.00 1,312.50 27,562.50 Interest earned 2,562.50THE 6% LOAN Savings Account=PMT($B$3,2,-$B$4)EXERCISE 14, financial analyst's calculations 15. Use XIRR to compute the internal rate of return of the following investment: 1 234 5 678AB Date Cash flow 30-Jun-07 -899 14-Feb-08 7014-Feb-09 7014-Feb-10 7014-Feb-11 7014-Feb-12 7014-Feb-13 1,070 Your fi nancial analyst suggests that solution (b) above is better. His logic: The sum of the interest paid on the 6% loan is lower than the interest earned at the same time on the $25,000 deposit. His calculations are illustrated below. Show that this logic is wrong. (If you think about it, it couldn ’ t be preferable to take a 6% loan when you are getting 5% interest from the bank. However, the explanation for this may not be trivial.) 52 Chapter 1 4 56789 10 11AB Date Cash flow 30-Jun-07 -500 14-Feb-08 100 14-Feb-09 300 14-Feb-10 400 14-Feb-11 600 14-Feb-12 800 14-Feb-13 -1,800 17. Identify the two internal rates of return of the investment in exercise 16. 16. Use XNPV to value the following investment. Assume that the annual discount rate is 15%. 2 Corporate Valuation Overview 2.1 Overview Chapters 3, 4, 5, and 6 discuss various aspects of corporate valuation, one of the trickiest topics in fi nance. This chapter aims to provide a short overview of this complicated topic. In succeeding chapters we turn to the components of valuation: The computation of the cost of capital (Chapter 3), the direct valuation of corporate free cash fl ows from the fi rm ’ s consolidated statement of cash fl ows (Chapter 4), and the projection of fi rm pro forma fi nancial state- ments (Chapters 5 and 6). What Is Corporate Valuation About? When we discuss the valuation of a company, we may be referring to any of the following: • Enterprise value: Valuing the company ’ s productive activities. • Equity: Valuing the shares of a company, whether for the purpose of buying or selling a single share or valuing all of the equity for purposes of a corporate acquisition. • Debt: Valuing the company ’ s debt. When debt is risky, its value depends on the value of the company that has issued the debt. • Other: We may want to value other securities related to the company—for example, the fi rm ’ s warrants or options, employee stock options, etc. In Chapters 2–6 of Financial Modeling , we discuss the fi rst two of these topics, leaving the valuation of debt and other securities for later chapters. 1 2.2 Four Methods to Compute Enterprise Value (EV) The key concept in corporate valuation is enterprise value . The enterprise value (EV) of the fi rm is the value of the fi rm ’ s core business activities and forms the basis of most corporate valuation models. We distinguish between four approaches to computing the enterprise value: 1. Valuation of risky bonds is discussed in Chapter 23. The valuation of derivative securities is discussed in Chapters 15–19, 29, and 30. 54 Chapter 2 • The accounting approach to EV moves items on the balance sheet so that all operating items are on the left-hand side of the balance sheet and all fi nan- cial items are on the right-hand side. Although most academics sneer at this approach, it is often a useful starting point for thinking about the enterprise value. • The effi cient markets approach to EV revalues—to the extent possible— items on the accounting EV balance sheet at market values. An obvious revalu- ation is to replace the fi rm ’ s book value of equity with the market value of the equity. To the extent that we know the market value of other fi rm liabilities— debt, pension obligations, etc.—this market value will also replace the book values. • The discounted cash fl ow (DCF) approach values the EV as the present value of the fi rm ’ s future anticipated free cash fl ows (FCFs) discounted at the weighted average cost of capital (WACC). The FCFs can best be thought of as the cash fl ows produced by the fi rm ’ s productive assets—its working capital, fi xed assets, goodwill, etc. • In this book we use two implementations of the DCF approach. These approaches differ in their derivation of the fi rm ’ s free cash fl ows. Ⴜ In Chapter 4 we base our projections of future anticipated FCFs on an analysis of the fi rm ’ s consolidated statement of cash fl ows. Ⴜ In Chapters 5 and 6 we base our projections of future anticipated FCFs on a pro forma model for the fi rm ’ s fi nancial statements. 2.3 Using Accounting Book Values to Value a Company: The Firm ’ s Accounting Enterprise Value While we would rarely use accounting numbers to value a company, the balance sheet of a company is a useful starting framework for the valuation process. In this section we show how accounting statements can help us defi ne the concept of enterprise value (EV). As a starting point, consider the balance sheet for XYZ Corp.: 55 Corporate Valuation Overview We rewrite this balance sheet: • We separate the operational versus fi nancial items in short-term assets and short-term liabilities. • We move the operational current assets to the left side of the balance sheet. • We move all the debt (short-term debt, current portion of long-term debt, and long-term) into one debt item. 1 2 34 5 6789 10 11 12131415 16 171819E D C B A E t i u q e d n a s e i t i l i b a i L s t e s s A y s e i t i l i b a i l m r e t - t r o h S s t e s s a m r e t - t r o h S 0 0 5 , 1 e l b a y a p s t n u o c c A 0 0 0 , 1 h s a C 0 0 2 e l b a y a p s e x a T 0 0 5 , 1 s e i t i r u c e s e l b a t e k r a M 0 0 0 , 1 t b e d m r e t - g n o l f o n o i t r o p t n e r r u C 0 0 5 , 1 s e i r o t n e v n I 0 0 5 t b e d m r e t - t r o h S 0 0 0 , 3 e l b a v i e c e r s t n u o c c A 0 0 5 , 1 t b e d m r e t - g n o L s t e s s a d e x i F 0 0 8 s e i t i l i b a i l n o i s n e P 0 5 1 d n a L Plant, property and equipment at cost 2,500 0 0 2 k c o t s d e r r e f e r P 0 0 7 - n o i t a i c e r p e d d e t a l u m u c c a s u n i M 0 0 1 t s e r e t n i y t i r o n i M s t e s s a d e x i f t e N Equity 0 0 0 , 1 r a p t a k c o t S 0 0 0 , 1 l l i w d o o G Accumulated retained earnings 3,500Stock repurchases -350 t i u q e d n a s e i t i l i b a i l l a t o T 0 5 9 , 9 s t e s s a l a t o T y 9,950XYZ CORP BALANCE SHEET 56 Chapter 2 In the next step we subtract liquid assets (cash and marketable securities) from fi nancial debts, to get the fi rm ’ s net fi nancial debt. When we fi nish this step, we have all of the fi rm ’ s productive assets on the left side of the balance sheet and all of its fi nancing on the right side. The left-hand side of the result-ing balance sheet is the fi rm ’ s enterprise value , defi ned as the value of the fi rm ’ s operational assets: These are the assets that provide the cash fl ows for the fi rm ’ s actual business activities: 1 2 34 5 6 7 8 9 1011 12 13 14 15 16 17F E D C B A t i u q e d n a s e i t i l i b a i L s t e s s A y Liquid assets (cash + marketable securities) t b e d l a i c n a n i F 0 0 5 , 2 Current portion of long-term debt 1,000 0 0 5 t b e d m r e t - t r o h S l a n o i t a r e p o , s t e s s a t n e r r u C 0 0 5 , 1 t b e d m r e t - g n o L 0 0 5 , 1 s e i r o t n e v n I 0 0 0 , 3 t b e d l a i c n a n i f l a t o T 0 0 0 , 3 e l b a v i e c e r s t n u o c c A Minus, current liabilities, operational Accounts payable -1,500 0 0 8 s e i t i l i b a i l n o i s n e P 0 0 2 - e l b a y a p s e x a T Net working capital 2,800 <-- =SUM(B6:B10) Preferred stock 200 0 0 1 t s e r e t n i y t i r o n i M 0 5 9 , 1 s t e s s a d e x i F 0 5 1 , 4 y t i u q E 0 0 0 , 1 l l i w d o o G Left-hand side of rewritten balance sheet8,250 <-- =B11+B13+B15+SUM (B3:B4 )Right-hand side of rewritten balance sheet8,250 <-- =E7+E10+SUM( E12:E15 )XYZ BALANCE SHEET Operational current liabilities moved to left side All financial liabilities in one account on right side 1 2 3 4 5 6 7 8 9 10 11 12 13 14AB C DE F t i u q e d n a s e i t i l i b a i L s t e s s A y Net working capital 2,800 Total financial debt 3,000 Minus liquid assets -2,500 Fixed assets 1,950 Net debt 500 Goodwill 1,000 Pension liabilities 800 Preferred stock 200 Minority interest 100 0 5 1 , 4 y t i u q E Enterprise value 5,750 <-- =B3+B5+B7 Enterprise value 5,750 <-- =E5+E7+SUM(E9:E12)XYZ ENTERPRISE VALUE BALANCE SHEET 57 Corporate Valuation Overview Caterpillar Corporation 2 To show the rewriting of the balance sheet in practice, here is the 31 December 2011 balance sheet for Caterpillar Corp. (CAT): s e i t i l i b a i l t n e r r u C s t e s s a t n e r r u C Cash and cash equivalents 3,057,000 Accounts payable 16,946,000 Short-term investments Short-term debt 9,648,000 Net receivables 19,533,000 Other current liabilities 1,967,000 Inventory 14,544,000 Total current liabilities 28,561,000 Other current assets 994,000 Total current assets 38,128,000 Long-term debt 24,944,000 Other liabilities 14,539,000 Long-term investments 13,211,000 Property, plant, and equipment (net) 14,395,000 Minority interest 46,000 Goodwill 7,080,000 Total liabilities 68,090,000 Intangible assets 4,368,000 Other assets 2,107,000 Stocks, options, warrants 473,000 Deferred long-term asset charges 2,157,000 Common stock 4,273,000 Retained earnings 25,219,000 Treasury stock -10,281,000 Other stockholder equity -6,328,000 Total equity 13,356,000 Total assets 81,446,000 Total equity and liabilities 81,446,000CATERPILLAR CORP., BALANCE SHEET 31 December 2011 To get to the enterprise value balance sheet for Caterpillar, we move fi nan- cial items from the left side of the balance sheet to the right, and we move operating current liabilities from the right side of the balance sheet to the left. Notice that we netted out liquid assets (cash and marketable securities) from the fi nancial debts of the company. The assumption is that these assets are not needed for the core business activities of Caterpillar. The book value of Caterpillar ’ s enterprise value is $59,476,000: 2. We revisit CAT in Chapter 3, where we compute its weighted average cost of capital, and in Chapter 4, where we build a pro forma for the company. 58 Chapter 2 2.4 The Effi cient Markets Approach to Corporate Valuation The Caterpillar example above assumes that the book value is a correct valu- ation of the company. But a simple calculation shows how problematic this is: At the end of 2011 Caterpillar had 624.72 million shares outstanding, and the market price per share was $90.60. This suggests that the Caterpillar ’ s enter-prise value is $102.720 billion—a far cry from the book value of the enterprise value of $59.476 billion. 1 2 3456 7 89F E D C B A Net working capital 16,158,000 <-- =19533000+14544000+994000-16946000-1967000Net financial debt 31,535,000 <-- =9648000+24944000 - 3057000 Long-term investments 13,211,000 Other liabilities 14,539,000 Property, plant, and equipment 14,395,000 0 0 0 , 6 4 t s e r e t n i y t i r o n i M 0 0 0 , 0 8 0 , 7 l l i w d o o G Intangible assets 4,368,000 0 0 0 , 6 5 3 , 3 1 y t i u q E 0 0 0 , 7 0 1 , 2 s t e s s a r e h t O Deferred long-term asset charges 2,157,000 Enterprise value 59,476,000 <-- =SUM(B2:B8) Enterprise value 59,476,000 <-- =SUM(E2:E7)CATERPILLAR CORP., 2011 ENTERPRISE VALUE BALANCE SHEET Book values 1 23 4 56789 10 11 12131415 16C B A 2 7 . 2 2 7 , 4 2 6 g n i d n a t s t u o s e r a h s f o r e b m u N <-- thousand shares 0 6 . 0 9 e r a h s r e p e c i r P <-- 30dec2011 8 7 8 , 9 9 5 , 6 5 ) \" p a C t e k r a M \" ( e u l a v y t i u q E <-- =B2*B3, thousand $ 0 0 0 , 7 5 0 , 3 s t n e l a v i u q e h s a c d n a h s a C Short-term debt and current portion of long-term debt 9,648,000 0 0 0 , 4 4 9 , 4 2 t b e d m r e t - g n o L 0 0 0 , 5 3 5 , 1 3 t b e d t e N <-- =SUM(B7:B8)-B6 0 0 0 , 9 3 5 , 4 1 s e i t i l i b a i l r e h t O 0 0 0 , 6 4 t s e r e t n i y t i r o n i M 0 k c o t s d e r r e f e r P Enterprise value: Equity + Net debt + Minorit y Interest + Preferred102,719,878 <-- =SUM(B4,B9,B11,B13)CATERPILLAR VALUATION OF EQUITY AND FINANCIAL LIABILITIES: EFFICIENT MARKETS APPROACH Most figures in thousand $ The effi cient markets approach to the valuation of Caterpillar ’ s equity and fi nancial liabilities assumes that the market value of a company ’ s shares or 59 Corporate Valuation Overview debt is simply the market value at the time of valuation. This approach is better than the accounting approach of the previous section and much simpler than the DCF valuations illustrated in succeeding sections and in Chapters 5 and 6. Moreover, it has the power of logic and much academic research behind it. If markets work—in the sense that there are many participants trading the corporate securities, that there is a lot of information about the company in question, and that the valuator has no special information—why not accept the market price as the true value of the company? 3 Applying the effi cient markets approach to the Caterpillar Enterprise Value Balance sheet gives 102,719,878 for the right-hand side of the enterprise value balance sheet. This means, of course, that we have to revalue the left-hand side of the balance sheet. One approach to bringing this enterprise value balance sheet into balance is to assume that the net working capital ’ s book value is a reasonable approximation to its market value. We can then recompute the market value of the fi rm ’ s long-term assets to bring the balance sheet into balance. 1 2 345678 9 1011 121314151617 18 1920F E D C B A Net working capital 16,158,000 <-- =19533000+14544000+994000-16946000- 1967000Net financial debt 31,535,000 <-- =9648000+24944000 - 3057000 0 0 0 , 9 3 5 , 4 1 s e i t i l i b a i l r e h t O s t n e m t s e v n i m r e t - g n o L Property, plant, and equipment 0 0 0 , 6 4 t s e r e t n i y t i r o n i M l l i w d o o G Intangible assets 8 7 8 , 9 9 5 , 6 5 y t i u q E s t e s s a r e h t O <-- Market cap Deferred long-term asset charges Enterprise value 102,719,878 <-- =SUM(B2:B8) Enterprise value 102,719,878 <-- =SUM(E2:E7)CATERPILLAR CORP., 2011 ENTERPRISE VALUE BALANCE SHEET Right-hand side revalued at market values Left-hand side brought into balance with right-hand side by adjusting long-term assets 86,561,878 <-- =E10-B2 3. We have to be careful: Market prices change over time, often precipitously. The effi cient markets hypothesis only says that it is impossible to predict market prices beyond the information compounded into current market information. 60 Chapter 2 Note that we could also apply the market valuation to other components of the right-hand side of the balance sheet—we could try to revalue the fi rm ’ s fi nancial obligations, its other liabilities, and minority interest. This is usually not done, unless there is a convincing case that the book values for these liabili- ties differ materially from their market value. 2.5 Enterprise Value (EV) as the Present Value of the Free Cash Flows: DCF “Top Down” Valuation In the previous section we valued the EV by using the market value of the right-hand side of the fi rm ’ s enterprise value balance sheet—using the market value of its equity and perhaps the market valuation of other elements of the fi rm ’ s fi nancing. In this section we concentrate on the left-hand side of the enterprise value balance sheet. The discounted cash fl ow (DCF) method focuses on two central concepts: • The fi rm ’ s free cash fl ows (FCFs) are defi ned as the cash created by the fi rm ’ s operating activities. • The fi rm ’ s weighted average cost of capital (WACC) is the risk-adjusted discount rate appropriate to the risk of the FCFs (Chapter 3). • The fi rm ’ s enterprise value (EV) is the present value of the future FCFs discounted at the WACC: EVFCF WACCt t t= +()=∞ ∑11 . The idea is to value a company by considering the present value of the FCFs, where FCF is defi ned as the cash fl ow to the fi rm from its assets (the word assets is used broadly, and can be fi xed assets, intellectual and trademark assets, and net working capital). The next subsection discusses this concept in more detail. • In these chapters we often make two additional assumptions: We assume a limited number of predictive periods for the FCFs and we assume that cash fl ows occur throughout the year. This leads to EVFCF WACCTerminal value WACC FCFt tN tN t= +()+ +() =−− =∑11 105 05 1.. + +()+ +()⎡ ⎣⎢⎤⎦⎥ = ↑∑WACCTerminal value WACCtN tN Computed with1 1 EExcel s NPV functionWACC ′+() /dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext105. The assumption that, for valuation purposes, cash fl ows occur approxi- mately in mid-year is meant to capture the fact that most corporate cash fl ows 61 Corporate Valuation Overview occur throughout the year and that it is therefore a mistake to value them as if they occur at year-end. As can be seen from the above formula, the mid-year assumption is easy to compute in Excel: We simply take the Excel NPV and multiply it by (1 + WACC) 0.5 . Defi ning the Free Cash Flow (FCF) The free cash fl ow (FCF) is a measure of how much cash is produced by the fi rm ’ s operations. There are two accepted defi nitions of the FCF (both of which, of course, ultimately boil down to the same thing). Free Cash Flow Based on the Income Statement Profi t after taxes This is the basic measure of the profi tability of the business, but it is an accounting measure that includes fi nancing fl ows (such as interest), as well as non-cash expenses such as depreciation. Profi t after taxes does not account for either changes in the fi rm ’ s working capital or purchases of new fi xed assets, both of which can be important cash drains on the fi rm. + Depreciation and other non-cash expensesDepreciation is a non-cash expense that in the FCF calculation is added back to the profi t after tax. To the extent that there are other non-cash expenses in the fi rm ’ s income statement, these are also added back. − Increase in operating current assetsWhen the fi rm ’ s sales increase, more investment is needed in inventories, accounts receivable, etc. This increase in current assets is not an expense for tax purposes (and is therefore ignored in the profi t after taxes), but it is a cash drain on the company. When adjusting the FCF for current assets, we take care to not include fi nancial current assets that are not directly related to sales such as cash and marketable securities. + Increase in operating current liabilitiesAn increase in the sales often causes an increase in fi nancing related to sales (such as accounts payable or taxes payable). This increase in current liabilities—when related to sales—provides cash to the fi rm. Since it is directly related to sales, we include this cash in the free cash fl ow calculations. When adjusting the FCF for current liabilities, we take care to not include fi nancial current liabilities that are not directly related to sales: changes in short-term debt and the current portion of long-term debt being the most prominent examples. 62 Chapter 2 An alternative, equivalent, defi nition is based on the fi rm ’ s earnings before income and taxes: Free Cash Flow Based on the EBIT (earnings before interest and taxes) EBIT + Depreciation and other non-cash expenses − Increase in Operating Current Assets The sum – Δ CA + Δ CL is the change in the fi rm ’ s net working capital Δ NWC + Increase in Operating Current Liabilities − Increase in fi xed assets at cost (CAPEX) − Increase in fi xed assets at cost (CAPEX)An increase in fi xed assets (the long-term productive assets of the company) is a use of cash, which reduces the fi rm ’ s free cash fl ow. + After-tax interest payments (net)FCF is an attempt to measure the cash produced by the business activity of the fi rm. To neutralize the effect of interest payments on the fi rm ’ s profi ts, we: • Add back the after-tax cost of interest on debt ( after-tax since interest payments are tax-deductible), • Subtract out the after-tax interest payments on cash and marketable securities. How Can We Predict Future FCFs? The most critical aspect in valuing a company is to project its anticipated future free cash fl ows. In this book we explore two ways of deriving these cash fl ows. Both methods are primarily based on accounting data. Since accounting data is historical data, we need to add some judgment about how this data will develop in the future. • One method is to base our estimates of future free cash fl ows on the con- solidated statement of cash fl ows (CSCF) of the fi rm (Chapter 4). • The second method is to estimate a set of pro forma fi nancial statements for the fi rm and to derive the free cash fl ows from these statements (Chapter 5). Both methods are briefl y reviewed in succeeding sections. 63 Corporate Valuation Overview 2.6 Free Cash Flows Based on Consolidated Statement of Cash Flows (CSCF) The consolidated statement of cash fl ows is part of every fi nancial statement. It is the accountant ’ s explanation of how much cash was generated by the business, and how this cash was generated. The consolidated statement of cash fl ows (CSCF) is composed of three sections: Operating cash fl ows, investment cash fl ows, and fi nancing cash fl ows. When we use the CSCF to determine FCFs, we use the following general procedure (explanations are given in sub-sequent subsections and again in Chapter 4): • We accept the operating cash fl ows as reported by the fi rm. • We carefully examine the investment cash fl ows, leaving for the FCF the investment cash fl ows related to productive activities and eliminating those investment cash fl ows relating to investment by the fi rm in fi nancial assets. • We do not count toward the FCF any of the fi nancial cash fl ows. • In all cases we are careful about whether specifi c items are one time or recurring, eliminating from consideration the one-time items. • We adjust the totals of the adjusted CSCF numbers by adding back net inter- est paid. The subsections below contain further explanations. A worked-out example is given in the next section. CSCF, Section 1: Operating Cash Flows The operating cash fl ows adjust the fi rm ’ s net income for non-cash deductions to the income and for changes in the fi rm ’ s operating net working capital. Because modern accounting statements include many non-cash items, translat-ing the fi rm ’ s accounts to a cash basis necessitates many adjustments. A classic adjustment is to add back depreciation to the fi rm ’ s income: Since depreciation is a non-cash charge on the fi rm ’ s income, it must be added back when making the adjustment for cash. But depreciation is just the tip of the non-cash iceberg: • When fi rms issue stock options to employees, the value of these options is deducted from the fi rm ’ s income. The logic behind this—that in giving its employees options, the fi rm has given them something of value which must be accounted for in its income statement—is impeccable. But the actual charge 64 Chapter 2 for options is a non-cash deduction, and in the consolidated statement of cash fl ows, it is added back. • A fi rm ’ s income statements must refl ect the decrease in goodwill (so-called “impairment”). This impairment—the loss in economic value of an intangible asset that was purchased by the fi rm—is an economic loss to the fi rm ’ s share- holders. But it is not a cash fl ow loss, and in the consolidated statement of cash fl ows it is added back. • The list can include a large number of additional items, as we shall see in Chapter 4. For purposes of computing the fi rm ’ s free cash fl ows, we can usually leave all the items in the operating cash fl ow section of the CSCF. SCF, Section 2: Investment Cash Flows The second section of the CSCF includes all investments made by the fi rm. These investments include both investments in securities and investments in operating assets of the fi rm. • Investment in securities can refer to the sale or the purchase of securities held by the fi rm. Investment in securities is not part of the fi rm ’ s free cash fl ows, which are intended to measure solely cash fl ows related to the fi rm ’ s core business activities. • Investments in fi xed assets are usually related to the fi rm ’ s FCFs. For purposes of computing the fi rm ’ s free cash fl ows, we need to distinguish between fi nancial investment cash fl ows (not part of the FCF) and investment in assets used to produce the fi rm ’ s business income (part of the FCF). CSCF, Section 3: Financing Cash Flows The last section of the CSCF deals with changes in the fi rm ’ s fi nancing. For FCF purposes, we can ignore this section. 2.7 ABC Corp., Consolidated Statement of Cash Flows (CSCF) Five years of the consolidated statement of cash fl ows of ABC Corp. are given below: 65 Corporate Valuation Overview 1 2 3 4 5 67 8 9 10 11 1213 14 1516 17 181920 21 2223 24 2526 27 28 2930313233 34 35G F E D C B A 2008 2009 2010 2011 2012 Operating Activities: Net earnings 479,355 495,597 534,268 505,856 520,273 Adjustments to reconcile net earnings to net cash provided by operating activities Add back depreciation and amortization 41,583 47,647 46,438 45,839 46,622 Changes in operating assets and liabilities: Subtract increase in accounts receivable 9,387 25,951 -12,724 1,685 -2,153 Subtract increase in inventories -37,630 -22,780 -16,247 -15,780 -5,517 Subtract increase in prepaid expenses and other assets-52,191 13,573 16,255 14,703 -2,975 Add increase in accounts payable, accrued expenses, pensions, and other liabilities29,612 51,172 6,757 40,541 60,255 Net cash provided by operating activities 470,116 611,160 574,747 592,844 616,505 <-- =SUM(F4:F11) Investing Activities: Short-term investments, net -5,000 -55,000 50,000 -10,000 20,000 Purchases of property, plant, and equipment -48,944 -70,326 -89,947 -37,044 -88,426 Proceeds from dispositions of property, plant and equipment197 6,956 22,942 6,179 28,693 Net cash used in investing activities -53,747 -118,370 -17,005 -40,865 -39,733 <-- =SUM(F15:F17) Financing Activities: Repayment of debt 00 -300,000 0 -7,095 Proceeds from revolving credit facility borrowings 1,242,431 0 0 0 250,000 Proceeds from the issuance of stock 48,286 114,276 69,375 68,214 37,855 Dividends paid -332,986 -344,128 -361,208 -367,499 -378,325 Stock repurchased -150,095 -200,031 -200,038 -200,003 -597,738 Net cash used in financing activities 807,636 -429,883 -791,871 -499,288 -695,303 <-- =SUM(F21:F25) Changes in cash balances 1,224,005 62,907 -234,129 52,691 -118,531 <-- =F12+F18+F26 Supplemental disclosure of cash flow information Cash paid during the period for Income taxes 255,043 175,972 314,735 283,618 305,094 Interest 83,553 83,551 70,351 57,151 57,910 Income tax rate 34.73% 26.20% 37.07% 35.92% 36.96% <-- =F32/(F4+F32)ABC CORPORATION Consolidated Statement of Cash Flows, 2008-2012 To turn these CSCF into free cash fl ows: • We keep all the items under operating activities. • In the section for Investing Activities, we delete items that are not related to operations. For example, we would delete “short-term investments, net” under Investing Activities—these represent the purchase and sale of fi nancial assets. • We completely ignore the cash fl ows under Financing Activities • We add back after-tax net interest to the sum of the remaining items to neutralize the subtraction of interest from the net income. 66 Chapter 2 1 2 34 5 6789 10 11 1213141516 17 181920212223242526 2728293031323334353637AB C D E F G 2008 2009 2010 2011 2012 Operating Activities: Net earnings 479,355 495,597 534,268 505,856 520,273 Adjustments to reconcile net earnings to net cash provided by operating activities Add back depreciation and amortization 41,583 47,647 46,438 45,839 46,622 Changes in operating assets and liabilities: Subtract increase in accounts receivable 9,387 25,951 -12,724 1,685 -2,153 Subtract increase in inventories -37,630 -22,780 -16,247 -15,780 -5,517 Subtract increase in prepaid expenses and other assets-52,191 13,573 16,255 14,703 -2,975 Add increase in accounts payable, accrued expenses, pensions and other liabilities29,612 51,172 6,757 40,541 60,255 Net cash provided by operating activities 470,116 611,160 574,747 592,844 616,505 <-- =SUM(F4:F11) Investing Activities: Short-term investments, net Purchases of property, plant and equipment -48,944 -70,326 -89,947 -37,044 -88,426 Proceeds from dispositions of property, plant and equipment197 6,956 22,942 6,179 28,693 Net cash used in investing activities -53,747 -118,370 -67,005 -30,865 -59,733 <-- =SUM(F15:F17) Financing Activities: Repayment of debt Proceeds from revolving credit facility borrowings Proceeds from the issuance of stock Dividends paid Stock repurchased Net cash used in financing activities <-- Free cash flow before interest adjustment 416,369 492,790 507,742 561,979 556,772 <-- =F12+F18+F26 Add back after-tax net interest 54,537 61,658 44,271 36,620 36,504 <-- =(1-F37)*F35 Free cash flow (FCF) 470,906 554,448 552,013 598,599 593,276 <-- =F28+F29 Supplemental disclosure of cash flow information Cash paid during the period for Income taxes 255,043 175,972 314,735 283,618 305,094 Interest 83,553 83,551 70,351 57,151 57,910 Income tax rate 34.73% 26.20% 37.07% 35.92% 36.96% <-- =F34/(F4+F34)ABC CORPORATION CSCF rewritten to Free Cash Flow (FCF) In Chapter 4 we discuss how these historical free cash fl ows can be used as the basis for cash fl ow projections. One valuation of a company might look like this: 67 Corporate Valuation Overview 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16H G F E D C B A Free cash flow (FCF)year ending 31 Dec. 2012 593,276 <-- 593275.77278229 Growth rate of FCF, years 1-5 8.00% <-- Optimistic about short-term growth Long-term FCF growth rate 5.00% <-- More pessimistic about long-term growth Weighted average cost of capital, WACC 10.70% Year 2012 2013 2014 2015 2016 2017 ) 3 $ B $ + 1 ( * 8 F = - - < 7 1 7 , 1 7 8 5 4 1 , 7 0 8 7 5 3 , 7 4 7 7 9 9 , 1 9 6 8 3 7 , 0 4 6 F C F Terminal value 16,057,940 <-- =G8*(1+B4)/(B5-B4) 9 G + 8 G = - - < 7 5 6 , 9 2 9 , 6 1 5 4 1 , 7 0 8 7 5 3 , 7 4 7 7 9 9 , 1 9 6 8 3 7 , 0 4 6 l a t o T 5 . 0 ^ ) 5 B + 1 ( * ) 0 1 G : 0 1 C , 5 B ( V P N = - - < 5 5 0 , 3 6 0 , 3 1 e u l a v e s i r p r e t n E Add back initial cash and marketable securities 73,697 <-- From current balance sheet Subtract out 2012 financial liabilities 1,379,106 <-- From current balance sheet 4 1 B - 3 1 B + 2 1 B = - - < 6 4 6 , 7 5 7 , 1 1 e u l a v y t i u q E Per share (1 million shares outstanding) 11.76 <-- =B15/1000000ABC CORP. VALUATION 2.8 Free Cash Flows Based on Pro Forma Financial Statements Another way to project free cash fl ows is to build a set of predictive fi nancial statements based on our understanding of the company and its fi nancial state- ments. We discuss the construction of such a model in Chapter 5 and give a fully worked-out example for Caterpillar in Chapter 6. A typical model might look like the following: 68 Chapter 2 1 2 3 4 5 67 8 9 10111213 14 151617 18 192021 22 232425 26 272829 30 313233 34 353637 38 39G F E D C B A % 0 1 h t w o r g s e l a S % 5 1 s e l a S / s t e s s a t n e r r u C % 8 s e l a S / s e i t i l i b a i l t n e r r u C % 7 7 s e l a S / s t e s s a d e x i f t e N % 0 5 s e l a S / d l o s s d o o g f o s t s o C % 0 1 e t a r n o i t a i c e r p e D % 0 0 . 0 1 t b e d n o e t a r t s e r e t n I Interest paid on cash and marketable securities 8.00% % 0 4 e t a r x a T % 0 4 o i t a r t u o y a p d n e d i v i D 5 4 3 2 1 0 r a e Y Income statement Sales 1,000 1,100 1,210 1,331 1,464 1,611 Costs of goods sold (500) (550) (605) (666) (732) (805) Interest payments on debt (32) (32) (32) (32) (32) (32) Interest earned on cash and marketable securities 6 9 14 20 26 33 Depreciation (100) (117) (137) (161) (189) (220) Profit before tax 374 410 450 492 538 587 Taxes (150) (164) (180) (197) (215) (235) Profit after tax 225 246 270 295 323 352 Dividends (90) (98) (108) (118) (129) (141) Retained earnings 135 148 162 177 194 211 Balance sheet Cash and marketable securities 80 144 213 289 371 459 Current assets 150 165 182 200 220 242 Fixed assets At cost 1,070 1,264 1,486 1,740 2,031 2,364 Depreciation (300) (417) (554) (715) (904) (1,124) Net fixed assets 770 847 932 1,025 1,127 1,240 Total assets 1,000 1,156 1,326 1,513 1,718 1,941 Current liabilities 80 88 97 106 117 129 Debt 320 320 320 320 320 320 Stock 450 450 450 450 450 450 Accumulated retained earnings 150 298 460 637 830 1,042 Total liabilities and equity 1,000 1,156 1,326 1,513 1,718 1,941PRO FORMA FINANCIAL MODEL 69 Corporate Valuation Overview 41 424344 45 4647484950G F E D C B A 5 4 3 2 1 0 r a e Y Free cash flow calculation 2 5 3 3 2 3 5 9 2 0 7 2 6 4 2 x a t r e t f a t i f o r P 0 2 2 9 8 1 1 6 1 7 3 1 7 1 1 n o i t a i c e r p e d k c a b d d A ) 2 2 ( ) 0 2 ( ) 8 1 ( ) 7 1 ( ) 5 1 ( s t e s s a t n e r r u c n i e s a e r c n i t c a r t b u S 2 1 1 1 0 1 9 8 s e i t i l i b a i l t n e r r u c n i e s a e r c n i k c a b d d A ) 3 3 3 ( ) 1 9 2 ( ) 4 5 2 ( ) 2 2 2 ( ) 4 9 1 ( t s o c t a s t e s s a d e x i f n i e s a e r c n i t c a r t b u S 9 1 9 1 9 1 9 1 9 1 t b e d n o t s e r e t n i x a t - r e t f a k c a b d d A Subtract after-tax interest on cash and mkt. securities (5) (9) (12) (16) (20) Free cash flow 176 188 201 214 228 We can now use these free cash fl ows to compute the enterprise value of the fi rm (row 62 below) and the value of its shares (cell B67): 53 54 5556 57 58 59 6061 62 63 64 65 66 67H G F E D C B A Valuing the firm % 0 2 l a t i p a c f o t s o c e g a r e v a d e t h g i e W % 5 e t a r h t w o r g w o l f h s a c e e r f m r e t - g n o L 5 4 3 2 1 0 r a e Y 8 2 2 4 1 2 1 0 2 8 8 1 6 7 1 F C F Terminal value 1,598 <-- =G58*(1+B55)/(B54-B55) 6 2 8 , 1 4 1 2 1 0 2 8 8 1 6 7 1 l a t o T Enterprise value, present value of row 60 1,348 <-- =NPV(B54,C60:G60)*(1+B54)^0.5 Add in initial (year 0) cash and mkt. securities 80 <-- =B27 2 6 B + 3 6 B = - - < 8 2 4 , 1 0 r a e y n i e u l a v t e s s A 6 3 B - = - - < ) 0 2 3 ( y a d o t t b e d s ' m r i f f o e u l a v t u o t c a r t b u S 5 6 B + 4 6 B = - - < 8 0 1 , 1 e u l a v y t i u q E 0 0 1 / 6 6 B = - - < 8 0 . 1 1 ) s e r a h s 0 0 1 ( e u l a v e r a h S 2.9 Summary In this chapter we have introduced four enterprise-value valuation methods: • The book value approach values the fi rm ’ s enterprise value using its balance sheet numbers, appropriately rearranged. • The effi cient markets approach substitutes, where possible, market values for fi nancial assets and liabilities instead of their book values, and then makes appropriate adjustments to the valuation of the fi rm ’ s real assets. Using the defi nition of free cash fl ows from section 2.5: 70 Chapter 2 • One approach to discounting the fi rm ’ s free cash fl ows (FCFs) bases the estimates of future FCFs on the fi rm ’ s consolidated statement of cash fl ows. These FCFs are then discounted at the appropriate weighted average cost of capital (WACC, Chapter 3). • A second approach to discounting the fi rm ’ s free cash fl ows constructs the FCFs from a model of the fi rm ’ s projected future accounting statements (pro forma accounting statements). As in the previous bullet, these FCFs are dis-counted at the WACC. Exercises 1. Three years of balance sheets for Cisco are given on the disk with this book. Restate these balance sheets so that the accounting enterprise value is on the left side. 2. Below are some year-end numbers for Cisco ’ s equity. Restate the enterprise value in market terms. 1 2 3456AB C D E 27-Jul-12 29-Jul-11 30-Jul-10 Shares outstandingPrice per share 15.69 15.97 23.07 Shares outstanding (milions) 5,370 5,529 5,732 Market cap (millions) 84,255 88,298 132,237 <-- =D4*D5CISCO EQUITY DAT A 3. Examine Cisco ’ s consolidated statement of cash fl ows (on the disk that accompanies this book) and transform this into a free cash fl ow. 4. Use the template for the ABC Corp. valuation in section 2.7 to value Cisco stock. Assume that the weighted average cost of capital for Cisco is 12.6%, the growth rate for years 1–5 is 4%, and that the long-term growth rate is 0%. (Details and template on the disk that accompanies this book.) 3 Calculating the Weighted Average Cost of Capital (WACC) 3.1 Overview In this chapter we discuss the calculation of the firm ’ s weighted average cost of capital (WACC). The WACC has two important uses in finance: • When used as the discount rate for a firm ’ s anticipated free cash flows (FCFs), the WACC gives the enterprise value of the firm. FCF is discussed in Chapter 2 and again at length in Chapters 4, 5, and 6—at this point it suffices to say that the FCF is the cash flow generated by the firm ’ s core business activities. These chapters also show how to apply the WACC to the valuation of firms. • The WACC is also the appropriate risk-adjusted discount rate for firm projects whose riskiness is similar to the average riskiness of the firm ’ s cash flows. When used in this context, the WACC is often referred to as the firm ’ s “hurdle rate.” The WACC is a weighted average of the firm ’ s cost of equity r E and its cost of debt r D , with the weights created by the market values of the firm ’ s equity ( E ) and debt ( D ): WACCE EDrD EDrT ED C =+++−()1 where E = market value of the firm ’ s equity D = market value of the firm ’ s debt T C = firm ’ s corporate tax rate r E = firm ’ s cost of equity r D = firm ’ s cost of debt This chapter discusses the computation of the five components of the WACC—the market value of the firm ’ s equity and debt E and D , the firm ’ s tax rate T C , the firm ’ s cost of debt r D , and the cost of equity r E . We finish by showing detailed examples of how to compute the firm ’ s WACC. The reader should be warned that the application of the models discussed requires a good deal of judgment—computing the WACC is equal parts science and art! 72 Chapter 3 The main technical problem is the computation of the firm ’ s cost of equity r E . We consider two models for calculating the cost of equity r E , the discount rate applied to equity cash flows. • The Gordon model calculates the cost of equity based on the anticipated cash flows paid to the shareholders of the firm. In the implementation of the Gordon model, dividends growing at a constant future rate are most commonly used as the anticipated shareholder cash flows. We explore two variations of the model: multiple future growth rates and total equity cash flows. • The capital asset pricing model (CAPM) calculates the cost of equity based on the correlation between the firm ’ s equity returns and the returns of a large, diversified, market portfolio. Variations on this model include the tax frame-work in which the model is defined. The other problematic component of the cost of capital is the cost of debt r D , the anticipated future cost of the firm ’ s borrowing. This book contains three models to calculate the cost of debt; two of these models are discussed in this chapter and a third method is discussed separately in Chapter 28. • The cost of debt r D is most commonly computed by using the firm ’ s current net interest payments divided by its average net debt (net debt: debt minus cash and marketable securities). • An alternative method is to compute r D by imputing the firm ’ s cost of debt from a rating-adjusted yield curve. • Finally, we can compute the expected return on the firm ’ s bonds as a proxy for its cost of debt; we discuss this method separately in Chapter 28. A terminological note : “Cost of capital” is a synonym for the “appropriate discount rate” to be applied to a series of cash flows. In finance “appropriate” is most often a synonym for “risk-adjusted.” Hence another name for the cost of capital is the “risk-adjusted discount rate” (RADR). The Remainder of This Chapter In the following sections we discuss the various components of the WACC with examples of how they might be computed: • Section 3.2: Computing the equity value, E . • Section 3.3: Computing the value of the firm ’ s debt, D . 73 Calculating the Weighted Average Cost of Capital (WACC) • Section 3.4: Computing the firm ’ s corporate tax rate T C . • Section 3.5: Computing the firm ’ s cost of debt, r D . • Sections 3.6–3.9: Computing the firm ’ s cost of equity, r E . We show how to use both the Gordon dividend model and the capital asset pricing model (CAPM) to compute r E . Each model has a number of twists and variations, discussed in these sections. • Sections 3.10–3.11: Computing the expected return on the market E ( r M ) and the risk-free rate r f in the CAPM. • Sections 3.12–3.15: Three worked-out cases of the computation of the WACC. We present a unified template that will help you make sense of the WACC computation. • Section 3.16: Discussion of problems with using the dividend model and the CAPM, including the case of the determination of the WACC for non-marketed firms. 3.2 Computing the Value of the Firm ’ s Equity, E Of all the computations related to the WACC, computing the value of the firm ’ s equity is the easiest: As long as the company is publicly listed, take E to be the product of the number of shares outstanding times the current value per share. As an example, consider El Paso Pipeline Partners (EPB), a New York Stock Exchange company that owns gas pipelines and gas storage facilities. On 29 June 2012, EPB has 205.7 million shares outstanding, each trading at $33.80. The equity value of the company is $6.953 billion. 1 1 234AB C Shares outstanding 205.70 <-- Million Share price, 29 June 2012 33.80Equity value (\"market cap\") 6,953 <-- =B3*B2, million $COMPUTING THE VALUE OF EQUITY, E, FOR EL PASO PIPELINE PARTNERS (EPB) 1. Most market traders refer to this number as the “market capitalization” or “market cap.” 74 Chapter 3 3.3 Computing the Value of the Firm ’ s Debt, D We compute the value of the firm ’ s debt by the market value of its financial debt minus the market value of its excess liquid assets. A common approxima-tion for this number is to take the balance sheet value of the firm ’ s debt minus the value of the firm ’ s cash balances and minus the value of its marketable securities. Here ’ s an example for Kroger: 1 2 3 45 6 7 8 9AB C D 2011 2010 0 0 0 , 8 8 1 0 0 0 , 5 2 8 h s a C Marketable securities 0 0 Short-term and current portion of long-term debt 588,000 1,315,000 Long-term debt 7,304,000 6,850,000 Net debt 7,067,000 7,977,000 <-- =SUM(C6:C7)-SUM(C3:C4)KROGER, COMPUTING NET DEBT (thousand $) For purposes of computing the weighted average cost of capital, our defini- tion of debt excludes other debt-like items such as pension liabilities and deferred taxes. Though we consider these items as debts, it is hard to attach a cost to them; we prefer to approximate the WACC by using only financial obligations net of liquid assets. It is not uncommon for a company to have negative net debt—this occurs when the company has more cash and marketable securities than debt. When this occurs, we set D in the WACC computation to be a negative number. Both Intel and Whole Foods Markets are examples: 75 Calculating the Weighted Average Cost of Capital (WACC) 1 2 345 6 789 10 11 1213 14 15 1617D C B A 2010 2011 5 6 0 , 5 8 9 4 , 5 h s a C Marketable securities 16,387 9,772 Short-term debt and current portion of long-term debt 38 247 Long-term debt 2,077 7,084 Net debt -19,770 -7,506 <-- =SUM(C6:C7)-SUM(C3:C4) 2010 2011 0 6 9 , 3 0 3 8 9 7 , 8 1 2 h s a C Marketable securities 329,738 442,320 Short-term debt and current portion of long-term debt 410 466 Long-term debt 508,288 17,439 Net debt -39,838 -728,375 <-- =SUM(C15:C16)-SUM(C12:C13)INTEL HAS NEGATIVE NET DEBT (million $) WHOLE FOODS HAS NE GATIVE NET DEBT (thousand $) 1 234 5AB C D E 2009 2010 2011 Income before tax 250,942 411,781 551,712 Income tax expense 104,138 165,948 209,100 Tax rate, TC 41.50% 40.30% 37.90% <-- =D4/D3WHOLE FOODS MARKET TAX RATE 3.4 Computing the Firm ’ s Tax Rate, T C In the WACC formula, T C should measure the firm ’ s marginal tax rate, but it is common to measure it by computing the firm ’ s reported tax rate. Usually this should cause no problems, as the following example shows: 76 Chapter 3 The tax rate for Whole Foods is reasonably stable at 38% to 41%. In our WACC computation we would most likely use the current tax rate or the average over the past several years. Sometimes, however, this doesn ’ t work, as the following example shows: 1 2 34 5AB C D E 2009 2010 2011 Income before taxes 15,290,000 1,653,000 7,334,000 Income tax expense 2,268,000 671,000 942,000 Tax rate, TC 14.83% 40.59% 12.84% <-- =J4/J3MERCK TAX RATE Companies like Merck are very good at placing their income in comfortable tax venues, and it appears that a reasonable estimate for the tax rate is some-where between 13% and 15%. In 2010, a year of low income for Merck, these tax-planning strategies evidently did not work. Assuming that Merck ’ s future profitability is indicated by the two good years 2009 and 2011, we would most likely assume that Merck ’ s company ’ s future tax rate T C is in the range of the 2009 and 2011 tax rate. 3.5 Computing the Firm ’ s Cost of Debt, r D We now turn to calculating the cost of debt r D . In principle, r D is the marginal cost to the firm (before corporate taxes) of borrowing an additional dollar. There are at least three ways of calculating the firm ’ s cost of debt. We will state them briefly below and then go on to illustrate the application of two of the methods that although they may not be theoretically perfect are often used in practice: • As a practical matter, the cost of debt can often be approximated by taking the average cost of the firm ’ s existing debt. The problem with this method is that it runs the danger of confusing the past costs with the future anticipated cost of debt that we actually want to measure. • We can use the yield of similar-risk, newly issued corporate securities. If a company is rated A and has mostly medium-term debt, then we can use the average yield on medium-term, A-rated debt as the firm ’ s cost of debt. Note that this method is somewhat problematic because the yield on a bond is its promised return , whereas the cost of debt is the expected return on a firm ’ s 77 Calculating the Weighted Average Cost of Capital (WACC) debt. Since there is usually a risk of default, the promised return is generally higher than the expected return. Nevertheless, despite the problematics, this method is often a good compromise. • We can use a model that estimates the cost of debt from data about the firm ’ s bond prices, the estimated probabilities of default, and the estimated payoffs to bondholders in case of default. This method requires a lot of work and is mathematically non-trivial; we postpone its discussion until Chapter 28. For cost of capital calculations it would be used in practice only if the firm we are analyzing has significant amounts of risky debt. The first two methods above are relatively easy to apply, and in many cases the problems or errors which are encountered in these methods are not critical. 2 As a matter of theory, however, both of these methods fail to make proper risk-adjustments for the cost of the firm ’ s debt. The third method, which involves computing the expected return on a firm ’ s debt, is more in line with standard financial theory, but it is also more difficult to apply. It may not, therefore, be worth the effort. In the remainder of this section, we apply the first two of these methods to calculate the cost of debt for U.S. Steel and Merck. Method 1: U.S. Steel ’ s Average Cost of Debt For U.S. Steel we compute the average cost of debt: rCurrent year s net interest paid Average net debt over this and pr D=’ e evious year There are several aspects of our calculations worth noting: 2. It bears repeating that calculating the cost of capital requires a large number of assumptions and does not necessarily give a precise answer. Cost of capital estimation is not a science , it is an art . Users of cost of capital estimates should always do a sensitivity analysis around the numbers calculated. Given the data on the company you are analyzing, some sloppiness in the cost of capital calculations (with its accompanying savings in time) may be expedient. 78 Chapter 3 • When calculating the average cost of debt r D from the financial statements, it is important to include all financial debt, without distinguishing between short-term and long-term items. • We treat liquid assets such as cash and cash equivalents as negative debt and subtract them from the firm ’ s debt. The idea here is that the firm could use its cash to pay off part of its debt, so that the effective debt financing of the firm is its financial debt minus cash. However, the implementation of this particular piece of theory is largely a judgment call—we may not want to attribute all cash to the possibility of paying off debt, and we may want to compute the firm ’ s cost of borrowing as opposed to the interest it earns on cash. Were we to use the average cost of debt for U.S. Steel as a prediction of its future cost of debt r D , we would most likely use the current cost r D = 4.90% in the WACC computation. This is because we believe that historical costs of debt have little predictive power for future costs. Cash Raises the Cost of Debt: The Case of Merck When a firm has cash balances that earn less interest than the cost of borrow-ing, the average cost of debt, based on net interest and net debt is higher than the cost of borrowing. To see this, assume that the interest rate on cash is less by ε than the interest rate paid on debt:2 3 456 7 8 9 1011 12AB C D E 2009 2010 2011 0 0 0 , 8 0 4 0 0 0 , 8 7 5 0 0 0 , 8 1 2 , 1 h s a C Short-term investments 0 0 0 Short-term debt and current portion of long-term debt 19,000 216,000 400,000 Long-term debt 3,828,000 3,517,000 3,345,000 ) 4 D : 3 D ( M U S - ) 7 D : 6 D ( M U S = - - < 0 0 0 , 7 3 3 , 3 0 0 0 , 5 5 1 , 3 0 0 0 , 9 2 6 , 2 t b e d t e N 0 0 0 , 9 5 1 0 0 0 , 5 9 1 0 0 0 , 0 9 1 t s e r e t n I Implied cost of debt, rD 6.74% 4.90% <-- =D10/AVERAGE(C9:D9)UNITED STATES STEEL, COST OF DEBT 79 Calculating the Weighted Average Cost of Capital (WACC) 1 2 34 5 6 7 8 9 1011 1213 14 15 16 17 18E D C B A 2009 2010 2011 0 0 0 , 1 3 5 , 3 1 0 0 0 , 0 0 9 , 0 1 0 0 0 , 1 1 3 , 9 h s a C Short-term investment s 293,000 1,301,000 1,441,000 Total liquid assets 9,604,000 12, 201,000 14,972,000 <-- =D4+D3 Short-term debt and current portion of long-term debt 1,379,000 2,400,000 1,990,000 Long-term debt 16,095, 000 15,482,000 15,525,000 Total financial debt 17,474,000 17, 882,000 17,515,000 <-- =D7+D8 5 D - 9 D = - - < 0 0 0 , 3 4 5 , 2 0 0 0 , 1 8 6 , 5 0 0 0 , 0 7 8 , 7 t b e d t e N Interest income 210,000 83,000 199,000 Interest expense 460,000 715,000 749,000 2 1 D - 3 1 D = - - < 0 0 0 , 0 5 5 0 0 0 , 2 3 6 0 0 0 , 0 5 2 t s e r e t n i t e N Implied cost of debt, r D 9.33% 13.38% <-- =D14/AVERAGE(C11:D11) ) ) 4 C : 3 C ( M U S , ) 4 D : 3 D ( M U S ( E G A R E V A / 2 1 D = - - < % 6 4 . 1 % 6 7 . 0 d e n r a e e t a r t s e r e t n I ) ) 8 C : 7 C ( M U S , ) 8 D : 7 D ( M U S ( E G A R E V A / 3 1 D = - - < % 3 2 . 4 % 4 0 . 4 d i a p e t a r t s e r e t n IMERCK, COST OF DEBT r D Average cost of debtInterest paid Interest earned Debt Cash Deb=− − =tt i Cash i Debt CashDebt i Cash i DebtDebt Cash Debt Debt ∗− ∗ −=∗− ∗ − () ε − − =− () ∗+ ∗ − =+−Cash Debt Cash i Cash Debt Cash iCash Debt CaDebt Debtε sshiDebt ∗>ε Here ’ s a somewhat dramatic example for Merck: In 2011 Merck ’ s cost of borrowing was 4.23%, and the company earned a respectable 1.46% on its massive reserves of cash and short-term investments. We might naively expect that this means that the average net cost of Merck ’ s debt is between these two numbers. Instead the computations show that r D = 13.38%! rAverage net interest paid Average net debtD==− −2010 11 2010 11550,0 000 4 112 00013 38,,.%= This estimate of r D reflects the costs of holding large reserves of liquid assets which provide such low financial returns. From a purely financial point of view, Merck would have benefited its shareholders by using the liquid assets 80 Chapter 3 to repurchase its debt or by paying them out as either dividends or share repurchases. 3 What number would we choose to represent the marginal cost of borrowing in the WACC equation? In large measure this depends on how we view the financial policy of Merck: If we view the firm as proceeding to build up cash reserves, while at the same time maintaining large amounts of financial debt, then 13.38% might be a reasonable measure of the cost of debt. If, on the other hand, we view the marginal debt financing of Merck as being with debt, without a parallel buildup of cash, then a number around 4% would better represent r D . 4 Method 2: r D as the Rating-Adjusted Yield for Merck There is another way to measure the cost of debt for Merck ’ s borrowing: We can impute the marginal cost of Merck ’ s debt from a yield curve for the appro-priate debt. Merck is rated A + by Fitch, BBB + by Standard and Poor ’ s, and BAA2 by Moody ’ s. From Yahoo we gather data for more than 1,000 A-Fitch-rated bonds; in the screen shot below much of this data is hidden: 1 2 345 6 78 996997 998 999 100010011002 1003 1004100510061007F E D C B A Price Coupon MaturityTime to maturityYield to maturity % 6 3 . 0 4 7 2 0 . 0 2 1 - g u A - 7 2 % 3 6 . 5 8 8 . 3 0 1 C N I P U O R G I T I C LINCOLN NATL CORP IND 105.42 5.65% 27-Aug-12 0.0274 -1.62% GOLDMAN SACHS GROUP INC 104.68 5.70% 1-Sep-12 0.0411 -0.52% WELLS FARGO & CO NEW 104.85 5.13% 1-Sep-12 0.0411 -1.28% BANK OF AMERICA CORPORATION 102.91 5.38% 11-Sep-12 0.0685 1.60%BANK OF AMERICA CORPORATION 102.81 4.88% 15-Sep-12 0.0795 1.29%GOLDMAN SACHS GRP INC MTN BE 103.30 5.75% 15-Jul-41 28.9288 5.52%HEWLETT PACKARD CO 118.45 6.00% 15-Sep-41 29.0986 4.83% VERIZON COMMUNICATIONS INC 106.63 4.75% 1-Nov-41 29.2274 4.35% % 5 0 . 5 8 5 6 2 . 9 2 1 4 - v o N - 5 1 % 5 1 . 5 2 5 . 1 0 1 C N I N E G M A ANHEUSER BUSCH COS INC 135.00 6.50% 1-May-42 29.7233 4.40% % 3 0 . 4 3 3 2 7 . 9 2 2 4 - y a M - 1 % 5 9 . 6 0 0 . 1 5 1 L E D C N I R A L L I P R E T A C ANHEUSER BUSCH COS INC 138.85 6.50% 1-Feb-43 30.4795 4.24% % 7 3 . 4 8 0 8 1 . 1 3 3 4 - t c O - 5 1 % 8 8 . 6 0 9 . 2 4 1 O C G N I E O B % 4 5 . 5 5 8 6 2 . 3 3 5 4 - v o N - 5 1 % 5 8 . 5 5 7 . 4 0 1 M O C E L E T H T U O S L L E B % 4 6 . 5 2 5 4 3 . 3 8 5 9 - c e D - 1 % 0 0 . 7 6 9 . 3 2 1 M O C E L E T H T U O S L L E B % 9 3 . 6 2 6 5 5 . 5 8 8 9 - b e F - 5 1 % 8 8 . 6 5 5 . 7 0 1 C N I P U O R G I T I C % 9 6 . 5 5 4 9 5 . 5 8 8 9 - r a M - 1 % 5 6 . 5 5 2 . 9 9 C N I S N I M M U CFITCH-RATED A BONDS, Friday 17 August 2012 3. This statement ignores the option value of the liquid assets: their ability to provide Merck with financial flexibility. 4. In the case of Merck, as we shall see in section 3.14, none of this makes much difference, since Merck is virtually an all-equity company. 81 Calculating the Weighted Average Cost of Capital (WACC) Graphing these data shows either that these data cover a wide range of true credit risks or that the market is far from efficient: y = 8E-06x3- 0.0004x2+ 0.008x + 0.0005 R² = 0.4895 -2%0%2%4%6%8%10% 0 5 10 15 20 25 30 35Term Structure, A Bonds, 17 August 2012 Bond maturity 1 2 3C B A Average time to maturity (years) 7 5 0 0 0 . 0 + 2 B * 8 0 0 . 0 + 2 ^ 2 B * 4 0 0 0 . 0 - 3 ^ 2 B * 8 0 0 0 0 0 . 0 = - - < % 6 9 . 3 d l e i YCOMPUTING MERCK'S r D FROM THE A-YIELD CURVE The polynomial regression line describes about 50% of the variability of the yields as a function of the time to maturity. Using this regression equation and assuming a 7-year average maturity for Merck ’ s debt, the cost of borrow-ing for Merck is 3.96%. 82 Chapter 3 3.6 Two Approaches to Computing the Firm ’ s Cost of Equity, r E The equation for the weighted average cost of capital is WACC = E /( E + D )* r E + E /( E + D )* r D *(1 − T C ). Thus far in this chapter we have discussed the esti- mation of four of the five parameters of the WACC equation: E , D , T C , r D . We now come to the most problematic of the computations related to the WACC parameters—the computation of the cost of equity r E . There are two approaches to r E that can readily be computed: • The Gordon dividend model computes r E based on current dividend Div 0 , current stock price P 0 , and the anticipated growth of future dividends g : rDiv g Pg E=+()+0 01 • The capital asset pricing model (CAPM) computes r E based on the risk-free rate r f , the expected return on the market E ( r M ), and a firm-specific risk measure β : rr E r rEf M f=+ () − []β where r f = the market risk-free rate of interest E ( r M ) = the expected return on the market portfolio β = a firm-specific risk measure = Cov r r Var rstock M M, () () Each model has its variations and problems, which are discussed ( ad nauseam ?) in the next two sections. 3.7 Implementing the Gordon Model for r E The Gordon dividend model derives the cost of equity from the following deceptively simple statement: The value of a share is the present value of the future anticipated dividend stream from the share, where the future anticipated dividends are discounted at the appropriate risk-adjusted cost of equity r E . 5 5. This model is named after M. J. Gordon, who first published this formula in a paper entitled “Dividends, Earnings and Stock Prices,” Review of Economics and Statistics . 83 Calculating the Weighted Average Cost of Capital (WACC) The simplest application of the Gordon model is the case where the antici- pated future growth rate of dividends is constant. Suppose that the current stock price is P 0 , the current dividend is Div 0 , and the anticipated growth rate of future dividends is g . The Gordon model states that the stock price equals the discounted (at the appropriate cost of equity r E ) future dividends: PDiv g rDiv g rDiv g rDiv E EE0012 213 31 11 11 1=+() ++∗+() +()+∗+() +()+1 14 4 0 11 1 1 1∗+() +() =∗+() +() =∞ ∑g r Div g rE t Et t… Provided that | g | < r E , the expression Div g rt Et t0 11 1∗+() +() =∞ ∑ can be reduced to Div g rgE01+() − (we will spare you this derivation, which is based on a formula for geometric series usually studied in high school). Thus—given a constant anticipated dividend growth rate, we derive the Gordon model cost of equity: PDiv g rggr EE 001=+() −< , provided Solving the above equation for r E gives the Gordon formula for the cost of equity: rDiv g Pgg r EE=+()+<0 01, provided Note the proviso at the end of this formula: In order for the infinite sum on the first line of the formula to have a finite solution, the growth rates of the dividends must be less than the discount rate. In our discussion of the Gordon model with supernormal growth rates (see below) we return to the case where this is not true. To apply this formula, consider a firm whose current dividend is Div 0 = $3 per share, whose share price is P 0 = $50. Suppose the dividend is anticipated to grow by 12% per year. Then the firm ’ s cost of equity r E is 17.6%: 84 Chapter 3 1 2 3 4 5C B A Current share price, P 0 60 Current dividend, Div 0 3 Anticipated dividend growth rate, g 12% Gordon model cost of equity, r E 17.60% <-- =B3*(1+B4)/B2+B4THE GORDON MODEL COST OF EQUITY 1 2 3 4 56 7 8 9 1011 12 40 41 42 43AB C D E F DateDividend per share 4-Sep-02 0.36 4-Dec-02 0.36 Quarterly growth 0.39% <-- =(B43/B3)^(1/40)-1 5-Mar-03 0.36 Annual growth 1.55% <-- =(1+E4)^4-1 4-Jun-03 0.36 20-Aug-03 2.88 3-Sep-03 0.37 Quarterly growth 0.50% <-- =(B43/B23)^(1/20)-1 3-Dec-03 0.37 Annual growth 2.02% <-- =(1+E8)^4-1 3-Mar-04 0.37 2-Jun-04 0.37 1-Sep-04 0.38 13-Sep-11 0.38 13-Dec-11 0.42 13-Mar-12 0.42 13-Jun-12 0.42Dividend growth Whole period Last 5 yearsMERCK DIVIDEND HISTORY Using the Gordon Model to Compute the Cost of Equity for Merck We apply the Gordon model to Merck, whose 10-year dividend history is given below (note that some of the data has been hidden): The annualized growth rate of Merck ’ s historical dividends may be either 1.55% or 2.02%, depending on the period taken. For purposes of computing the cost of equity r E , the question is which of these rates better predicts future anticipated dividend growth rates. 6 In the spreadsheet below, we allow for both possibilities. The calculations use Merck ’ s stock price at the end of June 2012, P 0 = $41.75: 6. Or perhaps neither does! Perhaps we are better off using another story altogether to predict future anticipated dividend growth? We could use a pro forma model (discussed in Chapter 5) to predict the firm ’ s anticipated dividend payout. 85 Calculating the Weighted Average Cost of Capital (WACC) 1 2 3 4 5 6 789 10 11 12C B A Merck stock price P 0, 29 June 2012 10-Feb-00 Current dividend 2 4 . 0 y l r e t r a u Q Annualized dividend, Div 0 1.68 <-- =4*B4 Dividend growth rate, g % 5 5 . 1 s r a e y 5 t s a L % 2 0 . 2 s r a e y 0 1 t s a L Gordon model cost of equity, r E Using last 5 years' growth 5.64% <-- =$B$5/$B$2*(1+B7)+B7 Using last 10 years' growth 6.13% <-- =$B$5/$B$2*(1+B8)+B8COMPUTING MERCK'S r E WITH THE GORDON MODEL For all practical purposes, given the margin of error in our estimates of the future, these numbers are identical—remember that we are trying to predict future dividend growth based on past dividend payouts. Adjusting the Gordon Model to Account for All Cash Flows to Equity As illustrated above, the Gordon model is computed on a per-share basis and for dividends only. However, for purposes of valuing the firm ’ s equity, the Gordon model should be extended to include all cash flows to equity. In addi-tion to dividends, cash flows to equity include at least two additional components: • Share repurchases now account for around 50% of the total cash disbursed by American corporations to their shareholders. 7 • The issuance of stock by the firm is an important negative cash flow to equity . In many firms the most important instance of stock issuance is the exercise by employees of their stock options. In order to account for these additional cash flows to equity, we have to rewrite the Gordon model in terms of total equity value. The basic valuation model of Gordon now becomes: Market value of equityCash flow to equity g rt Et t=∗+() +() =∞ ∑0 11 1 7. See “Corporate Payout Policy” by Harry DeAngelo, Linda DeAngelo, and Douglas J. Skinner, Foundations and Trends in Finance , 2008. Also available at www.ssrn.com . 86 Chapter 3 where g = Anticipated growth rate of cash flow equity This gives the formula for the cost of equity r E as: rCash flow to equity g Market value of equitygg r EE=+()+<01,.if As an example we consider the data below for Merck: 1 2 3 4 5 67 8 9 10 11 12 13 14 15 16 17 18 1920 21 2223 24 25 26 27 28 29 30 31 3233AB C D E F DividendsShare repurchasesProceeds from stock option exerciseTotal equity payout 29-Jun-05 3,307 1,430 899 3,838 <-- =B3+C3-D3 30-Jun-05 3,279 2,725 102 5,901 1-Jul-05 3,215 0 186 3,029 2-Jul-05 4,734 1,593 363 5,964 3-Jul-05 4,818 1,921 321 6,418 Growth 13.71% <-- =(E7/E3)^(1/4)-1 Computing the Gordon model cost of equity r E based on total equity payouts Shares outstanding (million) 3,041 Price per share 41.75 Market value of equity 126,955 <-- =B12*B13, $ million Gordon model cost of equity, r E 19.46% <-- =E7*(1+B9)/B14+B9GORDON MODEL FOR MERCK'S EQUITY PAYOUTS 01,0002,0003,0004,0005,0006,000 29-Jun-05 30-Jun-05 1-Jul-05 2-Jul-05 3-Jul-05Dividends Share repurchases Proceeds from stock op Ɵon exercise 87 Calculating the Weighted Average Cost of Capital (WACC) If we assume that Merck ’ s historic growth rate of cash flow to equity, 13.71%, will persist in the indefinite future, then its cost of equity is r E = 19.46%. 8 This seems rather high. In the next subsection we present another variation of the Gordon model that may provide an answer. “Supernormal Growth” and the Gordon Model A basic condition of the Gordon formula rDiv g Pg E=+()+0 01 is the condition | g | < r E . 9 In finance examples, violations of | g | < r E usually occur for very fast-growing firms, in which—at least for short periods of time—we anticipate very high growth rates, so that g > r E . If such “supernormal” growth were the case in the long run, the original dividend discount formula shows that P 0 would have an infinite value, since, when g > r E , the expression Div g rt Et t0 11 1∗+() +()=∞ =∞ ∑ . Thus a period of very high dividend growth rates (where g > r E ) must be followed by a period in which the long-term growth rate of dividends is less than the cost of equity, g < r E . Suppose that the firm is anticipated to pay high-growth dividends during periods 1, … , m , and that for subsequent periods the growth rate of dividends will be lower. We can write the discounted value of these anticipated future dividends as: Share value today Present value of dividends Div g rt E= =∗+ +()011 1() t t tm m gD = ↑∑ + 1 1PV of years of high-growth dividends/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketextiiv g rtm Et tm g52 11 1∗+ +()− =+∞ ↑∑() PV of remaining normal-growth2 2dividends/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext The problem is usually to determine the cost of equity r E from predicted growth rates. In the example below we use a VBA function TwoStageGordon to compute r E that equalizes the values of both sides of the above equation. 10 The assumption is that a firm ’ s share price is currently P 0 = 30, that its current dividend is Div 0 = 3, and that after 5 years of 35% growth in dividends, the dividend growth rate will slow to 8%. As you can see below, r E = 32.76%. 8. Most firms only report stock repurchases and employee stock exercises annually. Thus the only data available for these numbers is annual data, whereas dividends are reported quarterly and stock price data—used to compute the CAPM beta discussed in section 3.9—are available on a daily basis. 9. In this section we interpret Div 0 in the Gordon formula to denote either dividends per share or total equity payouts. 10. The construction of TwoStageGordon is discussed at the end of this section. 88 Chapter 3 1 2 34 5 67C B A Current dividend, Div 0 3.00 Growth rate g 1, years 1-m (\"supernormal\") 35% Growth rate g 2, years 6 - ∞ 8% Number of supernormal growth years, m 5 0 0 . 0 3 e c i r p e r a h S ) 4 B , 5 , 3 B , 2 B , 6 B ( n o d r o g e g a t s o w t = - - < % 6 7 . 2 3 y t i u q e f o t s o CTHE GORDON MODEL WITH TWO GROWTH RATES Using the TwoStageGordon function Implementing the Two-Stage Gordon Model for Merck Below we use the two-stage model to compute the cost of equity for Merck. We assume that the 5-year growth rate of total equity payouts of 13.71% will hold only for the next 2 years, and that afterward the growth rate of equity payouts will be 5%. The cost of equity is r E = 11.20%. This is high, com- pared to the r E computed for the Gordon model using only dividends (next section). 1 2 34 5 67 8 9 10 11 12 1314 15 16 17 18 19 20F E D C B A DividendsShare repurchasesProceeds from stock option exerciseTotal equity payout 29-Jun-05 3,307 1,430 899 3,838 <-- =B3+C3-D3 30-Jun-05 3,279 2,725 102 5,901 1-Jul-05 3,215 0 186 3,029 2-Jul-05 4,734 1,593 363 5,964 3-Jul-05 4,818 1,921 321 6,418 1 - ) 4 / 1 ( ^ ) 3 E / 7 E ( = - - < % 1 7 . 3 1 h t w o r G Shares outstanding (million) 3,041 5 7 . 1 4 e r a h s r e p e c i r P Market value of equity 126,955 <-- =B12*B13, $ million High growth rate, g high Number of high-growth years, m 2 Normal growth rate, g normal 5.00% <-- Author guess Cost of equity, r E using the function twostagegordon 11.20% <-- =twostagegordon(B14,E7,B9,B17,B18)MERCK'S COST OF EQUITY USING THE TWO-STAGE GORDON MODEL Computing the Gordon model cost of equity r E based on total equity payouts and the 2-stage Gordon model 89 Calculating the Weighted Average Cost of Capital (WACC) Technical Note The function TwoStageGordon on the file with this chapter computes the cost of equity r E for a two-stage Gordon model. The function computes the discount rate r E , which equates the current share price to the present value of future equity cash flows: Function TwoStageGordon(P0, Div0, Highgrowth, _ Highgrowthyrs, Normalgrowth) high = 1 low = 0 Do While (high - low) > 0.00001 Estimate = (high + low) / 2 factor = (1 + Highgrowth) / _ (1 + Estimate) Term1 = Div0 * factor * (1 - factor ∧ _ Highgrowthyrs) / (1 - factor) Term2 = Div0 * factor ∧ Highgrowthyrs * _ (1 + Normalgrowth) / (Estimate - _ Normalgrowth) If (Term1 + Term2) > P0 Then low = (high + low) / 2 Else: high = (high + low) / 2 End If Loop TwoStageGordon = (high + low) / 2 End Function 3.8 The CAPM: Computing the Beta, β The capital asset pricing model (CAPM) is the only viable alternative to the Gordon model for calculating the cost of capital. It is also the most widely used cost of equity model, the reasons being both its theoretical elegance and 90 Chapter 3 its implementational simplicity. The CAPM derives the firm ’ s cost of capital from its covariance with the market return. 11 The classic CAPM formula for the firm ’ s cost of equity is: rr E r rEf M f=+ () − []β where r f = the market risk-free rate of interest E ( r M ) = the expected return on the market portfolio β = a firm-specific risk measure = Cov r r Var rstock M M, () () In the remainder of this section we focus on measuring the firm ’ s β ; the next section shows how to apply the CAPM to find the firm ’ s cost of equity r E . Beta Is the Regression Coefficient of the Firm ’ s Stock Returns on the Market Returns In the following spreadsheet, we show the 5 years of monthly prices and returns for Merck and for the S&P 500, which we take to proxy for the stock market as a whole. In cells B2:B4 we regress the Merck returns on those of the S&P 500: rr rR Merck t Merck Merck SP t SP t,, , .., .=+ =− + =αβ 0 0018 0 6435 0 22452 11. The CAPM is discussed in detail in Chapters 8–11. At this point we outline the application of the model to finding the cost of capital without entering into the theory. 91 Calculating the Weighted Average Cost of Capital (WACC) 1 2 345678 9 10 111213141516 17 18 192021222324252627 28 29AB C D E F G Alpha 0.0018 <-- =INTERCEPT(E11:E70,F11:F70) ) 0 7 F : 1 1 F , 0 7 E : 1 1 E ( E P O L S = - - < 5 3 4 6 . 0 a t e B R-squared 0.2245 <-- =RSQ(E11:E70,F11:F70) t-statistic for alpha 0.2059 <-- =tintercept(E11:E70,F11:F70) t-statistic for beta 4.0979 <-- =tslope(E11:E70,F11:F70) Date Merck SP500 Merck SP500 1-Jun-07 39.90 1,503.35 2-Jul-07 39.78 1,455.27 -0.30% -3.25% <-- =LN(C11/C10) 1-Aug-07 40.20 1,473.99 1.05% 1.28% <-- =LN(C12/C11) 4-Sep-07 41.73 1,526.75 3.74% 3.52% <-- =LN(C13/C12) 1-Oct-07 47.04 1,549.38 11.98% 1.47% 1-Nov-07 47.93 1,481.14 1.87% -4.50% 3-Dec-07 47.23 1,468.36 -1.47% -0.87% 2-Jan-08 37.47 1,378.55 -23.15% -6.31% 1-Feb-08 36.00 1,330.63 -4.00% -3.54% 3-Mar-08 31.11 1,322.70 -14.60% -0.60% 1-Apr-08 31.19 1,385.59 0.26% 4.65% 1-May-08 31.94 1,400.38 2.38% 1.06% 2-Jun-08 31.21 1,280.00 -2.31% -8.99% 1-Jul-08 27.24 1,267.38 -13.61% -0.99% 1-Aug-08 29.54 1,282.83 8.11% 1.21% 2-Sep-08 26.42 1,166.36 -11.16% -9.52% 1-Oct-08 25.91 968.75 -1.95% -18.56% 3-Nov-08 22.37 896.24 -14.69% -7.78% 1-Dec-08 25.82 903.25 14.34% 0.78% 2-Jan-09 24.25 825.88 -6.27% -8.95%COMPUTING THE BETA FOR MERCK monthly returns for Merck and SP500, 2007-2012 s n r u t e R s e c i r P y = 0.6435x + 0.0018 R² = 0.2245 -25%-22%-19%-16%-13%-10%-7%-4%-1%2%5%8%11%14%17% -20% -17% -14% -11% -8% -5% -2% 1% 4% 7% 10% Merck SP500Merck return vs SP500, 2007-2012 Here ’ s what we can learn from this regression: • Merck ’ s beta, β Merck , shows the sensitivity of its stock return to the market return. It is calculated by the following formula: βMerckCovariance SP returns Merck returns Variance SP r=()500 500, eeturns () We can compute β either by using the formula above directly (cell B5 above) or by using the Excel Slope function (cell B4). Over the period covered, a 1% increase or decrease in the monthly returns of the S&P 500 was accompanied by a 0.6435% increase or decrease in Merck ’ s returns. The statistic TSlope 92 Chapter 3 (cell B6) shows that the β Merck is highly significant (see below for how this function was constructed). 12 • Intel ’ s alpha, α Merck , shows that irrespective of changes in the S&P 500, the monthly return on Intel over the period was α Merck = 0.18%. On an annual basis, this is 12*0.18 = 2.18%; this seems to indicate that, in the jargon of financial markets, Merck had positive performance over the period. Note, however, the TIntercept (cell B5): This function (its construction in Excel is discussed below) shows that the negative intercept is not significantly different from zero. • The R 2 of the regression shows that 22.45% of the variation in Merck ’ s returns is accounted for by variability in the S&P 500. An R 2 of 22% may seem low, but in the CAPM literature this is not uncommon. It says that roughly 22% of the variation in Merck ’ s returns is explicable by the variation in the S&P 500 return. The rest of the variability in the Merck returns can be diversified away by including Merck shares in a diversified portfolio of shares. The average R 2 for stocks is approximately 30% to 40%, meaning that market factors account for approximately this percentage of a stock ’ s variability, with factors idiosyncratic to the stock accounting for the rest. Merck ’ s R 2 , as you can see, is a bit on the low side—meaning that it has more idiosyncratic risk than an average stock. The spreadsheet that accompanies this chapter shows three ways of doing the regression: One way is to use the functions Intercept , Slope , Rsq . A second method involves using the Excel functions Covar and VarP . A third way involves Excel ’ s Trendline function. Having graphed the returns of Intel and the SP500 on an XY Scatter plot, we then do the following: 12. For the precise meaning of a t -statistic, you should refer to a good statistics text. For our purposes—a t -statistic over 1.96 indicates that with 95% probability the variable under discussion (when using TIntercept this is the intercept, or when using TSlope this is the slope) is signifi- cantly different from zero. Thus the t -statistic for the intercept of –0.2059 indicates that the intercept is not significantly different from zero, whereas the t -statistic for the slope of 4.0979 indicates that the slope is significantly different from zero. 93 Calculating the Weighted Average Cost of Capital (WACC) Figure 3.1 The sequence of commands for producing regression results from the XY Scatter Plot in Excel. Having marked the points, we right-click to select Add Trendline (left panel). We choose the linear regression (middle panel) and indicate that the regression equation and the R 2 should be printed on the graph. The Home-Made Functions TIntercept and TSlope The spreadsheet above uses two functions to compute the t -statistics for the intercept and slope. These functions are built on the Linest function discussed in Chapter 33. Applying Linest to the return data, we get: 9 10 111213141516 17L K J I Slope Intercept Slope --> 0.6435 0.0018 <-- Intercept Standard error of slope --> 0.1570 0.0088 <-- Standard error of intercept R-squared --> 0.2245 0.0682 <-- Standard error of y values F statistic --> 16.7925 58.0000 <-- Degrees of freedom SSxy --> 0.0781 0.2696 <-- SSE = Residual sum of squaresCells J13:K17created with the formula {=LINEST(E11:E70,F11:F70,,1)} By using the Excel function Index we define a VBA function TIntercept which divides the value of the intercept term produced by Linest (first row, second column of Linest output) by the standard error of the intercept (second row, second column). Here ’ s the function for the t -statistic for the intercept: 94 Chapter 3 Function tintercept(yarray, xarray) tintercept = Application.Index(Application. _ LinEst(yarray, xarray, , 1), 1, 2) / _ Application.Index(Application.LinEst(yarray, _ xarray, , 1), 2, 2) End Function Both of these functions are embedded in the spreadsheet for this chapter. Using Excel ’ s Data Analysis Add-In There ’ s a fourth way to produce the regression output: By clicking on Tools|Data Analysis|Regression , we can use a sophisticated Excel routine that computes more statistics, including the t -statistics. The output produced by this routine is illustrated below: Similarly we can define a function TSlope that gives the t -statistic for the slope: Function tslope(yarray, xarray) tslope = Application.Index(Application. _ LinEst(yarray, xarray, , 1), 1, 1) / _ Application.Index(Application.LinEst(yarray, _ xarray, , 1), 2, 1) End Function 95 Calculating the Weighted Average Cost of Capital (WACC) 3 4 5 6 78 9 10 11 12 13 14 15 16 17 18 19 20IJ K L M N O P Q SUMMARY OUTPUT Regression Statistics Multiple R 0.473836264 R Square 0.224520805 Adjusted R Square 0.211150474 Standard Erro r 0.068184238 Observations 60 ANOV A df SS MS F Significance F 2 3 2 1 3 1 0 0 0 . 0 5 2 4 6 4 2 9 7 . 6 1 3 8 6 9 6 0 8 7 0 . 0 3 8 6 9 6 0 8 7 0 . 0 1 n o i s s e r g e R 9 0 9 4 6 4 0 0 . 0 4 2 7 4 6 9 6 2 . 0 8 5 l a u d i s e R 3 2 9 6 1 7 7 4 3 . 0 9 5 l a t o T Coefficients Standard Error t Stat P-value Lower 95% Upper 95% Lower 95.0% Upper 95.0% Intercept 0.001813136 0.008806331 0.205890007 0.837597818 -0.015814651 0.019440922 -0.015814651 0.019440922 X Variable 1 0.643502885 0.157033851 4.097860936 0.000131232 0.329165479 0.957840291 0.329165479 0.957840291 We used Data|Data Analysis|Regression to produce this output. The set- tings are shown below: While Data|Data Analysis|Regression produces a lot of data, it has one major drawback: The output is not automatically updated when the underlying data changes. For this reason we prefer to use the other methods illustrated. 96 Chapter 3 3.9 Using the Security Market Line (SML) to Calculate Merck ’ s Cost of Equity, r E In the capital asset pricing model, the security market line (SML) is used to calculate the risk-adjusted cost of capital. In this section we consider two SML formulations. The difference between these two methods has to do with the way taxes are incorporated into the cost of capital equation. Method 1: The Classic SML The classic CAPM formula uses a security market line (SML) equation that ignores taxes: Cost of equity r r E r r Ef M f,=+ () − []β Here r f is the risk-free rate of return in the economy and E ( R M ) is the expected rate of return on the market. The choice of values for the SML parameters is often problematic. A common approach is to choose: • r f equal to the risk-free interest rate in the economy (for example, the yield on Treasury bills). We leave the question of whether to use the short-term or long-term rate open until section 3.11. For the moment, for illustrative pur-poses, we use r f = 2%. • E ( r M ) equal to the historic average of the market return, defined as the average return of a broad-based market portfolio. There is an alternative approach based on market multiples; both of these are discussed below. For the current section, we use E ( r M ) = 8%. The following spreadsheet illustrates the classic CAPM cost of equity com- putation for Merck ’ s cost of equity: 1 2 3 4 5AB C Merck beta, β 0.6435 Risk-free rate, r f 2.00% Expected market return, E(r M) 8.00% Merck cost of equity, r E 5.86% <-- =B3+B2*(B4-B3)COMPUTING THE COST OF EQUITY FOR MERCK Classic CAPM: r E = r f + b*[E(r M) - r f] 97 Calculating the Weighted Average Cost of Capital (WACC) Method 2: The Tax-Adjusted SML The classic CAPM approach makes no allowance for taxation. Benninga-Sarig (1997) show that the SML has to be adjusted for the marginal corporate tax rate in the economy. 13 Denoting the corporate tax rate by T C , the tax-adjusted SML is: Cost of equity r T E r r T fC M fC=−() + () −−() [] 11 β This formula can be applied by substituting r f (1 − T C ) for r f in the classic CAPM. Note that the Tax-adjusted cost of equity has a lower intercept and a higher slope than the classic CAPM: • The intercept is r f (1 − T C ) instead of r f . This intercept is lower than the r f intercept of the classic CAPM. • The slope is E ( r M ) − r f (1 − T C ) instead of E ( r M ) − r f . This slope can be written as the classic CAPM slope plus T C r f : E ( r M ) − r f (1 − T C ) = [ E ( r M ) − r f ] + T C r f Another way to write the tax-adjusted cost of equity is: Tax adjusted cost of equityrT E r rT rE rfC M fC f-=−() + ()−−() [] =+11 β β MMf rCf rT r E()− [] +− [] ↑ Classic CAPM /dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketextβ1 This rewriting makes clear that the difference between the classic r E and the tax-adjusted r E is a function of the corporate tax rate T C , the risk-free rate r f , and the equity beta β . 14 For Merck, the tax-adjusted approach gives a somewhat higher cost of equity: 13. The logic of the Benninga-Sarig approach is outlined in our book Corporate Finance: A Valu- ation Approach (McGraw-Hill, 1997). A more formal derivation of the model is given in “Risk, Returns and Values in the Presence of Differential Taxation,” co-authored with Oded Sarig. Journal of Banking and Finance , 2003. 14. As this book is written, short-term, risk-free rates are close to zero, so that the difference between the tax-adjusted and classic CAPM is minimal. Presumably this will change at some point in the future. 98 Chapter 3 Although the tax-adjusted CAPM is more consistent with an economy with taxation, we confess that—given the uncertainties surrounding cost of capital computations—the difference between the classic CAPM and the tax-adjusted CAPM may not be worth the trouble. 3.10 Three Approaches to Computing the Expected Return on the Market, E ( r M ) Two critical questions remain in the computation of the cost of equity r E using the CAPM: • What is the expected return on the market, E ( r M )? Should it be computed from historical data? (And if so, how long should the data series be?) Or perhaps it can be computed from current market data without resort to history? • What is the risk-free rate, r f ? Should it be a short-term or a long-term rate? In this section we deal with the first question, leaving the computation of r f for section 3.11. There are three major approaches to computing E ( r M ): • The historical return on a major market index • The historical market risk premium on the market index • The Gordon model All three approaches are illustrated in this section, and their effect on comput- ing Merck ’ s cost of equity is illustrated at the end of this section. 1 2 3 45 6C B A Merck beta, β 0.6435 Merck tax rate, TC 12.84% <-- ='Merck tax rate'!D5 Risk-free rate, r f 2.00% Expected market return, E(r M) 8.45% Merck tax-adjusted cost of equity, rE 6.06% <-- =B4*(1-B3)+B2*(B5-B4*(1-B3))COMPUTING THE COST OF EQUITY FOR MERCK Tax-adjusted CAPM: r E = r f*(1-T C) + b*[E(r M) - r f*(1-T C)] 99 Calculating the Weighted Average Cost of Capital (WACC) 15. The Vanguard fund ’ s prices incorporate dividends on the S&P 500. Many index figures (such as those available for ∧ GSPC on Yahoo) do not incorporate dividends. E ( r M ) as the Historical Average Return on a Market Portfolio A simple approach to computing E ( r M ) is to take it as the average of the his- torical returns of a major market index. In the computation below we illustrate this approach by using Vanguard ’ s 500 Index Fund as a proxy for the market. 15 The annualized return on this fund since 1987 is 8.27%. We can take this as a reliable proxy for the historical annual average return from holding the S&P 500: 1 2 3 4 56 7 8 9 10 111213 293294295 296 297298299300301302303304 305 306307308309310311D C B A Average monthly return 0.69% <-- =AVERAGE(C10:C311) Monthly standard deviation 4.58% <-- =STDEV(C10:C311) Annualized return 8.27% <-- =12*B2 Annualized standard deviation 15.87% <-- =SQRT(12)*B3 Date Price Return 1-Apr-87 15.66 1-May-87 15.82 1.02% <-- =LN(B10/B9) 1-Jun-87 16.62 4.93% <-- =LN(B11/B10) 1-Jul-87 17.44 4.82% <-- =LN(B12/B11) 3-Aug-87 18.11 3.77% <-- =LN(B13/B12) 1-Dec-10 113.11 6.46% 3-Jan-11 115.77 2.32% 1-Feb-11 119.73 3.36% 1-Mar-11 119.76 0.03% 1-Apr-11 123.29 2.90% 2-May-11 121.88 -1.15% 1-Jun-11 119.84 -1.69% 1-Jul-11 117.39 -2.07% 1-Aug-11 110.99 -5.61% 1-Sep-11 103.16 -7.32% 3-Oct-11 114.42 10.36% 1-Nov-11 114.15 -0.24% 1-Dec-11 115.32 1.02% 3-Jan-12 120.47 4.37% 1-Feb-12 125.66 4.22% 1-Mar-12 129.78 3.23% 2-Apr-12 128.95 -0.64% 1-May-12 121.19 -6.21% 1-Jun-12 125.55 3.53%MEASURING E(r M) USING HISTORICAL DATA Derived from prices for the Vanguard 500 Index Fund (symbol: VFINX) These prices include dividends; April 1987 - June 2012 100 Chapter 3 Computing the Market Risk Premium E ( r M ) − r f Directly We can also compute the market risk premium directly. This requires a bit more work: In the spreadsheet below we show the monthly returns on the S&P 500 and monthly interest paid on U.S. Treasury bills. The average annual-ized risk premium on the S&P 500 is 4.40%. 1 23456 7 8 9 10111213 295296 297 298299300301302303304305306 307 308309310311F E D C B A Average monthly risk premium 0.37% <-- =AVERAGE(E10:E311)Monthly standard deviation 4.58% <-- =STDEV(E10:E311) Annualized risk premium 4.40% <-- =12*B2 Annualized standard deviation 15.85% <-- =SQRT(12)*B3 Date Price ReturnTreasury bill rateMarket risk premium 1-Apr-87 15.66 1-May-87 15.82 1.02% 0.48% 0.53% <-- =C10-D10 1-Jun-87 16.62 4.93% 0.49% 4.45% <-- =C11-D11 1-Jul-87 17.44 4.82% 0.49% 4.33% 3-Aug-87 18.11 3.77% 0.49% 3.28% 1-Feb-11 119.73 3.36% 0.01% 3.35% 1-Mar-11 119.76 0.03% 0.01% 0.01% 1-Apr-11 123.29 2.90% 0.01% 2.90% 2-May-11 121.88 -1.15% 0.01% -1.16% 1-Jun-11 119.84 -1.69% 0.00% -1.69% 1-Jul-11 117.39 -2.07% 0.00% -2.07% 1-Aug-11 110.99 -5.61% 0.00% -5.61% 1-Sep-11 103.16 -7.32% 0.00% -7.32% 3-Oct-11 114.42 10.36% 0.00% 10.36% 1-Nov-11 114.15 -0.24% 0.00% -0.24% 1-Dec-11 115.32 1.02% 0.00% 1.02% 3-Jan-12 120.47 4.37% 0.00% 4.37% 1-Feb-12 125.66 4.22% 0.00% 4.22% 1-Mar-12 129.78 3.23% 0.01% 3.22% 2-Apr-12 128.95 -0.64% 0.01% -0.65% 1-May-12 121.19 -6.21% 0.01% -6.21% 1-Jun-12 125.55 3.53% 0.01% 3.53%MEASURING THE MARKET RISK PREMIUM E(r M) - r f USING HISTORICAL DATA Vanguard 500 Index Fund (symbol: VFINX) minus Treasury Bills April 1987 - June 2012 All measurements relate to monthly returns on SP500, rMt, and the Treasury bill rate rft Methodological note: I have used the St. Louis FRED data for 3-month Treasury Bills; this data is annualized, and I have divided it by 12 to get the monthly returns. Since the data can be taken as an ex-ante return, the April 1987 rate is attributed to May 1987. I've used 3-month instead of 1-month, because there are lots of data problems with the latter. Applying the risk premium directly to the computation of Merck ’ s cost of equity gives a cost of equity r E close to 5% (note that we still haven ’ t settled the question of r f ): 101 Calculating the Weighted Average Cost of Capital (WACC) 1 2 3 456 7 89 10AB C Merck beta, β 0.6435 <-- =Page96!B2 E(rM) derived from SP price/earnings 4.40% <-- =Page100!B5 Merck tax rate, T C 12.84% <-- =Page98!B3 Risk free rate, r f 2.00% <-- Still to be discussed Intel cost of equity, r E,Intel Classic CAPM 4.83% <-- =B5+B2*B3 Tax-adjusted CAPM 4.74% <-- =B5*(1-B4)+B2*(B3+B4*B5)COMPUTING THE COST OF EQUITY FOR MERCK USING THE MARKET RISK PREMIUM E(r M) - r f Note : The tax-adjusted model in cell B8 uses the equivalence: E(rM) - r f (1-T C) = E(r M) - r f + T C*rf For the low levels of taxes and low r f in this example, there is virtually no difference between the two approaches. Calculating the Expected Return on the Market Using the Gordon Model Setting E ( r M ) = 4.40% approximates the historic market return in the United States for 1987–2012. Historic averages are appropriate if we think that the future anticipated rates of return will correspond to the historic average. On the other hand, we may want to take current market data to calculate directly the future anticipated market yield. We can do this computation by using the Gordon model. Recall from section 3.6 that the model says that the cost of equity r E is given by: rDiv g Pg E=+()+0 01 This formula also applies to the market portfolio, so that we can write: rDiv g Pg M=+()+0 01 , interpreting Div 0 , P 0 , and g to be the current dividend, price, and growth rate of the market portfolio. Assume that the firm pays out a constant proportion a of its earnings as dividends; then, indicating by EPS 0 the current earnings per share, Div 0 = a*EPS 0 . Interpreting g to be the earnings growth of the firm, we can write: EraE P S g Pgag PE P Sg M() =∗+ ()+=∗+()+0 00 011 / The term on the right-hand side of this equation, P 0 /EPS 0 , is the price earnings ratio of the market. We can use this formula to compute E ( r M ), and thus tie the cost of equity to currently observable market parameters. Here is an implementation: 102 Chapter 3 In the remainder of this chapter, we will use this estimate for E ( r M ). 3.11 What ’ s the Risk-Free Rate r f in the CAPM? Opinions about this seem to differ widely. Some authors suggest using a short- term rate, while others use a middle- or long-term rate. The author of this book has been guilty of making both suggestions, though at the current writing he believes that you should use the short-term rate. 16 For the examples in this chapter, here is some data from Yahoo/Finance on 29 June 2012: 16. Reason: Since the CAPM should apply to all risky assets, it should also apply to bonds (even default-free bonds like Treasuries, which are risky since they suffer significant price fluctuations). This suggests that the β of a risky asset impounds its risk, including the holding period risk, and that the proper risk-free rate r f is a short-term rate. But in 1997 in my book Principles of Corporate Finance: A Valuation Approach (with Oded Sarig), we advocated using a mid- to long-term Treasury rate for r f . As Emerson said: “A foolish consistency is the hobgoblin of little minds, adored by little statesmen and philosophers and divines” (Emerson forgot academics …). 3.12 Computing the WACC, Three Cases In the succeeding sections we compute the WACC for three companies: Merck, Whole Foods, and Caterpillar. In each of these examples we use E ( r M ) = 8.45% 1 2 3 4 5C B A Market price/earnings multiple, June 2012 15.20 Equity cash flow payout ratio 50.00% <-- Approx. U.S.: Dividends + repurchases Anticipated growth of market equity cash flow 5.00% <-- Analyst's estimate Expected market return, E(r M) 8.45% <-- =B3*(1+B4)/B2+B4COMPUTING E(r M) USING MARKET MULTIPLE 103 Calculating the Weighted Average Cost of Capital (WACC) (computed in section 3.10 from the S&P 500 price/earnings multiple) and the 3-month Treasury bill rate, r f = 0.06% (as discussed in section 3.11). These three examples, for Merck, Whole Foods, and Caterpillar, illustrate different situations and also how much ad hocery there is in the computations of the WACC. 17 3.13 Computing the WACC for Merck (MRK) We have discussed Merck ’ s cost of equity r E and cost of debt r D in previous sections. Our template summarizes these computations: 1 2 345 6 789 10 11121314 15 16 17181920 21 22 2324 25 26 2728 29 30 3132AB C Shares outstanding 3.04 <-- Billions Share price, 29 June 2012 41.75 Equity value, E 126.92 <-- =B2*B3 Net debt, D 2.59 <-- Billions Tax rate, T C 12.84% <-- =Page98!B3 Cost of debt, r D 4.23% <-- 0.0423 Expected market return, E(r M) 8.45% <-- =Page102!B5 Risk-free rate, r f 2.00% Equity beta, β 0.6435 <-- ='Pages91,93'!B3 WACC based on Gordon per-share dividends Current dividend/share 1.68 <-- =4*'Page84, bottom'!B43 Growth rate 2.02% <-- ='Page84, bottom'!E9 Cost of equity, r E 6.13% <-- =B13*(1+B14)/B3+B14 WACC 6.08% <-- =B15*$B$4/($B$4+$B $5)+B7*(1-$B$6)*$B$5/($B$4+$B$5) WACC based on Gordon equity payouts Current equity payout 6,418 <-- =Page86!E7 Growth rate 13.71% <-- =Page86!B9 Cost of equity, r E 11.20% <-- ='Page88, bottom'!B20 WACC 13.90% <-- =B21*$B$4/($B$4+$B $5)+B13*(1-$B$6)*$B$5/($B$4+$B$5) WACC based on classic CAPM Cost of equity, r E 6.15% <-- =B9+B10*(B8-B9) WACC 6.03% <-- =B25*$B$4/($B$4+$B $5)+B17*(1-$B$6)*$B$5/($B$4+$B$5) WACC based on ta x-adjusted CAPM Cost of equity, r E 6.06% <-- =B9*(1-B6)+B10*(B8-B9*(1-B6)) WACC 6.14% <-- =B29*$B$4/($B$4+$B $5)+B21*(1-$B$6)*$B$5/($B$4+$B$5) Estimated WACC? 6.08% <-- =AVERAGE(B16,B26,B30)COMPUTING THE WACC FOR MERCK 17. Wiktionary ( http://en.wiktionary.org ) defines “ad hocery” as “improvised reasoning.” When used in combination with financial theory, we prefer to think of it as the golden mean between reality and theory. 104 Chapter 3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 1516 17 1819 20 21 22 2324 25 2627 28G F E D C B A WFM stock price P0, 29 June 2012 95.32 Current dividend 4 1 . 0 y l r e t r a u Q Annualized dividend, Div 0 0.56 <-- =4*B4 Dividend growth rate, gsince April 2007 -4.70% <-- =(B26/B14)^(1/5.22)-1 Dividend growth rate, g since January 2011 14.41% Gordon model cost of equity, r E Based on dividends since April 2007 -4.14% <-- =$B$5*(1+B6)/$B$2+B6 Based on dividends since January 2011 15.08% <-- =$B$5*(1+B7)/$B$2+B7 DateDividend per share 8 1 . 0 7 0 - r p A - 1 1 8 1 . 0 7 0 - l u J - 1 1 8 1 . 0 7 0 - t c O - 0 1 0 2 . 0 8 0 - n a J - 9 0 2 . 0 8 0 - r p A - 9 0 2 . 0 8 0 - l u J - 9 0 1 . 0 1 1 - n a J - 6 0 1 . 0 1 1 - r p A - 8 0 1 . 0 1 1 - n u J - 2 2 0 1 . 0 1 1 - p e S - 5 1 4 1 . 0 2 1 - n a J - 1 1 4 1 . 0 2 1 - r p A - 3 4 1 . 0 2 1 - n u J - 7 2 5 6 3 / ) 4 1 A - 6 2 A ( = - - < 2 2 . 5 s d n e d i v i d f o m r e TCOMPUTING WHOLE FOODS (WFM) r E WITH THE GORDON MODEL Whole Foods Dividend History 0.000.050.100.150.200.25 10-Oct-06 22-Feb-08 6-Jul-09 18-Nov-10 1-Apr-12 14-Aug-13Whole Foods Dividends: Irregular and Declining The estimated WACC for Merck (cell B32) includes a judgment call: We have averaged three of the estimates that are closest together, throwing out the one estimate that appears to us to be extreme. 3.14 Computing the WACC for Whole Foods (WFM) In a previous section we pointed out that Whole Foods (WFM) was an example of negative net debt; the company has liquid assets in excess of its debt. The company ’ s dividends have declined over the past 5 years and exhibit a break between July 2008 and January 2011: In the WACC template at the end of this subsection we use the average of the two dividend growth rates in B9 and B10. Whole Foods total equity payouts show that in the past 3 years the company has absorbed equity from the capital markets. We do not think there is any 105 Calculating the Weighted Average Cost of Capital (WACC) growth rate for the total equity payouts that can be used in the WACC com- putation. In our WACC template for WFM, we ignore this method of comput-ing the cost of equity. 1 2 34 5 67AB C D E F DividendsCommon stock issuanceProceeds from stock option exerciseTotal equity payout 2007 96,742 54,383 42,359 <-- =B3-C3 2008 109,072 18,019 91,053 2009 0 4,286 -4,286 2010 0 46,962 -46,962 2011 52,620 296,719 -244,099GORDON MODEL FOR WHOLE FOOD'S EQUITY PAYOUTS 1 2 345 6 789 10 11121314 15 16 17181920 21 22 2324 25 26 2728 29 30 3132AB C Shares outstanding 183.56 <-- Millions Share price, 29 June 2012 95.32 Equity value, E 17,497 <-- =B2*B3, Millions Net debt, D -728 <-- Millions Tax rate, T C 37.90% <-- ='Page75, bottom'!D5 Cost of debt, r D 4.72% <-- From financial statements, interest on term loan Expected market return, E(r M) 8.45% <-- =Page102!B5 Risk-free rate, r f 0.06% Equity beta, β 0.51 <-- From Yahoo WACC based on Gordon per-share dividends Current dividend/share 0.56 <-- =Page104!B5 Growth rate 5.47% <-- =AVERAGE(Page104!B9:B10) Cost of equity, r E 6.09% <-- =B13*(1+B14)/B3+B14 WACC 6.23% <-- =B15*$B$4/($B$4+$B $5)+B7*(1-$B$6)*$B$5/($B$4+$B$5) WACC based on Gordon equity payoutsCurrent equity payoutGrowth rate Cost of equity, r E WACC WACC based on classic CAPM Cost of equity, r E 4.34% <-- =B9+B10*(B8-B9) WACC 4.53% <-- =B25*$B$4/($B$4+$B$5)+B17*(1-$B$6)*$B$5/($B$4+$B$5) WACC based on tax- adjusted CAPM Cost of equity, r E 4.33% <-- =B9*(1-B6)+B10*(B8-B9*(1-B6)) WACC 4.52% <-- =B29*$B$4/($B$4+$B$5)+B21*(1-$B$6)*$B$5/($B$4+$B$5) Estimated WACC? 5.09% <-- =AVERAGE(B16,B26,B30)COMPUTING THE WACC FOR WHOLE FOODS MARKET (WFM) Not applicable 106 Chapter 3 3.15 Computing the WACC for Caterpillar (CAT) Caterpillar ’ s cost of debt is very low: 1 234 5 6789 10 11AB C D E 31-Dec-09 31-Dec-10 31-Dec-11 Cash 4,867,000 3,592,000 3,057,000 Short-term debt 9,648,000 7,981,000 9,784,000 Long-term debt 24,944,000 20,437,000 21,847,000 Net debt 29,725,000 24,826,000 28,574,000 Interest expense 389,000 343,000 396,000 Cost of debt, r D? 1.26% 1.48% <-- =D10/AVERAGE(C8:D8)CATERPILLAR DEBT and Cost of debt r D Numbers in thousands 1 2 3 4 5AB C D E 31-Dec-09 31-Dec-10 31-Dec-11 Income before tax 569,000 3,750,000 6,725,000 Income tax expense -270,000 968,000 1,720,000 Implied tax rate -47.45% 25.81% 25.58% <-- =D4/D3CATERPILLAR TAX RATE Caterpillar ’ s tax rate is comfortably around 25% in years where it has sig- nificant income: 107 Calculating the Weighted Average Cost of Capital (WACC) Below we show 10 years of dividend history for CAT. In our model we will take the last 5 years of annual dividend growth to compute CAT ’ s r E using the Gordon dividend model: 1 2 3 456789 1011 12 13 14 15 16 171819 20 21 22 23242526272829303132 33AB C D E F DateDividend per share 18-Oct-01 0.18 17-Jan-02 0.18 Quarterly growth 2.45% <-- =(B43/B3)^(1/40)-1 18-Apr-02 0.18 Annual growth 10.15% <-- =(1+E4)^4-1 18-Jul-02 0.18 17-Oct-02 0.18 16-Jan-03 0.18 Quarterly growth 2.16% <-- =(B43/B23)^(1/20)-1 16-Apr-03 0.18 Annual growth 8.92% <-- =(1+E8)^4-1 17-Jul-03 0.18 16-Oct-03 0.19 15-Jan-04 0.19 Current share price, P0 90.60 22-Apr-04 0.19 Current dividend, Div 0 0.70 16-Jul-04 0.21 Dividend growth, g 8.92% <-- =E9 21-Oct-04 0.21 Gordon cost of equity, r E 9.77% <-- =E13*(1+E14)/E12+E14 18-Jan-05 0.21 21-Apr-05 0.21 20-Jul-05 0.25 20-Oct-05 0.25 18-Jan-06 0.25 20-Apr-06 0.25 18-Jul-06 0.30 19-Oct-06 0.30 18-Jan-07 0.30 19-Apr-07 0.30 18-Jul-07 0.36 18-Oct-07 0.36 17-Jan-08 0.36 17-Apr-08 0.36 17-Jul-08 0.42 16-Oct-08 0.42 15-Jan-09 0.42 16-Apr-09 0.42Cost of equityDividend growth Whole period Last 5 yearsCATERPILLAR DIVIDEND GROWTH AND GORDON DIVIDEND r E 0.000.050.100.150.200.250.300.350.400.450.50Oct-01Oct-02Oct-03Oct-04Oct- 05Oct-06Oct-07Oct-08Oct- 09Oct-10Oct- 11 Caterpillar ’ s equity payouts are very variable. We use the growth over the last 2 years as the basis for the payout method of computing r E : 108 Chapter 3 1 2345 6 789 10 11121314 15 16 17181920 21 22 2324 25 26 2728 29 30 3132AB C Shares outstanding 624.72 <-- million Share price, 29 June 2012 90.60 Equity value, E 56.60 <-- =B2*B3/1000 Net debt, D 28.57 <-- Billions Tax rate, T C 25.58% <-- ='Page106, bottom'!D5 Cost of debt, r D 1.48% <-- ='Page106, top'!D11 Expected market return, E(r M) 8.45% <-- =Page102!B5 Risk-free rate, r f 0.06% Equity beta, β 1.98 <-- Yahoo WACC based on Gordon per-share dividends Current dividend/share 0.70 <-- =4*Page107!B3 Growth rate 9.77% <-- =Page107!E15 Cost of equity, r E 10.61% <-- =B13*(1+B14)/B3+B14 WACC 7.42% <-- =B15*$B$4/($B$4+$B$5)+B7*(1-$B$6)*$B$5/($B$4+$B$5) WACC based on Gordon equity payoutsCurrent equity payout 1.036 <-- ='Page108, top'!E7/1000 Growth rate 4.98% <-- ='Page108, top'!B10 Cost of equity, r E 6.90% <-- =B19*(1+B20)/B4+B20 WACC 4.96% <-- =B21*$B$4/($B$4+$B$5)+B7*(1-$B$6)*$B$5/($B$4+$B$5) WACC based on classic CAPM Cost of equity, r E 16.68% <-- =B9+B10*(B8-B9) WACC 11.08% <-- =B25*$B$4/($B$4+$B$5)+B17*(1-$B$6)*$B$5/($B$4+$B$5) WACC based on tax-adjusted CAPMCost of equity, r E 16.70% <-- =B9*(1-B6)+B10*(B8-B9*(1-B6)) WACC 12.82% <-- =B29*$B$4/($B$4+$B$5)+B21*(1-$B$6)*$B$5/($B$4+$B$5) Estimated WACC? 11.95% <-- =AVERAGE(B26,B30)COMPUTING THE WACC FOR CATERPILLAR (CAT)1 2 3 4 5 6 7 8 9 10AB C D E F DividendsShares issuedTreasury shares purchasedTotal equity payout 31-Dec-07 845 -328 2,405 2,922 <-- =B3+C3+D3 31-Dec-08 953 -135 1,800 2,618 0 4 9 9 8 - 9 2 0 , 1 9 0 - c e D - 1 3 8 8 7 6 9 2 - 4 8 0 , 1 0 1 - c e D - 1 3 31-Dec-11 1,159 -123 1,036 Growth, 5 years -22.84% <-- =(E7/E3)^(1/4)-1 Growth, last 3 years 4.98% <-- =(E7/E5)^(1/2)-1CATERPILLAR'S EQUITY PAYOUTS Using these values, we get the following template for CAT ’ s WACC: 109 Calculating the Weighted Average Cost of Capital (WACC) Our WACC estimates divide into two groups: the two Gordon-based models produce significantly lower estimates for the r E and WACC than the two CAPM-based methods. In this case we take the average of the two latter com- putations (our general preference is often for CAPM over the dividend models). 3.16 When Don ’ t the Models Work? All models have problems and nothing is perfect. 18 In this section we discuss some of the potential problems with the Gordon model and with the capital asset pricing model. Problems with the Gordon Model Obviously the Gordon model doesn ’ t work if a firm doesn ’ t pay dividends and appears to have no intention—in the immediate future—of paying dividends. 19 But even for dividend-paying firms, it may be difficult to apply the model. Particularly problematic, in many cases, is the extraction of the future dividend payout rate from past dividends. Consider, for example, the dividend history of Ford Motor Company in the years 1989–1998: 1 23 4 56 7 89 10111213 14AB C Year Dividend 1989 3.00 1990 3.00 1991 1.95 1992 1.60 1993 1.60 1994 1.33 1995 1.23 1996 1.46 1997 1.64 1998 22.81 Growth rate, 1989-1997 -7.27% <-- =(B11/B3)^(1/8)-1 Growth rate, 1989-1998 25.28% <-- =(B12/B3)^(1/9)-1FORD MOTOR CO. DIVIDEND HISTORY 1989-1998 18. “Happiness is the maximum agreement of reality and desire.”—Stalin. 19. Firms cannot intend never to pay dividends, because such an intention would rationally mean that the value of the shares is zero. 110 Chapter 3 The problem here is easily identifiable: Ford, whose dividends were in steady decline until 1997, paid a cash dividend of $21.09 in 1998, this in addi- tion to its regular quarterly dividends (which summed to $1.72 in 1998). If we use past history to predict the future, any inclusion of the extraordinary cash dividend will cause us to overestimate the future dividend growth. Excluding the $21.09 dividend, however, also does not reflect the actual situation. It appears that the 10-year history of Ford ’ s dividends is not, perhaps, the best guide to its future dividend payout. There are several solutions to those wishing to use the Gordon model: • If we exclude the extraordinary dividend of $21.09 in 1998, then the divi- dend growth over the 4 years ending in 1998 is a respectable 6.64%. If Ford ’ s anticipated future dividend growth is estimated to be this rate, then—given its end-1998 stock price of $58.69—the Gordon model cost of equity is 9.77%: 17 18 19 2021 22 2324 25 2627 28 2930 31AB C Year Dividend 1989 3.00 1990 3.00 1991 1.95 1992 1.60 1993 1.60 1994 1.33 1995 1.23 1996 1.46 1997 1.64 1998 1.72 Growth rate, 1994-1998 6.64% <-- =(B28/B24)^(1/4)-1 Ford's stock price, end-1998 58.69Gordon cost of equity 9.77% <-- =B28*(1+B29)/B30+B29FORD'S DIVIDENDS EXCLUDING THE 1998 $21.09 DIVIDEND • A better alternative might be to use Ford ’ s total payouts to equity, as illus- trated in this chapter. This method does not mean, however, that we can get away from judgment calls (witness our extensive use of the two-stage Gordon model). • A last alternative to finding Ford ’ s cost of capital is to predict its future dividends by doing a full-blown financial model for the company. Such models—illustrated in the succeeding two chapters—are often used by ana-lysts. Though they are complicated and time consuming to build, they take into account all of the firm ’ s productive and financial activities. Potentially they are, therefore, a more accurate predictor of the dividend. 111 Calculating the Weighted Average Cost of Capital (WACC) Problems with the CAPM In the spreadsheet fragment below you will find the return of the S&P 500 and Big City Bagels. From the regression, you can see that Big City ’ s β is –0.6408. 1 2 3 45 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21ABC D E F G ) C G I B ( s l e g a B y t i C g i B x e d n I 0 0 5 P & S DateClosing price DateClosing price 5 2 . 6 4 6 9 - y a M 2 1 . 9 6 6 6 9 - y a M Jun-96 670.63 0.23% Jun-96 38.75 -16.22% Jul-96 639.95 -4.57% Jul-96 50.00 29.03% Aug-96 651.99 1.88% Aug-96 45.63 -8.75% Sep-96 687.33 5.42% Sep-96 35.00 -23.29% Oct-96 705.27 2.61% Oct-96 33.75 -3.57% Nov-96 757.02 7.34% Nov-96 16.25 -51.85% Dec-96 740.74 -2.15% Dec-96 13.13 -19.23% Jan-97 786.16 6.13% Jan-97 17.50 33.33% Feb-97 790.82 0.59% Feb-97 22.50 28.57% Mar-97 757.12 -4.26% Mar-97 25.63 13.89% Apr-97 801.34 5.84% Apr-97 30.00 17.07% May-97 848.28 5.86% May-97 25.00 -16.67% Jun-97 885.14 4.35% Jun-97 24.38 -2.50% Jul-97 954.31 7.81% Jul-97 26.25 7.69% Aug-97 899.47 -5.75% Aug-97 20.94 -20.24% Sep-97 947.28 5.32% Sep-97 22.50 7.46% Oct-97 914.62 -3.45% Oct-97 10.16 -54.86%COMPUTING BIG CITY BAGEL'S BET A y = -0.6408x - 0.0212 R² = 0.0052 -100%-50%0%50%100%150%200% -15% -13% -10% -8% -5% -3% 0% 3% 5% 8%Regressing Big City Bagel on the S&P500 Monthly data, May 1996 - March 1999 Big City Bagel ’ s stock is clearly risky—the annualized standard deviation of its returns is 135% as compared to about 17% for the S&P 500 over the same period. However, the β of Big City Bagels is –0.0542, which indicates that Big City has—in a portfolio context— negative risk . Were this true, it would mean that adding Big City to a portfolio would lower the portfolio variance enough to justify a below-risk-free return for Big City. While this might be true for some stocks, it is hard to believe that—in the long run—the β of Big City is indeed negative. 20 20. A more plausible explanation is that—for the period covered—Big City ’ s return has nothing whatsoever to do with the market return. 112 Chapter 3 The R 2 of the regression between Big City ’ s returns and the S&P 500 is essentially zero, meaning that the S&P 500 simply doesn ’ t explain any of the variation in Big City returns. For statistics mavens: The t -statistics of the intercept and the slope indicate that neither differs significantly from zero. In short: The regression of Big City Bagels ’ historic returns on the S&P 500 indicates no connection between the two whatsoever. What are we to make of this situation? How should we calculate the cost of capital for Big City? There are several alternatives: • We could assume that the Big City β is –0.0542. The company ’ s tax rate in March 1999 was essentially zero, so that the classical CAPM and the tax- adjusted version coincide: 1 2 3 4 5 6AB C 2 4 5 0 . 0 - a t e b s ' y t i C g i B Risk-free rate, r f 4.29% Expected market return, E(r M) 9.08% Cost of equity, r E 4.03% <-- =B4+B2*(B5-B4)COMPUTING THE COST OF EQUITY r E FOR BIG CITY BAGELS March 1999 • We could assume that the β of Big City is in fact 0; given the standard deviation of the β estimate for Big City, the β is not statistically different from zero, so that this assumption makes sense. This means that all of Big City ’ s risk is diversifiable and that the correct cost of equity for Big City is the risk-less rate of interest. • We could assume that the covariance (or lack thereof) between Big City and the S&P 500 is not indicative of their future correlation. This would eventually lead us to conclude that Big City ’ s risk is comparable to that of similar com-panies. A small study of the β s of snack food companies during the same period shows their β s to be well over 1: New World Coffee has a β of 1.15, Pepsico has a β of 1.42, Starbucks has a β of 1.84. Thus we might conclude that the β of Big City (in the sense of its future correlation with the market) would be somewhere between 1.15 and 1.84. This would, of course, give a radically different cost of equity for Big City: 113 Calculating the Weighted Average Cost of Capital (WACC) (For what it ’ s worth: This author would follow the latter case …) 3.17 Summary In this chapter we have illustrated in detail the application of two models for calculating the cost of equity: The Gordon dividend model and the CAPM. We have also considered three of the four practicable models for calculating the cost of debt. Because the application of these models includes for many judgment calls, our advice is to do the following: • Always use several models to calculate the cost of capital. • If you have time, try to calculate the cost of capital not only for the firm you are analyzing but also for other firms in the same industry. • From your analysis try to pick out a consensus estimate of the cost of capital. Don ’ t hesitate to exclude numbers (such as Big City ’ s negative cost of equity) that strike you as unreasonable. In sum, the calculation of the cost of capital is not just a mechanistic exercise! Exercises 1. ABC Corp. has a stock price P 0 = 50. The firm has just paid a dividend of $3 per share, and intelligent shareholders think that this dividend will grow by a rate of 5% per year. Use the Gordon dividend model to calculate the cost of equity of ABC. 2. Unheardof, Inc., has just paid a dividend of $5 per share. This dividend is anticipated to increase at a rate of 15% per year. If the cost of equity for Unheardof is 25%, what should be the market value of a share of the company? 1 2 3 4 5 6AB C 0 0 0 3 . 1 a t e b s ' y t i C g i B Risk-free rate, r f 4.29% Expected market return, E(r M) 9.08% Cost of equity, r E 10.52% <-- =B4+B2*(B5-B4)COMPUTING THE COST OF EQUITY r E FOR BIG CITY BAGELS Assumes that forward-looking beta = 1.3 114 Chapter 3 3. Dismal.Com is a producer of depressing Internet products. The company is currently not paying dividends, but its chief financial officer thinks that starting in 3 years it can pay a dividend of $15 per share, and that this dividend will grow by 20% per year. Assuming that the cost of equity of Dismal.Com is 35%, value a share based on the discounted dividends. 4. Consider the following dividend and price data for Chrysler: 1 2 34 5 678 9 10 11 12 13AB C D E YearYear-end stock priceDividend per shareGrowth rate 0 4 . 0 6 8 9 1 1 - 3 C / 4 C = - - < % 0 0 . 5 2 0 5 . 0 7 8 9 1 1 - 4 C / 5 C = - - < % 0 0 . 0 0 5 . 0 8 8 9 1 1 - 5 C / 6 C = - - < % 0 0 . 0 2 0 6 . 0 9 8 9 1 1 - 6 C / 7 C = - - < % 0 0 . 0 0 6 . 0 0 9 9 1 1 - 7 C / 8 C = - - < % 0 0 . 0 5 - 0 3 . 0 1 9 9 1 % 0 0 . 0 0 3 . 0 2 9 9 1 % 0 0 . 0 1 3 3 . 0 3 9 9 1 % 6 3 . 6 3 5 4 . 0 4 9 9 1 % 2 2 . 2 2 1 0 0 . 1 5 9 9 1 1996 35.00 1.40 40.00%CHRYSLER CORPORATION (C) Use the Gordon model to calculate Chrysler ’ s cost of equity at end-1996 on the basis of dividends only. 5. The current stock price of TransContinentalAirways is $65 per share. TCA currently pays an annual per-share dividend of $3. Over the past 5 years this dividend has grown annually at a rate of 23%. A respected analyst assumes that the current growth rate of dividends will hold up for the next 5 years, after which dividend growth will slow to 5% annually. Use the twostagegordon function to compute the cost of equity. 21 6. ABC Corp. has just paid a dividend of $3 per share. You—an experienced analyst—feel quite sure that the growth rate of the company ’ s dividends over the next 10 years will be 15% per year. After 10 years you think that the company ’ s dividend growth rate will slow to the industry average, which is about 5% per year. If the cost of equity for ABC is 12%, what is the value today of one share of the company? 7. Consider a company which has β equity = 1.5 and β debt = 0.4. Suppose that the risk-free rate of interest is 6%, the expected return on the market E ( r M ) = 15%, and that the corporate tax rate is 40%. If the company has 40% equity and 60% debt in its capital structure, calculate its weighted average cost of capital using both the classic CAPM and the tax-adjusted CAPM. 21. To do this problem you will have to copy the formula from the chapter spreadsheet to your answer spreadsheet. See Chapter 0 for details. 115 Calculating the Weighted Average Cost of Capital (WACC) 8. On the spreadsheet with this chapter you will find the following monthly data for Cisco ’ s stock price and the S&P 500 index. Compute the equation r CSCO , t = α CSCO + β CSCO r SP ,t and include the R 2 and t -statistics for the equation and its coefficients. 22 1 2345 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22AB C Date S&P 500 CSCO 3-Jul-02 911.62 13.19 1-Aug-02 916.07 13.82 3-Sep-02 815.28 10.48 1-Oct-02 885.76 11.18 1-Nov-02 936.31 14.92 2-Dec-02 879.82 13.10 2-Jan-03 855.70 13.37 3-Feb-03 841.15 13.98 3-Mar-03 848.18 12.98 1-Apr-03 916.92 15.00 1-May-03 963.59 16.41 2-Jun-03 974.50 16.79 1-Jul-03 990.31 19.49 1-Aug-03 1008.01 19.14 2-Sep-03 995.97 19.59 1-Oct-03 1050.71 20.93 3-Nov-03 1058.20 22.70 1-Dec-03 1111.92 24.23 2-Jan-04 1131.13 25.71 2-Feb-04 1144.94 23.16CISCO (CSCO) AND S&P 500 PRICES July 2002 - June 2007 9. You are considering buying the bonds of a very risky company. A bond with a $100 face value, a 1-year maturity, and a coupon rate of 22% is selling for $95. You consider the probability that the company will actually survive to pay off the bond 80%. With 20% probability, you think that the company will default, in which case you think that you will be able to recover $40. a. What is the expected return on the bond? b. If the company has cost of equity r E = 25%, tax rate T C = 35%, and 40% of its capital structure is equity, what is its weighted average cost of capital (WACC)? 10. It is 1 January 1997. Normal America, Inc. (NA) has paid a year-end dividend in each of the last 10 years, as shown by the table below: 22. To do this problem you will have to copy the functions tintercept and tslope from the chapter file to your answer spreadsheet. See previous footnote. 116 Chapter 3 1 2 3 45 6 78 9 1011 1213AB C D E F YearDec. 31 stock priceDec. 15 dividend per shareS&P 500 return 1986 33.00 1987 30.69 2.50 1987 4.7% 1988 35.38 2.50 1988 16.2% 1989 42.25 3.00 1989 31.4% 1990 34.38 3.00 1990 -3.3% 1991 36.25 1.60 1991 30.2% 1992 32.25 1.40 1992 7.4% 1993 43.00 0.80 1993 9.9% 1994 42.13 0.80 1994 1.2% 1995 52.88 1.10 1995 37.4% 1996 55.75 1.60 1996 22.9%NORMAL AMERICA, INC. 1 2 3 4 5C B A 5 . 7 1 E / P 0 0 5 P & S t n e r r u C % 0 5 o i t a r t u o y a p d n e d i v i D % 7 s d n e d i v i d f o e t a r h t w o r G E(rM)COMPUTING E(r M) FROM MARKET P/E a. Calculate NA ’ s β with respect to the S&P 500. b. Suppose that the Treasury bill rate is 5.5% and that the expected return on the market is E ( r M ) = 13%. If the corporate tax rate T C = 35%, calculate NA ’ s cost of equity using both the classic CAPM and tax-adjusted model. c. Assume that NA ’ s cost of debt is 8%. If the company is financed by 1/3 equity and 2/3 debt, what is its weighted average cost of capital using each of the two CAPM models? 11. At the end of June 2007, the price/earnings ratio of the S&P 500 was 17.5. Assume that the index proxies for the market, that it has a 50% dividend payout ratio, and that dividends are expected to grow at 7%. Compute E ( r M ). 12. The template for exercise 12 gives the prices of the Vanguard Index 500 Fund (symbol: VFINX). This fund ’ s prices replicate the S&P 500 with dividends reinvested. Use these data to estimate the expected return on the S&P 500 in two variations: All the data, the last 2 years. (This exercise shows the problematics of using historical market data to estimate the expected returns.) 13. Suppose that the S&P 500 price/earnings ratio is 17.5, the dividend payout ratio of the S&P is 50%, and that you estimate a future growth of dividends of 7%. What is E ( r M )? 14. The template for exercise 14 gives the 10-year history of Intel ’ s quarterly dividends. Compute Intel ’ s cost of equity r E using the Gordon dividend model. Compare the cost of equity computed on the basis of 10 years of growth with that computed on the last 5 years of growth. 4 Valuation Based on the Consolidated Statement of Cash Flows 4.1 Overview Chapter 2 of Financial Modeling defi nes four approaches to corporate valua- tion. All are based on computing the fi rm ’ s enterprise value (EV), defi ned as the present value of the fi rm ’ s future free cash fl ows (FCFs). • The accounting approach to EV moves items on the balance sheet so that all operating items are on the left-hand side of the balance sheet and all fi nan- cial items are on the right-hand side. • The effi cient markets approach to EV revalues—to the extent possible— items on the accounting EV balance sheet at market values. An obvious revalu-ation is to replace the fi rm ’ s book value of equity with the market value of the equity. • The discounted cash fl ow (DCF) approach values the EV as the present value of the fi rm ’ s future anticipated free cash fl ows (FCFs) discounted at the weighted average cost of capital (WACC). The FCFs are the cash fl ows pro- duced by the fi rm ’ s productive assets—its working capital, fi xed assets, good- will, etc. In this book we use two implementations of the DCF approach. These approaches differ in their derivation of the fi rm ’ s free cash fl ows: In this chapter we base our projections of future anticipated FCFs on an analysis of the fi rm ’ s consolidated statement of cash fl ows. This method is easy to implement and (for a valuation method, all of which take a lot of time) relatively simple. In Chapters 5 and 6 we base our projections of future anticipated FCFs on a pro forma model for the fi rm ’ s fi nancial statements. Pro forma statements are powerful tools that can be used for business plans as well as valuations, but they are diffi cult and time consuming to implement. Although both Chapter 4 (this chapter) and Chapter 5 differ in their method for deriving the free cash fl ows to be discounted, both chapters boil down to the following template: 118 Chapter 4 The difference between the two DCF approaches is in the derivation of the future FCFs. In this chapter we examine the fi rm ’ s consolidated statement of cash fl ows (CSCFs) and use it as a basis for estimating the future FCFs. We then discuss issues related to estimating the short-term growth rate (8% above), the long-term growth rate (5%), assuming that you have learned from Chapter 3 how to compute the weighted average cost of capital (WACC) (11% above). We focus on a number of important technical issues: • Adjustments that need to be made in the passage from the consolidated statement of cash fl ows (CSCFs) to the free cash fl ow (FCF). These adjust-ments involve: Ⴜ Financing adjustments Ⴜ Corrections for the vagaries of accounting rules Ⴜ Eliminating non-forward-looking items • Dates that don ’ t match. Quite often the dates are not evenly spaced. We may be, for example, projecting from annual statements that end on 31 December, but the current valuation date may be September. How do we make our valu-ation appropriate to this? The answer is to use XNPV , as we shall see. • Estimating the return on assets versus the return on equity. XIRR can provide us with the answer. Finally, we discuss the methodology for making reality fi t our template (or is it vice versa? Sometimes it ’ s hard to tell!). 1 2345 6 789 101112131415 16H G F E D C B A Current free cash flow (FCF) 1,000 Growth rate of FCF, years 1-5 8.00% Long-term FCF growth rate 5.00% Weighted average cost of capital (WACC) 11.00% Year 012345 ) 3 $ B $ + 1 ( * 8 F = - - < 9 6 4 , 1 0 6 3 , 1 0 6 2 , 1 6 6 1 , 1 0 8 0 , 1 s F C F e r u t u F Terminal value 25,713 <-- =G8*(1+B4)/(B5-B4) 9 G + 8 G = - - < 3 8 1 , 7 2 0 6 3 , 1 0 6 2 , 1 6 6 1 , 1 0 8 0 , 1 l a t o T 5 . 0 ^ ) 5 B + 1 ( * ) 0 1 G : 0 1 C , 5 B ( V P N = - - < 3 3 9 , 0 2 e u l a v e s i r p r e t n E t e e h s e c n a l a b t n e r r u c m o r F - - < 0 0 0 , 2 h s a c l a i t i n i k c a b d d A t e e h s e c n a l a b t n e r r u c m o r F - - < 0 0 0 , 0 1 t b e d t u o t c a r t b u S 4 1 B - 3 1 B + 2 1 B = - - < 3 3 9 , 2 1 e u l a v y t i u q E Per share (1,000 shares) 12.93 <-- =B15/1000BASIC CASH FLOW VALUATION TEMPLATE 119 Valuation Based on the Consolidated Statement of Cash Flows 4.2 Free Cash Flow (FCF): Measuring the Cash Produced by the Business The free cash fl ow (FCF) is defi ned as the cash produced by a business without taking into account the way the business is fi nanced—is the best measure of the cash produced by a business. We discussed the defi nition of the FCF in Chapter 2 and here only recall the defi nition: Defi ning the Free Cash Flow Profi t after taxes Accounting measure of fi rm profi tability. It is not a cash fl ow. + Depreciation This noncash expense is added back to the profi t after tax. − Increase in operating current assetsIncrease in sales-related current assets is not an expense for tax purposes (and is therefore ignored in the profi t after taxes), but it is a cash drain on the company.For purposes of FCF, our defi nitions of current assets and current liabilities excludes fi nancing items such as cash and debt. + Increase in operating current liabilitiesIncrease in sale-related current liabilities provides cash to the fi rm. − Increase in fi xed assets at costAn increase in fi xed assets (the long-term productive assets of the company) is a use of cash, which reduces the fi rm ’ s free cash fl ow. + After-tax net interest paymentsFCF measures the cash produced by the business activity of the fi rm. Add back after-tax net interest payments to neutralize the interest component of the profi t after taxes. In this chapter we base our computations of the free cash fl ow (FCF) on the fi rm ’ s consolidated statement of cash fl ows (CSCFs). Computing the Terminal Value The enterprise value (EV) is defi ned as the present value of all future FCFs, EVFCF WACCt t t= +()=∞ ∑11 . Our valuation model assumes that a FCF growth rate for the short term (years 1–5) and another growth rate for the long term (year 120 Chapter 4 6 and subsequent). Denoting the short-term growth rate by STg and the long- term growth rate by LTg , the enterprise value of the fi rm can be written as: EVFCF STg WACCt t t=+() +() = ↑∑0 151 1 The present value of cash flow ws t growing at the short-term growth rate,, , ,=+ 15…/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext1 1 15 0+() ↑WACCF Discount ing the terminal value to time /dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketextCCF LTg WACCt t t5 11 1+() +() =∞ ↑∑ Terminal value The present value: in year of cash flows t growing at long-term growth ra5 5,,> tte/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /dncurlybracketright /horizcurlybracketext/horizcurlybracketext/horizcurlybracketext Using a standard technique, we can show that: Terminal valueFCF LTg WACC FCF LTg WACCt t t=∗+() +() =∗+()=∞ ∑5 1 51 1 1 − −>⎧ ⎨⎪ ⎩⎪LTgWACC LTg undefine d otherwiseif Mid-Year Discounting Rewriting the enterprise value (EV) to include the terminal value gives: EVFCF WACC WACCFCF LTg WACC LTgt t t= +()+ +()+() − ()=∑11 11 15 55 This formulation assumes that all cash fl ows occur at year-end. In fact most corporate cash fl ows occur throughout the year; if we approximate this fact by assuming that on average the year- t cash fl ow occurs in the middle of the year, we can rewrite the EV equation as EVFCF WACC WACCFCF LTg WACC LTgt t t= +()+ +()+() − (− =∑11 11 05 15 455 ..) ) A little bit of algebra shows how this can be accommodated by Excel ’ s NPV function: EVFCF WACC WACCFCF LTg WACC LTgt t t= +()+ +()+() − ()⎡ ⎣⎢⎤⎦ =∑11 11 15 55⎥ ⎥ ↑ Can be computed by Excel’s function NPV/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext∗+()105WACC. It is this version of EV that is used throughout this section of Financial Modeling . 121 Valuation Based on the Consolidated Statement of Cash Flows 4.3 A Simple Example The consolidated statement of cash fl ows for ABC Corp. for the past 5 years is given below: 1 2 34 5 6789 10 11 1213141516 17 181920212223242526 27 2829303132333435AB C D E F G 2008 2009 2010 2011 2012 Operating Activities: Net earnings 479,355 495,597 534,268 505,856 520,273 Adjustments to reconcile net earnings to net cash provided by operating activities Add back depreciation and amortization 41,583 47,647 46,438 45,839 46,622 Changes in operating assets and liabilities: Subtract increase in accounts receivable 9,387 25,951 -12,724 1,685 -2,153 Subtract increase in inventories -37,630 -22,780 -16,247 -15,780 -5,517 Subtract increase in prepaid expenses and other assets-52,191 13,573 16,255 14,703 -2,975 Add increase in accounts payable, accrued expenses, pensions, and other liabilities29,612 51,172 6,757 40,541 60,255 Net cash provided by operating activities 470,116 611,160 574,747 592,844 616,505 <-- =SUM(F4:F11) Investing Activities: Short-term investments, net -5,000 -55,000 50,000 -10,000 20,000 Purchases of property, plant and equipment -48,944 -70,326 -89,947 -37,044 -88,426 Proceeds from dispositions of property, plant and equipment197 6,956 22,942 6,179 28,693 Net cash used in investing activities -53,747 -118,370 -17,005 -40,865 -39,733 <-- =SUM(F15:F17) Financing Activities: Repayment of debt 00 -300,000 0 -7,095 Proceeds from revolving credit facility borrowings 1,242,431 0 0 0 250,000 Proceeds from the issuance of stock 48,286 114,276 69,375 68,214 37,855 Dividends paid -332,986 -344,128 -361,208 -367,499 -378,325 Stock repurchased -150,095 -200,031 -200,038 -200,003 -597,738 Net cash used in financing activities 807,636 -429,883 -791,871 -499,288 -695,303 <-- =SUM(F21:F25) Changes in cash balances 1,224,005 62,907 -234,129 52,691 -118,531 <-- =F12+F18+F26 Supplemental disclosure of cash flow information Cash paid during the period for Income taxes 255,043 175,972 314,735 283,618 305,094 Interest 83,553 83,551 70,351 57,151 57,910 Income tax rate 34.73% 26.20% 37.07% 35.92% 36.96% <-- =F32/(F4+F32)ABC CORPORATION Consolidated Statement of Cash Flows, 2008-2012 In order to turn this consolidated statement of cash fl ows (CSCFs) into free cash fl ows (FCFs), we eliminate all the fi nancial items. We also adjust the fi gures by adding back after-tax net interest. Since we want to use the CSCF to produce forward-looking FCFs, we may also want to eliminate operating 122 Chapter 4 or investment items that are not expected to recur. 1 In most cases these adjust- ments amount to the following: • Accept all operating activities in the CSCF. • Dispense with all fi nancing activities. • Carefully examine the investing activities, eliminating those that are fi nan- cial but keeping the operational items. • Add back after-tax interest. In the current example: 1. The current example has no such items. 1 2 34 5 6 7 89 10 11 12 13 14 15 16 17 18 19 2021 22 23 24 25 26 272829 30 31323334353637G F E D C B A 2008 2009 2010 2011 2012 Operating Activities: Net earnings 479,355 495,597 534,268 505,856 520,273 Adjustments to reconcile net earnings to net cash provided by operating activities Add back depreciation and amortization 41,583 47,647 46,438 45,839 46,622 Changes in operating assets and liabilities: Subtract increase in accounts receivable 9,387 25,951 -12,724 1,685 -2,153 Subtract increase in inventories -37,630 -22,780 -16,247 -15,780 -5,517 Subtract increase in prepaid expenses and other assets-52,191 13,573 16,255 14,703 -2,975 Add increase in accounts payable, accrued expenses, pensions, and other liabilities29,612 51,172 6,757 40,541 60,255 Net cash provided by operating activities 470,116 611,160 574,747 592,844 616,505 <-- =SUM(F4:F11) Investing Activities: Short-term investments, net Purchases of property, plant and equipment -48,944 -70,326 -89,947 -37,044 -88,426 Proceeds from dispositions of property, plant and equipment197 6,956 22,942 6,179 28,693 Net cash used in investing activities -53,747 -118,370 -67,005 -30,865 -59,733 <-- =SUM(F15:F17) Financing Activities:Repayment of debtProceeds from revolving credit facility borrowings Proceeds from the issuance of stock Dividends paid Stock repurchasedNet cash used in financing activities Free cash flow before interest adjustment 416,369 492,790 507,742 561,979 556,772 <-- =F12+F18+F26 Add back after-tax net interest 54,537 61,658 44,271 36,620 36,504 <-- =(1-F37)*F35 Free cash flow (FCF) 470,906 554,448 552,013 598,599 593,276 <-- =F28+F29 Supplemental disclosure of cash flow information Cash paid during the period for Income taxes 255,043 175,972 314,735 283,618 305,094 Interest 83,553 83,551 70,351 57,151 57,910 Income tax rate 34.73% 26.20% 37.07% 35.92% 36.96% <-- =F34/(F4+F34)ABC CORPORATION Consolidated Statement of Ca sh Flows, 2008-2012 123 Valuation Based on the Consolidated Statement of Cash Flows The Enterprise Value and the Value per Share At this point we have estimates for the fi rm ’ s historical FCFs. In order to apply the methodology, we need to estimate three parameters: • The short-term growth rate of ABC cash fl ows. • The long-term growth rate of ABC cash fl ows. • The weighted average cost of capital (WACC). Some analysis, combined with seat-of-the-pants intuition, leads to the fol- lowing parameter choices and valuation. The Data Table does sensitivity analysis on the long-term growth rate and the WACC. 1 2 3 4 56 7 89 10 11 12 13 1415 16 1718 19 202122 23 24 25 26 27H G F E D C B A Free cash flow (FCF) year ending 31 Dec. 2012 593,276 <-- ='ABC, CSCF to FCF'!F30 Growth rate of FCF, years 1-5 8.00% <-- Optimistic about short-term growth Long-term FCF growth rate 5.00% <-- More pessimistic about long-term growth Weighted average cost of capital (WACC) 10.70% Year 2012 2013 2014 2015 2016 2017 ) 3 $ B $ + 1 ( * 8 F = - - < 7 1 7 , 1 7 8 5 4 1 , 7 0 8 7 5 3 , 7 4 7 7 9 9 , 1 9 6 8 3 7 , 0 4 6 F C F Terminal value 30,510,086 <-- =G8*(1+B4)/(B3-B4) 9 G + 8 G = - - < 3 0 8 , 1 8 3 , 1 3 5 4 1 , 7 0 8 7 5 3 , 7 4 7 7 9 9 , 1 9 6 8 3 7 , 0 4 6 l a t o T 5 . 0 ^ ) 5 B + 1 ( * ) 0 1 G : 0 1 C , 5 B ( V P N = - - < 1 3 8 , 9 0 2 , 2 2 e u l a v e s i r p r e t n E Add back initial cash and marketable securities 73,697 <-- From current balance sheet Subtract out 2012 financial liabilities 1,379,106 <-- From current balance sheet 4 1 B - 3 1 B + 2 1 B = - - < 2 2 4 , 4 0 9 , 0 2 e u l a v y t i u q E Per share (1 million shares outstanding) 20.90 <-- =B15/1000000 Data table: Share value vs LT growth and WACC 2 0 . 9 00 %3 %6 %9 %1 2 % 6% 10.31 15.74 nmf nmf nmf WACC ¹ 8% 9.48 14.48 34.45 nmf nmf 10% 8.74 13.33 31.73 -60.24 nmf 12% 8.06 12.30 29.26 -55.55 nmf14% 7.44 11.35 27.02 -51.29 -12.14 16% 6.87 10.49 24.98 -47.44 -11.23 18% 6.36 9.71 23.12 -43.93 -10.40ABC CORP. VALUATION Long-term growth ¼ data table header, =IF(B5>B4,B16,\"nmf\") --> The data table header (our nomenclature for what the Data Table actually computes) includes an If statement. The reason is that, as shown above, the terminal value formula is valid only if the long-term growth rate is less than the WACC. In the following sections we deal with a number of issues that arise in this valuation process. 124 Chapter 4 4.4 Merck: Reverse Engineering the Market Value The method discussed in this chapter can often be used to extract market expectations of growth. As an example, consider Merck. Manipulation of the CSCF produces a 2011 FCF of $10,346 million. Using the WACC of 5.66% computed in Chapter 3 and some arbitrary values for the short- and long-term FCF growth rates gives us the valuation template for Merck below. 2 2. We have skipped many of the details, which are available on the Excel fi le for this chapter. 1 2 34 5 6 789 101112131415161718H G F E D C B A 1 5 D ! ' w o l F h s a C e e r F k c r e M ' = - - < 6 4 3 , 0 1 ) F C F ( w o l f h s a c e e r f t n e r r u C Growth rate of FCF, years 1-5 3.00% Long-term FCF growth rate 3.00% <-- critical question Weighted average cost of capital (WACC) 5.66% <-- Chapter 2 5 4 3 2 1 0 r a e Y ) 3 $ B $ + 1 ( * 8 F = - - < 4 9 9 , 1 1 5 4 6 , 1 1 5 0 3 , 1 1 6 7 9 , 0 1 6 5 6 , 0 1 F C F Terminal value 464,423 <-- =G8*(1+B4)/(B5-B4) 9 G + 8 G = - - < 7 1 4 , 6 7 4 5 4 6 , 1 1 5 0 3 , 1 1 6 7 9 , 0 1 6 5 6 , 0 1 ) l a n i m r e t + F C F f o m u s ( l a t o T 5 . 0 ^ ) 5 B + 1 ( * ) 0 1 G : 0 1 C , 5 B ( V P N = - - < 7 9 7 , 1 1 4 e u l a v e s i r p r e t n E 1 4 4 1 + 1 3 5 3 1 = - - < 2 7 9 , 4 1 h s a c l a i t i n i k c a b d d A t e e h s e c n a l a b t n e r r u c m o r F - - < 5 1 5 , 7 1 t b e d t u o t c a r t b u S 4 1 B - 3 1 B + 2 1 B = - - < 4 5 2 , 9 0 4 e u l a v y t i u q E Number of shares outstanding 3,040,838,643 <-- Merck's financial statements 0 0 0 0 0 0 1 * 6 1 B / 5 1 B = - - < 9 5 . 4 3 1 l e d o m r u o m o r f e u l a v e r a h S Actual stock price (30 Dec 2011) 37.70MERCK CASH FLOW VALUATION TEMPLATE The WACC for Merck was discussed in Chapter 3, where we saw that plausible estimates are in the range of 5% to 7%; the WACC = 5.66% was determined in Chapter 3 as an average of these plausible estimates. If the short-term growth rate is 6% and the long-term growth is 3%, then our model produces a share value of $154.43, which is very much larger than Merck ’ s stock price of $37.70. We use a Data Table to fi nd what current market price represents in terms of long-term growth and WACC: 125 Valuation Based on the Consolidated Statement of Cash Flows We have used Excel ’ s Conditional Formatting to highlight Merck share valuations that are + / − 20% of the current market price. It is now clear that the market imputes a negative long-term growth rate to Merck ’ s free cash fl ows. We can also do some sensitivity analysis on the short-term growth rate (perhaps it doesn ’ t make sense that Merck ’ s long-term growth is so low and that its short-term growth is 6%). Changing the short-term growth to 3% pro-duces the following Data Table : 20 212223 24 2526 27 282930 31 3233 34 35G F E D C B A Data table: Model share price as function of LT growth and WACC, short-term FCF growth rate = 6% Long-term growth rate ¼ =IF(B5>B4,B17,\"nmf\") --> 154.43 -5% -4% -3% -2% 0% 5.0% 51.83 56.09 61.42 68.28 90.21 5.2% 50.77 54.83 59.89 66.35 86.715.4% 49.76 53.63 58.43 64.52 83.48 WACC --> 5.6% 48.78 52.48 57.03 62.79 80.47 5.8% 47.84 51.37 55.70 61.15 77.676.0% 46.93 50.31 54.43 59.59 75.066.2% 46.06 49.29 53.22 58.11 72.62 6.4% 45.22 48.31 52.05 56.70 70.33 6.6% 44.40 47.36 50.94 55.35 68.18 6.8% 43.62 46.45 49.87 54.07 66.15 7.0% 42.86 45.58 48.85 52.84 64.25 7.2% 42.12 44.74 47.86 51.67 62.44 7.4% 41.41 43.92 46.91 50.54 60.74 20 212223 24 2526 27 282930 31 3233 34 35G F E D C B A Data table: Model share price as function of LT growth and WACC, short-term FCF growth rate = 3% Long-term growth rate ¼ =IF(B5>B4,B17,\"nmf\") --> 134.59 -5% -4% -3% -2% 0% 5.0% 45.71 49.40 54.02 59.96 78.96 5.2% 44.79 48.31 52.69 58.28 75.93 5.4% 43.91 47.26 51.42 56.70 73.12 WACC --> 5.6% 43.06 46.26 50.21 55.20 70.51 5.8% 42.24 45.30 49.05 53.77 68.09 6.0% 41.45 44.38 47.95 52.42 65.82 6.2% 40.69 43.49 46.90 51.13 63.70 6.4% 39.96 42.64 45.89 49.91 61.72 6.6% 39.25 41.82 44.92 48.74 59.85 6.8% 38.57 41.03 43.99 47.62 58.10 7.0% 37.91 40.27 43.10 46.56 56.44 7.2% 37.27 39.54 42.24 45.54 54.88 7.4% 36.66 38.83 41.42 44.56 53.40 The conclusion remains the same: Market expectations of Merck ’ s long- term growth prospects appear to be negative. 126 Chapter 4 4.5 Summary This chapter has illustrated a relatively corporate simple valuation technique. Starting with free cash fl ows derived from the consolidated statement of cash fl ows, we build a simple valuation template that is a function of only four parameters: the current FCF, the short-term FCF growth rate, the long-term FCF growth rate, and the weighted average cost of capital (WACC). Our tech-nique allows us to focus on the main valuation parameters and also allows us to reverse engineer the growth and WACC expectations built into the current market price. Exercise The fi les that accompany this book contains information for Kellogg. Use this information and the template of section 4.1 to value Kellogg. 5 Pro Forma Financial Statement Modeling 5.1 Overview The usefulness of fi nancial statement projections for corporate fi nancial man- agement is undisputed. Such projections, termed pro forma fi nancial state- ments , are the bread and butter for much corporate fi nancial analysis. In this and the next chapter we will focus on the use of pro formas for valuing the fi rm and its component securities, but pro formas also form the basis for many credit analyses; by examining pro forma fi nancial statements we can predict how much fi nancing a fi rm will need in future years. We can play the usual “what if ” games of simulation models, and we can use pro formas to ask what strains on the fi rm may be caused by changes in fi nancial and sales parameters. In this chapter we present a variety of fi nancial models. All the models are sales driven, in that they assume that many of the balance sheet and income statement items are directly or indirectly related to sales. The mathematical structure of solving the models involves fi nding the solution to a set of simul-taneous linear equations predicting both the balance sheets and the income statements for the coming years. However, the user of a spreadsheet need never worry about the solution of the model; the fact that spreadsheets can solve—by iteration—the fi nancial relations of the model means that we only have to worry about correctly stating the relevant accounting relations in our Excel model. 5.2 How Financial Models Work: Theory and an Initial Example Almost all fi nancial statement models are sales driven ; this term means that as many as possible of the most important fi nancial statement variables are assumed to be functions of the sales level of the fi rm. For example, accounts receivable are often taken as a direct percentage of the sales of the fi rm. A slightly more complicated example might postulate that the fi xed assets (or some other account) are a step function of the level of sales: Fixed assetsa if sales A b if A sales B etc=< ≤<⎧ ⎨⎪ ⎩⎪. 128 Chapter 5 To solve a fi nancial planning model, we must distinguish between those fi nancial statement items that are functional relationships of sales and perhaps of other fi nancial statement items and those items that involve policy decisions. The asset side of the balance sheet is usually assumed to be dependent only on functional relationships. The current liabilities may also be taken to involve functional relationships only, leaving the mix between long-term debt and equity as a policy decision. A simple example is the following. We wish to predict the fi nancial state- ments for a fi rm whose current balance sheet and income statement are as follows: 13 1415 16 171819202122 23 242526272829 30 313233343536 37 3839B A 0 r a e Y Income statement 0 0 0 , 1 s e l a S ) 0 0 5 ( d l o s s d o o g f o s t s o C ) 2 3 ( t b e d n o s t n e m y a p t s e r e t n I Interest earned on cash and marketable securities 6 ) 0 0 1 ( n o i t a i c e r p e D 4 7 3 x a t e r o f e b t i f o r P ) 0 5 1 ( s e x a T 5 2 2 x a t r e t f a t i f o r P ) 0 9 ( s d n e d i v i D 5 3 1 s g n i n r a e d e n i a t e R Balance sheet 0 8 s e i t i r u c e s e l b a t e k r a m d n a h s a C 0 5 1 s t e s s a t n e r r u C Fixed assets 0 7 0 , 1 t s o c t A ) 0 0 3 ( n o i t a i c e r p e D 0 7 7 s t e s s a d e x i f t e N Total assets 1,000 0 8 s e i t i l i b a i l t n e r r u C 0 2 3 t b e D 0 5 4 k c o t S 0 5 1 s g n i n r a e d e n i a t e r d e t a l u m u c c A Total liabilities and equity 1,000 129 Pro Forma Financial Statement Modeling The current (year 0) level of sales is 1,000. The fi rm expects its sales to grow at a rate of 10% per year, and it anticipates the following fi nancial state- ment relations: Current assets: Assumed to be 15% of end-of-year sales Current liabilities: Assumed to be 8% of end-of-year salesNet fi xed assets: 77% of end-of-year salesDepreciation: 10% of the average value of assets on the books during the year. Fixed assets at cost: Sum of net fi xed assets plus accumulated depreciation. Debt: The fi rm neither repays any existing debt nor borrows any more money over the 5-year horizon of the pro formas. Cash and marketable securities:This is the balance sheet plug (see explanation below). Average balances of cash and marketable securities are assumed to earn 8% interest. The “Plug” Perhaps the most important fi nancial policy variable in the fi nancial statement modeling is the “plug”: This relates to the decision as to which balance sheet item will “close” the model: • How do we guarantee that assets and liabilities are equal (this is “closure” in the accounting sense)? • How does the fi rm fi nance its incremental investments (this is “fi nancial closure”)? In general the plug in a pro forma model will be one of three fi nancial balance sheet items: (i) Cash and marketable securities, (ii) debt, or (iii) stock. 1 As an example, consider the balance sheet of our fi rst pro forma model: 1. As noted in Chapter 3, cash can often be considered negative debt and vice versa. We return to this point in section 5.5. 130 Chapter 5 Assets Liabilities and Equity Cash and marketable securities Current liabilities Current assets Debt Fixed assets Fixed assets at cost – Accumulated depreciation Net fi xed assets Equity Stock (net funds directly provided by shareholders) Accumulated retained earnings (profi ts not paid out) Total assets Total liabilities and equity In the current example we assume that cash and marketable securities will be the plug. This assumption has two meanings: 1. The mechanical meaning of the plug: Formally, we defi ne Cash and marketable securities = Total liabilities and equity – Current assets – Net fi xed assets By using this defi nition, we guarantee that assets and liabilities will always be equal. 2. The fi nancial meaning of the plug: By defi ning the plug to be cash and marketable securities, we are also making a statement about how the fi rm fi nances itself. In our model below, for example, the fi rm sells no additional stock, does not pay back any of its existing debt, and does not raise any more debt. This defi nition means that all incremental fi nancing (if needed) for the fi rm will come from the cash and marketable securities account; it also means that if the fi rm has additional cash, it will go into this account. Projecting Next Year ’ s Balance Sheet and Income Statement Above we have given the fi nancial statement for year 0. We now project the fi nancial statement for year 1: 131 Pro Forma Financial Statement Modeling The formulas are mostly obvious. (The dollar signs—indicating that when the formulas are copied the cell references to the model parameters should not change—are very important! If you fail to put them in the model will not copy correctly when you project years 2 and beyond.) In each year (model param-eters are in boldface): 1 2 3456789 101112 13 1415161718 19 20 21 2223 24 2526 27 28293031 32 33 34 35 36 37 38 39D C B A % 0 1 h t w o r g s e l a S % 5 1 s e l a S / s t e s s a t n e r r u C % 8 s e l a S / s e i t i l i b a i l t n e r r u C % 7 7 s e l a S / s t e s s a d e x i f t e N % 0 5 s e l a S / d l o s s d o o g f o s t s o C % 0 1 e t a r n o i t a i c e r p e D % 0 0 . 0 1 t b e d n o e t a r t s e r e t n I Interest paid on cash and marketable securities 8.00% % 0 4 e t a r x a T % 0 4 o i t a r t u o y a p d n e d i v i D Y 1 0 r a e Income statement 0 0 0 , 1 s e l aS 1,100 <-- =B15*(1+$B$2) ) 0 0 5 ( d l o s s d o o g f o s t s o C (550) <-- =-C15*$B$6 ) 2 3 ( t b e d n o s t n e m y a p t s e r e t n I (32) <-- =-$B$8*(B36+C36)/2 Interest earned on cash and marketable securities 6 9 <-- =$B$9*(B27+C27)/2 ) 0 0 1 ( n o i t a i c e r p e D (117) <-- =-$B$7*(C30+B30)/2 4 7 3 x a t e r o f e b t i f o r P 410 <-- =SUM(C15:C19) ) 0 5 1 ( s e x a T (164) <-- =-C20*$B$10 5 2 2 x a t r e t f a t i f o r P 246 <-- =C21+C20 ) 0 9 ( s d n e d i v i D (98) <-- =-$B$11*C22 5 3 1 s g n i n r a e d e n i a t e R 148 <-- =C23+C22 Balance sheet 0 8 s e i t i r u c e s e l b a t e k r a m d n a h s a C 144 <-- =C39-C28-C32 0 5 1 s t e s s a t n e r r u C 165 <-- =C15*$B$3 Fixed assets 0 7 0 , 1 t s o c t A 1,264 <-- =C32-C31 ) 0 0 3 ( n o i t a i c e r p e D (417) <-- =B31+C19 0 7 7 s t e s s a d e x i f t e N 847 <-- =C15*$B$5 Total assets 1,000 1,156 <-- =C32+C28+C27 0 8 s e i t i l i b a i l t n e r r u C 88 <-- =C15*$B$4 0 2 3 t b eD 320 <-- =B36 0 5 4 k c o tS 450 <-- =B37 0 5 1 s g n i n r a e d e n i a t e r d e t a l u m u c c A 298 <-- =B38+C24 Total liabilities and equit y 1,000 1,156 <-- =SUM(C35:C38)SETTING UP THE FINANCIAL STATEMENT MODEL 132 Chapter 5 Income Statement Equations • Sales = Initial sales * (1 + Sales growth ) year • Costs of goods sold = Sales * Costs of goods sold/Sales The assumption is that the only expenses related to sales are costs of goods sold. Most companies also book an expense item called Selling, General, and Administrative expenses (SG&A). The change you would have to make to accommodate this item are obvious (see an exercise at the end of this chapter). • Interest payments on debt = Interest rate on debt * Average debt over the year This formula allows us to accommodate changes in the model for repay- ment of debt, and rollover of debt at different interest rates. Note that in the current version of the model, debt stays constant, but in other versions of the model discussed below debt will vary over time. • Interest earned on cash and marketable securities = Interest rate on cash * Average cash and marketable securities over the year • Depreciation = Depreciation rate * Average fi xed assets at cost over the year This calculation assumes that all new fi xed assets are purchased during the year. We also assume that there is no disposal of fi xed assets. • Profi t before taxes = Sales – Costs of goods sold – Interest payments on debt + Interest earned on cash and marketable securities – Depreciation • T a x e s = Tax rate * Profi t before taxes • Profi t after taxes = Profi t before taxes – Taxes • Dividends = Dividend payout ratio * Profi t after taxes. The fi rm is assumed to pay out a fi xed percentage of its profi ts as dividends. An alternative would be to assume that the fi rm has a target for its dividends per share. • Retained earnings = Profi t after taxes – Dividends 133 Pro Forma Financial Statement Modeling Balance Sheet Equations • Cash and marketable securities = Total liabilities and equity – Current assets – Net fi xed assets As explained above, this means that cash and marketable securities are the balance sheet plug. • Current assets = Current assets/Sales * Sales • Net fi xed assets = Net fi xed assets/Sales * Sales 2 • Accumulated depreciation = Previous year ’ s accumulated depreciation + Depreciation rate * Average fi xed assets at cost over the year • Fixed assets at cost = Net fi xed assets + Accumulated depreciation Note that this model does not distinguish between plant property and equip- ment (PP&E) and other fi xed assets such as land. • Current liabilities = Current liabilities/Sales * Sales • Debt is assumed to be unchanged. An alternative model, which we will explore later, assumes that debt is the balance sheet plug. • Stock doesn ’ t change. (Shareholders provide no additional direct fi nancing: the company is assumed to issue no new stock or repurchase any stock.) • Accumulated retained earnings = Previous year ’ s accumulated retained earn- ings + Current year ’ s additions to retained earnings 2. This is not the only way to model fi xed assets. An alternative method assumes that net fi xed assets are constant; see section 5.6 for an implementation. 134 Chapter 5 Circular References in Excel Financial statement models in Excel almost always involve cells that are mutually dependent. As a result the solution of the model depends on the ability of Excel to solve circular references. If you open a spreadsheet that involves iteration and if your spreadsheet is not set up for circular references you will see the following Excel error message: To make sure your spreadsheet recalculates, you have to go to the File|Options|Formulas box and click Enable iterative calculation : Extending the Model to Years 2 and Beyond Now that you have the model set up, you can extend it by copying the columns: 135 Pro Forma Financial Statement Modeling Note that the most common mistake to make in the transition between the two-columned fi nancial model and this one is the failure to mark the model parameters with dollar signs. If you commit this error, you will get zeros in places where there should be numbers. 1 2 3 45 6 78 9 10 11 12 1314 15 1617 18 192021 22 23 24 25 2627 28 2930 31 3233 34 3536 37 3839G F E D C B A % 0 1 h t w o r g s e l a S % 5 1 s e l a S / s t e s s a t n e r r u C % 8 s e l a S / s e i t i l i b a i l t n e r r u C % 7 7 s e l a S / s t e s s a d e x i f t e N % 0 5 s e l a S / d l o s s d o o g f o s t s o C % 0 1 e t a r n o i t a i c e r p e D Interest rate %0 0 . 0 1 t b e d n o Interest paid on cash and marketable securities 8.00% % 0 4 e t a r x a T % 0 4 o i t a r t u o y a p d n e d i v i D 5 4 3 2 1 0 r a e Y Income statement 0 0 0 , 1 s e l aS 1,100 1,210 1,331 1,464 1,611 ) 0 0 5 ( d l o s s d o o g f o s t s o C (550) (605) (666) (732) (805) ) 2 3 ( t b e d n o s t n e m y a p t s e r e t n I (32) (32) (32) (32) (32) Interest earned on cash and marketable securities 6 9 14 20 26 33 ) 0 0 1 ( n o i t a i c e r p e D (117) (137) (161) (189) (220) 4 7 3 x a t e r o f e b t i f o r P 410 450 492 538 587 ) 0 5 1 ( s e x a T (164) (180) (197) (215) (235) 5 2 2 x a t r e t f a t i f o r P 246 270 295 323 352 ) 0 9 ( s d n e d i v i D (98) (108) (118) (129) (141) 5 3 1 s g n i n r a e d e n i a t e R 148 162 177 194 211 Balance sheet 0 8 s e i t i r u c e s e l b a t e k r a m d n a h s a C 144 213 289 371 459 0 5 1 s t e s s a t n e r r u C 165 182 200 220 242 Fixed assets 0 7 0 , 1 t s o c t A 1,264 1,486 1,740 2,031 2,364 ) 0 0 3 ( n o i t a i c e r p e D (417) (554) (715) (904) (1,124) 0 7 7 s t e s s a d e x i f t e N 847 932 1,025 1,127 1,240 Total assets 1,000 1,156 1,326 1,513 1,718 1,941 0 8 s e i t i l i b a i l t n e r r u C 88 97 106 117 129 0 2 3 t b eD 320 320 320 320 320 0 5 4 k c o tS 450 450 450 450 450 0 5 1 s g n i n r a e d e n i a t e r d e t a l u m u c c A 298 460 637 830 1,042 Total liabilities and equity 1,000 1,156 1,326 1,513 1,718 1,941 FIRST FINANCIAL MODEL 136 Chapter 5 5.3 Free Cash Flow (FCF): Measuring the Cash Produced by the Business Now that we have the model, we can use it to make fi nancial predictions. The most important calculation for valuation purposes is the free cash fl ow (FCF). FCF—the cash produced by a business without taking into account the way the business is fi nanced—is the best measure of the cash produced by a busi-ness. An extended discussion of the FCF was included in Chapter 2. For refer-ence, we briefl y repeat the defi nition given in that chapter: Defi ning the Free Cash Flow Profi t after taxes Accounting measure of fi rm profi tability. It is not a cash fl ow. + Depreciation This noncash expense is added back to the profi t after tax. − Increase in operating current assetsIncrease in sales-related current assets is not an expense for tax purposes (and is therefore ignored in the profi t after taxes), but it is a cash drain on the company.For purposes of FCF, our defi nitions of current assets and current liabilities excludes fi nancing items such as cash and debt. + Increase in operating current liabilitiesIncrease in sale-related current liabilities provides cash to the fi rm. − Increase in fi xed assets at costAn increase in fi xed assets (the long-term productive assets of the company) is a use of cash, which reduces the fi rm ’ s free cash fl ow. + After-tax net interest paymentsFCF measures the cash produced by the business activity of the fi rm. Add back after-tax net interest payments to neutralize the interest component of the profi t after taxes. 137 Pro Forma Financial Statement Modeling Here is the calculation for our fi rm: 40 41 42 43 44 4546 47 48 49 50G F E D C B A 5 4 3 2 1 0 r a e Y Free cash flow calculation 2 5 3 3 2 3 5 9 2 0 7 2 6 4 2 x a t r e t f a t i f o r P 0 2 2 9 8 1 1 6 1 7 3 1 7 1 1 n o i t a i c e r p e d k c a b d d A ) 2 2 ( ) 0 2 ( ) 8 1 ( ) 7 1 ( ) 5 1 ( s t e s s a t n e r r u c n i e s a e r c n i t c a r t b u S 2 1 1 1 0 1 9 8 s e i t i l i b a i l t n e r r u c n i e s a e r c n i k c a b d d A ) 3 3 3 ( ) 1 9 2 ( ) 4 5 2 ( ) 2 2 2 ( ) 4 9 1 ( t s o c t a s t e s s a d e x i f n i e s a e r c n i t c a r t b u S 9 1 9 1 9 1 9 1 9 1 t b e d n o t s e r e t n i x a t - r e t f a k c a b d d A Subtract after-tax interest on cash and mkt. securities (5) (9) (12) (16) (20) Free cash flow 176 188 201 214 228 53 54 55 56 5758 59 60 61 62 63 6465 66 67 68 69 70 7172 73 74 75H G F E D C B A Cash flow from operating activities 6 4 2 x a t r e t f a t i f o r P 270 295 323 352 <-- =G22 7 1 1 n o i t a i c e r p e d k c a b d d A 137 161 189 220 <-- =-G19 Adjust for changes in net working capital: ) 5 1 ( s t e s s a t n e r r u c n i e s a e r c n i t c a r t b u S (17) (18) (20) (22) <-- =-(G28-F28) 8 s e i t i l i b a i l t n e r r u c n i e s a e r c n i k c a b d d A 9 10 11 12 <-- =G35-F35 6 5 3 s e i t i v i t c a g n i t a r e p o m o r f h s a c t e N 400 448 502 562 <-- =SUM(G55:G59) Cash flow from investing activities ) 4 9 1 ( s e r u t i d n e p x e l a t i p a c - - s t e s s a d e x i f f o s n o i t i s i u q A (222) (254) (291) (333) <-- =-(G30-F30) l e d o m r u o n i t o N - - < 0 0 0 0 0 s e i t i r u c e s t n e m t s e v n i f o s e s a h c r u P l e d o m r u o n i t o N - - < 0 0 0 0 0 s e i t i r u c e s t n e m t s e v n i f o s e l a s m o r f s d e e c o r P ) 4 9 1 ( s e i t i v i t c a g n i t s e v n i n i d e s u h s a c t e N (222) (254) (291) (333) <-- =SUM(G63:G65) Cash flow from financing activities 6 3 F - 6 3 G = - - < 0 0 0 0 0 s e i t i v i t c a g n i w o r r o b m o r f s d e e c o r p t e N 7 3 F - 7 3 G = - - < 0 0 0 0 0 s e s a h c r u p e r , s e u s s i k c o t s m o r f s d e e c o r p t e N ) 8 9 ( d i a p s d n e d i v i D (108) (118) (129) (141) <-- =G23 ) 1 7 G : 9 6 G ( M U S = - - < ) 1 4 1 ( ) 9 2 1 ( ) 8 1 1 ( ) 8 0 1 ( ) 8 9 ( s e i t i v i t c a g n i c n a n i f m o r f h s a c t e N 0 6 G + 6 6 G + 2 7 G = - - < 8 8 2 8 6 7 0 7 4 6 s t n e l a v i u q e h s a c d n a h s a c n i e s a e r c n i t e N 4 6 s e i t i r u c e s . t k m d n a h s a c n i s e g n a h c : k c e h C 70 76 82 88 <-- =G27-F27CONSOLIDATED STATEMENT OF CASH FLOWS: RECONCILING THE CASH BALANCES Reconciling the Cash Balances The free cash fl ow calculation is different from the “consolidated statement of cash fl ows” that is a part of every accounting statement. The purpose of the consolidated statement of cash fl ows is to explain the increase in the cash accounts in the balance sheet as a function of the cash fl ows from the fi rm ’ s operating, investing, and fi nancing activities. In the pro forma example of this section we treat the cash and marketable securities as the balance sheet plug; however, it can also be derived from a standard accounting statement of cash fl ows: 138 Chapter 5 Line 75 checks that the changes in the cash accounts derived through the consolidated statement of cash fl ows match those derived in the fi nancial model (which uses cash as a plug). As you can see, the model works, in the sense that changes in cash balances from the consolidated statement of cash fl ows in fact match those in the projected balance sheets of the pro forma model. 5.4 Using the Free Cash Flow (FCF) to Value the Firm and Its Equity The enterprise value of the fi rm is the present value of the fi rm ’ s future antici- pated free cash fl ows. We can use the pro forma FCF projections and a cost of capital to determine the enterprise value of the fi rm. Suppose we have deter- mined that the fi rm ’ s weighted average cost of capital (WACC) is 20% (recall that the calculation of the WACC was discussed in Chapter 2). Then the enter- prise value of the fi rm is the discounted value of the fi rm ’ s projected FCFs plus its terminal value: Enterprise valueFCF WACCt t= +()=∞ ∑1 11 Most fi nancial analysts consider it presumptuous to project an infi nite number of free cash fl ows; therefore the projected cash fl ow stream is often cut off at some arbitrary date and a terminal value is substituted for the cash fl ows beyond this date: Enterprise valueFCF WACCFCF WACCFCF WACC= +()+ +()++ +()1 12 25 11 1…5 5 55 1+ +()Year Terminal Value WACC- In this formula, the Year-5 Terminal Value is a proxy for the present value of all FCFs from year 6 onward. Instead of projecting the FCFs from year 6 139 Pro Forma Financial Statement Modeling onward, we use the most common terminal value model, assuming that year-5 free cash fl ows grow at a long-term growth rate LTg : Terminal Value at end of yearFCF WACCFCF LTg t t t5 11 5 15= +()=∗+( + =∞ ∑) ) +() =∗+() − <=∞ ∑t t t WACC FCF LTg WACC LTg LTg WACC1 11 5 provided This model (based on the formula for the present value of a growing annuity, see section 1.1) assumes that the year-5 cash fl ow will continue to grow at a constant long-term growth rate. Note that the formula is senseless if the long-term growth rate LTg is greater than or equal to the weighted average cost of capital; if this were the case, then the terminal value would be infi nite (clearly impossible). Here ’ s an example which uses our projections: 53 54 555657585960616263646566J I H G F E D C B A Valuing the firm % 0 2 l a t i p a c f o t s o c e g a r e v a d e t h g i e W ? % 3 n o i t a l f n i + % 2 h t w o r g l a e r - - < % 5 e t a r h t w o r g w o l f h s a c e e r f m r e t - g n o L Year 012345 8 2 2 4 1 2 1 0 2 8 8 1 6 7 1 F C F Terminal value 1,598 <-- =G58*(1+B55)/(B54-B55) 6 2 8 , 1 4 1 2 1 0 2 8 8 1 6 7 1 l a t o T Enterprise value, present value of row 60 1,231 <-- =NPV(B54,C60:G60) Add in initial (year 0) cash and mkt. securities 80 <-- =B27 2 6 B + 3 6 B = - - < 1 1 3 , 1 0 r a e y n i e u l a v t e s s A 6 3 B - = - - < ) 0 2 3 ( y a d o t t b e d s ' m r i f f o e u l a v t u o t c a r t b u S 5 6 B + 4 6 B = - - < 1 9 9 e u l a v y t i u q E Note that the long-term FCF growth rate in cell B55 is different from the sales growth in cell B2 in the spreadsheet on page 135. The sales growth is the anticipated growth over the years 1–5; the long-term growth rate is prob-ably better estimated by making a more realistic estimate of the growth of the 140 Chapter 5 fi rm ’ s market sector. For fi rms operating in a mature market, we often estimate the long-term FCF growth as the sum of real growth plus anticipated infl ation. 5.5 Some Notes on the Valuation Procedure In this section we cover some issues related to the valuation procedure outlined in section 5.4. Terminal Value In determining the terminal value we used a version of the growing annuity model described in Chapter 1. We have assumed that—after the year-5 projec-tion horizon—the cash fl ows will grow at a long-term rate of growth of 5%. This gives the terminal value as: Terminal Value at end of yearFCF Long term FCF growth WACC51 5=∗+() −- LLong term FCF growth - As noted in the previous section, this formula is only valid if the long-term FCF growth is less than the WACC. There are other ways of calculating the terminal value. All of the following are common variations that can be implemented in the framework of our model (see end-of-chapter exercises): • Terminal value = Year-5 book value of debt + Equity This calculation assumes that the book value correctly predicts the market value. • Terminal value = (Enterprise market/book multiple) * (Year-5 book value of debt + Equity) • Terminal value = P/E ratio * Year-5 profi ts + Year-5 book value of debt • Terminal value = EBITDA ratio * Year-5 anticipated EBITDA (EBITDA = Earnings before interest, taxes, depreciation, and amortization.) The Treatment of Cash and Marketable Securities in the Valuation We have added the initial cash balances back to the present value of the projected FCFs to get the enterprise value. This procedure assumes the following: 141 Pro Forma Financial Statement Modeling • Year-0 balances of cash and marketable securities are not needed to produce the FCFs in subsequent years. • Year-0 balances of cash and marketable securities are “surpluses” which could be drawn down or paid out by shareholders without affecting the future economic performance of the fi rm. A wholly equivalent assumption sometimes made by investment bankers and equity analysts is to assume that initial cash balances are negative debt . If you made this assumption, you would value the equity in the following way: 68 69 7071D C B A Cash and marketable securities as negative debt 2 6 B = - - < 5 9 2 , 1 e u l a v e s i r p r e t n e = 0 6 w o r f o V P N 7 2 B + 6 3 B - = - - < ) 0 4 2 ( h s a c s u n i m t b e d : t b e d 0 r a e y t e N 0 7 B + 9 6 B = - - < 5 5 0 , 1 e u l a v y t i u q E Mid-Year Discounting While the NPV formula assumes that all cash fl ows occur at the end of the year, it is more logical to assume that they occur smoothly throughout the year. For discounting purposes, we should therefore discount cash fl ows as if, on average, they occur in the middle of the year. This means that the enterprise value is more logically calculated as: Enterprise valueFCF WACCFCF WACC FCF WA= +()+ +()+ + +1 052 15 511 1..… CCCYear Terminal Value WACC FCF WACCFCF()+ +() =+()+45 4 5 1 15 1 1.. .- 2 2 2 5 551 15 1+()+ + +()+ +()⎡ ⎣WACC FCF WACCYear Terminal Value WACC… -⎢ ⎢ ⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥ ↑ This can be calculated using Excel’s NPV functi ion/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext ∗+()105WACC. Incorporating this mid-year discounting into our value calculations gives: 142 Chapter 5 5.6 Alternative Modeling of Fixed Assets The models in this chapter assume that the net fi xed assets (NFA) are a func- tion of sales. In effect this means that we assume that the depreciation of the fi xed assets has actual economic meaning, so that the productive capacity of these assets is determined by their after-depreciation value. At the ethereal level of the pro forma models of this chapter, this appears to us to be an accept-able assumption. There are, however, two alternative models that the fi nancial modeler may want to consider. The fi rst of these assumes that depreciation has no economic meaning. In this case the gross fi xed assets are a function of sales. The second alternative model is to assume that the existing fi xed asset base, if properly maintained, can accommodate reasonable levels of future sales. 3 Both alterna- tive models are easily accommodated in the pro forma framework already set out; in the remainder of this section we give illustrations. Gross Fixed Assets Are a Function of Sales Suppose depreciation has no economic meaning, so that the fi xed assets at cost represent the future productive capacity of assets. 4 This requires only a small adjustment to our previous model: 3. A third alternative is to extensively model future fi xed asset expenditures. While this may add the whiff of “reality” to the fi nancial model, it often just adds many layers of fi nancial and model-ing confusion. 4. Depreciation will of course continue to have a cash fl ow meaning, reducing taxable income. 74 75 76777879808182 83 84858687J I H G F E D C B A Valuing the firm—using mid-year discounting % 0 2 l a t i p a c f o t s o c e g a r e v a d e t h g i e W % 5 e t a r h t w o r g w o l f h s a c e e r f m r e t - g n o L Year 012345 8 2 2 4 1 2 1 0 2 8 8 1 6 7 1 F C F Terminal value 1,598 <-- =G79*(1+B76)/(B75-B76) 6 2 8 , 1 4 1 2 1 0 2 8 8 1 6 7 1 l a t o T 5 . 0 ^ ) 5 7 B + 1 ( * ) 1 8 G : 1 8 C , 5 7 B ( V P N = - - < 8 4 3 , 1 1 8 w o r f o V P N , e u l a v e s i r p r e t n E Add in initial (year 0) cash and mkt. securities 80 <-- =B27 3 8 B + 4 8 B = - - < 8 2 4 , 1 0 r a e y n i e u l a v t e s s A 5 6 B = - - < ) 0 2 3 ( y a d o t t b e d s ' m r i f f o e u l a v t u o t c a r t b u S 6 8 B + 5 8 B = - - < 8 0 1 , 1 e u l a v y t i u q E 143 Pro Forma Financial Statement Modeling Net Fixed Assets Are Constant In certain cases it may be appropriate to assume that the current fi xed assets, if properly maintained, can accommodate reasonable levels of future sales. An example might be the case of a supermarket—if depreciation is taken to be the economic expression of the maintenance and asset replacement required to service the existing customer base, then this means that the net fi xed assets would be constant over time. This assumption has been made in a number of Harvard cases. 5 This variation in our basic model is easily made, as shown below: 1 2 3 4 5 6 7 8 9 10 11 26 27 28 29 303132 33H G F E D C B A % 0 1 h t w o r g s e l a S % 5 1 s e l a S / s t e s s a t n e r r u C % 8 s e l a S / s e i t i l i b a i l t n e r r u C % 7 0 1 s e l a S / t s o c t a s t e s s a d e x i F % 0 5 s e l a S / d l o s s d o o g f o s t s o C % 0 1 e t a r n o i t a i c e r p e D % 0 0 . 0 1 t b e d n o e t a r t s e r e t n I Interest paid on cash and marketable securities 8.00% % 0 4 e t a r x a T % 0 4 o i t a r t u o y a p d n e d i v i D Balance sheet 0 8 s e i t i r u c e s e l b a t e k r a m d n a h s a C 2 29 398 589 805 1,049 0 5 1 s t e s s a t n e r r u C 165 182 200 220 242 Fixed assets 0 7 0 , 1 t s o c t A 1,177 1,295 1,424 1,567 1,723 <-- =$B$5*G15 ) 0 0 3 ( n o i t a i c e r p e D (412) (536) (672) (821) (986) <-- =F31+G19 0 7 7 s t e s s a d e x i f t e N 765 759 752 745 737 <-- =G30+G31 Total assets 1,000 1,158 1,338 1,541 1,770 2,028 FIXED ASSETS AT COST IS A FUNCTION OF SALES 12 345 6 789 1011 26 27 28 29 3031 32 33H G F E D C B A % 0 1 h t w o r g s e l a S % 5 1 s e l a S / s t e s s a t n e r r u C % 8 s e l a S / s e i t i l i b a i l t n e r r u C t n a t s n o C s t e s s a d e x i f t e N % 0 5 s e l a S / d l o s s d o o g f o s t s o C % 0 1 e t a r n o i t a i c e r p e D % 0 0 . 0 1 t b e d n o e t a r t s e r e t n I Interest paid on cash and marketable securities 8.00% % 0 4 e t a r x a T % 0 4 o i t a r t u o y a p d n e d i v i D Balance sheet 0 8 s e i t i r u c e s e l b a t e k r a m d n a h s a C 223 386 570 777 1,010 0 5 1 s t e s s a t n e r r u C 165 182 200 220 242 Fixed assets 0 7 0 , 1 t s o c t A 1,183 1,307 1,445 1,597 1,765 <-- =G32-G31 ) 0 0 3 ( n o i t a i c e r p e D (413) (537) (675) (827) (995) <-- =F31+G19 0 7 7 s t e s s a d e x i f t e N 770 770 770 770 770 <-- =F32 Total assets 1,000 1,158 1,337 1,539 1,767 2,022 NET FIXED ASSETS CONSTANT Depreciation reinvested into fixed assets 5. See William Fruhan, Financial Strategy: Studies in the Creation, Transfer, and Destruction of Shareholder Value (Irwin, 1979), p. 161. 144 Chapter 5 This model implies that depreciation equals capital expenditure. This can be seen in the free cash fl ows: 90 91 9293949596 97 9899 100101102103 104 105106J I H G F E D C B A Data table: The effect of sales growth (cell B2) on equity valuation Growth 1,108 <-- =B87 , data table header 0% 1,0932% 1,1054% 1,1136% 1,1178% 1,115 10% 1,10812% 1,09514% 1,07616% 1,049 Sales Growth and Equity Value 1,0401,0501,0601,0701,0801,0901,1001,1101,120 0% 2% 4% 6% 8% 10% 12% 14% 16% Sales growthEquity value 5.7 Sensitivity Analysis As in any Excel model, we can perform extensive sensitivity analysis on our valuation. Taking the example in section 5.3 as our base case, we can ask, for example, what is the effect of the sales growth rate on the equity value of the fi rm: 41 424344 45 46474849 50H G F E D C B A Year 012345 Free cash flow calculation 6 0 4 1 6 3 0 2 3 4 8 2 1 5 2 x a t r e t f a t i f o r P 9 1 G - = - - < 8 6 1 2 5 1 8 3 1 4 2 1 3 1 1 n o i t a i c e r p e d k c a b d d A ) 2 2 ( ) 0 2 ( ) 8 1 ( ) 7 1 ( ) 5 1 ( s t e s s a t n e r r u c n i e s a e r c n i t c a r t b u S 2 1 1 1 0 1 9 8 s e i t i l i b a i l t n e r r u c n i e s a e r c n i k c a b d d A ) 0 3 F - 0 3 G ( - = - - < ) 8 6 1 ( ) 2 5 1 ( ) 8 3 1 ( ) 4 2 1 ( ) 3 1 1 ( t s o c t a s t e s s a d e x i f n i e s a e r c n i t c a r t b u S 9 1 9 1 9 1 9 1 9 1 t b e d n o t s e r e t n i x a t - r e t f a k c a b d d A Subtract after-tax interest on cash and mkt. securities (7) (15) (23) (32) (43) Free cash flow 2 5 52 8 13 0 83 3 93 7 2 Cells B91:C100 contain a data table (see Chapter 31 if you are unsure of how to construct these tables). While initial increases in sales growth increase the value of the fi rm, very high sales growth actually decreases fi rm value. We leave it to you to check that this is due to the high fi xed assets to sales ratio. 145 Pro Forma Financial Statement Modeling Another variation is to calculate the effect on equity valuation of both the long-term FCF growth and the WACC. Here, however, you have to be careful: Examining the terminal value equation Terminal ValueFCF long term FCF growth WACC long term FCF=∗+() −51- - ggrowth will show you that this calculation only makes sense if the WACC is greater than the growth rate. 6 To overcome this problem we defi ne the data table cell B107 (this is the calculation on which the data table does its sensitivity analysis) in the following way: 6. If the growth rate > WACC, then Terminal ValueFCF long term FCF growth WACCt t t=∗+() +()=∞ =∞ ∑5 11 1- . Thus the WACC puts an effective bound on the long-term growth rate. 107 108109110111112113114 115 116117K J I H G F E D C B A WACC 1,108.37 10% 12% 14% 16% 18% 20% 22% 24% 26% 0% 2,038.12 1,660.04 1,390.52 1,188.82 1,032.29 907.35 805.37 720.58 649.00 Growth rate of sales --> 2% 2,447.00 1,915.96 1,562.34 1,310.08 1,121.12 974.36 857.11 761.31 681.59 4% 3,128.45 2,299.84 1,802.89 1,471.75 1,235.34 1,058.12 920.35 810.19 720.10 6% 4,491.36 2,939.65 2,163.72 1,698.09 1,387.62 1,165.81 999.40 869.93 766.32 8% 8,580.08 4,219.26 2,765.09 2,037.61 1,600.82 1,309.39 1,101.03 944.61 822.81 10% nmf 8,058.09 3,967.84 2,603.47 1,920.62 1,510.41 1,236.55 1,040.62 893.42 12% nmf nmf 7,576.07 3,735.18 2,453.61 1,811.94 1,426.27 1,168.64 984.20 14% nmf nmf nmf 7,130.34 3,519.60 2,314.48 1,710.85 1,347.86 1,105.25 16% nmf nmf nmf nmf 6,717.58 3,319.58 2,185.15 1,616.70 1,274.71=IF(B75<=B76,\"nmf\",B87)↓ 5.8 Debt as a Plug In the model shown above, cash and marketable securities were the plug and debt was a constant. However, for some values of the model parameters, you can get negative cash and marketable securities. Consider the following example—this is still the same model as above, but—as indicated on the spreadsheet itself—with some different parameter values: 146 Chapter 5 Given these changes the cash and marketable securities account (row 27 in the above example) turns negative by year 2, a result which is obviously illogi- cal. However, the economic meaning of these negative numbers is clear: Given the increased sales growth, increased current asset and fi xed asset require-ments, and increased dividend payouts, the fi rm needs more fi nancing. 7 What we want is a model which recognizes that: • Cash cannot be less than zero. • When the fi rm needs additional fi nancing, it borrows money. 1 2 3 4567 8 9 1011 12 131415 16 17181920 21 222324 25 26272829 30 313233 34 353637 38 39G F E D C B A % 0 1 m o r f d e s a e r c n I - - < % 0 2 h t w o r g s e l a S % 5 1 m o r f d e s a e r c n I - - < % 0 2 s e l a S / s t e s s a t n e r r u C % 8 s e l a S / s e i t i l i b a i l t n e r r u C % 7 7 m o r f d e s a e r c n I - - < % 0 8 s e l a S / s t e s s a d e x i f t e N % 0 5 s e l a S / d l o s s d o o g f o s t s o C % 0 1 e t a r n o i t a i c e r p e D % 0 0 . 0 1 t b e d n o e t a r t s e r e t n I Interest paid on cash and marketable securities 8.00% % 0 4 e t a r x a T % 0 4 m o r f d e s a e r c n I - - < % 0 5 o i t a r t u o y a p d n e d i v i D 5 4 3 2 1 0 r a e Y Income statement 0 0 0 , 1 s e l aS 1,200 1,440 1,728 2,074 2,488 ) 0 0 5 ( d l o s s d o o g f o s t s o C (600) (720) (864) (1,037) (1,244) ) 0 4 ( t b e d n o s t n e m y a p t s e r e t n I (40) (40) (40) (40) (40) Interest earned on cash and marketable securities 6 4 (0) (6) (13) (21) ) 0 0 1 ( n o i t a i c e r p e D (124) (156) (194) (242) (299) 6 6 3 x a t e r o f e b t i f o r P 440 524 624 742 884 ) 7 4 1 ( s e x a T (176) (210) (249) (297) (354) 0 2 2 x a t r e t f a t i f o r P 264 314 374 445 530 ) 0 1 1 ( s d n e d i v i D (132) (157) (187) (223) (265) 0 1 1 s g n i n r a e d e n i a t e R 132 157 187 223 265 Balance sheet 0 8 s e i t i r u c e s e l b a t e k r a m d n a h s a C 28 (36) (113) (209) (325) 0 0 2 s t e s s a t n e r r u C 240 288 346 415 498 Fixed assets 0 0 1 , 1 t s o c t A 1,384 1,732 2,157 2,675 3,306 ) 0 0 3 ( n o i t a i c e r p e D (424) (580) (774) (1,016) (1,315) 0 0 8 s t e s s a d e x i f t e N 960 1,152 1,382 1,659 1,991 Total assets 1,080 1,228 1,404 1,615 1,865 2,163 0 8 s e i t i l i b a i l t n e r r u C 96 115 138 166 199 0 0 4 t b eD 400 400 400 400 400 0 5 4 k c o tS 450 450 450 450 450 0 5 1 s g n i n r a e d e n i a t e r d e t a l u m u c c A 282 439 626 849 1,114 Total liabilities and equity 1,080 1,228 1,404 1,615 1,865 2,163 NEGATIVE CASH BALANCES: ILLUSTRATION 7. If you examine the model as it now stands you will see that it implicitly assumes that this extra fi nancing comes at the cost of the cash and marketable securities. If we consider this account a kind of checking account with interest, then the model implicitly assumes that the fi rm can fi nance overdrafts from this account at the same rate of interest as it is being paid on the account. 147 Pro Forma Financial Statement Modeling Here is the model: 1 2 3 4 56 7 89 10 11 12 1314 15 1617 18 19 20 21 22 23 24 25 26 27 2829 30 3132 33 3435 36 3738 39H G F E D C B A % 0 1 m o r f d e s a e r c n I - - < % 0 2 h t w o r g s e l a S % 5 1 m o r f d e s a e r c n I - - < % 0 2 s e l a S / s t e s s a t n e r r u C % 8 s e l a S / s e i t i l i b a i l t n e r r u C % 7 7 m o r f d e s a e r c n I - - < % 0 8 s e l a S / s t e s s a d e x i f t e N % 0 5 s e l a S / d l o s s d o o g f o s t s o C % 0 1 e t a r n o i t a i c e r p e D % 0 0 . 0 1 t b e d n o e t a r t s e r e t n I Interest paid on cash and marketable securities 8.00% % 0 4 e t a r x a T % 0 4 m o r f d e s a e r c n I - - < % 0 5 o i t a r t u o y a p d n e d i v i D Yea r 012345 Income statement 0 0 0 , 1 s e l aS 1,200 1,440 1,728 2,074 2,488 ) 0 0 5 ( d l o s s d o o g f o s t s o C ( 600) (720) (864) (1,037) (1,244) ) 0 4 ( t b e d n o s t n e m y a p t s e r e t n I (40) (42) (47) (56) (67) Interest earned on cash and marketable securities 6 4 1 - - - ) 0 0 1 ( n o i t a i c e r p e D ( 124) (156) (194) (242) (299) 6 6 3 x a t e r o f e b t i f o r P 440 524 622 739 878 ) 7 4 1 ( s e x a T ( 176) (209) (249) (296) (351) 0 2 2 x a t r e t f a t i f o r P 264 314 373 443 527 ) 0 1 1 ( s d n e d i v i D (132) (157) (187) (222) (263) 0 1 1 s g n i n r a e d e n i a t e R 132 157 187 222 263 Balance sheet 0 8 s e i t i r u c e s e l b a t e k r a m d n a h s a C 28 0000 < - - = G 3 9 - G 2 8 - G 3 2 0 0 2 s t e s s a t n e r r u C 240 288 346 415 498 Fixed assets 0 0 1 , 1 t s o c t A 1,384 1,732 2,157 2,675 3,306 ) 0 0 3 ( n o i t a i c e r p e D (424) (580) (774) (1,016) (1,315) 0 0 8 s t e s s a d e x i f t e N 960 1,152 1,382 1,659 1,991 Total assets 1,080 1,228 1,440 1,728 2,074 2,488 0 8 s e i t i l i b a i l t n e r r u C 96 115 138 166 199 0 0 4 t b eD 400 436 514 610 728 <-- =MAX(G28+G32-G35-G37-G38,F36) 0 5 4 k c o tS 450 450 450 450 450 0 5 1 s g n i n r a e d e n i a t e r d e t a l u m u c c A 282 439 626 847 1,111 Total liabilities and equity 1,080 1,228 1,440 1,728 2,074 2,488 NO NEGATIVE CASH BALANCES The equations for cash (row 27) and debt (row 36) are indicated for the year-5 entries. What they do, in accounting terms, is the following: • Cash and marketable securities remains the plug in the model. • The debt on the balance sheet conforms to the following test: Ⴜ Current assets + Net fi xed assets > Current liabilities + Last year ’ s debt + Stock + Accumulated retained earnings? In this case even if cash and marketable securities = 0, we need to increase debt balances in order to fi nance the fi rm ’ s productive activities. Ⴜ Current assets + Net fi xed assets < Current liabilities + Last year ’ s debt + Stock + Accumulated retained earnings? 148 Chapter 5 If this relation holds, then there is no need to increase debt and, in fact, the fi rm has to have positive cash and marketable securities as a balancing item, and the fact that we have made cash the plug will take care of this. Ⴜ In Excel programming terms, this formula becomes (for the year 5, but each previous year has the same type of equation): Max(G28 + G32-G35 -G37-G38,F36). As shown in the Exercises for this chapter, the model can easily accom- modate a situation in which there are minimum cash balances. 5.9 Incorporating a Target Debt/Equity Ratio into a Pro Forma Another change we might want to make in our model relates to the plug. Suppose that the fi rm has a target ratio of debt to equity: In each of the years 1–5 it wants the ratio of debt/equity on the balance sheet to conform to a certain ratio. This situation is illustrated in the following example: 149 Pro Forma Financial Statement Modeling Row 41 of the spreadsheet shows the target debt/equity ratio in each of years 1–5. The fi rm wants to lower its current debt/equity ratio of 53% to 30% over the next 2 years. The relevant changes to the equations of our initial model are the following: • Debt = Target debt/Equity ratio * (Stock + Retained earnings) • Stock = Total assets – Current liabilities – Debt – Accumulated retained earnings Note that the fi rm will issue new debt years 4 and 5; in year 1 the stock account grows (indicating that new equity is issued), whereas in subsequent years stock decreases (indicating a repurchase of equity). 1 23456789 1011121314151617181920212223242526272829303132333435363738394041AB C D E F G H Sales growth 10% Current assets/Sales 15% Current liabilities/Sales 8% Net fixed assets/Sales 77% Costs of goods sold/Sales 50% Depreciation rate 10% Interest rate on debt 10.00% Interest paid on cash & marketable securities 8.00% Tax rate 40% Dividend payout ratio 60% Year 0 1 2 3 4 5 Income statementSales 1,000 1,100 1,210 1,331 1,464 1,611 Costs of goods sold (500) (550) (605) (666) (732) (805) Interest payments on debt (32) (30) (29) (28) (29) (32) Interest earned on cash & marketable securities 6 6 6 6 6 6 Depreciation (100) (117) (137) (161) (189) (220) Profit before tax 374 409 445 483 521 560 Taxes (150) (164) (178) (193) (208) (224) Profit after tax 225 246 267 290 313 336 Dividends (135) (147) (160) (174) (188) (202) Retained earnings 90 98 107 116 125 134 Balance sheetCash and marketable securities 80 80 80 80 80 80 Current assets 150 165 182 200 220 242 Fixed assets At cost 1,070 1,264 1,486 1,740 2,031 2,364 Depreciation (300) (417) (554) (715) (904) (1,124) Net fixed assets 770 847 932 1,025 1,127 1,240 Total assets 1,000 1,092 1,193 1,305 1,427 1,562 Current liabilities 80 88 97 106 117 129 Debt 320 287 284 276 302 331 <-- =G41*(G37+G38) Stock 450 469 457 451 412 372 <-- =G33-G35-G36-G38 Accumulated retained earnings 150 248 355 471 596 730 Total liabilities and equity 1,000 1,092 1,193 1,305 1,427 1,562 Target debt/equity ratio 0.53 0.40 0.35 0.30 0.30 0.30TARGET DEBT/EQUITY RATIO Cash is fixed, ratio of debt /equity changes in each year Initial (year 0) debt/equity ratio: =B36/(B37+B38) 150 Chapter 5 5.10 Project Finance: Debt Repayment Schedules Here is another use for pro forma modeling: In a typical case of so-called “project fi nance,” the fi rm borrows money in order to fi nance a project. The borrowing often comes with strings attached: • The fi rm is not allowed to pay any dividends until the debt is paid off. • The fi rm is not allowed to issue any new equity. • The fi rm must pay back the debt over a specifi ed period. The following simplifi ed example uses a variation of the version of our basic model with cash balances. A new fi rm or project is set up; in year 0: • The fi rm has assets of 2,200, which are fi nanced with 200 of current liabili- ties, 1,100 of equity, and 1,000 of debt. • The debt must be paid off in equal installments of principal over the next 5 years. Until the debt is paid off, the fi rm is not allowed to pay dividends (if there is extra cash, this will go into a cash and marketable securities account). 151 Pro Forma Financial Statement Modeling The debt repayment terms are incorporated into the model by simply speci- fying the debt balances at the end of each year. Since the fi rm is assumed to issue no new equity (in accordance with the covenants on the lending), it follows that the model ’ s plug cannot be on the liabilities side of the balance sheet. In our model the plug is the cash and marketable securities account. The model incorporates one other assumption often made about fi xed assets: It assumes that the net fi xed assets stay constant over the life of the project. Essentially this means that the depreciation accurately refl ects the capital maintenance of the fi xed assets. As you can see from looking at rows 29–31 above, this means that the fi xed assets at cost grow each year by the increase in asset depreciation. It also means that there is no net cash fl ow from depreciation: 1 2345 6 789 101112131415 16 1718192021222324 25 2627282930313233 34 35363738H G F E D C B A % 5 1 h t w o r g s e l a S % 5 1 s e l a S / s t e s s a t n e r r u C % 8 s e l a S / s e i t i l i b a i l t n e r r u C % 5 4 s e l a S / d l o s s d o o g f o s t s o C % 0 1 e t a r n o i t a i c e r p e D % 0 0 . 0 1 t b e d n o e t a r t s e r e t n I Interest paid on cash and marketable securities 8.00% % 0 4 e t a r x a T f f o d i a p s i t b e d e h t l l a l i t n u s d n e d i v i d o N - - < % 0 o i t a r t u o y a p d n e d i v i D 5 4 3 2 1 0 r a e Y Income statement 1 1 0 , 2 9 4 7 , 1 1 2 5 , 1 3 2 3 , 1 0 5 1 , 1 s e l a S ) 5 0 9 ( ) 7 8 7 ( ) 4 8 6 ( ) 5 9 5 ( ) 8 1 5 ( d l o s s d o o g f o s t s o C ) 0 1 ( ) 0 3 ( ) 0 5 ( ) 0 7 ( ) 0 9 ( t b e d n o s t n e m y a p t s e r e t n I 0 4 1 2 9 3 1 s e i t i r u c e s e l b a t e k r a m d n a h s a c n o d e n r a e t s e r e t n I ) 4 1 3 ( ) 4 8 2 ( ) 7 5 2 ( ) 3 3 2 ( ) 1 1 2 ( n o i t a i c e r p e D 2 2 8 9 6 6 9 3 5 8 2 4 3 3 3 x a t e r o f e b t i f o r P ) 9 2 3 ( ) 8 6 2 ( ) 6 1 2 ( ) 1 7 1 ( ) 3 3 1 ( s e x a T 3 9 4 1 0 4 3 2 3 7 5 2 0 0 2 x a t r e t f a t i f o r P 0 0 0 0 0 s d n e d i v i D 3 9 4 1 0 4 3 2 3 7 5 2 0 0 2 s g n i n r a e d e n i a t e R Balance sheet 1 3 G - 7 2 G - 8 3 G = - - < 3 3 6 9 5 3 3 7 1 4 6 9 1 0 s e i t i r u c e s e l b a t e k r a m d n a h s a C 2 0 3 2 6 2 8 2 2 8 9 1 3 7 1 0 0 2 s t e s s a t n e r r u C Fixed assets 9 9 2 , 3 5 8 9 , 2 0 0 7 , 2 3 4 4 , 2 1 1 2 , 2 0 0 0 , 2 t s o c t A 2 / ) 9 2 F + 9 2 G ( * 6 $ B $ - 0 3 F = - - < ) 9 9 2 , 1 ( ) 5 8 9 ( ) 0 0 7 ( ) 3 4 4 ( ) 1 1 2 ( 0 n o i t a i c e r p e D e g n a h c t ' n o d A F N - - < 0 0 0 , 2 0 0 0 , 2 0 0 0 , 2 0 0 0 , 2 0 0 0 , 2 0 0 0 , 2 s t e s s a d e x i f t e N Total assets 2,200 2,192 2,262 2,401 2,621 2,935 1 6 1 0 4 1 2 2 1 6 0 1 2 9 0 0 1 s e i t i l i b a i l t n e r r u C 5 / 5 3 $ B $ - 5 3 F = - - < 0 0 0 2 0 0 4 0 0 6 0 0 8 0 0 0 , 1 t b e D 0 0 1 , 1 0 0 1 , 1 0 0 1 , 1 0 0 1 , 1 0 0 1 , 1 0 0 1 , 1 k c o t S 4 7 6 , 1 1 8 1 , 1 0 8 7 6 5 4 0 0 2 0 s g n i n r a e d e n i a t e r d e t a l u m u c c A Total liabilities and equity 2,200 2,192 2,262 2,401 2,621 2,935PROJECT FINANCE No dividends, debt repayment schedule fixed, net fixed assets constant 152 Chapter 5 In this example, the fi rm has no problem in making its debt principal repay- ments. As credit analysts, we might be interested in how the fi rm ’ s ability to meet its payments is affected by the various parameter values. In the following example we have increased the ratio of COGS/sales. With the new parameter values, the fi rm can no longer meet its debt repayments in years 1–3. This fact can be seen in the pro forma: In years 1–4 the balances of cash and marketable securities are negative, indicating that—in order to make the repayment of the loan principal—the fi rm had to borrow money. 8 41 42 43 444546 47 4849 50H G F E D C B A FREE CASH FLOW CALCULATION 5 4 3 2 1 0 r a e Y 3 9 4 1 0 4 3 2 3 7 5 2 0 0 2 x a t r e t f a t i f o r P 4 1 3 4 8 2 7 5 2 3 3 2 1 1 2 n o i t a i c e r p e d k c a b d d A ) 9 3 ( ) 4 3 ( ) 0 3 ( ) 6 2 ( 8 2 s t e s s a t n e r r u c n i e s a e r c n i t c a r t b u S 1 2 8 1 6 1 4 1 ) 8 ( s e i t i l i b a i l t n e r r u c n i e s a e r c n i k c a b d d A ) 4 1 3 ( ) 4 8 2 ( ) 7 5 2 ( ) 3 3 2 ( ) 1 1 2 ( t s o c t a s t e s s a d e x i f n i e s a e r c n i t c a r t b u S 6 8 1 0 3 2 4 4 5 t b e d n o t s e r e t n i x a t - r e t f a k c a b d d A Subtract after-tax interest on cash and mkt. securities (0) (2) (6) (13) (24) Free cash flow 273 285 334 391 457Cash flow generated by depreciation equals capital expenditures. 8. From the point of view of corporate fi nance, positive balances of cash are like negative bal- ances of debt. Thus, when the cash is negative, it is equivalent to the fi rm having borrowed money. 153 Pro Forma Financial Statement Modeling 5.11 Calculating the Return on Equity We can use the pro forma models illustrated in this chapter to compute the anticipated return on equity. Look at the previous example: Equity owners in the project have to pay 1,100 in year 0. During years 1–4 they get no payoffs, but in year 5 they own the company. Suppose that the book value of the assets accurately refl ects the market value. Then at the end of year 5 the equity in the fi rm is worth stock + accumulated retained earnings = 2,255. The return on the equity investment (ROE) is calculated as follows: 1 2 3 456789 1011121314151617 18 192021222324 25 262728 29 3031 32 333435363738H G F E D C B A % 5 1 h t w o r g s e l a S % 5 1 s e l a S / s t e s s a t n e r r u C % 8 s e l a S / s e i t i l i b a i l t n e r r u C % 5 5 s e l a S / d l o s s d o o g f o s t s o C % 0 1 e t a r n o i t a i c e r p e D % 0 0 . 0 1 t b e d n o e t a r t s e r e t n I Interest paid on cash and marketable securities 8.00% % 0 4 e t a r x a T f f o d i a p s i t b e d e h t l l a l i t n u s d n e d i v i d o N - - < % 0 o i t a r t u o y a p d n e d i v i D 5 4 3 2 1 0 r a e Y Income statement 1 1 0 , 2 9 4 7 , 1 1 2 5 , 1 3 2 3 , 1 0 5 1 , 1 s e l a S ) 6 0 1 , 1 ( ) 2 6 9 ( ) 6 3 8 ( ) 7 2 7 ( ) 3 3 6 ( d l o s s d o o g f o s t s o C ) 0 1 ( ) 0 3 ( ) 0 5 ( ) 0 7 ( ) 0 9 ( t b e d n o s t n e m y a p t s e r e t n I 4 ) 4 ( ) 7 ( ) 6 ( ) 2 ( s e i t i r u c e s e l b a t e k r a m d n a h s a c n o d e n r a e t s e r e t n I ) 4 1 3 ( ) 4 8 2 ( ) 7 5 2 ( ) 3 3 2 ( ) 1 1 2 ( n o i t a i c e r p e D 5 8 5 9 6 4 0 7 3 7 8 2 5 1 2 x a t e r o f e b t i f o r P ) 4 3 2 ( ) 7 8 1 ( ) 8 4 1 ( ) 5 1 1 ( ) 6 8 ( s e x a T 1 5 3 1 8 2 2 2 2 2 7 1 9 2 1 x a t r e t f a t i f o r P 0 0 0 0 0 s d n e d i v i D 1 5 3 1 8 2 2 2 2 2 7 1 9 2 1 s g n i n r a e d e n i a t e R Balance sheet g u l p e h t , 1 3 G - 7 2 G - 8 3 G = - - < 4 1 1 ) 8 1 ( ) 3 8 ( ) 2 9 ( ) 2 5 ( 0 s e i t i r u c e s e l b a t e k r a m d n a h s a C 2 0 3 2 6 2 8 2 2 8 9 1 3 7 1 0 0 2 s t e s s a t n e r r u C Fixed assets 9 9 2 , 3 5 8 9 , 2 0 0 7 , 2 3 4 4 , 2 1 1 2 , 2 0 0 0 , 2 t s o c t A ) 9 9 2 , 1 ( ) 5 8 9 ( ) 0 0 7 ( ) 3 4 4 ( ) 1 1 2 ( 0 n o i t a i c e r p e D e g n a h c t ' n o d A F N - - < 0 0 0 , 2 0 0 0 , 2 0 0 0 , 2 0 0 0 , 2 0 0 0 , 2 0 0 0 , 2 s t e s s a d e x i f t e N Total assets 2 , 2 0 02 , 1 2 12 , 1 0 72 , 1 4 52 , 2 4 42 , 4 1 6 1 6 1 0 4 1 2 2 1 6 0 1 2 9 0 0 1 s e i t i l i b a i l t n e r r u C 0 0 0 2 0 0 4 0 0 6 0 0 8 0 0 0 , 1 t b e D 0 0 1 , 1 0 0 1 , 1 0 0 1 , 1 0 0 1 , 1 0 0 1 , 1 0 0 1 , 1 k c o t S 5 5 1 , 1 4 0 8 3 2 5 1 0 3 9 2 1 0 s g n i n r a e d e n i a t e r d e t a l u m u c c A Total liabilities and equity 2,200 2,121 2,107 2,145 2,244 2,416PROJECT FINANCE With these parameters the project cannot pay off its debt 56 57 58 59H G F E D C B A RETURN ON EQUITY (ROE) 5 4 3 2 1 0 r a e Y - 0 0 1 , 1 - w o l f h s a c y t i u q E - - - 2,255 <-- =G22+G36+G37 ) 8 5 G : 8 5 B ( R R I = - - < % 4 4 . 5 1 ) E O R ( Y T I U Q E N O N R U T E R 154 Chapter 5 Note that this equity return increases as the equity investment decreases. 9 Consider the case where the fi rm initially borrows 1,500 and the equity owners invest 600: 56 57 58 59H G F E D C B A RETURN ON EQUITY (ROE) 5 4 3 2 1 0 r a e Y - 0 0 6 - w o l f h s a c y t i u q E - - - 1,602 <-- =G22+G36+G37 ) 8 5 G : 8 5 B ( R R I = - - < % 0 7 . 1 2 ) E O R ( Y T I U Q E N O N R U T E R As the following data table and graph show, the less the initial equity invest- ment, the greater the equity return: 61 6263 64 65 66676869 70 71 727374 75 7677J I H G F E D C B A Data table: ROE as a function of initial 21.70% <-- =B59 , data table header equity investment 2,000 10.80% 1,800 11.43% 1,600 12.19% 1,400 13.14%1,200 14.36%1,000 15.98% 800 18.26% 600 21.70% 400 27.61% 200 40.76%ROE as a Function of Initial Equity Investment 0%5%10%15%20%25%30%35%40%45% 0 250 500 750 1,000 1,250 1,500 1,750 2,000 Equity investment ROE The ROE in Our First Full Model The model in sections 5.3–5.5 has annual dividends. If we use the mid-year discounting explained in section 5.5 to value the fi rm, we can compute the return on equity (ROE) of an investor who purchases the fi rm at date 0 at its imputed equity valuation, gets 5 years of dividends, and sells it for the imputed terminal value of the equity: 9. Interesting but not surprising: As the equity investment goes down, the project becomes more leveraged and hence more risky for the equity investors. The increased return should compensate the equity holders for this extra risk. The really interesting question (not answered here) is whether the increased return is in fact a compensation for the riskiness. 155 Pro Forma Financial Statement Modeling 5.12 Tax Loss Carryforwards Firms can apply accumulated losses to reduce their current tax liabilities. In this section we show how to model such tax loss carryforwards in our pro forma model. We make a number of changes in our basic model, highlighted below: • We assume that in addition to costs of goods sold that are a proportion of sales, the fi rm also has an annual fi xed cost component of sales (in the Excel clip below, this number is 440 in cell B6). • We assume that in year 0 the fi rm has an initial accumulated tax loss of 100 (cell B11). 1 2 3 4 56789 1011121314 15 5152 53 54 555657 58 59606162 63 6465666768 69 70 7172 73 74H G F E D C B A % 0 1 h t w o r g s e l a S % 5 1 s e l a S / s t e s s a t n e r r u C % 8 s e l a S / s e i t i l i b a i l t n e r r u C % 7 7 s e l a S / s t e s s a d e x i f t e N % 0 5 s e l a S / d l o s s d o o g f o s t s o C % 0 1 e t a r n o i t a i c e r p e D % 0 0 . 0 1 t b e d n o e t a r t s e r e t n I Interest paid on cash and marketable securities 8.00% % 0 4 e t a r x a T % 0 4 o i t a r t u o y a p d n e d i v i D Y 5 4 3 2 1 0 r a e Income statement 0 0 0 , 1 s e l aS 1,100 1,210 1,331 1,464 1,611 Valuing the firm (mid-year discounting) % 0 2 l a t i p a c f o t s o c e g a r e v a d e t h g i e W % 5 e t a r h t w o r g w o l f h s a c e e r f m r e t - g n o L Y 5 4 3 2 1 0 r a e 8 2 2 4 1 2 1 0 2 8 8 1 6 7 1 F C F Terminal value 1,598 <-- =G58*(1+B55)/(B54-B55) 6 2 8 , 1 4 1 2 1 0 2 8 8 1 6 7 1 l a t o T 5 . 0 ^ ) 4 5 B + 1 ( * ) 0 6 G : 0 6 C , 4 5 B ( V P N = - - < 8 4 3 , 1 0 6 w o r f o V P N , e u l a v e s i r p r e t n E Add in initial (year 0) cash and mkt. securities 80 <-- =B27 2 6 B + 3 6 B = - - < 8 2 4 , 1 0 r a e y , e u l a v t e s s A 6 3 B - = - - < ) 0 2 3 ( y a d o t t b e d s ' m r i f f o e u l a v t u o t c a r t b u S 5 6 B + 4 6 B = - - < 8 0 1 , 1 e u l a v y t i u q E RETURN ON EQUITY (ROE) Y 5 4 3 2 1 0 r a e 8 9 ) 8 0 1 , 1 ( s d n e d i v i d d e t c e j o r P 108 118 129 141 Anticipated equity value, year 5 1,737 <-- Terminal value + year 5 cash - year 5 debt ) 2 7 G : 1 7 G ( M U S = - - < 8 7 8 , 1 9 2 1 8 1 1 8 0 1 8 9 ) 8 0 1 , 1 ( w o l f h s a c y t i u q E ) 3 7 G : 3 7 B ( R R I = - - < % 9 2 . 8 1 ) E O R ( Y T I U Q E N O N R U T E RCOMPUTING THE ROE IN THE FIRST FINANCIAL MODEL 156 Chapter 5 In each year we model the accumulated tax loss (row 29). If the previous year exhibited a loss (for example, year 1, with a loss of 18), then the accu- mulated loss increased by that amount (cell D29). If the previous year exhibits a gain (year 2), then the accumulated tax loss carryforward gets closer to zero (cell D30). At some point (year 5 in our example), tax losses may be com-pletely used up. In any year, the taxable profi ts are given in row 30. If the accumulated tax loss carryforward is greater than that year ’ s profi t, then there is no tax. Oth- erwise only the difference in income is taxed (consider year 4, for example). These differences are refl ected in the effective tax rate in row 31. The effective tax rate is used in computing the free cash fl ows, as shown below: 1 2 3456789 101112131415161718 19 2021222324252627 28 293031H G F E D C B A % 1 1 h t w o r g s e l a S % 5 1 s e l a S / s t e s s a t n e r r u C % 8 s e l a S / s e i t i l i b a i l t n e r r u C % 5 4 s e l a S / s t e s s a d e x i f t e N 0 4 4 s t s o c d e x i F % 5 5 s e l a S / d l o s s d o o g f o s t s o C % 0 1 e t a r n o i t a i c e r p e D % 0 0 . 0 1 t b e d n o e t a r t s e r e t n I Interest paid on cash and marketable securities 8.00% 0 0 1 - d r a w r o f y r r a c s s o l - x a t l a i t i n I % 0 4 e t a r x a T % 0 4 o i t a r t u o y a p d n e d i v i D 5 4 3 2 1 0 r a e Y Income statement 0 0 0 , 1 s e l aS 1,110 1,232 1,368 1,518 1,685 ) 0 4 4 ( s t s o c d e x i F (440) (440) (440) (440) <-- =-$B$6 ) 1 1 6 ( d l o s s d o o g f o s t s o C (678) (752) (835) (927) 3 t b e d n o s t n e m y a p t s e r e t n I 9 15 21 27 1 s e i t i r u c e s e l b a t e k r a m d n a h s a c n o d e n r a e t s e r e t n I (8) (14) (16) (17) <-- =$B$10*AVERAGE(F34:G34) ) 2 8 ( n o i t a i c e r p e D (96) (112) (130) (152) ) 8 1 ( x a t e r o f e b t i f o r P 20 65 118 177 - s e x a T - - (34) (71) <-- =-MAX($B$12*G30,0) ) 8 1 ( x a t r e t f a t i f o r P 20 65 84 106 - s d n e d i v i D 8 26 34 42 <-- =IF(G25<0,0,$B$13*G25) ) 8 1 ( s g n i n r a e d e n i a t e R 27 91 118 149 ) 0 0 1 ( s r a e y s u o i v e r p m o r f d r a w r o f y r r a c s s o l x a T (118) (99) (34) - <-- =MIN(F29+F23,0) ) 0 , 9 2 G + 3 2 G ( X A M = - - < 7 7 1 4 8 0 0 0 0 t i f o r p e l b a x a T 3 2 G / 4 2 G - = - - < % 0 4 % 9 2 % 0 % 0 % 0 e t a r x a t e v i t c e f f EMODELING TAX LOSS CARRYFORWARDS 48 495051 52 53545556 57H G F E D C B A 5 4 3 2 1 0 r a e Y Free cash flow calculation 6 0 1 4 8 5 6 0 2 ) 8 1 ( x a t r e t f a t i f o r P 2 5 1 0 3 1 2 1 1 6 9 2 8 n o i t a i c e r p e d k c a b d d A ) 5 2 ( ) 3 2 ( ) 0 2 ( ) 8 1 ( ) 7 1 ( s t e s s a t n e r r u c n i e s a e r c n i t c a r t b u S 3 1 2 1 1 1 0 1 9 s e i t i l i b a i l t n e r r u c n i e s a e r c n i k c a b d d A ) 7 2 2 ( ) 8 9 1 ( ) 3 7 1 ( ) 1 5 1 ( ) 1 3 1 ( t s o c t a s t e s s a d e x i f n i e s a e r c n i t c a r t b u S 0 2 G * ) 1 3 $ C $ - 1 ( - = - - < ) 7 2 ( ) 1 2 ( ) 5 1 ( ) 9 ( ) 3 ( t b e d n o t s e r e t n i x a t - r e t f a k c a b d d A Subtract after-tax interest on cash and mkt. securities (1) 8 14 16 17 <-- =-(1-$C$31)*G21 Free cash flow (79) (45) (7) 1 9 157 Pro Forma Financial Statement Modeling 5.13 Summary Pro forma modeling is one of the basic skills of corporate fi nancial analysis, a devious combination of fi nance, the implementation of accounting rules, and spreadsheet skills. In order to be useful, fi nancial models must match the situ-ation at hand, but they must also be simple enough so that the user can easily understand why the results happen (be they valuations, credit-worthiness, or simply commonsense predictions of how a fi rm or project might look several years down the road). Exercises 1. Here ’ s a basic exercise that will help you understand what ’ s going on in the modeling of fi nancial statements. Replicate the model in section 5.1. That is, enter the correct formulas for the cells and see that you get the same results as the book. (This turns out to be more of an exercise in accounting than in fi nance. If you ’ re like many fi nancial modelers, you ’ ll see that there are some aspects of accounting that you ’ ve forgotten!) 2. The model of section 5.1 includes costs of goods sold but not selling, general, and admin- istrative (SG&A) expenses. Suppose that the fi rm has $200 of these expenses each year, irrespective of the level of sales. a. Change the model to accommodate this new assumption. Show the resulting profi t and loss statements, balance sheets, the free cash fl ows, and the valuation. b. Do a data table in which you show the sensitivity of the equity value to the level of SG&A. Let SG&A vary from $0 per year to $600 per year. 3. Suppose that in the model of section 5.1 the fi xed assets at cost for years 1–5 are 100% of sales (in the current model, it is net fi xed assets which are a function of sales). Change the model accordingly. Show the resulting profi t and loss statements, balance sheets, and free cash fl ows for years 1–5. (Assume that in year 0, the fi xed assets accounts are as shown in section 5.2. Note that since year 0 is given—it is the current situation of the fi rm, whereas years 1–5 are the predictions for the future—there is no need for the year 0 ratios to conform to the predicted ratios for years 1–5.) 4. Back to the basic model of section 5.1. Suppose that the fi xed assets at cost follow the following step function: Fixed Assets at CostSales Sales Sales =∗≤ +∗ −100 1 200 1 200 90 1%, ,%if ,, , , ,% , ,200 1 200 1 400 1 380 80 1 400 1 400() <≤ +∗ − () >Sales Sales Sales⎧ ⎧ ⎨⎪ ⎩⎪ Incorporate this function into the model. 5. Consider the model in section 5.6 (where debt is the plug). a. Suppose that the fi rm has 1,000 shares and that it decides to pay, in year 1, a dividend per share of 15 cents. In addition, suppose that it wants this dividend per share to grow in subsequent years by 12% per year. Incorporate these changes into the pro forma model. 158 Chapter 5 b. Do a sensitivity analysis in which you show the effect on the debt/equity ratio of the annual growth rate of dividends. Vary this rate from 0% to 18%, in steps of 2%. For this exercise, defi ne debt as net debt (i.e., debt – cash and marketable securities). (Note that since the WACC = 20%, the growth rate must be less than 20%.) 6. In the model of section 5.6, assume that the fi rm needs to have minimum cash balances of 25 at the end of each year. Introduce this constraint into the model. 7. In the valuation exercise of section 5.4, the terminal value is calculated using a Gordon dividend model on the cash fl ows. Replace this terminal value by the year 5 book value of debt + equity. This means that you are essentially assuming that the book value correctly predicts the market value. 8. Repeat the above exercise, but this time replace the terminal value by an EBITDA (earn- ings before interest, taxes, depreciation, and amortization) ratio times year-5 anticipated EBITDA. Show a graph of the equity value of the fi rm as a function of the assumed year 5 EBITDA ratio, varying this ratio from 6–14. 9. In the project fi nance pro forma of section 5.8 it is assumed that the fi rm pays off its initial debt of 1,000 in equal installments of principal over 5 years. Change this assumption and assume instead that the fi rm pays off its debt in equal payments of interest and principal over 5 years. Hint: This means that you have to use the PMT function to fi nd the annual payments, then set up a loan table (as in Chapter 1) to split the annual payments into an interest and repayment of principal. Alternatively you can use the functions PPMT and IPMT dis- cussed in Chapter 34. 10. This problem introduces the concept of “sustainable dividends”: The fi rm whose fi nancials are illustrated below wishes to maintain cash balances of 80 over the next 5 years. It also desires to issue neither additional stock nor make any changes in its current level of debt. This means that dividends are the plug in the balance sheet. Model this situation (note that for some parameter levels you may get “negative dividends,” indicating that there is no sustainable level of dividends). 159 Pro Forma Financial Statement Modeling 1 2 345 6 78 9 10 11 12 1314 15 1617 18 192021 22 2324 25 2627 28 2930 31 323334 35 3637 38G F E D C B A % 0 1 h t w o r g s e l a S % 5 1 s e l a S / s t e s s a t n e r r u C % 8 s e l a S / s e i t i l i b a i l t n e r r u C % 7 7 s e l a S / s t e s s a d e x i f t e N % 0 5 s e l a S / d l o s s d o o g f o s t s o C % 0 1 e t a r n o i t a i c e r p e D % 0 0 . 0 1 t b e d n o e t a r t s e r e t n I Interest paid on cash & marketable securities 8.00% % 0 4 e t a r x a T 5 4 3 2 1 0 r a e Y Income statement 0 0 0 , 1 s e l aS ) 0 0 5 ( d l o s s d o o g f o s t s o C ) 2 3 ( t b e d n o s t n e m y a p t s e r e t n I Interest earned on cash & marketable securities 6 ) 0 0 1 ( n o i t a i c e r p e D 4 7 3 x a t e r o f e b t i f o r P ) 0 5 1 ( s e x a T 5 2 2 x a t r e t f a t i f o r P ) 0 9 ( s d n e d i v i D 5 3 1 s g n i n r a e d e n i a t e R Balance sheet 0 8 s e i t i r u c e s e l b a t e k r a m d n a h s a C 80 80 80 80 80 0 5 1 s t e s s a t n e r r u C Fixed assets 0 7 0 , 1 t s o c t A ) 0 0 3 ( n o i t a i c e r p e D 0 7 7 s t e s s a d e x i f t e N Total assets 1,000 0 8 s e i t i l i b a i l t n e r r u C 0 2 3 t b eD 320 320 320 320 320 0 5 4 k c o tS 450 450 450 450 450 0 5 1 s g n i n r a e d e n i a t e r d e t a l u m u c c A Total liabilities and equity 1,000 SUSTAINABLE DIVIDENDS--Template 6 Building a Pro Forma Model: The Case of Caterpillar 6.1 Overview In this chapter we implement the pro forma modeling techniques discussed in Chapter 5 to build a fi nancial model for Caterpillar, Inc. Caterpillar, as most readers of this book will surely know, is a world leader in the manufacture and sales of large-scale earth-moving equipment. Our energies in this chapter will be to understand Caterpillar ’ s fi nancial statements for the years 2007–2011 in order to fi t them into the format illus- trated in Chapter 5. This is not a trivial task, and it requires a combination of understanding of CAT ’ s business, modeling skills, and a small dose of fi nancial deviousness (otherwise we would never get to the end of the exercise). Warning: This Chapter May Be Deleterious to Your Mental Health 1 The material in this chapter is irritating and complicated but not diffi cult . Why irritating? Because pro forma fi nancial models require a lot of assumptions and analysis. Everything is related to almost everything else. And because they require you to recall some basic accounting concepts. This is all irritating! However, the case in this chapter illustrates one of the most important cor- porate fi nance applications: The valuation of a company in the framework of its accounting and fi nancial parameters. Such valuations are the core of most business plans, corporate fi nancial planning models, and (intelligent) analyst valuations. 1. It certainly affected the author ’ s mental stability … 162 Chapter 6 1 2 3 4 5 67 8 9 10 11 12 13 1415 16 17 18192021 22 23 2425 2627 28 2930F E D C B A Sales and revenues 2007 2008 2009 2010 2011 2 9 3 , 7 5 7 6 8 , 9 3 0 4 5 , 9 2 4 4 0 , 8 4 2 6 9 , 1 4 s m e t s y S r e w o P d n a y r e n i h c a M f o s e l a S 6 4 7 , 2 1 2 7 , 2 6 5 8 , 2 0 8 2 , 3 6 9 9 , 2 s t c u d o r P l a i c n a n i F f o s e u n e v e R 8 3 1 , 0 6 8 8 5 , 2 4 6 9 3 , 2 3 4 2 3 , 1 5 8 5 9 , 4 4 s e u n e v e r d n a s e l a s l a t o T Operating costs: 8 7 5 , 3 4 7 6 3 , 0 3 6 8 8 , 3 2 5 1 4 , 8 3 6 2 6 , 2 3 d l o s s d o o g f o t s o C 3 0 2 , 5 8 4 2 , 4 5 4 6 , 3 9 9 3 , 4 1 2 8 , 3 s e s n e p x e e v i t a r t s i n i m d a d n a l a r e n e g , g n i l l e S 7 9 2 , 2 5 0 9 , 1 1 2 4 , 1 8 2 7 , 1 4 0 4 , 1 s e s n e p x e t n e m p o l e v e d d n a h c r a e s e R 6 2 8 4 1 9 5 4 0 , 1 3 5 1 , 1 2 3 1 , 1 s t c u d o r P l a i c n a n i F f o e s n e p x e t s e r e t n I 1 8 0 , 1 1 9 1 , 1 2 2 8 , 1 1 8 1 , 1 4 5 0 , 1 s e x a t e m o c n i d e r r e f e D 5 8 9 , 2 5 5 2 6 , 8 3 9 1 8 , 1 3 6 7 8 , 6 4 7 3 0 , 0 4 s t s o c g n i t a r e p o l a t o T 3 5 1 , 7 3 6 9 , 3 7 7 5 8 4 4 , 4 1 2 9 , 4 t i f o r p g n i t a r e p O 6 9 3 3 4 3 9 8 3 4 7 2 8 8 2 s t c u d o r p l a i c n a n i f g n i d u l c x e e s n e p x e t s e r e t n I 2 3 - 0 3 1 1 8 3 7 2 3 7 5 3 ) e s n e p x e ( e m o c n i r e h t O 5 2 7 , 6 0 5 7 , 3 9 6 5 1 0 5 , 4 0 9 9 , 4 s e x a t e r o f e b t i f o r p d e t a d i l o s n o C 0 2 7 , 1 8 6 9 0 7 2 - 3 5 9 5 8 4 , 1 s e x a t e m o c n i r o f ) t i f e n e b ( n o i s i v o r P 5 0 0 , 5 2 8 7 , 2 9 3 8 8 4 5 , 3 5 0 5 , 3 s e i n a p m o c d e t a d i l o s n o c f o t i f o r P Equity in profit (loss) of unconsolidated affiliated companies 73 37 -12 -24 -24 1 8 9 , 4 8 5 7 , 2 7 2 8 5 8 5 , 3 8 7 5 , 3 s e i n a p m o c d e t a i l i f f a d n a d e t a d i l o s n o c f o t i f o r P Less: Profit (loss) attributable to noncontrolling interests 37 28 -68 58 53 8 2 9 , 4 0 0 7 , 2 5 9 8 7 5 5 , 3 1 4 5 , 3 t i f o r PCATERPILLAR PROFIT AND LOSS, 2007-2011 6.2 Caterpillar ’ s Financial Statements, 2007–2011 Caterpillar ’ s fi nancial statements for the fi ve years 2007–2011 are given below: 163 Building a Pro Forma Model: The Case of Caterpillar 1 2 3 4 5 6 7 8 9 1011 12 13 14 1516 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58F E D C B A Assets 2007 2008 2009 2010 2011 Current assets Cash and short-term investments 1,122 2,736 4,867 3,592 3,057 Receivables--trade and othe r 8,249 9,397 5,611 8,494 10,285 1 3 7 , 8 3 0 5 , 7 e c n a n i f - - s e l b a v i e c e R 8,301 8,298 7,668 Deferred and refundable income taxes 816 1,223 1,216 931 1,580 Prepaid expenses and other current assets 583 765 862 908 994 1 8 7 , 8 4 0 2 , 7 s e i r o t n e v n I 6,360 9,587 14,544 Total current assets 25,477 31,633 27,217 31,810 38,128 Property, plant and equipment--net 9,997 12,524 12,386 12,539 14,395 Long-term receivables--trade and other 685 1,479 971 793 1,130 Long-term receivables--finance 13,462 14,264 12,279 11,264 11,948 Investments in unconsolidated affiliated 4 9 8 9 5 s e i n a p m o c 105 164 133 Noncurrent deferred and refundable income 1 1 3 , 3 3 5 5 , 1 s e x a t 2,714 2,493 2,157 1 1 5 5 7 4 s t e s s a e l b i g n a t n I 465 805 4,368 1 6 2 , 2 3 6 9 , 1 l l i w d o o G 2,269 2,614 7,080 5 0 7 , 1 2 2 9 , 1 s t e s s a r e h t O 1,632 1,538 2,107 Total assets 56,132 67,782 60,038 64,020 81,446 8 0 0 2 7 0 0 2 s e i t i l i b a i L 2009 2010 2011 Current liabilities Short-term borrowings 2 3 6 , 1 7 8 1 s m e t s y s r e w o p d n a e n i h c a M 433 204 93 7 7 5 , 5 1 8 2 , 5 s t c u d o r p l a i c n a n i F 3,650 3,852 3,895 7 2 8 , 4 3 2 7 , 4 e l b a y a p s t n u o c c A 2,993 5,856 8,161 1 2 1 , 4 8 7 1 , 3 s e s n e p x e d e u r c c A 2,641 2,880 3,386 Accrued wages, salaries and employee 2 4 2 , 1 6 2 1 , 1 s t i f e n e b 797 1,670 2,410 8 9 8 , 1 2 4 4 , 1 s e c n a v d a r e m o t s u C 1,217 1,831 2,691 3 5 2 5 2 2 e l b a y a p s d n e d i v i D 262 281 298 7 2 0 , 1 1 5 9 s e i t i l i b a i l t n e r r u c r e h t O 1,281 1,521 1,967 Long-term debt due within one yea r Machinery and power systems 180 456 302 495 558 6 3 0 , 5 2 5 9 , 4 s t c u d o r p l a i c n a n i F 5,399 3,430 5,102 Total current liabilities 22,245 26,069 18,975 22,020 28,561 Long-term debt due after one yea r Machinery and power systems 3,639 5,736 5,652 4,505 8,415 8 9 0 , 7 1 0 9 1 , 4 1 s t c u d o r p l a i c n a n i F 16,195 15,932 16,529 Liability for postemployment benefits 5,059 9,975 7,420 7,584 10,956 0 9 1 , 2 3 0 0 , 2 s e i t i l i b a i l r e h t O 2,496 2,654 3,583 Total liabilities 47,136 61,068 50,738 52,695 68,044 4 2 5 0 t s e r e t n i g n i l l o r t n o c n o n e l b a m e e d e R 477 461 473 Stockholders' equity Common stock of $1.00 parCommon stock (814,894,624 shares) 2,744 3,057 3,439 3,888 4,273 7 1 2 , 1 1 - 1 5 4 , 9 - t s o c t a k c o t s y r u s a e r T -10,646 -10,397 -10,281 Profit employed in the business 17,398 19,826 19,711 21,384 25,219 Accumulated and other comprehensive 9 7 5 , 5 - 8 0 8 , 1 - ) s s o l ( e m o c n i -3,764 -4,051 -6,328 3 0 1 3 1 1 s t s e r e t n i g n i l l o r t n o c n o N 83 40 46 Total shareholders equity 8,996 6,190 8,823 10,864 12,929 Total liabilities and equity 56,132 67,782 60,038 64,020 81,446 3 8 9 , 7 6 2 , 3 1 2 0 9 4 , 8 0 9 , 0 9 1 s e r a h s , k c o t s y r u s a e r T 190,171,905 176,071,910 167,361,280 4 4 3 , 3 3 5 , 7 4 6 4 1 7 , 2 2 8 , 8 3 6 9 1 7 , 2 2 7 , 4 2 6 1 4 6 , 6 2 6 , 1 0 6 4 3 1 , 6 8 9 , 3 2 6 g n i d n a t s t u o s e r a h s t e NCATERPILLAR BALANCE SHEETS, 2007-2011 164 Chapter 6 1 234 5 6 7 8 9 10 1112 13 141516 17 18 19 20 21 2223 24 252627 28 293031 32 3334 35 36 373839 40 4142 43 4445 46 474849 50F E D C B A Cash flow from operatin g 1 1 0 2 0 1 0 2 9 0 0 2 8 0 0 2 7 0 0 2 s e i t i v i t c a Profit of consolidated and affili ated companies 3,578 3,585 827 2,758 4,981 Adjustments for non-cash items: 7 2 5 , 2 6 9 2 , 2 6 3 3 , 2 0 8 9 , 1 7 9 7 , 1 n o i t a z i t r o m a d n a n o i t a i c e r p e D 7 5 4 9 6 4 7 3 1 5 5 3 2 6 1 r e h t O Changes in assets and liabilities, net of acquisitions and divestitures: 5 4 3 , 1 - 0 2 3 , 2 - 4 1 0 , 4 5 4 5 - 9 9 8 r e h t o d n a e d a r t — s e l b a v i e c e R 7 2 9 , 2 - 7 6 6 , 2 - 1 0 5 , 2 3 3 8 - 5 4 7 - s e i r o t n e v n I 5 5 5 , 1 0 7 5 , 2 4 3 0 , 2 - 4 - 7 8 3 e l b a y a p s t n u o c c A 8 0 3 7 1 1 5 0 5 - 0 6 6 1 3 2 s e s n e p x e d e u r c c A Accrued wages, salaries and employee benefits 576 286 -534 847 619 3 7 1 4 0 6 6 4 6 - 0 7 4 - 6 6 s e x a t e m o c n i d e r r e f e D 1 9 - 8 5 3 5 3 2 7 1 2 - 4 0 0 , 1 t e n , s t e s s a r e h t O 3 5 7 3 2 - 2 1 t e n , s e i t i l i b a i l r e h t O Net cash provided b y(used for ) operatin g activities 7,955 4,797 6,343 5,009 7,010 Cash flow from investing activities Capital expenditures—excluding equipment leased to others-1,700 -2,445 -1,348 -1,575 -2,515 Expenditures for equipment leased to others -1,340 -1,566 -968 -1,011 -1,409 Proceeds from disposals of leased assets and property, plant and equipment408 982 1,242 1,469 1,354 1 0 0 , 0 1 - 8 9 4 , 8 - 7 0 1 , 7 - 1 3 0 , 4 1 - 6 4 9 , 3 1 - s e l b a v i e c e r e c n a n i f o t s n o i t i d d A 4 7 8 , 8 7 8 9 , 8 8 8 2 , 9 7 1 7 , 9 5 8 9 , 0 1 s e l b a v i e c e r e c n a n i f f o s n o i t c e l l o C 7 0 2 6 1 0 0 1 9 4 9 6 6 8 s e l b a v i e c e r e c n a n i f f o e l a s m o r f s d e e c o r P Investments and acquisitions (net of cash acquired) -229 -117 -19 -1,126 -8,184 Proceeds from sale of businesses and investments (net of c 290 0 0 0 376 Proceeds from sale of available-for-sale securities 282 357 291 228 247 6 3 3 - 7 1 2 - 9 4 3 - 9 3 3 - 5 8 4 - s e i t i r u c e s e l a s - r o f - e l b a l i a v a n i s t n e m t s e v n I 0 4 - 2 3 1 8 2 1 - 7 9 1 1 6 4 t e n , r e h t O Net cash provided b y(used for ) investin g activities -4,408 -6,296 1,002 -1,595 -11,427 Cash flow from financing activities 9 5 1 , 1 - 4 8 0 , 1 - 9 2 0 , 1 - 3 5 9 - 5 4 8 - d i a p s d n e d i v i D 3 - 0 0 1 - 0 1 - 0 2 - s t s e r e t n i g n i l l o r t n o c n o n o t n o i t u b i r t s i D Common stock issued, including treasury shares reissued328 135 89 296 123 Payment for stock repurchase derivative contracts -56 -38 0 0 8 , 1 - 5 0 4 , 2 - d e s a h c r u p s e r a h s y r u s a e r T Excess tax benefit from stock-based compensation 155 56 21 153 189 8 - 2 3 1 - 6 - 0 0 s t s e r e t n i g n i l l o r t n o c n o n f o s n o i t i s i u q c A Proceeds from debt issued (original maturities greater than three months): 7 8 5 , 4 6 1 2 8 5 4 3 7 6 , 1 4 2 2 s m e t s y S r e w o P d n a y r e n i h c a M - 3 7 8 , 0 1 8 0 1 , 8 3 3 8 , 1 1 7 5 2 , 6 1 5 1 8 , 0 1 s t c u d o r P l a i c n a n i F - Payments on debt (original maturities greater than three months): 9 6 2 , 2 - 8 9 2 , 1 - 8 1 9 - 6 9 2 - 8 9 5 - s m e t s y S r e w o P d n a y r e n i h c a M - 4 2 3 , 8 - 3 6 1 , 1 1 - 9 6 7 , 1 1 - 3 4 1 , 4 1 - 0 9 2 , 0 1 - s t c u d o r P l a i c n a n i F - Short-term borrowings, net (original maturities three months or less)-297 2,074 -3,884 291 -43 Net cash provided b y(used for ) financin g activities -2,989 2,955 -5,215 -4,613 3,966 6 9 3 3 4 3 9 8 3 4 7 2 8 8 2 s t c u d o r p l a i c n a n i f g n i d u l c x e e s n e p x e t s e r e t n I % 8 5 . 5 2 % 1 8 . 5 2 % 5 4 . 7 4 - % 7 1 . 1 2 % 6 7 . 9 2 e t a r x a TCATERPILLAR, CONSOLIDATED STATEMENT OF CASH FLOWS, 2007-2011 165 Building a Pro Forma Model: The Case of Caterpillar Rewriting the Balance Sheet To more easily understand the balance sheet, we rewrite the balance sheets to combine the short- and long-term fi nancial debt items. We also write all the operating (i.e., non-fi nancial) current assets and operating current liabilities as one item. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 1617 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33F E D C B A Assets 2007 2008 2009 2010 2011 Current assetsCash and short-term investments 1,122 2,736 4,867 3,592 3,057 Operating current assets 24,355 28,897 22,350 28,218 35,071 Property, plant and equipment--net 9,997 12,524 12,386 12,539 14,395 8 7 0 , 3 1 7 5 0 , 2 1 0 5 2 , 3 1 3 4 7 , 5 1 7 4 1 , 4 1 s e l b a v i e c e r m r e t - g n o L Investments in unconsolidated affiliated 4 9 8 9 5 s e i n a p m o c 105 164 133 Noncurrent deferred and refundable income 1 1 3 , 3 3 5 5 , 1 s e x a t 2,714 2,493 2,157 1 1 5 5 7 4 s t e s s a e l b i g n a t n I 465 805 4,368 1 6 2 , 2 3 6 9 , 1 l l i w d o o G 2,269 2,614 7,080 5 0 7 , 1 2 2 9 , 1 s t e s s a r e h t O 1,632 1,538 2,107 Total assets 56,132 67,782 60,038 64,020 81,446 8 0 0 2 7 0 0 2 s e i t i l i b a i L 2009 2010 2011 3 1 9 , 8 1 9 3 0 , 4 1 1 9 1 , 9 8 6 3 , 3 1 5 4 6 , 1 1 s e i t i l i b a i l t n e r r u c g n i t a r e p O 2 9 5 , 4 3 8 1 4 , 8 2 1 3 6 , 1 3 5 3 5 , 5 3 9 2 4 , 8 2 t b e d l a i c n a n i F Liability for postemployment benefits 5,059 9,975 7,420 7,584 10,956 0 9 1 , 2 3 0 0 , 2 s e i t i l i b a i l r e h t O 2,496 2,654 3,583 Total liabilities 47,136 61,068 50,738 52,695 68,044 4 2 5 0 t s e r e t n i g n i l l o r t n o c n o n e l b a m e e d e R 477 461 473 Stockholders' equityCommon stock (814,894, 624 shares) 2,744 3,057 3,439 3,888 4,273 7 1 2 , 1 1 - 1 5 4 , 9 - t s o c t a k c o t s y r u s a e r T -10,646 -10,397 -10,281 Profit employed in the business 17,398 19,826 19,711 21,384 25,219 Accumulated and other comprehensive 9 7 5 , 5 - 8 0 8 , 1 - ) s s o l ( e m o c n i -3,764 -4,051 -6,328 3 0 1 3 1 1 s t s e r e t n i g n i l l o r t n o c n o N 83 40 46 Total shareholders equity 8,996 6,190 8,823 10,864 12,929 Total liabilities and equity 56,132 67,782 60,038 64,020 81,446CATERPILLAR BALANCE SHEETS, 2007-2011 Rewritten: Operating Current Assets, Operating Current Liabilities, Financial Debts together 166 Chapter 6 6.3 Analyzing the Financial Statements We now build a set of fi nancial statements with the technology of Chapter 5 but in roughly the same format as Caterpillar ’ s historical statements. Our model is forward looking but based on CAT ’ s historical fi nancial statements. Our choices of model parameters is based on our analysis of the historicals and on a number of judgment calls. Sales Projections The sales projection is one of the most critical elements in our model. Should it be based on a historical analysis of Caterpillar sales? Or should it be based on expert opinions about the potential growth of the heavy-equipment indus-try? Should we differentiate between short-term (next 5 years) growth and long-term growth? None of these questions has a satisfactory answer. We illustrate several methods and suggest that you use the pro forma model to experiment with the various answers to see whether they have a value impact. In the Excel below we show: • Year-on-year sales growth • Cumulative average growth rates (CAGR) • Regression of sales on the year 167 Building a Pro Forma Model: The Case of Caterpillar 1 2 3456789 101112131415161718 19 2021222324252627282930313233AB C D E F G H I J K L YearSales of machineryRevenues of financial productsTotal sales and revenuesYear-on- year growth 2000 18,913 1,262 20,1752001 19,027 1,423 20,450 1.36%2002 18,648 1,504 20,152 -1.46%2003 21,048 1,759 22,807 13.17%2004 28,336 1,970 30,306 32.88%2005 34,006 2,333 36,339 19.91%2006 28,869 2,648 31,517 -13.27% 2007 41,962 2,996 44,958 42.65%2008 48,044 3,280 51,324 14.16%2009 29,540 2,856 32,396 -36.88%2010 39,867 2,721 42,588 31.46%2011 57,392 2,746 60,138 41.21% CAGR 10.44% <-- =(D14/D3)^(1/11)-1 Slope 3,169 <-- =SLOPE(D3:D14,A3:A14) Slope/2011 sales5.27% <-- =B18/D14 Intercept -6,320,495 <-- =I NTERCEPT(D3:D14,A3:A14) R-squared 0.7579 <-- =RSQ(D3:D14,A3:A14) 2001-2011 11.39% <-- =(D14/D4)^(1/10)-1 2002-2011 12.92% <-- =(D14/D5)^(1/9)-12003-2011 12.88% <-- =(D14/D6)^(1/8)-12006-2011 13.79% <-- =(D14/D9)^(1/5)-1 2001-2010 8.49% <-- =(D13/D4)^(1/9)-1 2002-2010 9.80% <-- =(D13/D5)^(1/8)-1 2003-2010 9.33% <-- =(D13/D6)^(1/7)-1 2005-2010 3.22% <-- =(D13/D8)^(1/5)-1Growth measures CAGR is very affected by end points!ANALYSIS OF CATERPILLAR SALES y = 3168.7x - 6E+06 R² = 0.7579 010,00020,00030,00040,00050,00060,00070,000 2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011Caterpillar Sales Regressed on Year Total sales and revenues Linear (Total sales and revenues) -50%-40%-30%-20%-10%0%10%20%30%40%50% 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012CATERPILLAR, YEAR-ON-YEAR GROWTH We focus on two numbers in the above Excel: • The compound annual growth rate (CAGR) in cell B17 is CAGRSales Sales=⎛ ⎝⎜⎞⎠⎟ −=⎛ ⎝⎜⎞⎠⎟ 2011 20001 11 11 0 4 4 .% . CAGR is often used but because of its dependence on the endpoints, it is a problematic number. We fi nd it a suspect measure of long-term growth, unless verifi ed by other time spans. As the second chart above shows, the year-on-year growth of CAT exhibits a lot of variability. In the Excel above we have played with these end points, and fi nd that the CAGR can vary from 3.22% to 13.79%. • Regressing the annual sales on the year is not dependent solely on the start-ing and ending sales, and thus often provides a better estimation of future sales growth: 168 Chapter 6 Sales a b Year Year Rtt=+∗ =− + ∗ =6 320 495 3 169 75 792,, , , . % This regression line suggests that sales will grow at a rate of about 3,169 annually. Impounding this estimate into the current sales (cell B14 above) gives an annual growth rate of about 5.27%. On the whole we fi nd this a more satisfactory estimate of sales growth. 2 Current Assets and Current Liabilities The ratio of current assets to sales and current liabilities to sales shows a lot of stability over the 5 years. As model parameter values we have chosen the average of the 5 years. 2. Our baseline prejudice is that for a company in an established, old-line business, growth rate should be approximately the economy ’ s real growth rate plus the infl ation rate. The 5.27% number falls in the framework of this prejudice. 1 2 34 5 6789 10 11 12131415 16 1718192021 22AB C D E F 2007 2008 2009 2010 2011 CA/Sales 54.17% 56.30% 68.99% 66.26% 58.32% CL/Sales 25.90% 26.05% 28.37% 32.96% 31.45% Model values CA/Sales 58.32% <-- =F3 CL/Sales 31.45% <-- =F4CATERPILLAR ANALYSIS OF RATIOS 0%10%20%30%40%50%60%70%80% 2007 2008 2009 2010 2011NWC Analysis CA/Sales CL/Sales 169 Building a Pro Forma Model: The Case of Caterpillar Operating Costs Like most industrial companies Caterpillar ’ s operating costs include deprecia- tion. Following the model in Chapter 5, we want to separate depreciation from other operating costs, so we refer to the consolidated statement of cash fl ows to compute the operating costs without depreciation. Operating costs have varied considerably over the past 5 years: 1 2 3 4 5 67 8 9 101112 13 14 15 1617 18 19 20 2122 23G F E D C B A 2007 2008 2009 2010 2011 Operating costs from P&L 40,037 46,876 31,819 38,625 52,985 <-- ='Caterpillar P&L'!F13 Depreciation 1,797 1,980 2,336 2,296 2,527 <-- ='Caterpillar CSCF'!F5 Operating costs net of depreciation 38,240 44,896 29,483 36,329 50,458 <-- =F3-F4 Sales 44,958 51,324 32,396 42,588 60,138 <-- ='Caterpillar P&L'!F5 Net operating costs/Sales 85.1% 87.5% 91.0% 85.3% 83.9% <-- =F5/F6CATERPILLAR OPERATING COSTS 80%82%84%86%88%90%92% 2007 2008 2009 2010 2011Net opera/g415ng costs/Sales We note that the operating cost ratio is an increasing function of sales (shown below). This indicates a large fi xed cost component. Modeling this and running a regression, we chose to model the operating costs as a linear function of sales: Costs Sales =+ ∗3 833 0 7789,. 170 Chapter 6 25 262728 29 3031 32 33343536 37 3839404142 4344E D C B A ) 6 F : 6 B , 5 F : 5 B ( T P E C R E T N I = - - < 3 3 8 , 3 t p e c r e t n I ) 6 F : 6 B , 5 F : 5 B ( E P O L S = - - < % 9 8 . 7 7 e p o l S ) 6 F : 6 B , 5 F : 5 B ( Q S R = - - < % 4 1 . 9 9 d e r a u q s - RRegressing net operating costs on sales y = 0.7789x + 3833.3 R² = 0.9914 010,00020,00030,00040,00050,00060,000 25,000 30,000 35,000 40,000 45,000 50,000 55,000 60,000 65,000Net Opera/g415ng Costs vs Sales We use this regression in our pro forma model for Caterpillar. Fixed Assets and Sales We need to determine a model for the fi xed assets of Caterpillar. This involves two decisions: • Are fi xed assets best modeled by assuming that the critical model ratio is Net FA/Sales or Gross FA/Sales? We have a slight predilection toward the former, believing it to make more economic sense. 3 • What is the applicable average depreciation rate? In this subsection we deal with the fi rst question. The depreciation rate is discussed in the next section. 3. If depreciation has any economic meaning, then producing more sales should require more net fi xed assets. 171 Building a Pro Forma Model: The Case of Caterpillar 1 2 3 4 5 67 8 9 10 11 12 13 1415 16 17F E D C B A 2007 2008 2009 2010 2011 3 5 7 2 8 6 9 3 6 5 7 5 9 8 1 d n a L Buildings and land improvements 3,625 4,647 4,914 5,174 5,857 Machinery, equipment and other 9,756 12,173 12,917 13,414 14,435 Equipment leased to others 4,556 4,561 4,717 4,444 4,285 Construction-in-process 1,082 1,531 1,034 1,192 1,996 Total property, plant and equipment, at cost 19,208 23,487 24,221 24,906 27,326 Less: Accumulated depreciation -9,211 -10,963 -11,835 -12,367 -12,931 Property, plant and equipment—net 9,997 12,524 12,386 12,539 14,395 Sales 44,958 51,324 32,396 42,588 60,138 Net PPE/Sales 22.24% 24.40% 38.23% 29.44% 23.94% % 4 4 . 5 4 % 8 4 . 8 5 % 7 7 . 4 7 % 6 7 . 5 4 % 2 7 . 2 4 s e l a S / E P P s s o r G Model value: Net PPE/Sales 25.00% <-- =AVERAGE(B15,C15,E15,F15)CATERPILLAR—ANALYSIS OF FIXED ASSETS There appears to be a slightly better connection between the Net PPE and Sales than the Gross PPE, and this is accordingly the value we use in our model. 0%10%20%30%40%50%60%70%80% 2007 2008 2009 2010 2011 Net PPE/Sales Gross PPE/Sales 172 Chapter 6 Depreciation Note 8 of the Caterpillar 2011 annual report gives the approximate lives of different fi xed asset classes: In row 28 below we use SumProduct to compute the weighted average depreciation rate for CAT. In B29 we average these numbers to compute the model depreciation rate: y = 0.102x + 19108 R² = 0.1265 y = 0.0731x + 8983.3 R² = 0.2327 05,00010,00015,00020,00025,00030,000 30,000 35,000 40,000 45,000 50,000 55,000 60,000 65,000Gross and Net Fixed Assets vs Sales Gross FA Net FA 173 Building a Pro Forma Model: The Case of Caterpillar 19 20 21 222324252627 28 2930G F E D C B A Depreciation analysis %Buildings and land improvements 20.21% 21.73% 21.79% 22.46% 23.83% <-- =F4/SUM(F$4:F$6) %Machinery, equipment and other 54.39% 56.93% 57.29% 58.24% 58.73% <-- =F5/SUM(F$4:F$6) %Equipment leased to others 25.40% 21.33% 20.92% 19.29% 17.44% <-- =F6/SUM(F$4:F$6) Depreciation rates Buildings and land improvements 3.1% <-- =1/32.5 Machinery, equipment and other 15.4% <-- =1/6.5 Equipment leased to others 18.2% <-- =1/5.5 Average depreciation rate 13.61% 13.31% 13.29% 13.16% 12.94% Model depreciation rate 13.26% <-- =AVERAGE(B28:F28)<-- =SUMPRODUCT($B$25:$B$27,F20:F22) Dividends Caterpillar total dividends have grown at a compound growth rate of 8.22% per year. We use this number in our model. Our previous objection to CAGR doesn ’ t hold here, since various starting and ending points yield pretty much the same estimates. We prefer to use total dividends as opposed to dividends per share. 1 2 34 5 678F E D C B A Other liabilities 2007 2008 2009 2010 2011 9 5 1 , 1 4 8 0 , 1 9 2 0 , 1 3 5 9 5 4 8 s d n e d i v i D % 2 9 . 6 % 4 3 . 5 % 7 9 . 7 % 8 7 . 2 1 h t w o r g r a e y - n o - r a e Y 1 - ) 4 / 1 ( ^ ) 3 B / 3 F ( = - - < % 2 2 . 8 R G A C d n e d i v i D 2 8 . 1 4 7 . 1 8 6 . 1 2 6 . 1 8 3 . 1 e r a h s r e p s d n e d i v i D 1 - ) 4 / 1 ( ^ ) 7 B / 7 F ( = - - < % 6 1 . 7 R G A C d n e d i v i DCATERPILLAR DIVIDENDS Other Liabilities and Pensions We are frankly confused by these two items. Why are other liabilities and pension liabilities growing at a rate much faster than sales? We have no good answer, and in our model assume that the growth of these important liabilities will slow down slightly in the future: 174 Chapter 6 1 2 34 5 678 9 10 1112F E D C B A 2007 2008 2009 2010 2011 Other liabilities 2,003 2,190 2,496 2,654 3,583 % 0 0 . 5 3 % 3 3 . 6 % 7 9 . 3 1 % 4 3 . 9 h t w o r g r a e y - n o - r a e Y 1 - ) 4 / 1 ( ^ ) 3 B / 3 F ( = - - < % 5 6 . 5 1 d o i r e p e l o h W 1 - ) 3 / 1 ( ^ ) 3 B / 3 E ( = - - < % 3 8 . 9 1 1 0 2 g n i d u l c x E Pension liabilities 5,059 9,975 7,420 7,584 10,956 % 6 4 . 4 4 % 1 2 . 2 % 1 6 . 5 2 - % 7 1 . 7 9 h t w o r g r a e y - n o - r a e Y 1 - ) 4 / 1 ( ^ ) 8 B / 8 F ( = - - < % 1 3 . 1 2 d o i r e p e l o h W 1 - ) 3 / 1 ( ^ ) 8 B / 8 E ( = - - < % 5 4 . 4 1 1 1 0 2 g n i d u l c x E ) 1 1 B : 0 1 B ( E G A R E V A = - - < % 8 8 . 7 1 e u l a v l e d o MOTHER LIABILITIES AND PENSIONS Caterpillar ’ s Tax Rate Except for the problematic year 2009, CAT ’ s tax rate averages around 26%. This is the value we use in our model: 1 2 3 4 56F E D C B A 2007 2008 2009 2010 2011 5 2 7 , 6 0 5 7 , 3 9 6 5 1 0 5 , 4 0 9 9 , 4 s e x a t e r o f e b s t i f o r P 0 2 7 , 1 8 6 9 0 7 2 - 3 5 9 5 8 4 , 1 s e x a T % 8 5 . 5 2 % 1 8 . 5 2 % 5 4 . 7 4 - % 7 1 . 1 2 % 6 7 . 9 2 e t a r x a T ) \" 0 > \" , 5 F : 5 B ( F I E G A R E V A = - - < % 8 5 . 5 2 e u l a v l e d o MCATERPILLAR ANALYSIS OF TAX RATE Long-Term Receivables CAT uses long-term receivables as a marketing tool to provide fi nancing to the purchases of its equipment, so that it makes sense that this item grows at the same rate as sales. Cost of Debt Caterpillar is a highly rated borrower in fi nancial markets. A chart from Morn-ingstar (http://quicktake.morningstar.com/stocknet/bonds.aspx?symbol = cat) shows the term structure of CAT ’ s debt. We will assume that the company ’ s average cost of debt is 4%. 175 Building a Pro Forma Model: The Case of Caterpillar Interest Earned on Cash and Short-Term Securities At the time this chapter is written, short-term interest rates are very low. We will assume that CAT earns 1% on its short-term cash investments. What ’ s the Plug? The plug should be one of the following fi nancial items: cash and marketable securities, debt, or treasury stock. After some analysis, we use the cash/sales and the debt/assets ratios below. This leaves treasury stock as the plug in our model. 1 23456789 10111213AB C D E F G 2007 2008 2009 2010 2011 Sales 44,958 51,324 32,396 42,588 60,138 <-- ='Page 162'!F5 Cash 1,122 2,736 4,867 3,592 3,057 <-- ='Page 163'!F4 Cash/Sales 2.50% 5.33% 15.02% 8.43% 5.08% <-- =F5/F3 Debt 28,429 35,535 31,631 28,418 34,592 <-- ='Page 165'!F19 Debt/Sales 63.23% 69.24% 97.64% 66.73% 57.52% <-- =F7/F3 Debt/Total assets 50.65% 52.43% 52.68% 44.39% 42.47% <-- =F7/'Page 163'!F20 Model valuesCash/Sales 5.08% <-- =F6 Debt/Assets 42.47% <-- =F9CATERPILLAR: VARIOUS PLUGS vs SALES AND OTHER 176 Chapter 6 6.4 A Model for Caterpillar Using the values computed for Caterpillar, we arrive at the following pro forma model for the company: 1 2 3456789 10111213141516171819 202122 23 24252627282930 3132 333435363738394041 4243 444546474849505152535455AB C D E F G H Sales growth 5.27% <-- ='Page 167'!B19 Current assets/Sales 58.32% <-- ='Page 168'!B6 Current liabilities/Sales 31.45% <-- ='Page 168'!B7 Net fixed assets/Sales 27.65% <-- =AVERAGE('Page 171-173'!B15:F15) Cost of goods sold/Sales 83.90% <-- ='Page 169-170'!F7 Long-term receivables, growth 5.27% <-- Assume this grows at the same rate as sales Depreciation rate 13.26% <-- ='Page 171-173'!B29 Pension liabilities, growth 17.88% <-- ='Page 174'!B12 Other liabilities, growth 9.83% <-- ='Page 174'!B6 Cash/Sales 5.08% <-- ='Page 175'!B12 Debt/Assets 42.47% <-- ='Page 175'!B13 Interest rate on debt 1.41% <-- ='Ratios (5)'!F18 Interest paid on cash & mkt. sec. 0.00% <-- Author guesstimate Tax rate 25.58% <-- ='Page 174, middle'!B6 Dividend growth 8.22% <-- ='Page 173'!B6 Year 2011 2012 2013 2014 2015 2016 Income statement Sales 60,138 63,307 66,642 70,154 73,850 77,742 <-- =F20*(1+$B$2) Costs of goods sold -50,458 -53,117 -55,915 -58,862 -61,963 -65,228 <-- =-$B$6*G20 Interest payments on debt -521 -543 -567 -592 -618 <-- =-$B$13*G50 Interest earned on cash & marketable securities 0 000 0 <-- =$B$14*AVERAGE(F32:G32) Depreciation -2,527 -3,711 -4,524 -5,301 -6,196 -7,225 <-- =G38-F38 Profit before tax 7,153 5,958 5,659 5,424 5,100 4,671 <-- =SUM(G20:G24) Taxes -1,720 -1,524 -1,448 -1,387 -1,305 -1,195 <-- =-$B$15*G25 Profit after tax 5,433 4,434 4,212 4,036 3,795 3,476 <-- =G25+G26 Dividends 1,159 1,254 1,357 1,469 1,590 1,720 <-- =F28*(1+$B$16) Retained earnings 5,688 5,569 5,505 5,385 5,196 <-- =G27+G28 Balance sheet 2011 2012 2013 2014 2015 2016 <-- 2016 Cash and marketable securities 3,057 3,218 3,388 3,566 3,754 3,952 <-- =$B$11*G20 Current assets 35,071 36,919 38,864 40,912 43,068 45,337 <-- =$B$3*G20 Fixed assets <-- Land 753 753 753 753 753 753 <-- =F35 Construction in progress 1,996 1,996 1,996 1,996 1,996 1,996 <-- =F36 Depreciable assets at cost 24,577 31,397 36,844 43,117 50,335 58,635 <-- =G39-G38-G36-G35 Accumulated depreciation -12,931 -16,642 -21,167 -26,468 -32,664 -39,889 <-- =F38-$B$8*AVERAGE(F37:G37) Net PPE 14,395 17,504 18,427 19,398 20,420 21,496 <-- =$B$5*G20 <-- Long-term receivables 13,078 13,767 14,493 15,256 16,060 16,906 <-- =F41*(1+$B$7) Investments in unconsolidated affiliated companies 133 133 133 133 133 133 <-- =F42 Noncurrent deferred and refundable income taxes 2,157 2,157 2,157 2,157 2,157 2,157 <-- =F43 Intangibles and other 13,555 13,555 13,555 13,555 13,555 13,555 <-- =F44 Total assets 81,446 87,253 91,016 94,977 99,147 103,536 <-- =G32+G33+G39+SUM(G41:G44) <-- Current liabilities 18,913 19,910 20,959 22,063 23,225 24,449 <-- =$B$4*G20 Pension liabilities 10,956 12,915 15,224 17,946 21,155 24,937 <-- =F48*(1+$B$9) Other liabilities 3,583 3,935 4,322 4,748 5,214 5,727 <-- =F49*(1+$B$10) Debt 34,592 37,059 38,657 40,339 42,110 43,974 <-- =$B$12*G45 Redeemable noncontrolling interest 473 473 473 473 473 473 <-- =F51 Stock 2,744 2,744 2,744 2,744 2,744 2,744 <-- =F52 Treasury stock -9,451 -12,868 -20,018 -27,496 -35,320 -43,511 <-- =G45-SUM(G47:G52)-G54 Accumulated retained earnings 17,398 23,086 28,655 34,161 39,545 44,742 <-- =F54+G29 Total liabilities and equity 79,208 87,253 91,016 94,977 99,147 103,536 <-- =SUM(G47:G54)CATERPILLAR PRO FORMA MODEL 177 Building a Pro Forma Model: The Case of Caterpillar This model gives the following free cash fl ow projections: 58 5960616263 64 656667H G F E D C B A 6 1 0 2 5 1 0 2 4 1 0 2 3 1 0 2 2 1 0 2 1 1 0 2 r a e Y Free Cash Flow 7 2 G = - - < 6 7 4 , 3 5 9 7 , 3 6 3 0 , 4 2 1 2 , 4 4 3 4 , 4 T A P 4 2 G - = - - < 5 2 2 , 7 6 9 1 , 6 1 0 3 , 5 4 2 5 , 4 1 1 7 , 3 n o i t a i c e r p e d k c a b d d A Minus NWC 3 3 G - 3 3 F = - - < 9 6 2 , 2 - 6 5 1 , 2 - 8 4 0 , 2 - 5 4 9 , 1 - 8 4 8 , 1 - A C n i e s a e r c n i s u n i M 7 4 F - 7 4 G = - - < 4 2 2 , 1 3 6 1 , 1 4 0 1 , 1 9 4 0 , 1 7 9 9 L C n i e s a e r c n i k c a b d d A ) ) 7 3 F : 5 3 F ( M U S - ) 7 3 G : 5 3 G ( M U S ( - = - - < 1 0 3 , 8 - 8 1 2 , 7 - 2 7 2 , 6 - 7 4 4 , 5 - 0 2 8 , 6 - X E P A C t c a r t b u S ) 3 2 G - 2 2 G ( * ) 5 1 $ B $ - 1 ( - = - - < 0 6 4 0 4 4 2 2 4 4 0 4 8 8 3 s e x a t r e t f a t s e r e t n i t e n k c a b d d A ) 6 6 G : 0 6 G ( M U S = - - < 4 1 8 , 1 0 2 2 , 2 4 4 5 , 2 7 9 7 , 2 1 6 8 w o l F h s a C e e r F 6.5 Using the Model to Value Caterpillar In Chapter 3 we discussed the cost of capital for Caterpillar, and came to the conclusion that WACC = 10.84%. Using this number in our model and assum- ing that the long-term FCF growth is 9% produces the following FCF valuation: 70 71727374757677 78 79808182838485AB C D E F G H WACC 10.84% Long-term FCF growth 9.00% Year 2011 2012 2013 2014 2015 2016 FCF 861 2,797 2,544 2,220 1,814 <-- =G67 Terminal value 107,487 <-- =G74*(1+B71)/(B70-B71) Total 861 2,797 2,544 2,220 109,301 <-- =G74+G75 Enterprise value: PV of FCFs and terminal value 75,515 <-- =NPV(B70,C 76:G76)*(1+B70)^0.5 Add back initial cash 3,057 <-- =B32 Asset value 78,572 <-- =B78+B79 Subtract year 0 debt -49,604 <-- =-SUM(B48:B51) Imputed equity value 28,968 <-- =B80+B81 Divide by # shares outstanding 647,533,344 <-- ='Page 163'!F58 Share value 44.74 <-- =B82/B83*1000000 Current market value per share 90.60 According to these model values, Caterpillar is currently overvalued. A Data Table on the long-term growth rate and the weighted average cost of capital produces the following table. Cells with a valuation greater than the current market value of 90.60 are highlighted, and where the WACC < long- term growth, the cells have been blanked, since this does not accord with the valuation model (see section 5.4). Note that for some combinations, the model predicts that the value of the equity is negative—meaning that Caterpillar ’ s year 0 debt outweighs the value of its equity. 178 Chapter 6 6.6 Summary On one hand, the pro forma fi nancial model is an extraordinarily labor- intensive method of valuing the fi rm. On the other hand, in modeling Caterpil-lar, we have discovered much about the way the fi rm operates and about how much we understand (and don ’ t … ) about its fi nancial statements. The pro forma modeling technique cannot be undertaken lightly, but if an intensive investigation into the fi rm ’ s workings is needed, this is the way to go. 87 88 89 90 91 92 93 94 9596 97 98AB C D E F G LT growth rate ↓ 44.74 6.0% 7.0% 8.0% 9.0% 10.0% WACC--> 6.0% 6.5% 389.00 7.0% 160.45 7.5% 84.25 374.31 =IF(B70>B71,B84,\"\") 8.0% 46.13 153.15 8.5% 23.24 79.40 360.22 9.0% 7.97 42.51 146.14 9.5% -2.94 20.37 74.75 346.69 10.0% -11.14 5.59 39.04 139.41 10.5% -17.52 -4.97 17.61 70.29 333.71 7 Financial Analysis of Leasing 7.1 Overview A lease is a contractual arrangement by which the owner of an asset (the lessor ) rents the assets to a lessee . In this chapter we analyze long-term leases, in which the asset spends most of its useful life with the lessee. In economic terms, the leases we consider in this chapter are considered by the lessees as alternatives to purchasing an asset. The analysis of this chapter fi ts many long-term equipment leases, but not short-term leasing (car rentals, for example). Financial theory regards such leases as being essentially debt contracts: For the lessee, the lease is an alternative to purchasing the asset with debt, and the lessor understands that it is essentially providing fi nancing for the lessee. In the example that follows we consider a company that is faced with the choice of either purchasing or leasing a piece of equipment. We assume that the operating infl ows and outfl ows from the equipment are not affected by its ownership—irrespective of how the asset is held (whether owned or leased), the owner/lessee will have the same sales and must bear the responsibility for maintaining the equipment. In the words of Statement 13 of the Financial Accounting Standards Board (FASB 13), the lease we are considering is one that “transfers substantially all of the benefi ts and risks incident to the owner-ship of property” to the lessee. The analysis in this chapter concentrates exclusively on the cash fl ows from the lease. It is assumed that the lessor pays taxes on the income from the lease rentals and gets a tax shield on the depreciation of the asset, and that the lessee can claim the rent as an expense. The analysis assumes that the tax authorities treat the lessor as the owner of the asset and the lessee as the user. 1 7.2 A Simple but Misleading Example The essence of our analysis can be understood from the following simple example: A company has decided to acquire the use of a machine costing $600,000. If purchased, the machine will be depreciated on a straight-line basis to a residual value of zero. The machine ’ s estimated life is 6 years, and the company ’ s tax rate T C is 40%. 1. From an economic point of view this assumption is not innocuous: If the lessee has true eco- nomic ownership of the asset, why doesn ’ t it get to take the depreciation? But the facts are otherwise. 180 Chapter 7 The company ’ s alternative to purchasing the machine is to lease it for 6 years. A lessor has offered to lease the machine to the company for $140,000 annually, with the fi rst payment to be made today and with fi ve additional payments to be made at the start of each of the next 5 years. One way of analyzing this problem (a misleading way, as it turns out) is to compare the present values of the cash fl ows to the company of leasing and of buying the asset. The company feels that the lease payment and the tax shield from depreciation are riskless. Suppose, furthermore, that the risk-free rate is 12%. On the basis of the following calculation, the company should lease the asset. 2 NPV leasingT Lease rental Tc t tc() %,=−() ∗ +()=−() ∗ =∑1 11 21 140 00 050 0 11 2386 801 05 +()= =−=∑%, ()t t NPV buying Asset cost PV tax shields o nn depreciation t t() =−∗ +()= =∑ 600 0000 40 100 000 11 2435 544 16 ,., %, In a spreadsheet: 2. At this point we assume that the residual value of the asset at the end of its life is zero. In section 7.5 we drop this assumption. 1 2 345 6 789C B A Asset cost 600,000 Interest rate 12% Lease rental payment 140,000 Annual depreciation 100,000 % 0 4 e t a r x a T NPV (leasing) 386,801 <-- =-PV(B3,5,B4*(1-B6))+B4*(1-B6) NPV (buying) 435,544 <-- =B2+PV(B3,6,B6*B5)HOW NOT TO ANALYZE A LEASE This analysis suggests that leasing the asset is preferable to buying it. However, it is misleading because it ignores the fact that leasing is very much like buying the asset with a loan. The fi nancial risks are thus different when we compare a lease (implicitly a purchase with loan fi nancing) against a straightforward purchase without loan fi nancing. If the company is willing to lease the asset, then perhaps it should also be willing to borrow money to buy 181 Financial Analysis of Leasing the assets. This borrowing will change the cash-fl ow patterns and could also produce tax benefi ts. Hence, our decision about the leasing decision could change if we were to take the loan potential into account. In the following section we present a method of analyzing leases that deals with this problem by imagining what kind of loan would produce cash fl ows (and hence fi nancial risks) equivalent to those produced by the lease. This method of lease analysis is called the equivalent-loan method. 7.3 Leasing and Firm Financing—The Equivalent-Loan Method The idea behind the equivalent-loan method is to devise a hypothetical loan that is somehow equivalent to the lease. 3 It then becomes easy to see whether the lease or the purchase of an asset is preferable. The easiest way to understand the equivalent-loan method is with an example. We return to the previous example: 3. This method is due to Myers, Dill, and Bautista (1976). A somewhat more accessible explana- tion can be found in Levy and Sarnat (1979). 1 2 34567 8 9 101112131415161718 19 2021AB C D E F G H I 0 0 0 , 0 0 6 t s o c t e s s A % 2 1 e t a r t s e r e t n I Lease rental payment 140,000 Annual depreciation 100,000 % 0 4 e t a r x a T Y 6 5 4 3 2 1 0 r a e After-tax cash flows from leasingAfter-tax lease rental -84,000 -84,000 -84,000 -84,000 -84,000 -84,000 <-- =-$B$4*(1-$B$6) After-tax cash flows from buying the asset 0 0 0 , 0 0 6 - t s o c t e s s A 6 $ B $ * 5 $ B $ = - - < 0 0 0 , 0 4 0 0 0 , 0 4 0 0 0 , 0 4 0 0 0 , 0 4 0 0 0 , 0 4 0 0 0 , 0 4 d l e i h s x a t n o i t a i c e r p e D Net cash from buying -600,000 40,000 40,000 40,000 40,000 40,000 40,000 <-- =G13+G14 Differential cash flow: Lease saves lessee Lease minus buy 516,000 -124,000 -124,000 -124,000 -124,000 -124,000 -40,000 <-- =G10-G15 IRR of differential cash flow 8.30% <-- =IRR(B18:H18,0) ) \" y u B \" , \" e s a e L \" , 3 B * ) 6 B - 1 ( < 0 2 B ( F I = - - < y u B ? ? n o i s i c e DEQUIVALENT-LOAN METHOD—THE LESSEE POINT OF VIEW Rows 2–6 give the various parameters of the problem. The spreadsheet then compares two after-tax cash fl ows, that of the lease and that of the buy; we write outfl ows with a minus sign and infl ows (such as the tax shield from the depreciation) with a plus sign. 182 Chapter 7 • The cash fl ow from leasing the asset is (1 – tax rate) *lease payment in each of years 0–5. • The cash fl ow from buying the asset is the asset cost in year 0 (an outfl ow, hence negative) and the tax shield on the asset ’ s depreciation, tax rate *depre- ciation , in years 1–6 (an infl ow, hence written here with a positive sign). The differential cash fl ow between the lease and the buy decision. This line shows that leasing the asset, instead of buying it, results in the following cash fl ows to the lessor: • A cash infl ow of $516,000 in year 0. This infl ow is the cash saved at time 0 by the lease: Purchasing the asset costs $600,000, whereas leasing the asset costs only $84,000 on an after-tax basis. Thus the lease initially saves the lessee $516,000. • A cash outfl ow of $124,000 in years 1–5 and an outfl ow of $40,000 in year 6. This outfl ow corresponds to the after-tax cost of the lease versus the buy in these years. This cost has two components: the after-tax lease payment ($84,000) and the fact that when the lessee leases, it does not get the tax shield on the asset ’ s depreciation ($40,000). Thus leasing instead of purchasing the asset is like getting a loan of $516,000 with after-tax repayments of $124,000 in years 1–5 and an after-tax repayment of $40,000 in year 6. The lease, in other words, can be viewed as an alternative method of fi nancing the asset. In order to compare the lease to the buy, we should compare the cost of this fi nancing with the cost of alternative fi nancing . The internal rate of return of the differential cash fl ows—8.30%—gives the after-tax cost of the fi nancing implicit in the lease; this is larger than the after-tax cost of fi rm borrowing, since in this case (where the fi rm ’ s tax rate is 40% and its borrowing cost is 12%), this cost is 7.20%. Our conclusion: Buying is preferable to leasing. Why Do We Decide Against the Lease? Not everyone is fully convinced by the preceding argument. We therefore present an alternative argument in this subsection. We show that if the fi rm can borrow at 12%, it can borrow more money with the same schedule of after- tax repayments as that which resulted from the lease versus the buy. This hypothetical loan is shown in the following table: 183 Financial Analysis of Leasing The table (a version of the loan tables discussed in Chapter 1) shows the principal of a hypothetical bank loan bearing a 12% interest rate. At the begin-ning of year 0 (that is, at the time when the fi rm either purchases or leases the asset), for example, the fi rm borrows $532,070 from the bank. At the end of the year, the fi rm repays $149,539 to the bank, of which $63,848 is interest (since $63,848 = 12%*$532,070) and the remainder, $85,691, is repayment of principal. The net, after-tax, repayment in year 1—assuming full tax deduct-ibility of the interest payment—is (1 – 40%)*$63,848 + $85,691 = $124,000, which is, of course, the same after-tax differential cash fl ow calculated in our original spreadsheet. Payments in subsequent years are calculated similarly to the illustration in the preceding paragraph. At the beginning of year 6, there is still $37,313 of principal outstanding; this is fully paid off at the end of the year with an after-tax payment of $40,000. The point of this example? If the fi rm is considering leasing the asset in order to get the fi nancing of $516,000, which the lease gives, it should instead borrow $532,070 from the bank at 12%; it can repay this larger loan with the same after-tax cash fl ows as are implicit in the lease. The bottom line: Purchas-ing is still preferable to leasing the asset.24 25 262728 29 303132 33 34AB C D E F G H =D26+B26-B27 =B26-B27 YearPrincipal at beg. yearLoan payment, end yearInterestRepayment of principalAfter-tax loan repaymentLease minus buy cash flows, years 1-6 1 532,070 149,539 63,848 85,691 124,000 124,000 2 446,379 145,426 53,565 91,861 124,000 124,000 3 354,518 141,017 42,542 98,475 124,000 124,000 4 256,044 136,290 30,725 105,565 124,000 124,000 5 150,479 131,223 18,057 113,166 124,000 124,000 63 7,313 41,791 4,478 37,313 40,000 40,000 Split of loan repayment between: =NPV((1-$B$6)*$B$3,G26:$G$31)<-- {=- TRANSPOSE (C18:H18)} =$B$3*B26 184 Chapter 7 The alternative loan table shown above was constructed in the following way: The principal at the beginning of each of years 1–6 is the present value of the lease versus buy outfl ows, discounted at (1 − 38%)*12%. Thus, for example: 532 070124 000 11 0 4 0 0 1 240 000 11 0 4 0 0 15 ,, .., ..= +−() ⋅ ()+ +−() ⋅ =∑ t t 1 12 446 379124 000 11 0 4 0 0 1 240 000 11 0 46 14() = +−() ⋅ ()+ +− =∑ ,, .., .t t 000 1 2 37 31340 000 11 0 4 0 0 1 25() ⋅ () =+−() ⋅ (). ,, ../vertellipsis Once the principal at the start of each year is known, it is an easy matter to construct the rest of the columns. Interest Principal at the beginning of the year =∗12% Total payment Int erest in year t Repaymen t of principal in year t =+ After tax payment year t Tax rate Interest Repayment of pri-, ( ) =− ∗ +1 nncipal 7.4 The Lessor ’ s Problem: Calculating the Highest Acceptable Lease Rental The lessor ’ s problem is the opposite of that of the lessee: • The lessee has to decide whether—given a rental rate on the leased asset—it is preferable to buy the asset or lease it. • The lessor has to decide what minimum rental rate justifi es the purchase of the asset in order to lease it out. One way of solving the lessor ’ s problem is to turn the above analysis around. We use the Excel Goal Seek ( Data|What-if analysis|Goal Seek ) to get $134,826 as the lessor ’ s minimum acceptable rental: 185 Financial Analysis of Leasing 1 2 3 4 5 6 7 8 9 1011 12 13 14 1516 17 18 19 20H G F E D C B A 0 0 0 , 0 0 6 t s o c t e s s A % 2 1 e t a r t s e r e t n I Lowest acceptable lease payment 134,822 <-- Computed either with Goal Seek or Solve r 0 0 0 , 0 0 1 n o i t a i c e r p e d l a u n n A % 0 4 e t a r x a T Year 0123456 Lessor after-tax cash flows from leasing 3 9 8 , 0 8 3 9 8 , 0 8 3 9 8 , 0 8 3 9 8 , 0 8 3 9 8 , 0 8 3 9 8 , 0 8 l a t n e r e s a e l x a t - r e t f A Lessor after-tax cash flows from buying the asset 0 0 0 , 0 0 6 - t s o c t e s s A 0 0 0 , 0 4 0 0 0 , 0 4 0 0 0 , 0 4 0 0 0 , 0 4 0 0 0 , 0 4 0 0 0 , 0 4 d l e i h s x a t n o i t a i c e r p e D Net cash from buying -600,000 40,000 40,000 40,000 40,000 40,000 40,000 Lessor cash flows 0 0 0 , 0 4 3 9 8 , 0 2 1 3 9 8 , 0 2 1 3 9 8 , 0 2 1 3 9 8 , 0 2 1 3 9 8 , 0 2 1 7 0 1 , 9 1 5 - y u b + e s a e L IRR of differential cash flow 7.22% <-- =IRR(B18:H18)THE LESSOR'S PROBLEM Calculating the lowest acceptable lease rate Here ’ s what the Goal Seek settings look like: If you ’ re using Data|Solver to do this problem, it would look like: 186 Chapter 7 Mini-Case: When Is Leasing Profi table for Both the Lessor and Lessee? The symmetry between the lessee ’ s problem and the lessor ’ s problem suggests that if the lessee wants to lease, it will not be profi table for the lessor to pur- chase the asset in order to lease it out. In some cases, however, it may be that the differences in tax rates between the lessee and the lessor make it profi table for both to enter into a leasing arrangement. Here is an example: Greenville Electric Corp. is a public utility which pays no taxes. Its credit rating is of the highest order, since all of Green-ville ’ s debts are guaranteed by the city of Greenville. Greenville Electric has decided that it requires a new turbine. The turbine costs $10,000,000 and will be depreciated to zero salvage value over 5 years. Greenville Electric borrows at 6%. Greenville can either lease or buy the plant. The lease offer it has is $1,800,000 per year for 6 years (starting today); the lessee is a captive leasing subsidiary of United Turbine Corp., the manufacturer of the turbine. United Turbine Leasing also borrows at 6% and has a tax rate of 40%. As can be seen below, the lease is profi table to both lessor and lessee. Greenville Electric gets fi nancing at a cost of 3.19%, compared to its borrow-ing cost of 6%; United Turbine gets an after-tax return of 4.3%, compared to its after-tax borrowing cost of 3.6%. Both Greenville Electric and United Turbine profi t. 4 4. Who loses? The government, of course! What makes the lease profi table is the utilization of otherwise unused depreciation tax shields. 187 Financial Analysis of Leasing 1 2 3 45 6 78 9 10 11 12 1314 15 161718 19 20 21 22 23 2425 26 2728 29 303132 33 3435 36H G F E D C B A 0 0 0 , 0 0 0 , 0 1 t s o c e n i b r u T % 0 0 . 6 e t a r g n i w o r r o b s ' e l l i v n e e r G 0 0 0 , 0 0 8 , 1 t n e m y a p e s a e L Y 6 5 4 3 2 1 0 r a e Lessee after-tax lease costs , 0 0 8 , 1 - 0 0 0 , 0 0 8 , 1 - l a t n e r e s a e l x a t - r e t f A 000 -1,800,000 -1,800,000 -1,800,000 -1,800,000 Lessee after-tax purchase costs 0 0 0 , 0 0 0 , 0 1 - t s o c t e s s A 0 0 0 0 0 0 ) 0 = e t a r x a t s ' c i r t c e l E e l l i v n e e r G ( d l e i h s x a t n o i t a i c e r p e D 0 0 0 0 0 0 0 0 0 , 0 0 0 , 0 1 - g n i y u b m o r f h s a c t e N Cash saved by leasing , 0 0 8 , 1 - 0 0 0 , 0 0 2 , 8 s w o l f h s a c e s a h c r u p - e s a e L 000 -1,800,000 -1,800,000 -1,800,000 -1,800,000 0 ) 0 , 6 1 H : 6 1 B ( R R I = - - < % 9 1 . 3 w o l f h s a c l a i t n e r e f f i d f o R R I 3 B = - - < % 0 0 . 6 t s o c g n i w o r r o b x a t - r e t f a s ' e l l i v n e e r G 0 0 0 , 0 0 0 , 0 1 t s o c e n i b r u T 0 0 0 , 0 0 8 , 1 t n e m y a p e s a e L 0 0 0 , 0 0 0 , 2 ) s r a e y 5 , e n i l t h g i a r t s ( n o i t a i c e r p e D % 0 0 . 6 e t a r g n i w o r r o b s ' e n i b r u T d e t i n U % 0 4 e t a r x a t e t a r o p r o c s ' e n i b r u T d e t i n U Y 6 5 4 3 2 1 0 r a e Lessor cash flows 0 0 0 , 0 0 0 , 0 1 - t s o c t n e m p i u q E , 1 0 0 0 , 0 8 0 , 1 x a t r e t f a , t n e m y a p e s a e L 080,000 1,080,000 1,080,000 1,080,000 1,080,000 0 0 0 , 0 0 8 0 0 0 , 0 0 8 0 0 0 , 0 0 8 0 0 0 , 0 0 8 0 0 0 , 0 0 8 0 0 0 , 0 0 8 d l e i h s x a t n o i t a i c e r p e D , 0 8 8 , 1 0 0 0 , 0 2 9 , 8 - w o l f h s a c r o s s e l l a t o T 000 1,880,000 1,880,000 1,880,000 1,880,000 800,000 ) 3 3 H : 3 3 B ( R R I = - - < % 0 3 . 4 s w o l f h s a c r o s s e l f o R R I ) 6 2 B - 1 ( * 5 2 B = - - < % 0 6 . 3 t s o c g n i w o r r o b x a t - r e t f a s ' e n i b r u T d e t i n UGREENVILLE ELECTRIC CORP. UNITED TURBINE LEASING CORPORATION 7.5 Asset Residual Value and Other Considerations In the above example we have ignored the residual value of the asset—its anticipated market value at the end of the lease term. In a mechanical sense, it is easy to include the residual value in the calculations (but you have to be careful with this—see the warning after the numerical example below). Suppose, for example, you think that the asset will have a market value of $100,000 in year 7; assuming that this value is fully taxed (after all, we ’ ve depreciated the asset to zero value over the fi rst 6 years), the after-tax residual value will be (1 – Tax rate ) *$100,000 = $60,000. 188 Chapter 7 Not surprisingly, the possibility of realizing an extra cash fl ow from asset ownership makes the lease even less attractive than before (you can see this difference by noting that the return rate in cell B22, the IRR of the differential cash fl ows, has increased from 8.30% in our original example to 10.49%). Be a bit careful here, however; the spreadsheet treats the residual value as if it has the same certainty of realization as the depreciation tax shields and the lease rentals. This can be far from the truth! There is no good practical solution to this problem; an ad hoc way of dealing with it might be to reduce the $100,000 by a factor which expresses the uncertainty about its realization. The fi nance technical jargon for this is “certainty equivalent factor,” and you can fi nd it referenced in any basic fi nance text. 5 The last spreadsheet snapshot in this chapter (below) assumes that you ’ ve decided that the certainty-equivalence factor for the residual value is 0.7: 12 34 5 67 8 9 10 11 1213 14 1516 17 1819 20 2122 23AB C D E F G H I 0 0 0 , 0 0 6 t s o c t e s s A % 2 1 e t a r t s e r e t n I Lease rental payment 140,000 Annual depreciation 100,000 % 0 4 e t a r x a T Residual value 100,000 <-- Anticipated to be realized in year 7; fully taxed Year 01234567 After-tax cash flows from leasing After-tax lease rental -84,000 -84,000 -84,000 -84,000 -84,000 -84,000 After-tax cash flows from buying the asset 0 0 0 , 0 0 6 - t s o c t e s s A 0 0 0 , 0 4 0 0 0 , 0 4 0 0 0 , 0 4 0 0 0 , 0 4 0 0 0 , 0 4 0 0 0 , 0 4 d l e i h s x a t n o i t a i c e r p e D After-tax residual 60,000 Net cash from buying -600,000 40,000 40,000 40,000 40,000 40,000 40,000 60,000 Differential cash flowLease minus buy 516,000 -124,000 -124,000 -124,000 -124,000 -124,000 -40,000 -60,000 IRR of differential cash flow 10.49% <-- =IRR(B20:I20,0) ) \" y u B \" , \" e s a e L \" , 3 B * ) 6 B - 1 ( < 2 2 B ( F I = - - < y u B ? ? n o i s i c e DRESIDUAL VALUES IN LEASE ANALYSIS 5. For further references on certainty-equivalents, see for example Brealey-Myers-Allen (2011, Chapter 9). However, note that neither this work nor the present text (nor anyone else) can tell you precisely how to calculate the certainty-equivalence factor. It depends on your attitudes toward risk. 189 Financial Analysis of Leasing 7.6 Leveraged Leasing Up to this point we analyzed the lease versus purchase decision from both the points of view of the lessee (the long-term user of the asset) and the lessor (the asset ’ s owner, who rents it out to the lessee). In this chapter we analyze leveraged leasing: In a leveraged lease the lessor fi nances the purchase of the asset to be leased with debt. From the point of view of the lessee, there is no difference in the analysis of a leveraged or a non-leveraged lease. From the lessor ’ s point of view, however, the cash fl ows of a leveraged lease present some interesting problems. At least six parties are typically involved in a leveraged lease: the lessee, the equity partners in the lease, the lenders to the equity partners, an owner trustee, an indenture trustee, and the manufacturer of the asset. In most cases, a seventh party is also involved: a lease packager (a broker or leasing company). Figure 7.1 on page 190 illustrates the arrangements among the six parties of a typical leveraged lease. The two major problems related to the analysis of leveraged leases are these: • The straightforward fi nancial analysis of the lease from the point of view of the lessor . This concerns the calculation of the cash fl ows obtained by the lessor, and a computation of these cash fl ows’ net present value (NPV) or internal rate of return (IRR). • The accounting analysis of the lease . Accountants use a method called the multiple phases method (MPM) to calculate a rate of return on leveraged 1 23 4 56 7 89 10111213 14 1516 17 181920 21 2223 24J I H G F E D C B A 0 0 0 , 0 0 6 t s o c t e s s A % 2 1 e t a r t s e r e t n I 0 0 0 , 0 4 1 t n e m y a p l a t n e r e s a e L 0 0 0 , 0 0 1 n o i t a i c e r p e d l a u n n A % 0 4 e t a r x a T d e x a t y l l u f ; 7 r a e y n i d e z i l a e r e b o t d e t a p i c i t n A - - < 0 0 0 , 0 0 1 e u l a v l a u d i s e R Certainty-equivalence factor for residual 0.70 Year 01234567 After-tax cash flows from leasing 0 0 0 , 4 8 - 0 0 0 , 4 8 - 0 0 0 , 4 8 - 0 0 0 , 4 8 - 0 0 0 , 4 8 - 0 0 0 , 4 8 - l a t n e r e s a e l x a t - r e t f A After-tax cash flows from buying the asset 0 0 0 , 0 0 6 - t s o c t e s s A 0 0 0 , 0 4 0 0 0 , 0 4 0 0 0 , 0 4 0 0 0 , 0 4 0 0 0 , 0 4 0 0 0 , 0 4 d l e i h s x a t n o i t a i c e r p e D After-tax residual 42,000 <-- =(1-B6)*B7*B8 0 0 0 , 2 4 0 0 0 , 0 4 0 0 0 , 0 4 0 0 0 , 0 4 0 0 0 , 0 4 0 0 0 , 0 4 0 0 0 , 0 4 0 0 0 , 0 0 6 - g n i y u b m o r f h s a c t e N Differential cash flow 0 0 0 , 2 4 - 0 0 0 , 0 4 - 0 0 0 , 4 2 1 - 0 0 0 , 4 2 1 - 0 0 0 , 4 2 1 - 0 0 0 , 4 2 1 - 0 0 0 , 4 2 1 - 0 0 0 , 6 1 5 y u b s u n i m e s a e L ) 0 , 1 2 I : 1 2 B ( R R I = - - < % 8 8 . 9 w o l f h s a c l a i t n e r e f f i d f o R R I ) \" y u B \" , \" e s a e L \" , 3 B * ) 6 B - 1 ( < 3 2 B ( F I = - - < y u B ? ? n o i s i c e DRESIDUAL VALUES IN LEASE ANALYSIS Estimated residual value multiplied by ce rtainty-equivalence factor which represents uncertainty about realizing residual 190 Chapter 7 leases. The MPM rate of return is different from the internal rate of return (IRR). In an ordinary fi nancial context this should be of no concern, since the effi cient-markets hypothesis tells us that only cash fl ows matter. However, in a less than effi cient world, people tend to get very concerned about how things look on their fi nancial statements. Since the accounting rate of return on the lease is diffi cult to compute, we will use Excel to calculate it; then we will analyze the results. 7.7 A Leveraged Lease Example We can explore these issues by considering an example, roughly based on an example given in Appendix E of FASB 13, the accounting profession ’ s magnum opus on accounting for leases. A leasing company is considering the purchase of an asset whose cost is $1,000,000. The asset will be purchased with $200,000 of the company ’ s equity and with $800,000 of debt. The interest on the debt is 10%, so that the annual payment of interest and principal over the 15-year term of the debt is $105,179. 6 6. Using Excel: = PMT(10%,15,-800000) gives 105,179. LEVERAGED LEASING s t n e m y a P t n e R s t n e m e e r g A e c i r P e s a h c r u P lessee owner trusteeindenturetrustee lessor:equity lessor:lenders manufacturerequity funds purchase pricedebt funds lessee owner trustee lessor:equity lessor:lenders manufacturer lessee ownertrustee indenturetrustee lessor:equity lessor:lenders manufacturer trust agreement trust agreementbonds titleassignment of rent excess of rent over debt servicedebt serviceexcess ofrent over debt servicerent indenture trustee Figure 7.1 191 Financial Analysis of Leasing The company will lease the asset out for $110,000 per year, payable at the end of each year. The lease term is 15 years. The asset will be depreciated over a period of 8 years, using standard IRS depreciation schedule for assets with a 7-year life. 7 The depreciation schedule for such assets is: Year Depreciation 1 14.28% 2 24.49% 3 17.49% 4 12.5% 5 8.92% 6 8.92% 7 8.92% 8 4.48% Because the asset will be fully depreciated at the time it is sold (year 16), the whole anticipated residual value ($300,000) will be taxable. Since the com-pany ’ s tax rate is 40%, this means that the after-tax cash fl ow from the residual is (1 – 40%) *300,000 = $180,000. These facts are summarized in the spreadsheet below, which also derives the lessor ’ s cash fl ows: 7. The depreciation schedule we use is referred to as the modifi ed cost recovery system (MACRS) depreciation. More information can be obtained from an introductory fi nance text or from many websites (one example: www.real-estate-owner.com/depreciation-chart.html ). 192 Chapter 7 The last column gives the cash fl ow to the equity owners of the asset. A typical year ’ s cash fl ow for the equity owner is calculated as follows: Cash flow t Tax Lease payment Tax Depreciation Tax()=−() ∗+ ∗ −−() ∗1 1 IInterest t Principal repayment t ()− () The cash fl ows of the typical long-lived leveraged lease are usually positive at the beginning of the lease term, and then decline over time, turning positive again at the end, when the residual value is received. There are three reasons for this phenomenon: • The cash fl ow which stems from depreciation typically ends or falls off rapidly before the end of the lease term. The more accelerated the depreciation method, the larger will be the depreciation allowances (and hence the larger the depreciation tax shields) at the beginning of the asset ’ s life. • In the later years of the lease, the portion of the annual debt payments devoted to interest (tax-deductible) falls, while the portion of the annual debt payments that constitutes a repayment of principal (not tax deductible) rises. • Finally, of course, we anticipated a large cash fl ow from the realization of the asset ’ s residual value at the end of the lease term. 1 2 34567 8 9 1011 12 1314151617 18 1920212223 24 25 2627282930 31AB C D E F G H I J Cost of asset 1,000,000 5 1 m r e t e s a e L Residual value 300,000 <-- Realized year 16 0 0 0 , 0 0 2 y t i u q E l a p i c n i r p d n a t s e r e t n i f o s t n e m y a p l a u q e , n a o l m r e t r a e y - 5 1 - - < 0 0 0 , 0 0 8 t b e D % 0 1 t s e r e t n I Annual debt payment 105,179 <-- =PMT(B7,B3,-B6) Annual rent received 110,000 % 0 4 e t a r x a T YearEquity InvestedRental or salvageDepreciationPrincipal at start of yearLoan paymentInterestRepayment of principalCash flow to equity 0 -200,000 -200,000 1 4 9 , 9 4 9 7 1 , 5 2 0 0 0 , 0 8 9 7 1 , 5 0 1 0 0 0 , 0 0 8 0 0 8 , 2 4 1 0 0 0 , 0 1 1 1 4 7 7 , 9 8 7 9 6 , 7 2 2 8 4 , 7 7 9 7 1 , 5 0 1 1 2 8 , 4 7 7 0 0 9 , 4 4 2 0 0 0 , 0 1 1 2 6 6 6 , 0 6 7 6 4 , 0 3 2 1 7 , 4 7 9 7 1 , 5 0 1 4 2 1 , 7 4 7 0 0 9 , 4 7 1 0 0 0 , 0 1 1 3 7 8 4 , 9 3 3 1 5 , 3 3 6 6 6 , 1 7 9 7 1 , 5 0 1 7 5 6 , 6 1 7 0 0 0 , 5 2 1 0 0 0 , 0 1 1 4 7 2 8 , 3 2 5 6 8 , 6 3 4 1 3 , 8 6 9 7 1 , 5 0 1 4 4 1 , 3 8 6 0 0 2 , 9 8 0 0 0 , 0 1 1 5 2 5 3 , 2 2 1 5 5 , 0 4 8 2 6 , 4 6 9 7 1 , 5 0 1 0 8 2 , 6 4 6 0 0 2 , 9 8 0 0 0 , 0 1 1 6 0 3 7 , 0 2 6 0 6 , 4 4 3 7 5 , 0 6 9 7 1 , 5 0 1 8 2 7 , 5 0 6 0 0 2 , 9 8 0 0 0 , 0 1 1 7 6 8 1 , 1 7 6 0 , 9 4 2 1 1 , 6 5 9 7 1 , 5 0 1 2 2 1 , 1 6 5 0 0 8 , 4 4 0 0 0 , 0 1 1 8 7 9 6 , 8 1 - 3 7 9 , 3 5 6 0 2 , 1 5 9 7 1 , 5 0 1 6 5 0 , 2 1 5 0 0 0 , 0 1 1 9 6 5 8 , 0 2 - 1 7 3 , 9 5 8 0 8 , 5 4 9 7 1 , 5 0 1 2 8 0 , 8 5 4 0 0 0 , 0 1 1 0 1 1 3 2 , 3 2 - 8 0 3 , 5 6 1 7 8 , 9 3 9 7 1 , 5 0 1 1 1 7 , 8 9 3 0 0 0 , 0 1 1 1 1 3 4 8 , 5 2 - 9 3 8 , 1 7 0 4 3 , 3 3 9 7 1 , 5 0 1 3 0 4 , 3 3 3 0 0 0 , 0 1 1 2 1 6 1 7 , 8 2 - 3 2 0 , 9 7 6 5 1 , 6 2 9 7 1 , 5 0 1 5 6 5 , 1 6 2 0 0 0 , 0 1 1 3 1 7 7 8 , 1 3 - 5 2 9 , 6 8 4 5 2 , 8 1 9 7 1 , 5 0 1 2 4 5 , 2 8 1 0 0 0 , 0 1 1 4 1 4 5 3 , 5 3 - 7 1 6 , 5 9 2 6 5 , 9 9 7 1 , 5 0 1 7 1 6 , 5 9 0 0 0 , 0 1 1 5 1 0 0 0 , 0 8 1 0 0 0 , 0 0 3 6 1 IRR of cash flows 12.46% <-- =IRR(I13:I29) =(1-tax)*C14+tax*D14-(1-tax)*G14- H14BASIC LEVERAGED LEASE EXAMPLE 193 Financial Analysis of Leasing 7.8 Summary This chapter has looked at the lease-purchase decision. We have examined the decision to lease as a purely fi nancing decision, assuming (i) that all opera-tional factors between leasing and buying are equivalent, and (ii) that the essential fi rm decision to acquire the use of the asset has already been made. On the basis of these assumptions, the lease-purchase decision can be made using the equivalent-loan method. A leveraged lease is an arrangement whereby the lessor—the owner of the asset—fi nances his investment with a combination of debt and equity. In this chapter we analyzed the equity income of the lessor in a leveraged lease. The economic analysis of the lease cash fl ows shows that at some point in the lease life, the equity owner has negative equity value. Exercises 1. Your company is considering either purchasing or leasing an asset which costs $1,000,000. The asset, if purchased, will be depreciated on a straight-line basis over 6 years to a zero residual value. A leasing company is willing to lease the asset for $300,000 per year; the fi rst payment on the lease is due at the time the lease is undertaken (i.e., year 0), and the remaining 5 payments are due at the beginning of years 1–5. Your company has a tax rate T C = 40% and can borrow at 10% from its bank. a. Should your company lease or purchase the asset? b. What is the maximum lease payment it will agree to pay? 2. ABC Corp. is considering leasing an asset from XYZ Corp. Here are the relevant facts: Asset cost $1,000,000 Depreciation schedule year 1: 20% year 2: 32% year 3: 19.20% year 4: 11.52% year 5: 11.52% year 6: 5.76% Lease term 6 years Lease payment $200,000 per year, at the beginning of years 0, 1, … , 5. Asset residual value zero Tax rates ABC: T C = 0% (ABC has tax-loss carryforwards which prevent it from utilizing any additional tax shields) XYZ: T C = 40% 194 Chapter 7 ABC ’ s interest costs are 10% and XYZ ’ s interest costs are 7%. Show that it will be advan- tageous both for ABC to lease the asset and for XYZ to purchase the asset in order to lease it out to ABC. 3. Continuing with the above example: Find the maximum rental which ABC will pay and the minimum rental which XYZ will accept. 4. Perform a sensitivity analysis (using Data|Table ) on the certainty-equivalence factor in Section 7.5, showing how the IRR of the differential cash fl ows varies with the CE factor. 5. Hemp Airlines (HA, “we fl y high”) is about to buy 5 CFA3000 commuter jets. Each air- plane costs $50 million. A friendly bank has put together a consortium to fi nance the deal. The consortium includes a 20% equity investment and an 80% debt component. The debt has an interest rate of 8% annually, and is a term loan over 10 years. At the end of each of the next 10 years, HA will pay a lease payment of $35 million. At the end of the 10-year lease term, Hemp has the option to buy the aircraft for $10 million each; it is anticipated that it will exercise this option in which the planes are priced at their anticipated fair market value. The airplanes will be depreciated on a straight-line basis over 5 years to zero salvage value. If the equity partner in the lease has a tax rate of 35%, what is its expected compound rate of return? II PORTFOLIO MODELS Modern portfolio theory, which has its origins in the work of Harry Markowitz, John Lintner, Jan Mossin, and William Sharpe, represents one of the great advances in finance. Chapters 8–14 implement some of the ideas of these researchers and show you how to compute the standard portfolio problems in finance. In these chapters we make intensive use of Excel ’ s matrix functions, array functions, and data tables (see Chapters 32, 34, and 31). Chapter 8 reviews the basic mechanics of portfolio calculations. Starting with price data, we calculate asset and portfolio returns. We start with a simple two-asset problem and then generalize to multiple asset portfolio calculations. Chapter 9 discusses both the theory and the mechanics of the calculation of efficient portfolios when there are no restrictions on short sales. Using Excel ’ s matrix functions we can calculate two efficient portfolios, which can then be used to plot the whole efficient frontier. The remaining chapters of this section discuss computational and imple- mentation issues: • Chapter 10 shows how to use return data to calculate the variance-covariance matrix. Excel ’ s matrix-handling capabilities make it easy to do this calculation. • Chapter 11 discusses the computation of beta, and we replicate a simple test of the capital asset pricing model (CAPM). We use some market data to derive the security market line (SML). We then relate the results to Roll ’ s criticism of these tests. Excel makes it easy to do the regression analysis required for these tests. (Regressions are discussed in Chapter 33.) • The preceding chapters have assumed that portfolio optimizers could sell securities short. In Chapter 12 we show how to use Excel ’ s Solver to compute efficient portfolios when short sales are not allowed. We also show how to integrate other portfolio constraints into the optimization problem. • Chapter 13 discusses the Black-Litterman model. This widely used model takes as its starting point the optimality of the benchmark portfolio and uses this assumption to derive the market ’ s expected returns. The optimizer can then adjust the asset allocation to account for his own opinions. • Chapter 14 shows how to do an event study, which is an attempt to determine whether a particular event in the capital market or in the life of a company affected a company ’ s stock market performance. The event-study methodology aims to separate company-specific events from market and/or industry specific events and has often been used as evidence for or against market efficiency. 8 Portfolio Models—Introduction 8.1 Overview In this chapter we review the basic mechanics of portfolio calculations. We start with a simple example of two assets, showing how to derive the return distributions from historical price data. We then discuss the general case of N assets; for this case it becomes convenient to use matrix notation and exploit Excel ’ s matrix handling capabilities. It is useful before going on to review some basic notation: Each asset i (assets may be stocks, bonds, real estate, or whatever, although our numerical examples will be largely confi ned to stocks) is characterized by several statis-tics: E ( r i ), the expected return on asset i ; Var ( r i ), the variance of asset i ’ s return; and Cov ( r i , r j ), the covariance of asset i ’ s and asset j ’ s returns. Occasionally we will use μ i to denote the expected return on asset i . In addition, it will often be convenient to write Cov ( r i , r j ) as σ ij and Var ( r i ) as σ ii (instead of σi2 , as usual). Since the covariance of an asset ’ s returns with itself, σ ii = Cov ( r i , r i ), is in fact the variance of the asset ’ s returns, this notation is not only economical but also logical. 8.2 Computing Returns for Apple (AAPL) and Google (GOOG) In this section we compute the return statistics for two stocks: Apple (stock symbol AAPL) and Google (GOOG). Here is the price and return data. The returns include the dividends; see Appendix 8.1 for more details. 198 Chapter 8 1 2 3 4567 8 9 1011 12 13666768 69 7071AB C D E F G Monthly mean 2.61% -0.24% <-- =AVERAGE(F11:F71) Monthly variance 0.0125 0.0102 <-- =VAR.S(F11:F71) Monthly standard deviation 11.17% 10.09% <-- =STDEV.S(F11:F71) Annual mean 31.31% -2.91% <-- =12*C2 Annual variance 0.1497 0.1221 <-- =12*C3 Annual standard deviation 38.70% 34.94% <-- =SQRT(12)*C4 Date AAPL Google AAPL Google 1-Jun-07 122.04 580.11 2-Jul-07 131.76 645.90 0.0766 0.1074 <-- =LN(C12/C11) 1-Aug-07 138.48 599.39 0.0497 -0.0747 <-- =LN(C13/C12) 3-Jan-12 456.48 522.70 0.1197 0.0246 <-- =LN(C66/C65) 1-Feb-12 542.44 497.91 0.1725 -0.0486 <-- =LN(C67/C66) 1-Mar-12 599.55 471.38 0.1001 -0.0548 2-Apr-12 583.98 458.16 -0.0263 -0.0284 1-May-12 577.73 449.45 -0.0108 -0.0192 1-Jun-12 584.00 501.50 0.0108 0.1096PRICES AND RETURNS FOR APPLE AND GOOGLE June 2007 - June 2012 These data give the closing price at the end of each month for each stock. We defi ne the return as rP Ptt t=⎛ ⎝⎜⎞⎠⎟ −ln 1 At the top of the Excel sheet we calculate the return statistics for each stock. The monthly return is the percentage return that would be earned by an investor who bought the stock at the end of a particular month t − 1 and sold it at the end of the following month. Note that we use the continuously compounded return on the stock, r t = ln( P t / P t − 1 ). An alternative would have been to use the discrete return, P t / P t − 1 − 1. Appendix 2 at the end of this chapter discusses the reasons for our choice of the continuously compounded return. We now make a heroic assumption: We assume that the return data for the 60 months represent the distribution of the returns for the coming month. We thus assume that the past gives us some information about the way returns will behave in the future. This assumption allows us to assume that the average of the historic data represents the expected monthly return from each stock. It also allows us to assume that we may learn from the historic data what is the variance of the future returns. Using the Average, Var.s , and Stdev.s functions in Excel, we calculate the statistics for the return distribution: 199 Portfolio Models—Introduction Note: Sample Versus Population Statistics and Excel We interrupt this discussion of portfolio computations with a short note on the statistical computations. In statistics it is common to distinguish between sample statistics and population statistics. If we examine the whole range of possibilities for a given random variable, then we are dealing with the popula- tion . If we are dealing with a set of outcomes for the random variable, then we are dealing with a sample . In the case of portfolio return statistics we will almost always be dealing with a sample rather than the whole population. The table below gives the defi nitions of the population and sample statistics and the Excel functions that compute them.2 3 4 5 6 7 8AB C D E F Monthly mean 2.61% -0.24% <-- =AVERAGE(F11:F71) Monthly variance 0.0125 0.0102 <-- =VAR.S(F11:F71) Monthly standard deviation 11.17% 10.09% <-- =STDEV.S(F11:F71) Annual mean 31.31% -2.91% <-- =12*C2 Annual variance 0.1497 0.1221 <-- =12*C3 Annual standard deviation 38.70% 34.94% <-- =SQRT(12)*C4 Population Sample Mean, average, μ Average = =∑1 1Nri iN Average = =∑1 1Nri iN Variance Var p .=− () =∑1 2 1Nrri iN Var s .=−−() =∑1 12 1 Nrri iN Standard deviation Stdev p .=− () =∑1 2 1Nrri iN Stdev s .=−−() =∑1 12 1 Nrri iN Covariance Covariance p .= −() −() =∑1 1Nrr rrit i jt j tN Covariance s .= −−() −() =∑1 11 Nrr rrit i jt j tN Correlation CorrelCovar p Stdev p Stdev pCovar s(, ).( , ) .( ) .( ).(, )ijij ijij=∗=SStdev s Stdev s .() .()ij∗ 200 Chapter 8 Population Sample Alternative Excel from previous versions, still work Var, VarP, Stdev, StdevP VarS, StdevS Covar computes the population covariance. New versions of Excel distinguish between population and sample covariance. Regression slope Excel Slope , equivalent to slope _data _dataCovar p Var pCovar S Va(, ).( , ) .( , ).( , )iMiM iMiM==rrS.( , )iM Sample or Population? Does It Matter? All of this discussion about population versus sample statistics may not matter much. We like the point of view stated by Press et al. in their splendid book Numerical Recipes : “There is a long story about why the denominator is N − 1 instead of N . If you have never heard that story, you may consult any good statistics text. We might also comment that if the difference between N and N − 1 ever matters to you, then you are up to no good anyway—e.g., trying to substantiate a questionable hypothesis with marginal data.” 1 Back to Our Portfolio Example Next we want to calculate the covariance of the returns. 1 23 4 5 5960 61 6263 64 656667 68 697071 72 7374 75 76H G F E D C B A Date AAPL Google AAPL Google Product 2-Jul-07 7.66% 10.74% =B4-$B$65 --> 0.0505 0.1099 0.0056 <-- =E4*F4 1-Aug-07 4.97% -7.47% =B5-$B$65 --> 0.0237 -0.0723 -0.0017 <-- =E5*F5 8 6 0 0 . 0 - 2 6 4 0 . 0 - 4 6 4 1 . 0 % 6 8 . 4 - % 5 2 . 7 1 2 1 - b e F - 1 9 3 0 0 . 0 - 3 2 5 0 . 0 - 0 4 7 0 . 0 % 8 4 . 5 - % 1 0 . 0 1 2 1 - r a M - 1 4 1 0 0 . 0 0 6 2 0 . 0 - 4 2 5 0 . 0 - % 4 8 . 2 - % 3 6 . 2 - 2 1 - r p A - 2 6 0 0 0 . 0 8 6 1 0 . 0 - 9 6 3 0 . 0 - % 2 9 . 1 - % 8 0 . 1 - 2 1 - y a M - 1 7 1 0 0 . 0 - 0 2 1 1 . 0 3 5 1 0 . 0 - % 6 9 . 0 1 % 8 0 . 1 2 1 - n u J - 1 % 4 2 . 0 - % 1 6 . 2 e g a r e v A ) 3 6 C : 4 C ( S . R A V = - - < 2 0 1 0 . 0 5 2 1 0 . 0 e c n a i r a V Covariance computation ) 3 6 G : 4 G ( E G A R E V A = - - < 6 5 9 1 0 0 . 0 ) 3 6 C : 4 C ( S . V E D T S = - - < 9 0 0 1 . 0 7 1 1 1 . 0 n o i t a i v e d d r a d n a t S ) 3 6 C : 4 C , 3 6 B : 4 B ( P . E C N A I R A V O C = - - < 6 5 9 1 0 0 . 0 ) 6 6 C ( T R Q S = - - < 9 0 0 1 . 0 7 1 1 1 . 0 0.001956 <-- =COVAR(B4:B63,C4:C63) 9 5 / 0 6 * ) 3 6 G : 4 G ( E G A R E V A = - - < 9 8 9 1 0 0 . 0 ) 3 6 C : 4 C ( P . R A V = - - < 0 0 1 0 . 0 3 2 1 0 . 0 ) 3 6 C : 4 C , 3 6 B : 4 B ( S . E C N A I R A V O C = - - < 9 8 9 1 0 0 . 0 ) 3 6 C : 4 C ( P . V E D T S = - - < 0 0 0 1 . 0 8 0 1 1 . 0 0.1108 0.1000 <-- =SQRT(C70) Correlation computation 0.1765 <-- =CORREL(B4:B63,C4:C63) 0.1765 <-- =G68/(B71*C71) 0.1765 <-- =G71/(B67*C67)Stock returnsCOMPUTING COVARIANCE AND CORRELATION Return minus average 1. William H. Press et al., Numerical Recipes (Cambridge University Press, 1986), p. 456. 201 Portfolio Models—Introduction The column Product contains the multiple of the deviation from the mean in each month, i.e., the terms ( r WMT , t − E ( r WMT ))( r TGM , t − E ( r TGT )), for t = 1, … , 12. The population covariance is Average(product) = 0.0020. While it is worthwhile calculating the covariance this way at least once, there is a shorter way which is also illustrated above: The Excel functions Covariance . P(AAPL,GOOG) and Covariance.S(AAPL,GOOG) calculate the population and the sample covariance directly. 2 There is no necessity to fi nd the difference between the returns and the means. Simply use Covariance.P or Covariance.S directly on the columns, as illustrated above. The covariance is a hard number to interpret, since its size depends on the units in which we measure the returns. (If we were to write the returns in percentages—i.e., 4 instead of 0.04—then the covariance would be 20, which is 10,000 times the number we just calculated.) We can also calculate the cor- relation coeffi cient ρ AB , which is defi ned as ρσσAAPL GOOGAAPL GOOG AAPL GOOGCov r r ,(, )= The correlation coeffi cient is unit-free; calculating it for our example gives ρ AAPL , GOOG = 0.1765. As illustrated above, the correlation coeffi cient can be calculated directly in Excel using the function Correl(AAPL,GOOG) . The correlation coeffi cient measures the degree of linear relation between the returns of Stock A and Stock B. The following facts can be proven about the correlation coeffi cient: • The correlation coeffi cient is always between + 1 and − 1: − 1 ≤ ρ AB ≤ 1. • If the correlation coeffi cient is + 1, then the returns on the two assets are linearly related with a positive slope; i.e., if ρ AB = 1, then rc d r dAt Bt =+ > , where 0 • If the correlation coeffi cient is − 1, then the returns on the two assets are linearly related with a negative slope; i.e., if ρ AB = − 1, then rc d r dAt Bt =+ < , where 0 2. The function Covar was used in pre-Excel 2013 and calculates the population covariance; it still works in current versions. As noted elsewhere, previous Excel versions had functions VarP , StdevP , VarS , StdevS (though still working, these are now replaced by Var.P , Stdev.P , Var.S , Stdev.S ). Note how, in our example, the difference between the sample and population covariance is very small. 202 Chapter 8 • If the return distributions are independent, then the correlation coeffi cient will be zero. (The opposite is not true: If the correlation coeffi cient is zero, this does not necessarily mean that the returns are independent. See the Exer- cises for an example.) A Different View of the Correlation Coeffi cient Another way to look at the correlation coeffi cient is to graph the Apple and Google returns on the same axes and then use the Excel Trendline facility to regress the returns of GOOG on those of AAPL. (The use of Excel ’ s Trendline function—used to calculate the regression equation—is explained in Chapter 33.) You can confi rm from the previous calculations that the regression R 2 is the correlation squared: y = 0.1594x - 0.0066 R² = 0.0312 -30%-20%-10%0%10%20% -42% -32% -22% -12% -2% 8% 18%Graphing GOOG (y-axis) against AAPL (x-axis) and using Trendline Note that R2= correla/g415on2 8.3 Calculating Portfolio Means and Variances In this section we show how to do the basic calculations for a portfolio ’ s mean and variance. Suppose we form a portfolio invested equally in AAPL and GOOG. What will be the mean and the variance of this portfolio? It is worth doing the brute force calculations at least once in Excel: 203 Portfolio Models—Introduction 1 2 3 4 5 6 7 89 1011 12 13 14 15 16 17AB C D E Proportion of AAPL 0.5 Proportion of GOOG 0.5 <-- =1-B2 AAPL returnGOOG returnPortfolio return 2-Jul-07 7.66% 10.74% 9.20% <-- =$B$2*B6+$B$3*C6 1-Aug-07 4.97% -7.47% -1.25% <-- =$B$2*B7+$B$3*C7 4-Sep-07 10.28% -1.13% 4.57% <-- =$B$2*B8+$B$3*C8 1-Oct-07 21.33% -14.03% 3.65% 1-Nov-07 -4.15% 4.91% 0.38% 3-Dec-07 8.35% 10.97% 9.66% 2-Jan-08 -38.07% -17.58% -27.83% 1-Feb-08 -7.95% 4.37% -1.79% 3-Mar-08 13.79% 2.81% 8.30% 1-Apr-08 19.24% 7.55% 13.40% 1-May-08 8.17% 4.44% 6.30% 2-Jun-08 -11.98% -2.15% -7.06%CALCULATING THE MEAN AND STANDARD DEVIATION OF A PORTFOLIO Computing the statistics for this example: 5 6789 10111213141516171819GH I J G O O G L P A A s n r u t e r t e s s A ) 5 6 C : 6 C ( E G A R E V A = - - < % 4 2 . 0 - % 1 6 . 2 n r u t e r n a e M ) 5 6 C : 6 C ( S . R A V = - - < 2 0 1 0 . 0 5 2 1 0 . 0 e c n a i r a V Standard deviation 11.17% 10.09% <-- =STDEV.S(C6:C65) ) 5 6 C : 6 C , 5 6 B : 6 B ( S . E C N A I R A V O C = - - < 0 2 0 0 . 0 e c n a i r a v o C Portfolio mean return 1.18% <-- =AVERAGE(D6:D65)1.18% <-- =B2*H6+B3*I6 Portfolio return variance 0.0067 <-- =VAR.S(D6:D65)0.0067 <-- =B2^2*H7+B3^2*I7+2*B2*B3*H9 Portfolio return standard deviation 0.0816 <-- =SQRT(H16)0.0816 <-- =STDEV.S(D6:D65) 204 Chapter 8 The mean portfolio return is exactly the average of the mean returns of the two assets: Expected portfolio return E r E r E r p AAPL GOOG == + () . ( ) . ( ) 05 05 In general the mean return of the portfolio is the weighted average return of the component stocks. If we denote by x the proportion invested in AAPL and 1 − x the proportion invested in stock GOOG, then the expected portfolio return is given by: Er x Er xEr p AAPL GOOG () ( )( )( )=+ − 1 However, the portfolio ’ s variance is not the average of the two variances of the stocks! The formula for the variance is Var r x Var r x Var r x x Cov r r p AAPL GOOG AAPL GO () ( ) ( ) ( , =+ − () +−()2 212 1 OOG) Another way of writing this is σ σσ ρ σ σ p AAPL GOOG AAPL GOOG AAPL GOOG xx x x22 2 2 212 1 =+ − () +−() , A frequently performed exercise is to plot the means and standard deviations for various portfolio proportions x . To do this we build a table using Excel ’ s Data|What-If|DataTable command (see Chapter 31); cells B16 and C16 contain the data table ’ s header, which refers to cells B11 and B10, respectively. 205 Portfolio Models—Introduction 1 2 3 4 5 6 78 9 1011 12 13 14 15 16 1718 19 20 21 22 23 2425 26 27 28 2930 31 32 33 34 35 3637AB C D E F G H I J Asset returns AAPL GOOG % 4 2 . 0 - % 1 6 . 2 n r u t e r n a e M 2 0 1 0 . 0 5 2 1 0 . 0 e c n a i r a V Standard deviation 11.17% 10.09% 0 2 0 0 . 0 e c n a i r a v o C 5 . 0 L P A A f o n o i t r o p o r P Portfolio mean return 1.18% <-- =B8*B3+(1-B8)*C3 Portfolio return variance 0.0067 <-- =B8^2*B4+(1-B8)^2*C4+2*B8*(1-B8)*B6 Portfolio return standard deviation 8.16% <-- =SQRT(B11) Data table—varying the proportion of AAPL Portfolio standard deviationPortfolio mean return Proportion of AAPL 8.16% 1.18% <-- =B10, table header -0.5 15.18% -1.67% -0.4 14.04% -1.38% -0.3 12.95% -1.10% -0.2 11.91% -0.81% -0.1 10.95% -0.53% 0 10.09% -0.24% 0.1 9.34% 0.04% 0.2 8.75% 0.33% 0.3 8.33% 0.61% 0.4 8.13% 0.90% 0.5 8.16% 1.18% 0.6 8.41% 1.47% 0.7 8.87% 1.75% 0.8 9.50% 2.04% 0.9 10.28% 2.32% 1 11.17% 2.61% 1.1 12.15% 2.89% 1.2 13.20% 3.18% 1.3 14.30% 3.46% 1.4 15.45% 3.75% 1.5 16.62% 4.04%CALCULATING THE MEAN AND STANDARD DEVIATION OF A PORTFOLIO -2%-1%0%1%2%3%4%5% 0% 2% 4% 6% 8% 10% 12% 14% 16% 18%Por/g414olio mean return E(rp) Por/g414olio standard devia/g415on spPor/g414olio E(rp) and sp 8.4 Portfolio Mean and Variance—Case of N Assets In the previous sections we discussed the computation of a portfolio ’ s mean, variance, and standard deviation for the case wherein the portfolio is composed of only two assets. In this section we extend this discussion to portfolios of more than two assets. For this case, matrix notation greatly simplifi es the writing of the portfolio problem. 3 In the general case of N assets, suppose that the proportion of asset i in the portfolio is denoted by x i . We require that xi i∑ =1 , but we place no restrictions on the signs of the x i ; if x i > 0, this 3. Chapter 32 gives an introduction to matrices suffi cient to deal with all the problems encoun- tered in this book. The Excel matrix functions MMult and MInverse used in portfolio problems are discussed in this chapter. 206 Chapter 8 indicates a purchase of asset i and if x i < 0, this indicates a short sale. 4 We usually write the portfolio composition x and the vector of means E ( r ) as column vectors (we make no pretense at consistency—when convenient we will write these as row vectors): xx x x xErEr Er Er Er NN=⎡ ⎣⎢ ⎢⎢⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥⎥⎥=⎡ ⎣⎢ ⎢⎢ 1 2 31 2 3 /vertellipsis/vertellipsis()() () () ()⎢ ⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥⎥⎥ We may then write x T and E ( r ) T as the transpose of these two vectors: x x x x Er Er Er ErT NT N =[] () =() () ( )[] 12 1 2 ,, , , , , , …… The expected return of the portfolio whose proportions are given by X is the weighted average of the expected returns of the individual assets: Er x Er xi i iN () ( )= =∑ 1 which, in matrix notation, can be written as: Er x Er xEr Er x pi i iN T T()= ()= ()=() =∑ 1 The portfolio ’ s variance is given by Var r x Var r x x Cov r r Xi i iN ij i j jiN iN () , =() ( ) + () == + =∑∑ ∑2 11 12 This looks bad, but it is really a straightforward extension of the expression for the variance of a portfolio of two assets which we had before: Each asset ’ s variance appears once, multiplied by the square of the asset ’ s proportion in the portfolio; the covariance of each pair of assets appears once, multiplied by twice the product of the individual assets’ proportions. Another way of writing the variance is to use the notation Var r Cov r r ii i i ji j()= () = σσ,, 4. In Chapter 12 we discuss portfolio optimization when there are short-sale restrictions. In the meantime we assume that short selling is unrestricted. 207 Portfolio Models—Introduction In this case the variance of portfolio x is: Var r x x Xi jij j i() =∑ ∑ σ The most economical representation of the portfolio variance uses matrix notation. It is also the easiest representation to implement for large portfolios in Excel. In this representation we call the matrix that has σ ij in the i th row and the j th column the variance-covariance matrix : SN N N NNN N N=⎡ ⎣⎢σσσ σ σσσ σ σσσ σ σσσ σ11 12 13 1 21 22 23 2 31 32 33 3 123/midhorizellipsis /midhorizellipsis/midhorizellipsis /vertellipsis /midhorizellipsis⎢ ⎢ ⎢⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥⎥⎥ Then the portfolio variance is given by Var ( r p ) = x T Sx . In Excel formulas, this is written as the array function mmult(mmult(transpose(x),S),x) . 5 Computing the Covariance Between Two Portfolios If we have two portfolios represented as row vectors, x = [ x 1 , x 2 , … , x N ] and y = [ y 1 , y 2 , … , y N ], then the covariance of the two portfolios is given by Cov ( x , y ) = xSy T = ySx T . In Excel formulas this is the array function MMult (MMult(x,S),Transpose(y)) . Portfolio Calculations Using Matrices—An Example We implement the above formulas in a numerical example. Suppose that there are four risky assets which have the following expected returns and variance-covariance matrix: 5. Array functions are discussed in Chapter 34. The many examples below illustrate their use for portfolio optimization. 1 2 3 4 56ABCDEF Mean returns E(r) 0.10 0.01 0.03 0.05 6% 0.01 0.30 0.06 -0.04 8% 0.03 0.06 0.40 0.02 10% 0.05 -0.04 0.20 0.50 15%Variance-covariance, SA FOUR-ASSET PORTFOLIO PROBLEM 208 Chapter 8 We consider two portfolios of risky assets: 8 9AB C D E Portfolio x 0.20 0.30 0.40 0.10Portfolio y 0.20 0.10 0.10 0.60 We calculate the means, variances, and covariance of the two portfolios. We use the Excel array function MMult for the matrix multiplications and the array function Transpose to make a row vector into a column vector. 6 1 2 3456 7 89 1011 12 13 14 15ABC D E F G Mean returns E(r) % 6 5 0 . 0 3 0 . 0 1 0 . 0 0 1 . 0 % 8 4 0 . 0 - 6 0 . 0 0 3 . 0 1 0 . 0 % 0 1 2 0 . 0 0 4 . 0 6 0 . 0 3 0 . 0 % 5 1 0 5 . 0 2 0 . 0 4 0 . 0 - 5 0 . 0 Portfolio x 0.20 0.30 0.40 0.10 Portfolio y 0.20 0.10 0.10 0.60 Portfolio x and y statistics: Mean, variance, covariance, correlation Mean, E(rx) 9.10% Mean, E(r y) 12.00% <-- {=MMULT(B9:E9,F3:F6)} Variance σx20.1216 Variance σy20.2034 Covariance(x,y) 0.0714Correlation ρ xy 0.4540 <-- =B14/SQRT(B13*E13)Variance-covariance, SA FOUR-ASSET PORTFOLIO PROBLEM <-- {=MMULT(MMULT(B9:E9,A3:D6),TRANSPOSE(B9:E9))} 6. Remember from Chapter 34 that MMult and Transpose are array functions and must be entered by pressing [Ctrl] + [Shift] + [Enter] simultaneously. 7. This sentence is critical. As we shall see in the next chapter, all portfolio problems of N assets ultimately boil down to the two-asset case. We can now calculate the standard deviation and return of combinations of portfolios x and y . Note that once we have calculated the means, variances, and the covariance of the returns of the two portfolios, the calculation of the mean and the variance of any portfolio is the same as for the two-asset case. 7 209 Portfolio Models—Introduction 1 2 34567 8 9 1011 12 13 14 15 16 1718 19 20 21 22 23 24 25 26 2728293031 32 33343536 37 3839 40 41ABC D E F G Mean returns E(r) % 6 5 0 . 0 3 0 . 0 1 0 . 0 0 1 . 0 % 8 4 0 . 0 - 6 0 . 0 0 3 . 0 1 0 . 0 % 0 1 2 0 . 0 0 4 . 0 6 0 . 0 3 0 . 0 % 5 1 0 5 . 0 2 0 . 0 4 0 . 0 - 5 0 . 0 Portfolio x 0.20 0.30 0.40 0.10 Portfolio y 0.20 0.10 0.10 0.60 Portfolio x and y statistics: Mean, variance, covariance, correlation Mean, E(r x) 9.10% Mean, E(r y) 12.00% <-- {=MMULT(B9:E9,F3:F6)} Variance σx20.1216 Variance σy20.2034 Covariance(x,y) 0.0714 Correlation ρxy 0.4540 <-- =B14/SQRT(B13*E13) Calculating returns of combinations of Portfolio x and Portfolio y Proportion of x 0.3 Mean portfolio return, E(r p) 11.13% <-- =B18*B12+(1-B18)*E12 Portfolio variance σp20.1406 <-- =B18^2*B13+(1-B18)^2*E13+2*B18*(1-B18)*B14 Portfolio standard deviation σp 37.50% <-- =SQRT(B20) Table of returns (using Data Table) Proportion of xStandard deviation Mean 37.50% 11.13% -0.5 61.72% 13.45% -0.4 58.15% 13.16% -0.3 54.68% 12.87% -0.2 51.33% 12.58% -0.1 48.13% 12.29% 0.0 45.10% 12.00% 0.1 42.29% 11.71% 0.2 39.74% 11.42% 0.3 37.50% 11.13% 0.4 35.63% 10.84% 0.5 34.20% 10.55% 0.6 33.26% 10.26% 0.7 32.84% 9.97% 0.8 32.99% 9.68% 0.9 33.67% 9.39% 1.0 34.87% 9.10%Variance-covariance, SA FOUR-ASSET PORTFOLIO PROBLEM <-- {=MMULT(MMULT(B9:E9,A3: D6),TRANSPOSE(B9:E9))} 7%8%9%10%11%12%13%14% 30% 35% 40% 45% 50% 55% 60% 65%Por/g414olio expected return E(rp) Por/g414olio standard devia/g415on σpPor/g414olio Means and Returns 210 Chapter 8 8.5 Envelope Portfolios An envelope portfolio is the portfolio of risky assets that gives the lowest vari- ance of return of all portfolios having the same expected return. An effi cient portfolio is the portfolio that gives the highest expected return of all portfolios having the same variance. Mathematically, we may defi ne an envelope port-folio as follows: For a given return μ = E ( r p ), an effi cient portfolio p = [ x 1 , x 2 , … , x N ] is one that solves min xx V a r r xr E r xiji j jp i ii ip i iσ μ∑ ∑ ∑ ∑= () == () =subject to 1 The envelope is the set of all envelope portfolios, and the effi cient frontier is the set of all effi cient portfolios. 8 As shown by Black (1972), the envelope is the set of all convex combinations of any two envelope portfolios. 9 This means that if x = [ x 1 , x 2 , … , x N ] and y = [ y 1 , y 2 , … , y N ] are envelope portfolios and if a is a constant, then the portfolio Z defi ned by za x a yax a y ax a y ax a yNN=+ − =+− +− +−⎡ ⎣⎢ ⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥()() () ()11 1 111 22 /vertellipsis is also an envelope portfolio. Thus, we can compute the whole envelope fron- tier if we can fi nd any two envelope portfolios. 8. Chapter 9 discusses the difference between envelope and effi cient portfolios. In a word: The effi cient frontier is a subset of the envelope containing only the optimal portfolios. 9. We discuss Black ’ s theorem more extensively in the next chapter. 211 Portfolio Models—Introduction By this theorem, once we have found two effi cient portfolios x and y , we know that any other effi cient portfolio is a convex combination of x and y . If we denote the mean and variance of x and y by Er xx(){} ,σ2 and Er yy(){} ,σ2 , and if z = ax + (1 − a ) y , then Er a Er aEr aa a a C o v x yzx y zx y()= ()+− () =+ − () +−()( )() ,1 12 122 2 2 2σσ σ ==+ − () +−() aa a a x S y xyT 22 2 212 1 σσ Further details of the calculation of effi cient portfolios are discussed in Chapter 9. Portfolios x and y Are Not on the Envelope To show that the concepts of envelope and effi cient portfolio is non-trivial, we show that the two portfolios whose combinations are graphed in the previous example are not either envelope or effi cient. This is easy to see if we extend the data table to include numbers for the individual stocks: 212 Chapter 8 1 2 3 4 5 67 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 2526 27 28 29 3031 32 33 34 3536 37 38 39 4041 42 4344 45 46 47 4849G F E D C B A Mean returns E(r) % 6 5 0 . 0 3 0 . 0 1 0 . 0 0 1 . 0 % 8 4 0 . 0 - 6 0 . 0 0 3 . 0 1 0 . 0 % 0 1 2 0 . 0 0 4 . 0 6 0 . 0 3 0 . 0 % 5 1 0 5 . 0 2 0 . 0 4 0 . 0 - 5 0 . 0 Portfolio x 0.20 0.30 0.40 0.10 Portfolio y 0.20 0.10 0.10 0.60 Portfolio x and y statistics: Mean, variance, covariance, correlation Mean, E(rx) 9.10% Mean, E(ry) 12.00% <-- {=MMULT(B9:E9,F3:F6)} Variance σx20.1216 Variance σy20.2034 Covariance(x,y) 0.0714 Correlation ρxy 0.4540 <-- =B14/SQRT(B13*E13) Calculating returns of combinations of Portfolio x and Portfolio y Proportion of x 0.3 Mean portfolio return, E(rp) 11.13% <-- =B18*B12+(1-B18)*E12 Portfolio variance σp20.1406 <-- =B18^2*B13+(1-B18)^2*E13+2*B18*(1-B18)*B14 Portfolio standard deviation σp 37.50% <-- =SQRT(B20) Table of returns (using Data Table) Proportion of xStandard deviation Mean 37.50% 11.13% -1.0 80.60% 14.90% -0.8 72.88% 14.32% -0.6 65.38% 13.74% -0.4 58.15% 13.16% -0.2 51.33% 12.58% 0.0 45.10% 12.00% 0.2 39.74% 11.42% 0.4 35.63% 10.84% 0.6 33.26% 10.26% 0.8 32.99% 9.68% 1.0 34.87% 9.10% 1.2 38.60% 8.52% 1.4 43.69% 7.94% 1.6 49.74% 7.36% 1.8 56.44% 6.78% 2.0 63.58% 6.20% 2.2 71.02% 5.62% 2.4 78.69% 5.04% 2.6 86.53% 4.46% 2.7 90.49% 4.17% % 0 0 . 6 % 2 6 . 1 3 1 k c o t S % 0 0 . 8 % 7 7 . 4 5 2 k c o t S % 0 0 . 0 1 % 5 2 . 3 6 3 k c o t S % 0 0 . 5 1 % 1 7 . 0 7 4 k c o t SA FOUR-ASSET PORTFOLIO PROBLEM Variance-covariance, S <-- {=MMULT(MMULT(B9:E9,A3:D6),TRANSPOSE(B9:E 9))} 5%7%9%11%13%15%17% 30% 35% 40% 45% 50% 55% 60% 65% 70% 75% 80% 85%Porƞolio expected return E(rp) Porƞolio standard devia Ɵon σpPorƞolio Means and Returns Stock 1Stock 2Stock 3Stock 4 213 Portfolio Models—Introduction Were the two portfolios on the envelope, then all of the individual stocks would fall on or inside the curved line in the graph. In our case, two of the stock returns (stock 1 and stock 4) fall outside the frontier created by combina-tions of portfolios x and y . Thus x and y cannot be effi cient portfolios. In Chapter 9 you will learn to compute effi cient and envelope portfolios, and as you will see there, this requires considerably more computation. 8.6 Summary In this chapter we have reviewed the basic concepts and mathematics of portfolios. In succeeding chapters we shall describe how to compute the variance-covariance matrix from asset returns and how to calculate effi cient portfolios. Exercises 1. The exercise disk for this chapter contains monthly data for stock prices of Kellogg and IBM. Compute the return statistics and graph a frontier of combinations of the two stocks. 2. Consider the two stocks below. Graph the frontier of combinations of the two stocks. Show the effect on the frontier of varying the correlation from − 1 to + 1. 1 2 34 5AB C D E F Stock A Stock B Mean 3.00% 8.00% Sigma 15.00% 22.00% Correla/g415on 0.3000TWO STOCKS Varying the correla/g415on coeﬃcient 3. The disk for these exercises gives 5 years of monthly prices for two Vanguard funds—the Vanguard Index 500 fund (symbol VFINX) and the Vanguard High-Yield Corporate Bond fund (VWEHX). The fi rst of these funds tracks the Standard and Poor ’ s 500, and VWEHX is a junk-bond fund. Compute the monthly returns and the frontier of combinations of these two funds. 4. Consider the two random variables X and Y whose values are given below. Note that X and Y are perfectly correlated, though perhaps not linearly correlated. Compute their cor- relation coeffi cient. 214 Chapter 8 1 2345 6 789 1011 12AB XY -5 25 -4 16 -3 9 -2 4-1 1 001124 39 41 652 5 5. Assets A and B have the means and variances indicated in the exercise fi le. Graph three cases , ρABρ=− 1, 0, + 1 on one set o f axes, pro ducing the following chart: 2.0%2.5%3.0%3.5%4.0%4.5%5.0%5.5% 0% 1% 2% 3% 4% 5% 6% 7% 8%Eﬀect of Correla/g415on on Fron/g415er corr = +1 corr = 0 corr = -1 6. Three assets have the followin g means and variance-covariance matrix: 215 Portfolio Models—Introduction 1 234567 8 9AB CD E F Means 0.30 0.02 -0.05 10% 0.02 0.40 0.06 12% -0.05 0.06 0.60 14% Portfolio1 Portfolio2 Asset1 30% 50% Asset2 20% 40% Asset3 50% 10%Variance-covariance matrix a. Calculate the statistics—mean, variance, standard deviation, covariance, correlation— for the portfolios. b. Create a chart of the mean and standard deviation of combinations of the portfolios. c. Add the individual asset returns to the chart—are the two portfolios on the effi cient frontier? 7. Consider the data below and fi nd the portfolio weights so that the expected return of the portfolio is 14%. What is the corresponding portfolio standard deviation? 1 2 3 4AB C Mean returnStandard deviation of return % 5 3 % 2 1 1 k c o t S % 0 5 % 8 1 2 k c o t S Covariance(r 1,r2) 0.08350 8. In the previous problem fi nd two portfolios whose standard deviation is 45%. (There is an analytical solution to this problem, but it can also be solved by Solver .) Appendix 8.1: Adjusting for Dividends When downloading data from Yahoo or other sources, the “adjusted price” includes an adjustment for dividends. In this appendix we discuss two ways of making this adjustment. 10 The fi rst, and simplest, method of adjusting for dividends is to add them to the annual change in price. In the following 10. It might be argued that since the free sources available on the web make these adjustments automatically, the details in this appendix are superfl uous. Nevertheless we think they offer some interesting insights. (If you disagree, turn the page!) 216 Chapter 8 example, if you purchased GM stock at the 1986 year-end price of $33 per share and held it for 1 year, you would, at the end of the year, have made 0.57%. Discretely c ompounded return ,.. ..% 198730 69 2 50 33 001 0 568 =+−= The continuously compounded return is calculated by: Continuously compounded return ,l n.. .198730 69 2 50 33 00=+ ⎡ ⎣⎢⎤ ⎦⎥=0 0 567.% (The choice between discrete and continuous compounding is discussed in Appendix 8.2.) 1 2 3456789 1011 12 13141516ABC D E F YearShare price at endyearDividend per shareDiscretel y compounded returnContinuously compounded return 1 - 3 B / ) 4 C + 4 B ( = 0 0 . 3 3 6 8 9 1 1987 30.69 2.50 0.57% 0.57%1988 41.75 2.50 44.20% 36.60%1989 42.25 3.00 8.38% 8.05% <-- =LN((C4+B4)/B3)1990 34.38 3.00 -11.54% -12.26%1991 28.88 1.60 -11.35% -12.04%1992 32.25 1.40 16.54% 15.30%1993 54.88 0.80 72.64% 54.60%1994 42.13 0.80 -21.78% -24.56% 1995 52.88 1.10 28.13% 24.79% 1996 55.75 1.60 8.46% 8.12% Arithmetic annual return 13.43% 9.92% <-- =AVERAGE(E4:E13) Standard deviation of returns 27.15% 22.84% <-- =STDEVP(E4:E13)GENERAL MOTORS (GM) STOCK ADJUSTING FOR DIVIDENDS Dividend Reinvestment Another way of calculating returns is to assume that the dividends are rein- vested in the stock: 217 Portfolio Models—Introduction Consider fi rst 1987: Since we purchased the share at the end of 1986, we own 1 share at the end of 1987. If the 1987 dividend is turned into shares at the end-1987 price, we can use it to buy 0.081 additional shares: New shares purchased at end -198725 0 30 690 081 ==. .. Thus we start 1988 with 1.081 shares. Since the 1988 dividend per share is $2.50, the total dividend received on the shares is 1.081*$2.50 = $2.704. Reinvesting these dividends in shares gives New shares purchased at end -19882 704 41 750 065 ==. .. Thus, at the end of 1988, the holder of GM shares will have accumulated 1 + 0.081 + 0.065 = 1.146 shares. As the spreadsheet fragment above shows, this reinvestment of dividends will produce a holding of 1.596 shares at the end of 1996, worth $88.963. We can calculate the return on this investment in one of two ways: Continuously compounded returnend value beginning inves=−ln1996 ttment⎡ ⎣⎢⎤⎦⎥ =⎡ ⎣⎢⎤⎦⎥=10 88 963 33 0010 9 92 ln. ..% 1 2 3 45 6 7 8 9 10 11 12 13 14 15 1617 18GH I J KLM N YearEffective shares held at beginning of yearShare price at end yearDividend per shareTotal dividends receivedNumber of shares at end of yearValue of shares at end of year 5 I / 5 K + 5 H = 0 0 0 . 3 3 0 0 . 3 3 6 8 9 1 1987 1.00 30.69 2.500 2.500 1.081 33.188 1988 1.08 41.75 2.500 2.704 1.146 47.855 <-- =L5*I5 1989 1.15 42.25 3.000 3.439 1.228 51.867 1990 1.23 34.38 3.000 3.683 1.335 45.882 1991 1.33 28.88 1.600 2.136 1.409 40.677 1992 1.41 32.25 1.400 1.972 1.470 47.403 1993 1.47 54.88 0.800 1.176 1.491 81.835 1994 1.49 42.13 0.800 1.193 1.520 64.014 1995 1.52 52.88 1.100 1.672 1.551 82.021 1996 1.55 55.75 1.600 2.482 1.596 88.963 Annualized continous return 9.92% <-- =LN(M13/M3)/10 Compound geometric return 10.43% <-- =(M13/M3)^(1/10)-1 =H5*J5GM: REINVESTING THE DIVIDENDS IN SHARES 218 Chapter 8 Note that this continuously compounded return (the method preferred in this book) is the same as that calculated in the fi rst spreadsheet fragment in this appendix from the annual returns (cell E15). An alternative is to calculate the geometric return: Compound geometric returnend value initial inv estment=− ⎡ ⎣⎢⎤ 1996 ⎦ ⎦⎥− =⎡ ⎣⎢⎤⎦⎥−=11 0 11 01 88 963 33 0011 0 4 3/ /. ..% Appendix 8.2: Continuously Compounded Versus Geometric Returns Using the continuously compounded return assumes that PP ettrt= −1 , where r t is the rate of return during the period ( t − 1, t ). Suppose that r 1 , r 2 , … , r 12 are the returns for 12 periods (a period could be a month or it could be a year), then the price of the stock at the end of the 12 periods will be: PP err r 12 012 1 2=+++… This representation of prices and returns allows us to assume that the average periodic return is r = ( r 1 + r 2 + … + r 12 )/12. Since we wish to assume that the return data for the 12 periods represent the distribution of the returns for the coming period, it follows that the continuously compounded return is the appropriate return measure, and not the discretely compounded return r t = ( P At − P A , t − 1 )/ P A , t − 1 . How Different Are Continuously Compounded and Discretely Compounded Returns? The continuously compounded return will always be smaller than the dis-cretely compounded return, but the difference is usually not large. The follow-ing table shows the differences for the example in section 8.2: 219 Portfolio Models—Introduction 1 2 3 4 56 59606162636465666768 69 7071AB C D E F G H DateAAPL priceContinuous returnDiscrete returnGoogle priceContinuous returnDiscrete return 1 1 . 0 8 5 4 0 . 2 2 1 7 0 - n u J - 1 2-Jul-07 131.76 7.66% 7.96% <-- =B5/B4-1 645.90 10.74% 11.34% 1-Aug-07 138.48 4.97% 5.10% 599.39 -7.47% -7.20% 3-Jan-12 456.48 11.97% 12.71% 522.70 2.46% 2.49% 1-Feb-12 542.44 17.25% 18.83% 497.91 -4.86% -4.74% 1-Mar-12 599.55 10.01% 10.53% 471.38 -5.48% -5.33% 2-Apr-12 583.98 -2.63% -2.60% 458.16 -2.84% -2.80% 1-May-12 577.73 -1.08% -1.07% 449.45 -1.92% -1.90% 1-Jun-12 584.00 1.08% 1.09% 501.50 10.96% 11.58% . 2 e g a r e v a y l h t n o M % 6 2 . 0 % 4 2 . 0 - % 4 2 . 3 % 1 6 Monthly standard deviati % 7 0 . 0 1 % 9 0 . 0 1 % 9 6 . 0 1 % 7 1 . 1 1 n o % 1 9 . 2 - % 1 3 . 1 3 e g a r e v a l a u n n A % 5 0 . 1 2 1 % 4 0 . 4 3 1 e c n a i r a v l a u n n A % 2 0 . 0 1 1 % 8 7 . 5 1 1 n o i t a i v e d d r a d n a t s l a u n n A =SQRT(G70) -->APPLE AND GOOGLE COMPARING CONTINUOUS AND DISCRETE RETURNS =AVERAGE(G5:G64) --> =STDEV.S(G5:G64) --> =12*G66 -->=12*G67 --> Calculating Annual Returns and Variances from Periodic Returns Suppose we calculate a series of continuously compounded monthly rates of return r 1 , r 2 , … , r n and we wish to then calculate the mean and the variance of the annual rate of return. Clearly the mean annual return is given by: Mean annual returnnrt tn =⎡ ⎣⎢⎤ ⎦⎥ =∑ 121 1 To calculate the variance of the annual rate of return, we assume that the monthly rates of return are independent identically distributed random vari-ables. If we use the continuously compounded returns, it then follows that Var rnVar r t tn monthly () ( ) =⎡ ⎣⎢⎤ ⎦⎥= =∑ 12112 12σ , and that the standard deviation of the annual rate of return is given by σ σ = 12 monthly . 11 11. Note that this is not true for discretely computed returns. Thus the computation of the variance and the standard deviation are simpler when using continuous compounding. 9 Calculating Effi cient Portfolios 9.1 Overview This chapter covers the theory and calculations necessary for both versions of the classical capital asset pricing model (CAPM)—both that which is based on a risk-free asset (also known as the Sharp-Lintner-Mossin model) and Black ’ s (1972) zero-beta CAPM (which does not require the assumption of a risk-free asset). You will fi nd that using a spreadsheet enables you to do the necessary calculations easily. The structure of the chapter is as follows: We begin with some preliminary defi nitions and notation. We then state the major results (proofs are given in the appendix to the chapter). In succeeding sections we implement these results, showing you: • How to calculate effi cient portfolios. • How to calculate the effi cient frontier. This chapter includes more theoretical material than most chapters in this book: Section 9.2 contains the propositions on portfolios which underlie the calculations of both effi cient portfolios and the security market line (SML) in Chapter 11. If you fi nd the theoretical material in section 9.2 diffi cult, skip it at fi rst and try to follow the illustrative calculations in section 9.3. This chapter assumes that the variance-covariance matrix is given; we delay a dis-cussion of various methods of computing the variance-covariance matrix until Chapter 10. 9.2 Some Preliminary Defi nitions and Notation Throughout this chapter we use the following notation: There are N risky assets, each of which has expected return E ( r i ). The matrix E ( r ) is the column vector of expected returns of these assets: ErEr Er Er N()=⎡ ⎣⎢ ⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥() () ()1 2 /vertellipsis 222 Chapter 9 and S is the N × N variance-covariance matrix: SN N NN N N=⎡ ⎣⎢ ⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥σσ σ σσ σ σσ σ11 21 1 12 22 2 12/midhorizellipsis /midhorizellipsis /vertellipsis /midhorizellipsis A portfolio of risky assets (when our intention is clear, we shall just use the word portfolio ) is a column vector x whose coordinates sum to 1: xx x xx Ni iN =⎡ ⎣⎢ ⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥= =∑1 2 11/vertellipsis, Each coordinate x i represents the proportion of the portfolio invested in risky asset i . The expected portfolio return E ( r x ) of a portfolio x is given by the product of x and R : Er x R x Er xT ii iN ()=⋅ ≡ () =∑ 1. The variance of portfolio x ’ s return , σσxx x2≡ , is given by the product xS x x xT iji j jN iN = = =∑ ∑ σ 1 1 . The covariance between the return of two portfolios x and y , Cov ( r x ,ry ), is defi ned by the product σσxyT iji j jN iN xS y x y== = =∑ ∑ 1 1 . Note that σ xy = σ yx . The following graph illustrates four concepts. A feasible portfolio is any portfolio whose proportions sum to 1. The feasible set is the set of portfolio means and standard deviations generated by the feasible portfolios; this fea- sible set is the area inside and to the right of the curved line. A feasible port-folio is on the envelope of the feasible set if for a given mean return it has minimum variance. Finally, a portfolio x is an effi cient portfolio if it maximizes the return given the portfolio variance (or standard deviation). That is: x is effi cient if there is no other portfolio y such that E ( R y ) > E ( R x ) and σ y < σ x . The set of all effi cient portfolios is called the effi cient frontier ; this frontier is the heavier line in the graph. 223 Calculating Effi cient Portfolios 9.3 Five Propositions on Effi cient Portfolios and the CAPM In the appendix to this chapter we prove the following results, which are basic to the calculations of the CAPM. All of these propositions are used in deriving the effi cient frontier and the security market line; numerical illustrations are given in the next section and in succeeding chapters. P ROPOSITION 1 Let c be a constant. We use the notation E ( r ) − c to denote the following column vector: Er cEr c Er c Er c N()−=()− ()− ()−⎡ ⎣⎢ ⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥1 2 /vertellipsis Let the vector z solve the system of simultaneous linear equations E ( r ) – c = Sz . Then this solution produces a portfolio x on the envelope of the feasible set in the following manner: 224 Chapter 9 zS E r c xx x xz zN ii j jN= ()− {} ={} =− =∑1 1 1,, ,… where Furthermore, all envelope portfolios are of this form. Intuition A formal proof of the proposition is given in the appendix to this chapter, but the intuition is simple and geometric. Suppose we pick a constant c and we try to fi nd an effi cient portfolio x for which there is a tangency between c and the feasible set: Finding Envelope Portfolios Portfolio standard deviationPortfolio mean return cx, the tangency portfolio given c Proposition 1 gives a procedure for fi nding x ; furthermore, the proposition states that all envelope portfolios (in particular, all effi cient portfolios) are the result of the procedure outlined in the proposition. That is, if x is any envelope portfolio, then there exists a constant c and a vector z such that Sz = E ( r ) – c and xz z i i=∑ . P ROPOSITION 2 By a theorem fi rst proved by Black (1972), any two envelope portfolios are enough to establish the whole envelope. Given any two envelope portfolios x = { x 1 , … , x N } and y = { y 1 , … , y N }, all envelope portfolios are 225 Calculating Effi cient Portfolios convex combinations of x and y . This means that given any constant a , the portfolio ax a yax a y ax a y ax a y NN+− =+− +− +−⎡ ⎣⎢ ⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥()() () ()11 1 111 22 /vertellipsis is an envelope portfolio. P ROPOSITION 3 If y is any envelope portfolio, then for any other portfolio (envelope or not) x , we have the relationship: Er c Er c Cov x yxx y x y()=+ ()− [] =β βσwhere (, ) 2 Furthermore, c is the expected return of all portfolios z whose covariance with y is zero: cE r C o v y z z =() ( ) = ,,where 0 Notes If y is on the envelope, the regression of any and all portfolios x on y gives a linear relationship. In this version of the CAPM (usually known as “Black ’ s zero-beta CAPM,” in honor of Fischer Black, whose 1972 paper proved this result) the Sharpe-Lintner-Mossin security market line (SML) is replaced with an SML in which the role of the risk-free asset is played by a portfolio with a zero beta with respect to the particular envelope portfolio y . Note that this result is true for any envelope portfolio y . The converse of Proposition 3 is also true: P ROPOSITION 4 Suppose that there exists a portfolio y such that for any port- folio x the following relation holds: Er c Er c Cov x yxx y x y()=+ ()− [] =β βσwhere (, ) 2 226 Chapter 9 Then the portfolio y is an envelope portfolio. Propositions 3 and 4 show that an SML relation holds if and only if we regress all portfolio returns on an envelope portfolio with an R 2 = 100%. As Roll (1977, 1978) has forcefully pointed out, these propositions show that it is not enough to run a test of the CAPM by showing that the SML holds. 1 The only real test of the CAPM is whether the true market portfolio is mean- variance effi cient . We shall return to this topic in Chapter 10. T HE MARKET PORTFOLIO The market portfolio M is a portfolio composed of all the risky assets in the economy , with each asset taken in proportion to its value. To make this more specifi c: Suppose that there are N risky assets and that the market value of asset i is V i . Then the market portfolio has the follow- ing weights: Proportion of asset i in MV Vi h hN= =∑ 1 If the market portfolio M is effi cient (this is a big “if” as we shall see in Chapters 11 and 13, Proposition 3 is also true for the market portfolio. That is, the SML holds with E ( r z ) substituted for c : Er Er Er Er Cov x MCov z Mxz x M z x M()=+ ()− [] =()() =() () ,,β βσwhere and20 0 This version of the SML has received the most empirical attention of all of the CAPM results. In Chapter 11 we show how to calculate β and how to calculate the SML; we go on to examine Roll ’ s criticism of these empirical tests. From the following graph, it is easy to see how to locate a zero-beta portfolio on the envelope of the feasible set: 1. Roll ’ s 1977 paper is more often cited and more comprehensive, but his 1978 paper is much easier to read and intuitive. If you ’ re interested in this literature, start there. 227 Calculating Effi cient Portfolios When there is a risk-free asset, Proposition 3 specializes to the security market line of the classic capital asset pricing model: P ROPOSITION 5 If there exists a risk-free asset with return r f , then there exists an envelope portfolio M such that: Er r Er r Cov x Mxf x M f x M()=+ ()− [] =β βσwhere (, ) 2 As shown in the classic papers by Sharpe (1964), Lintner (1965), and Mossin (1966), if all investors choose their portfolios only on the basis of portfolio mean and standard deviation, then the portfolio x of Proposition 5 is the market portfolio M . In the remainder of this chapter, we explore the meaning of these proposi- tions using numerical examples worked out on Excel. 9.4 Calculating the Effi cient Frontier: An Example In this section we calculate the effi cient frontier using Excel. We consider a world with four risky assets having the following expected returns and vari-ance-covariance matrix: Finding Envelope Portfolios Portfolio standard deviationPortfolio mean return cx, the tangency portfolio given c Zero-beta portfolios alon g this line 228 Chapter 9 Each cell of the column vector labeled E(r) minus constant contains the mean return of the given asset minus the value of the constant c (in this case c = 4%). We use this column in fi nding the second envelope portfolio below. We separate our calculations into two parts: In the next subsection we cal- culate two portfolios on the envelope of the feasible set. In the subsequent subsection we calculate the effi cient frontier. Calculating Two Envelope Portfolios By Proposition 2, we have to fi nd two effi cient portfolios in order to identify the whole effi cient frontier. By Proposition 1 each envelope portfolio solves the system R − c = Sz for z . To identify two effi cient portfolios, we use two different values for c . For each value of c , we solve for z and then set xz zii h h=∑ to fi nd an effi cient portfolio. The c ’ s we solve for are arbitrary (see section 9.6), but to make life easy, we fi rst solve this system for c = 0. This gives the following results: 1 2 34 5 678AB C D E F G H Mean returns E(r)E(r) minus constant 0.10 0.01 0.03 0.05 6% 2.00% <-- =F3-$B$8 0.01 0.30 0.06 -0.04 8% 4.00% 0.03 0.06 0.40 0.02 10% 6.00% 0.05 -0.04 0.02 0.50 15% 11.00% Constant, c 4.00%CALCULATING THE FRONTIER Variance-covariance, S 10 11 1213 14 15 16AB C D E F G H Computing an envelope portfolio with constant = 0 zEnvelope portfolio x 0.3861 <-- {=MMULT(MINVERSE(A3:D6),F3:F6)} 0.3553 <-- =A12/SUM($A$12:$A$15) 2 6 3 2 . 0 7 6 5 2 . 0 3 5 5 1 . 0 8 8 6 1 . 0 2 3 5 2 . 0 2 5 7 2 . 0 Sum 1.0000 <-- =SUM(F12:F15) 229 Calculating Effi cient Portfolios The formulas in the cells are: • F o r z we use the array function MMult(MInverse(A3:D6),F3:F6) . The range A3:D6 contains the variance-covariance matrix and the cells F3:F6 contain the expected returns of the assets. • F o r x : Each cell contains the associated value of z divided by the sum of all the z ’ s. Thus, for example, cell F12 contains the formula = A12/SUM($A$12:$A$15) . To fi nd the second envelope portfolio we now solve this system for c = 0.04 (cell B8). 18 19 2021222324AB C D E F G H Computing an envelope portfolio with constant = 4.00% zEnvelope portfolio y 0.0404 <-- {=MMULT(MINVERSE(A3:D6),G3:G6)} 0.0782 <-- =A20/SUM($A$20:$A$23)0.1386 0.2684 0.1151 0.2227 0.2224 0.4307 Sum 1.0000 <-- =SUM(F20:F23) The portfolio y in cells F20:F23 is, by the results of Proposition 1, an enve- lope portfolio. This vector z associated with y is calculated in a manner similar to that of the fi rst vector, except that the array function in the cells is MMult(MInverse(A3:D6),G3:G6) , where G3:G6 contains the vector of expected returns minus the constant 0.04. To complete the basic calculations, we compute the means, standard devia- tions, and covariance of returns for portfolios x and y : 26 2728 29 30 31AB C D E F G H I J K } ) 6 F : 3 F , ) 3 2 F : 0 2 F ( E S O P S N A R T ( T L U M M = { - - < % 0 3 . 1 1 ) y ( E % 7 3 . 9 ) x ( E } ) 3 2 F : 0 2 F , ) 6 D : 3 A , ) 3 2 F : 0 2 F ( E S O P S N A R T ( T L U M M ( T L U M M = { - - < 4 1 4 1 . 0 ) y ( r a V 2 6 8 0 . 0 ) x ( r a V ) 7 2 F ( T R Q S = - - < % 0 6 . 7 3 ) y ( a m g i S % 7 3 . 9 2 ) x ( a m g i S Cov(x,y) 0.1040 <-- {=MMULT(MMULT(TRANSPOSE(F12:F15),A3:D6),F20:F23)}Corr(x,y) 0.9419 <-- =B30/(B28*F28) 230 Chapter 9 The transpose vectors of x and of y are inserted using the array function Transpose (see Chapter 34 for a discussion of array functions). This now enables us to calculate the mean, variance, and covariance as follows: E(x) uses the array formula MMult(transpose_x,means) . Note that we could have also used the function SumProduct(x,means) . Var(x) uses the array formula MMult(MMult(transpose_x, var_cov),x) . Sigma(x) uses the formula Sqrt(var_x) . Cov(x,y) uses the array formula MMult(MMult(transpose_x,var_ cov),y) . Corr(x,y) uses the formula cov(x,y)/(sigma_x*sigma_y) . The following spreadsheet illustrates everything that has been done in this subsection: 231 Calculating Effi cient Portfolios 1 2 3456789 10 11 12131415161718 19 202122232425262728293031AB C D E F G H Mean returns E(r)E(r) minus constant 0.10 0.01 0.03 0.05 6% 2.00% <-- =F3-$B$8 0.01 0.30 0.06 -0.04 8% 4.00% 0.03 0.06 0.40 0.02 10% 6.00% 0.05 -0.04 0.02 0.50 15% 11.00% Constant, c 4.00% Computing an envelope portfolio with constant = 0 zEnvelope portfolio x 0.3861 <-- {=MMULT(MINVERSE(A3:D6),F3:F6 )} 0.3553 <-- =A12/S UM($A$12:$A$15) 0.2567 0.2362 0.1688 0.1553 0.2752 0.2532 Sum 1.0000 <-- =SUM(F12:F15) Computing an envelope portfolio with constant = 4.00% zEnvelope portfolio y 0.0404 <-- {=MMULT(MINVERSE(A3:D6),G3:G6) } 0.0782 <-- =A20/S UM($A$20:$A$23) 0.1386 0.2684 0.1151 0.2227 0.2224 0.4307 Sum 1.0000 <-- =SUM(F20:F23) E(x) 9.37% E(y) 11.30% <-- {=MMULT(TRANSPOSE(F2 Var(x) 0.0862 Var(y) 0.1414 <-- {=MMULT(MMULT(TRANS P Sigma(x) 29.37% Sigma(y) 37.60% <-- =SQRT(F27) Cov(x,y) 0.1040 <-- {=MMULT(MMULT(TRANSPOSE(F12:F15),A3:D6),F20:F23)}Corr(x,y) 0.9419 <-- =B30/(B28*F28)CALCULATING THE FRONTIER Variance-covariance, S Calculating the Envelope By Proposition 2 of section 9.3, convex combinations of the two portfolios calculated in the previous subsection allow us to calculate the whole envelope of the feasible set (which, of course, includes the effi cient frontier). Suppose we let p be a portfolio that has proportion a invested in portfolio x and 232 Chapter 9 We can turn this calculation into a data table (see Chapter 31) to get the fol- lowing table: proportion (1 − a ) invested in y . Then—as discussed in Chapter 8—the mean and standard deviation of p ’ s return are: Er a Er aEr aa a a C o v x ypx y px y()= ()+−() () =+ − () +−()1 12 122 2 2σσ σ (, ) Here ’ s a sample calculation for our two portfolios: 34 35 36 37 38AB C D E F G A single portfolio calculation Proportion of 0.3 E(rp) 10.72% <-- =B35*B26+(1-B35)*F26 p20.1207 <-- =B35^2*B27+(1-B35)^2*F27+2*B35*(1-B35)*B30 p 34.75% <-- =SQRT(B37)σ σ 233 Calculating Effi cient Portfolios 34 35 36 37 38 39 40 41 42 434445 46 474849 50 515253 54 555657 58 596061 62 636465AB C D E F G H I A single portfolio calculation Proportion of x 0.3 E(rp) 10.72% <-- =B35*B26+(1-B35)*F26 p20.1207 <-- =B35^2*B27+(1-B35)^2*F27+2*B35*(1-B35)*B30 p 34.75% <-- =SQRT(B37) Data table: We vary the proportion of x to produce a graph of the frontier Proportion of x Sigma Return 34.75% 10.72% <-- =B36, data table header -1.5 54.56% 14.20% -1.2 50.93% 13.62%-1.0 48.56% 13.23% -0.8 46.24% 12.85% -0.6 43.97% 12.46%-0.4 41.77% 12.08%-0.2 39.64% 11.69% 0.0 37.60% 11.30%0.3 35.20% 10.82%0.5 33.00% 10.34%0.8 31.04% 9.86% 0.8 30.68% 9.76% 1.0 29.37% 9.37%1.2 28.27% 8.99%1.4 27.42% 8.60% 1.6 26.83% 8.21% 1.8 26.53% 7.83%2.0 26.52% 7.44%2.2 26.80% 7.06% 2.4 27.37% 6.67% 2.6 28.21% 6.28%2.8 29.30% 5.90%3.0 30.60% 5.51% 4%6%8%10%12%14%16% 2 0 %2 5 %3 0 %3 5 %4 0 %4 5 %5 0 %5 5 %6 0 %σ σ The two portfolios, x and y , whose convex combinations compose the enve- lope are marked. Also marked are other portfolios, some of which contain short positions of either x or y . Note that the convex combinations all lie on the envelope, but may not necessarily be effi cient. An example is the last point in the data table—300% in x and − 200% in portfolio y . Thus, while every effi cient portfolio is a convex combination of any two effi cient portfolios, it is not true that every convex combination of any two effi cient portfolios is effi cient. 234 Chapter 9 1 2 3456789 101112131415 1617AB C D E F G Mean returns E(r) 0.10 0.01 0.03 0.05 6% 0.01 0.30 0.06 -0.04 8% 0.03 0.06 0.40 0.02 10% 0.05 -0.04 0.02 0.50 15% Constant 4% Envelope portfolio 0.0782 0.26840.22270.4307 Portfolio mean 11.30% <-- =SUMPRODUCT(A11:A14,F3:F6) Portfolio sigma 37.60% <-- {=SQRT(MMULT(MMULT(TRANSPOSE(A11:A14),A3:D6),A11:A14))}Variance-covariance, S FINDING ENVELOPE PORT FOLIOS IN ONE STEP <-- {=MMULT(MINVERSE(A3:D6),F3:F6- B8)/SUM(MMULT(MINVERSE(A3:D6),F3:F6-B8))} 9.5 Finding Effi cient Portfolios in One Step The examples in section 9.4 fi nd effi cient portfolios by writing out most of the components of the portfolio separately on the spreadsheet. However, for some uses we will want to calculate the effi cient portfolio in one step. Here ’ s an example: This approach requires a number of Excel tricks, most of which relate to the correct use of array functions. The end result is that we can write the Proposition 1 expression for an envelope portfolio, xSE rc Sum S E r c=()− {} ()− {}[]− −1 1 , in one cell: • In cells A11:A14 we have used the array formula F3:F6-B8 to indicate the expected returns minus the constant in cell B8. • In these same cells we have used SUM(MMult(MInverse(A3:D6),F3:F6- B8)) to give the denominator of the expression xSE rc Sum S E r c=()− {} ()− {}[]− −1 1 . 235 Calculating Effi cient Portfolios Using Cell Names for Clarity We can make the whole process even clearer by using cell names. To defi ne a cell name, simply mark the cell or a range of cells and go to the Name Box , as shown below: You can now go into the box and type a name: 236 Chapter 9 9.6 Three Notes on the Optimization Procedure In this section we note three additional facts about the optimization procedure of Proposition 1, which leads to the computation of envelope portfolios. Note 1: All Roads Lead to Rome: Envelope Is Determined by Any Two c ’ s By Proposition 2, the envelope is determined by any two of its portfolios. This means that for the determination of the envelope it is irrelevant which two portfolios we use. To drive home this point, the spreadsheet below computes three envelope portfolios: • The envelope portfolio x is computed with a constant c = 0%. • The envelope portfolio y is computed with a constant c = 4%. • A third envelope portfolio z is computed with a constant c = 6% (cells D11:D14). As shown in rows 20–26, portfolio z is composed of a convex combination of x and y . This is true for any x , y , and z . This little exercise shows that the constants c which determine the enve- lope are completely arbitrary. Any two constants will determine the same envelope. The name can now be used, as illustrated below: 1 2 3456789 101112131415 1617AB C D E F G Mean returns E(r) 0.10 0.01 0.03 0.05 6% 0.01 0.30 0.06 -0.04 8% 0.03 0.06 0.40 0.02 10% 0.05 -0.04 0.02 0.50 15% Constant 4% Envelope portfolio 0.0782 0.26840.22270.4307 Portfolio mean 11.30% <-- =SUMPRODUCT(portx,means) Portfolio sigma 37.60% <-- {=SQRT(MMULT(MMULT(TRANSPOSE(portx),varcov),portx))}FINDING ENVELOPE PORTFOLIOS IN ONE STEP Variance-covariance, S <-- {=MMULT(MINVERSE(varcov),means- B8)/SUM(MMULT(MINVERSE(varcov),means-B8))} 237 Calculating Effi cient Portfolios Note 2: Some Values of c Locate Non-Effi cient Envelope Portfolios The optimization procedure of Proposition 1 locates a portfolio x, which has proportions: xSE rc Sum S E r c=()− {} ()− {}[]− −1 1 Although always on the envelope, this portfolio is not necessarily effi cient, as is shown in the example below, where a constant c = 0.11 leads to an ineffi cient portfolio. 1 2 3 4 5 6 7 8 9 1011 12 1314 15 16 17 1819 20 21 22 2324 25 26AB C D E F G Mean returns E(r) 0.10 0.01 0.03 0.05 6% 0.01 0.30 0.06 -0.04 8% 0.03 0.06 0.40 0.02 10% 0.05 -0.04 0.02 0.50 15% Constant 0% 4% 6% Portfolio xPortfolio yPortfolio z 0.3553 0.0782 -0.5724 0.2362 0.2684 0.3439 0.1553 0.2227 0.3811 0.2532 0.4307 0.8474 Portfolio mean 9.37% 11.30% 15.84% <-- =SUMPRODUCT(portfolioz,means) Portfolio sigma 29.37% 37.60% 65.20% Show: portfolio z is a linear proportion of portfolio x and portfolio y Proportion -2.34822 <-- =(D11-C11)/(B11-C11) Check z1 -0.5724 <-- =$B$21*B11+(1-$B$21)*C11 z2 0.3439 <-- =$B$21*B12+(1-$B$21)*C12 z3 0.3811 <-- =$B$21*B13+(1-$B$21)*C13 z4 0.8474 <-- =$B$21*B14+(1-$B$21)*C14<-- {=SQRT(MMULT(MMULT(TRANSPOSE(port folioz),varcov),portfolioz))}CALCULATING THE ENVELOPE All constants c lead to the same envelope Variance-covariance, S <-- {=MMULT(MINVERSE(varcov),means- D8)/SUM(MMULT(MINVERSE(varcov),mean s-D8))} 238 Chapter 9 Note 3: The Portfolio Associated with c = r f Is Optimal We ’ ve said all this before in our discussion of Proposition 1, but it ’ s worth repeating. 2 If we set c to be equal to the risk-free rate of interest, and if the resulting optimizing portfolio xSE rc Sum S E r c=()− {} ()− {}[]− −1 1 is effi cient, then this portfolio is the optimal investment portfolio for an investor whose preferences are defi ned solely in terms of the mean and standard deviation of portfolio 8 9 101112131415 1617 181920212223242526 27 2829303132333435363738394041424344AB C D E F G H Constant 11% 4% Portfolio xPortfolio y 1.1728 0.07820.1413 0.2684 -0.0437 0.2227-0.2704 0.4307 Portfolio mean 3.67% 11.30% Portfolio sigma 39.01% 37.60% Cov(x,y) -0.00631 Single portfolio calculation Proportion of x 0.6 Mean 6.73% <-- =B21*B16+(1-B21)*C16 Sigma 27.27% <-- =SQRT(B21^2*B17^2+(1-B21)^2*C17^2+2*B21*(1-B21)*B18) Data table to determine the frontier Proportion of x Sigma Mean 27.27% 6.73% -1.0 86.20% 18.93% -0.8 75.74% 17.41% -0.6 65.49% 15.88% -0.4 55.55% 14.36% -0.2 46.12% 12.83% 0.0 37.60% 11.30% 0.2 30.75% 9.78% 0.4 26.87% 8.25%0.6 27.27% 6.73%0.8 31.78% 5.20%1.0 39.01% 3.67%1.2 47.73% 2.15%1.4 57.27% 0.62%1.6 67.27% -0.90%1.8 77.57% -2.43%2.0 88.05% -3.96% -10%-5%0%5%10%15%20%25% 0% 20% 40% 60% 80% 100% 2. And it forms the basis of our discussion of the Black-Litterman model in Chapter 13. 239 Calculating Effi cient Portfolios returns. In the example below, we assume that r f = 4%. Locating the optimizing portfolio xSE rc Sum S E r c=()− {} ()− {}[]− −1 1 on the envelope shows that it is effi cient. Therefore, the optimal investment portfolio for this case is given by x . 1 2 3456789 10 11 12131415161718 19 20 21 222324252627282930AB C D E F G Expected returns 0.40 0.03 0.02 0.00 0.06 0.03 0.20 0.00 -0.06 0.05 0.02 0.00 0.30 0.03 0.07 0.00 -0.06 0.03 0.10 0.08 Constant 0.04 Computing an envelope portfolio with constant = 0.04 zEnvelope portfolio x 0.0330 <-- {=MMULT(MINVERSE(A3:D6),F3:F6-B 8)} 0.0423 <-- {=A12:A15/SUM(A12:A15)} 0.1959 0.2514 0.0468 0.0601 0.5035 0.6462 Sum 1.0000 <-- =SUM(F12:F15) E(rx) 0.0710 σx 0.1995IF c = r fAND THE OPTIMIZING PORTFOLIO IS EFFICIENT, THEN THE ENVELOPE PORTFOLIO IS OPTIMAL The portfolio x determined by the constant c = 4% is optimal Variance-covariance matrix 6.5%6.7%6.9%7.1%7.4%7.6% 18% 19% 20% 21% 22% 23% 9.7 Finding the Market Portfolio: The Capital Market Line (CML) Suppose a risk-free asset exists, and suppose that this asset has expected return r f . Let M be the effi cient portfolio which is the solution to the system of equations: 240 Chapter 9 Er r S z Mz zf ii i iN()−= = =∑ 1 Now consider a convex combination of the portfolio M and the risk-free asset r f ; for example, suppose that the weight of the risk-free asset in such a portfolio is a . It follows from the standard equations for portfolio return and σ that: E r ar a E r aa a a C o v r rpf M p r Mf yf()=+ − () ( ) =+ − () +−() =1 12 122 2 2σσ σ (, ) 1 1−() a Mσ The locus of all such combinations for a ≥ 0 is known as the capital market line (CML). It is graphed below along with the effi cient frontier: Efficient Frontier with CML Portfolio standard deviationPortfolio mean returnMarket portfolio, MCapital market line, CML Risk-free rate, r f The portfolio M is called the market portfolio for several reasons: • Suppose investors agree about the statistical portfolio information (i.e., the vector of expected returns E ( r ) and the variance-covariance matrix S ). Suppose furthermore that investors are interested only in maximizing expected portfolio 241 Calculating Effi cient Portfolios return given portfolio standard deviation σ . Then it follows that all optimal portfolios will lie on the CML . • In the case above, it further follows that the portfolio M is the only portfolio of risky assets included in any optimal portfolio . M must therefore include all the risky assets, with each asset weighted in proportion to its market value . That is: weight of risky asset i in portfolio MV V where V is the markei i iN i= =∑ 1 tt value of asset i It is not diffi cult to fi nd M when we know r f : We merely have to solve for the effi cient portfolio given that the constant c = r f . When r f changes, we get a different “market” portfolio—this is just the effi cient portfolio given a con-stant of r f . For example, in our numerical example, suppose that the risk-free rate is r f = 5%. Then solving the system E ( r ) − r f = Sz gives: 1 2 3 45 6 78 9 10 11 12 1314 15 16 17AB C D E F G H Expected returns E(r) 0.40 0.03 0.02 0.00 0.06 0.03 0.20 0.00 -0.06 0.05 0.02 0.00 0.30 0.03 0.07 0.00 -0.06 0.03 0.10 0.08 Constant 0.05 Envelope portfolio is market portfolio M 0.0314 <-- {=MMULT(MINVERSE(A3:D6),F3:F6-B8)/SUM(MMULT(MINVERSE(A3:D6),F3:F6-B8))} 0.2059 0.05970.7031 Portfolio expected return, E(r M) 7.26% <-- =SUMPRODUCT(A11:A14,F3:F6) Portfolio standard devation, M 21.21% <-- {=SQRT(MMULT(MMULT(TRANSPOSE(A11:A14),A3:D6),A11:A14))}WHEN c = r f, THE ENVELOPE PORTFOLIO IS THE MARKET PORTFOLIO M Variance-covariance matrix σ 242 Chapter 9 9.8 Testing the SML—Implementing Propositions 3–5 To illustrate Propositions 3–5 consider the following data for four risky assets: 1 2 3456789 1011AB C D E F Dates Asset 1 Asset 2 Asset 3 Asset 4 1 -6.63% -2.49% -4.27% 11.72% 2 8.53% 2.44% -3.15% -8.33% 3 1.79% 4.46% 1.92% 19.18% 4 7.25% 17.90% -6.53% -7.41% 5 0.75% -8.22% -1.76% -1.44% 6 -1.57% 0.83% 12.88% -5.92% 7 -2.10% 5.14% 13.41% -0.46% Mean 1.15% 2.87% 1.79% 1.05% <-- =AVERAGE(E3:E9)ILLUSTRATING PROPOSITIONS 3-5 The asset returns on seven dates are given in rows 3–7, and the average return is given in row 11. We use some sophisticated array functions to compute the variance- covariance matrix: 13 1415 16 17181920 21 222324 25 26G F E D C B A Variance-covariance matrix Asset 1 Asset 2 Asset 3 Asset 4 Asset 1 0.0024 0.0019 -0.0015 -0.0024 Asset 2 0.0019 0.0056 -0.0007 -0.0016 Asset 3 -0.0015 -0.0007 0.0057 -0.0005 Asset 4 -0.0024 -0.0016 -0.0005 0.0094 Finding an efficient portfolio wConstant 0.50% Asset 1 0.3129 Asset 2 0.2464 Asset 3 0.2690 Asset 4 0.1717Cells B23:B26 contain the formula {=MMULT(MINVERSE(B15:E18),TRANSPOSE(B11:E11)- B21)/SUM(MMULT(MINVERSE(B15:E18),TRANSPOSE(B11:E11)-B21))}cells B15:E18 contain the formula {=MMULT(TRANSPOSE(B3:E9-B11:E11),B3:E9- B11:E11)/7} The effi cient portfolio given the constant c = 0.5% is given in cells B23:B26; we compute this portfolio using the method of Proposition 1. 3 We call this portfolio w . The returns of portfolio w on dates 1–7 are given in column G below: 3. Following the discussion in section 9.6, a careful reader will recall that Proposition 1 only guarantees that this portfolio is on the envelope. But it is, in fact, effi cient. 243 Calculating Effi cient Portfolios 2 34567 8 9 1011H G F E D C B A w o i l o f t r o p t n e i c i f f E 4 t e s s A 3 t e s s A 2 t e s s A 1 t e s s A s e t a D } ) 6 2 B : 3 2 B , 9 E : 3 B ( T L U M M = { - - < % 2 8 . 1 - % 2 7 . 1 1 % 7 2 . 4 - % 9 4 . 2 - % 3 6 . 6 - 1 % 9 9 . 0 % 3 3 . 8 - % 5 1 . 3 - % 4 4 . 2 % 3 5 . 8 2 % 7 4 . 5 % 8 1 . 9 1 % 2 9 . 1 % 6 4 . 4 % 9 7 . 1 3 % 5 6 . 3 % 1 4 . 7 - % 3 5 . 6 - % 0 9 . 7 1 % 5 2 . 7 4 % 1 5 . 2 - % 4 4 . 1 - % 6 7 . 1 - % 2 2 . 8 - % 5 7 . 0 5 % 6 1 . 2 % 2 9 . 5 - % 8 8 . 2 1 % 3 8 . 0 % 7 5 . 1 - 6 % 4 1 . 4 % 6 4 . 0 - % 1 4 . 3 1 % 4 1 . 5 % 0 1 . 2 - 7 Mean 1.15% 2.87% 1.79% 1.05% <-- =AVERAGE(E3:E9) 1.73% We illustrate Propositions 3–5 in two steps: • Step 1: We regress the returns of each asset on the returns of the effi cient portfolio: For i = 1, … , 4 we run the regression r it = α i + β i r wt + ε it . This regression is often called the fi rst pass regression . The results are given below. • Step 2: We now regress the betas of the assets on their mean returns. Running this regression, rii i=+ +γγ β ε01 , gives: 29 30 31 32 3334AB C D E F G Implementing propositions 3-5—finding the SML Step 1: Regress each asset's returns on those of the efficient portfolio w Asset 1 Asset 2 Asset 3 Asset 4 Alpha 0.0024 -0.0047 -0.0002 0.0028 <-- =INTERCEPT(E3:E9,$G$3:$G$9) Beta 0.5284 1.9301 1.0490 0.4478 <-- =SLOPE(E3:E9,$G$3:$G$9) R-squared 0.0897 0.5241 0.1505 0.0167 <-- =RSQ(E3:E9,$G$3:$G$9) 36 37 38 39AB C D E Step 2: Regress the asset mean returns on their betasIntercept 0.005 <-- =INTERCEPT(B11:E11,B33:E33) Slope 0.0123 <-- =SLOPE(B11:E11,B33:E33) R-squared 1.0000 <-- =RSQ(B11:E11,B33:E33) To check the results of Propositions 3–5, we run a test: 41 42 43AB C D E Intercept = c ? yes <-- =IF(B36=B20,\"yes\",\"no\") Slope = E(r w) - c ? yes <-- =IF(B38=G11-B21,\"yes\",\"no\")Check Propositions 3 & 4: Step 2 coefficients should be: Intercept = c, Slope = E(rw) - c 244 Chapter 9 The “perfect” regression results (note the R 2 = 1 in cell B39) are the results promised us by Propositions 3–5: • The second-pass regression intercept is equal to c and the slope is equal to E ( r w ) − c . • If there is a riskless asset with return c = r f , then Proposition 5 promises that in the second-pass regression rii i=+ +γγ β ε01 , γ 0 = r f and γ 1 = E ( r w ) − r f . • If there is no riskless asset, then Proposition 3 states that in the second-pass regression γ 0 = E ( r z ) and γ 1 = E ( r w ) − E ( r z ), where z is a portfolio whose covari- ance with w is zero. • Finally, if we run a two-stage regression of the type described on any port- folio w and get a “perfect regression,” then Proposition 4 guarantees that w is in fact effi cient. To drive home the point that this technique always works, we show you all the calculations using a different value for c (cell B21, highlighted below). As proved in Propositions 3–5, the result is still a perfect regression of the means on the betas: 245 Calculating Effi cient Portfolios 1 23456 7 89 101112 13 14 15 161718 19 202122 23 242526 27 28 29 30 3132 33 343536 37 38 3940 41 42 43H G F E D C B A Dates Asset 1 Asset 2 Asset 3 Asset 4 Efficient portfolio w } ) 6 2 B : 3 2 B , 9 E : 3 B ( T L U M M = { - - < % 5 9 . 2 - % 2 7 . 1 1 % 7 2 . 4 - % 9 4 . 2 - % 3 6 . 6 - 1 % 4 6 . 3 % 3 3 . 8 - % 5 1 . 3 - % 4 4 . 2 % 3 5 . 8 2 % 6 1 . 5 % 8 1 . 9 1 % 2 9 . 1 % 6 4 . 4 % 9 7 . 1 3 % 0 4 . 2 - % 1 4 . 7 - % 3 5 . 6 - % 0 9 . 7 1 % 5 2 . 7 4 % 4 2 . 2 % 4 4 . 1 - % 6 7 . 1 - % 2 2 . 8 - % 5 7 . 0 5 % 1 0 . 0 % 2 9 . 5 - % 8 8 . 2 1 % 3 8 . 0 % 7 5 . 1 - 6 % 6 2 . 0 - % 6 4 . 0 - % 1 4 . 3 1 % 4 1 . 5 % 0 1 . 2 - 7 Mean 1.15% 2.87% 1.79% 1.05% <-- =AVERAGE(E3:E9) 0.78% Variance-covariance matrix Asset 1 Asset 2 Asset 3 Asset 4 Asset 1 0.0024 0.0019 -0.0015 -0.0024 <-- {=MMULT(TRANSPOSE(B3:E9-B11:E11),B3:E9-B11:E11)/7} Asset 2 0.0019 0.0056 -0.0007 -0.0016 Asset 3 -0.0015 -0.0007 0.0057 -0.0005 Asset 4 -0.0024 -0.0016 -0.0005 0.0094 Finding an efficient portfolio w Constant 2.00% Asset 1 0.8234 <-- {=MMULT(MINVERSE(B15:E18),TRANSPOSE(B11:E11)-B21)/SUM(MMULT(MINVERSE(B15:E18),TRANSPOSE(B11:E11)-B21))} Asset 2 -0.2869 Asset 3 0.2278 Asset 4 0.2357 Implementing propositions 3-5--finding the SML Step 1: Regress each asset's returns on those of the efficient portfolio w Asset 1 Asset 2 Asset 3 Asset 4 Alpha 0.0061 0.0342 0.0165 0.0044 <-- =INTERCEPT(E3:E9,$G$3:$G$9) Beta 0.6968 -0.7075 0.1752 0.7776 <-- =SLOPE(E3:E9,$G$3:$G$9) R-squared 0.1570 0.0709 0.0042 0.0506 <-- =RSQ(E3:E9,$G$3:$G$9) Step 2: Regress the asset mean returns on their betasIntercept 0.02 <-- =INTERCEPT(B11:E11,B33:E33) Slope -0.0122 <-- =SLOPE(B11:E11,B33:E33) R-squared 1.0000 <-- =RSQ(B11:E11,B33:E33) Intercept = c ? yes <-- =IF(B36=B20,\"yes\",\"no\") Slope = E(r w) - c ? yes <-- =IF(B38=G11-B21,\"yes\",\"no\")Check Propositions 3 & 4: Step 2 coefficients should be: Intercept = c, Slope = E(r w) - cILLUSTRATING PROPOSITIONS 3-5 This time the constant is 2% (cell B21) 9.9 Summary In this chapter we have presented theorems relating to effi cient portfolios and then showed how to implement these theorems to fi nd the effi cient frontier. Two basic propositions allow us to derive portfolios on the envelope of the feasible set of portfolios and the envelope itself. Three further propositions relate the expected returns of any asset or portfolio to the expected returns on any effi cient portfolio. Under certain circumstances, this allows us to derive the security market line (SML) and the capital market line (CML) of the classic capital asset pricing model (CAPM). In subsequent chapters we discuss the implementation of the CAPM. We show how to compute the variance-covariance matrix (Chapter 10), how to test the SML (Chapter 11), how to optimize in the presence of short-sale constraints (Chapter 12), and how to derive useful portfolio optimization 246 Chapter 9 routines from our knowledge of effi cient set mathematics (Chapter 13, which discusses the Black-Litterman model). Exercises 1. Consider the data below for six furniture companies. 2 345 6 78AB C D E F G H I Variance- covariance matrixLa-Z-Boy Kimball Flexsteel Leggett Miller Shaw Means La-Z-Boy 0.1152 0.0398 0.1792 0.0492 0.0568 0.0989 29.24% Kimball 0.0398 0.0649 0.0447 0.0062 0.0349 0.0269 20.68% Flexsteel 0.1792 0.0447 0.3334 0.0775 0.0886 0.1487 25.02% Leggett 0.0492 0.0062 0.0775 0.1033 0.0191 0.0597 31.64% Miller 0.0568 0.0349 0.0886 0.0191 0.0594 0.0243 15.34% Shaw 0.0989 0.0269 0.1487 0.0597 0.0243 0.1653 43.87% a. Given this matrix, and assuming that the risk-free rate is 0%, calculate the effi cient portfolio of these six fi rms. b. Repeat, assuming that the risk-free rate is 10%. c. Use these two portfolios to generate an effi cient frontier for the six furniture companies. Plot this frontier. d. Is there an effi cient portfolio with only positive proportions of all the assets? 2. A suffi cient condition to produce positively weighted effi cient portfolios is that the vari- ance-covariance matrix be diagonal: That is, that σ ij = 0, for i ≠ j . By continuity, positively weighted portfolios will result if the off-diagonal elements of the variance- covariance matrix are suffi ciently small compared to the diagonal. Consider a transforma-tion of the above matrix in which: σεσ σijijoriginal iioriginalij=≠ ⎧ ⎨⎩if When ε = 1, this transformation will give the original variance-covariance matrix and when ε = 0, the transformation will give a fully diagonal matrix. For r = 10% fi nd the maximum ε for which all portfolio weights are positive. 3. In the example below, use Excel to fi nd an envelope portfolio whose β with respect to the effi cient portfolio y is zero. Hint : Notice that because the covariance is linear, so is β : Suppose that z = λ x + (1 − λ ) y is a convex combination of x and y , and that we are trying to fi nd the β z . Then βσλλ σ λ σλz yy yCov z y Cov x y y Cov x y Cov y=()=+−() =()+−,( ) , ,( ) ,22 21 1 y y yx()=+ −σλβ λ21() 247 Calculating Effi cient Portfolios 1 234 5AB C D E F Mean returns 0.400 0.030 0.020 0.000 0.06 0.030 0.200 0.001 -0.060 0.05 0.020 0.001 0.300 0.030 0.07 0.000 -0.060 0.030 0.100 0.08Variance-covariance matrix 4. Calculate the envelope set for the four assets below and show that the individual assets all lie within this envelope set. 1 2 3 4 56AB C D E F Mean returns % 6 5 0 . 0 3 0 . 0 1 0 . 0 0 1 . 0 % 8 4 0 . 0 - 6 0 . 0 0 3 . 0 1 0 . 0 0.03 0.06 0.40 0.02 10% 0.05 -0.04 0.02 0.50 15%A FOUR-ASSET PORTFOLIO PROBLEM Variance-covariance You should get a graph which looks something like the following: Efficient Frontier Showing the Individual Stocks 0%2%4%6%8%10%12%14%16%18%20% 20% 30% 40% 50% 60% 70% 80% Standard deviationMean return Stock AStock BStock CStock D 248 Chapter 9 Mathematical Appendix In this appendix we collect the various proofs of statements made in the chapter. As in the chapter, we assume that we are examining data for N risky assets. It is important to note that all the defi ni- tions of “feasibility” and “optimality” are made relative to this set. Thus the phrase “effi cient” really means “effi cient relative to the set of the N assets being examined.” p roposition 0 The set of all feasible portfolios of risky assets is convex. Proof A portfolio x is feasible if and only if the proportions of the portfolio add up to 1; i.e., xi iN =∑ = 11 , where N is the number of risky assets. Suppose that x and y are feasible portfolios and suppose that λ is some number between 0 and 1. Then it is clear that z = λ x + (1 − λ ) y is also feasible. proposition 1 Let c be a constant and denote by R the vector of mean returns. A portfolio x is on the envelope relative to the sample set of N assets if and only if it is the normalized solu- tion of the system: Rc S z xz zii h h−= =∑ Proof A portfolio x is on the envelope of the feasible set of portfolios if and only if it lies on the tangency of a line connecting some point c on the y -axis to the feasible set. Such a portfolio must either maximize or minimize the ratio xR c x−() σ2() , where x ( R − c ) is the vector product which gives the portfolio ’ s expected excess return over c , and σ 2 ( x ) is the portfolio ’ s variance. Let this ratio ’ s value, when maximized (or minimized), be λ . Then our portfolio must satisfy xR c x x R c x xSxT−()= ⇒−() ==σλ σλ λ2 2() () Let h be a particular asset and differentiate this last expression with respect to x h . This gives: Rc S xhT−= λ . Writing z h = λ x h , we see that a portfolio is effi cient if and only if it solves the system R − c = Sz . Normalizing z so that its coordinates add to 1 gives the desired result. proposition 2 The convex combination of any two envelope portfolios is on the envelope of the feasible set. Proof Let x and y be portfolios on the envelope. By the above theorem, it follows that there exist two vectors, z x and z y , and two constants c x and c y , such that: • x is the normalized-to-unity vector of z x ; i.e., xz zixi xh h=∑ , and y is the normalized-to-unity vector of z y . • R − c x = Sz x and R − c y = Sz y 249 Calculating Effi cient Portfolios Furthermore, since z maximizes the ratio zR c z−() σ2() , it follows that any normalization of z also maximizes this ratio. With no loss in generality, therefore, we can assume that z sums to 1. It follows that for any real number a the portfolio az x + (1 − a ) z y solves the system R − ( ac x + (1 − a ) c y ) = Sz . This proves our claim. proposition 3 Let y be any envelope portfolio of the set of N assets. Then for any other portfolio x (including, possibly, a portfolio composed of a single asset) there exists a constant c such that the following relation holds between the expected return on x and the expected return on portfolio y : Er c Er c Cov x yxx y x y()=+ ()− [] =β βσwhere (, ) 2 Furthermore, c = E ( r z ), where z is any portfolio for which Cov ( z,y ) = 0. Proof Let y be a particular envelope portfolio and let x be any other portfolio. We assume that both portfolios x and y are column vectors. Note that βσx yT TCov x y x Sy yS y==(, ) 2 Now since y is on the envelope, we know that there exist a vector w and a constant c which solves the system Sw = R − c and that yw w w a i i==∑ / . Substituting this in the expression for β x , we get: βσx yT TT TT TCov x y x Sy yS yxR c a yRc axRc yRc== =− −=− −(,) ( ) ()() ()2 Next note that since xi i∑ =1 , it follows that x T I ( R − c ) = E ( r x ) − c and that y T I ( R − c ) = E ( r y ) − c . This shows that βxx yEr c Er c=()− ()− which can be rewritten as: Er c Er c xx y()=+ ()− []β To fi nish the proof, let z be a portfolio which has zero covariance with y . Then the above logic shows that c = E ( r z ). This proves the claim. proposition 4 If in addition to the N risky assets, there exists a risk-free asset with return r f , then the standard security market line holds: Er r Er r Cov x Mxfx M f x M()=+ ()− [] =β βσ, (, )where 2 250 Chapter 9 Proof If there exists a risk-free security, then the tangent line from this security to the effi cient frontier dominates all other feasible portfolios. Call the point of tangency on the effi cient frontier M ; then the result follows. Note : It is important to repeat again that the terminology “Market portfolio” refers in this case to the “Market portfolio relative to the sample set of N assets.” proposition 5 Suppose that there exists a portfolio y such that for any portfolio x the fol- lowing relation holds: Er c Er c Cov x yxx y x y()=+ ()− [] =β βσwhere (, ) 2 Then the portfolio y is on the envelope. Proof Substituting in for the defi nition of β x it follows that for any portfolio x the following relation holds: xS y xR c yR cT yT Tσ2=− − Let x be the vector composed solely of the fi rst risky asset: x = {1, 0, … , 0}. Then the above equation becomes: SyyR cEr c Sa y E r cT y121 11−=()− =()−σ which we write: where S 1 is the fi rst row of the variance-covariance matrix S . Note that ayR cT y=− σ2 is a constant whose value is independent of the vector x . If we let x be a vector composed solely of the i th risky asset, we get: Sa y E r cii=()− This proves that the vector z = ay solves the system Sz = R − c ; by Proposition 1 this means that the normalization of z is on the envelope. But this normalization is simply the vector y . 1 0 Calculating the Variance-Covariance Matrix 10.1 Overview In order to calculate effi cient portfolios, we must be able to compute the variance-covariance matrix from return data for stocks. In this chapter we discuss this computation, showing how to do the calculations in Excel. The most obvious calculation is the sample variance-covariance matrix : This is the matrix computed directly from the historic returns. We illustrate several methods for calculating the sample variance-covariance matrix, including a direct calculation in the spreadsheet using the excess return matrix and an implementation of this method with VBA. While the sample variance-covariance matrix may appear to be an obvious choice, a large literature recognizes that it may not be the best estimate of variances and covariances. Disappointment with the sample variance-covariance matrix stems both from its often unrealistic parameters and from its inability to predict. These issues are discussed briefl y in sections 10.5 and 10.6. As an alternative to the sample matrix, sections 10.7–10.10 discuss so-called “shrinkage” methods for improving the estimate of the variance-covariance matrix. 1 Before starting this chapter, you may want to peruse Chapter 34 which discusses array functions . These are Excel functions whose arguments are vectors and matrices; their implementation is slightly different from standard Excel functions. This chapter makes heavy use of the array functions Trans- pose( ) and MMult( ) as well as some other “home-grown” array functions. 10.2 Computing the Sample Variance-Covariance Matrix Suppose we have return data for N assets over M periods. Writing the return of asset i in period t as r it , we write the mean return of asset i as: rMri N ii t tM == … =∑11 1,, , Then the covariance of the return of asset i and asset j is calculated as: σij it i tM jt j Cov i jMrrrr i j N ==−−() ⋅−() =… =∑ (, ) , , , ,1 11 1 1. We return to the issue of prediction in Chapter 13, which discusses the Black-Litterman model of portfolio optimization. 252 Chapter 10 The matrix of these covariances (which includes, of course, the variances when i = j ) is the sample variance-covariance matrix . Our problem is to calculate these covariances effi ciently. Defi ne the excess return matrix to be: A matrix of excess ret urnsrr r r rr r r rrNN NN M==−− −− −11 1 1 12 1 2 11/midhorizellipsis /midhorizellipsis /vertellipsis/vertellipsis /midhorizellipsis /midhorizellipsis rrNM N−⎡ ⎣⎢ ⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥ Columns of matrix A subtract the mean asset return from the individual asset returns. The transpose of this matrix is: Arr rr r r rr rr r rTM NN NN N M N=−− − −− −⎡ ⎣⎢ ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥11 1 12 1 1 1 12/midhorizellipsis/midhorizellipsis /vertellipsis/vertellipsis /vertellipsis /midhorizellipsis/midhorizellipsis Multiplying A T times A and dividing through by M − 1 gives the sample variance-covariance matrix: SAA MijT =[] =⋅ −σ1 To consider the computational aspects, we use M = 60 months of return data for N = 10 stocks. The spreadsheet below shows the price data (adjusted for dividends) and the computed returns: 1 2 3 45 6 57 5859 60 616263 64ABC D E F G H I J K L McDonalds US SteelArcelor- MiƩal Microso Ō Apple KelloggGeneral ElectricBank of America P ﬁzer Exxon S&P500 Date MCD X MT MSFT AAPL K GE BAC PFE XOM ^GSPC 1-Feb-07 37.57 84.74 44.84 25.53 84.61 43.45 28.97 44.68 19.57 64.20 1406.82 1-Mar-07 38.74 94.76 46.63 25.26 92.91 44.83 29.34 44.85 19.80 67.58 1420.86 2-Apr-07 41.52 97.03 47.10 27.14 99.80 46.12 30.59 44.74 20.74 71.10 1482.37 1-Jul-11 85.26 39.80 30.54 27.02 390.48 54.85 17.57 9.68 18.65 78.37 1292.28 1-Aug-11 89.74 30.01 21.74 26.40 384.83 53.84 16.00 8.15 18.60 73.18 1218.89 1-Sep-11 87.16 21.94 15.74 24.70 381.32 52.72 15.07 6.11 17.32 71.81 1131.42 3-Oct-11 92.16 25.27 20.51 26.43 404.78 53.73 16.55 6.82 18.87 77.20 1253.30 1-Nov-11 95.52 27.26 18.89 25.58 382.20 49.16 15.76 5.44 19.86 80.00 1246.96 1-Dec-11 100.33 26.42 18.19 25.96 405.00 50.57 17.91 5.56 21.42 84.30 1257.60 3-Jan-12 99.05 30.14 20.52 29.53 456.48 49.52 18.71 7.13 21.18 83.28 1312.41 1-Feb-12 99.99 31.01 23.30 30.77 493.17 50.21 19.13 8.18 21.14 84.88 1351.95FIVE YEARS OF PRICES FOR 10 STOCKS AND THE SP500 253 Calculating the Variance-Covariance Matrix Using the Excel function Ln(P t /P t − 1 ) , we compute the monthly returns: 66 6768 69 707172 73 747576 77 787980 81 82 838485 86 878889 90 919293 94 959697 98AB C D E F G H I J K L MCD X MT MSFT AAPL K GE BAC PFE XOM MCD 0.0020 0.0037 0.0028 0.0015 0.0017 0.0007 0.0020 0.0031 0.0015 0.0011 X 0.0037 0.0380 0.0284 0.0076 0.0111 0.0031 0.0127 0.0176 0.0043 0.0043 MT 0.0028 0.0284 0.0267 0.0065 0.0097 0.0031 0.0102 0.0133 0.0038 0.0039 MSFT 0.0015 0.0076 0.0065 0.0063 0.0049 0.0010 0.0046 0.0079 0.0018 0.0014 AAPL 0.0017 0.0111 0.0097 0.0049 0.0126 0.0016 0.0049 0.0049 0.0007 0.0020 K 0.0007 0.0031 0.0031 0.0010 0.0016 0.0026 0.0028 0.0046 0.0011 0.0003 GE 0.0020 0.0127 0.0102 0.0046 0.0049 0.0028 0.0122 0.0163 0.0041 0.0022 BAC 0.0031 0.0176 0.0133 0.0079 0.0049 0.0046 0.0163 0.0393 0.0080 0.0017 PFE 0.0015 0.0043 0.0038 0.0018 0.0007 0.0011 0.0041 0.0080 0.0041 0.0011 XOM 0.0011 0.0043 0.0039 0.0014 0.0020 0.0003 0.0022 0.0017 0.0011 0.0026 <-- {=MMULT(TRANSPOSE(B83:K142),B83:K142)/59} MCD X MT MSFT AAPL K GE BAC PFE XOM 1-Mar-07 0.0144 0.1285 0.0501 -0.0137 0.0642 0.0289 0.0196 0.0321 0.0104 0.0467 <-- =K3-K$64 2-Apr-07 0.0530 0.0404 0.0209 0.0687 0.0422 0.0260 0.0486 0.0258 0.0451 0.0461 <-- =K4-K$64 1-May-07 0.0296 0.1269 0.1325 0.0249 0.1648 0.0231 0.0260 0.0356 0.0476 0.0462 <-- =K5-K$64 1-Jun-07 -0.0122 -0.0231 0.0502 -0.0437 -0.0224 -0.0438 0.0329 -0.0083 -0.0736 0.0039 <-- =K6-K$64 2-Jul-07 -0.0748 -0.0843 -0.0114 -0.0197 0.0473 -0.0020 0.0193 -0.0023 -0.0852 0.0102 1-Aug-07 0.0119 -0.0205 0.0974 -0.0084 0.0204 0.0618 0.0097 0.0949 0.0657 0.0063 4-Sep-07 0.0845 0.1313 0.1795 0.0217 0.0734 0.0168 0.0768 0.0327 -0.0180 0.0720 1-Oct-07 0.0762 0.0351 0.0310 0.2197 0.1839 -0.0615 0.0009 -0.0121 0.0058 -0.0108 1-Nov-07 -0.0120 -0.0806 -0.0644 -0.0911 -0.0709 0.0268 -0.0652 -0.0171 -0.0238 -0.0321 3-Dec-07 -0.0088 0.2299 0.0576 0.0547 0.0541 -0.0327 -0.0170 -0.0690 -0.0458 0.0449 2-Jan-08 -0.1111 -0.1537 -0.1419 -0.0913 -0.4101 -0.0948 -0.0403 0.0960 0.0260 -0.0937 1-Feb-08 0.0003 0.0810 0.1464 -0.1801 -0.1088 0.0629 -0.0489 -0.0770 -0.0345 0.0148 3-Mar-08 0.0140 0.1737 0.0892 0.0392 0.1085 0.0332 0.1172 -0.0022 -0.0637 -0.0331 1-Apr-08 0.0497 0.2102 0.0963 0.0019 0.1631 -0.0292 -0.1169 0.0186 -0.0416 0.0910 1-May-08 -0.0207 0.1332 0.1197 -0.0066 0.0523 0.0163 -0.0553 -0.0705 -0.0233 -0.0476 2-Jun-08 -0.0635 0.0843 0.0120 -0.0319 -0.1492 -0.0786 -0.1228 -0.3064 -0.1040 -0.0118Variance-Covariance Matrix Excess returns: rij-ri1 2 34 5 6 7 8 54 55 56 57 58 59 60 6162 63 64AB C D E F G H I J K L Date MCD X MT MSFT AAPL K GE BAC PFE XOM ^GSPC 1-Mar-07 3.07% 11.18% 3.91% -1.06% 9.36% 3.13% 1.27% 0.38% 1.17% 5.13% 0.99% 2-Apr-07 6.93% 2.37% 1.00% 7.18% 7.15% 2.84% 4.17% -0.25% 4.64% 5.08% 4.24% 1-May-07 4.59% 11.02% 12.16% 2.80% 19.42% 2.55% 1.91% 0.73% 4.89% 5.09% 3.20% 1-Jun-07 0.41% -3.98% 3.93% -4.06% 0.70% -4.14% 2.60% -3.66% -7.23% 0.85% -1.80% 2-Jul-07 -5.85% -10.11% -2.23% -1.66% 7.66% 0.04% 1.24% -3.06% -8.39% 1.49% -3.25% 1-Aug-07 2.83% -3.72% 8.65% -0.53% 4.97% 6.42% 0.28% 6.66% 6.70% 1.09% 1.28% 1-Jun-11 3.35% -0.15% 3.86% 3.86% -3.56% -2.97% -3.24% -6.90% -4.07% -2.53% -1.84% 1-Jul-11 2.53% -14.09% -10.97% 5.24% 15.12% 0.82% -5.16% -12.05% -6.79% -1.97% -2.17% 1-Aug-11 5.12% -28.23% -33.99% -2.32% -1.46% -1.86% -9.36% -17.20% -0.27% -6.85% -5.85% 1-Sep-11 -2.92% -31.32% -32.29% -6.66% -0.92% -2.10% -5.99% -28.81% -7.13% -1.89% -7.45% 3-Oct-11 5.58% 14.13% 26.47% 6.77% 5.97% 1.90% 9.37% 10.99% 8.57% 7.24% 10.23% 1-Nov-11 3.58% 7.58% -8.23% -3.27% -5.74% -8.89% -4.89% -22.61% 5.11% 3.56% -0.51% 1-Dec-11 4.91% -3.13% -3.78% 1.47% 5.79% 2.83% 12.79% 2.18% 7.56% 5.24% 0.85% 3-Jan-12 -1.28% 13.17% 12.05% 12.88% 11.97% -2.10% 4.37% 24.87% -1.13% -1.22% 4.27% 1-Feb-12 0.94% 2.85% 12.71% 4.11% 7.73% 1.38% 2.22% 13.74% -0.19% 1.90% 2.97% Mean 1.63% -1.68% -1.09% 0.31% 2.94% 0.24% -0.69% -2.83% 0.13% 0.47% -0.07%FIVE YEARS OF MONTHLY RETURNS FOR 10 STOCKS AND THE SP500 Below we compute the excess returns and the variance-covariance matrix: 254 Chapter 10 A VBA Function to Compute the Variance-Covariance Matrix To automate this procedure, we write a VBA function that computes the variance-covariance matrix using the Excel function Covariance.S . When Excel functions with periods, such as Covariance.S , are used in VBA, the period becomes an underscore: Covariance_S : ‘My thanks to Amir Kirsh ‘Revised 2012 by Benjamin Czaczkes and _ Simon Benninga Function VarCovar(rng As Range) As Variant Dim i As Integer Dim j As Integer Dim numcols As Integer numcols = rng.Columns.Count numrows = rng.Rows.Count Dim matrix() As Double ReDim matrix(numcols - 1, numcols - 1) For i = 1 To numcols For j = 1 To numcols matrix(i - 1, j - 1) = _ Application.WorksheetFunction. Covariance_S(rng.Columns(i), _ rng.Columns(j)) Next j Next i VarCovar = matrix End Function 255 Calculating the Variance-Covariance Matrix 1 2 3456789 10111213AB C D E F G H IJ K L MCD X MT MSFT AAPL K GE BAC PFE XOM MCD 0.0020 0.0037 0.0028 0.0015 0.0017 0.0007 0.0020 0.0031 0.0015 0.0011 <-- {=varcovar('Page 253'!B3:K62)} X 0.0037 0.0380 0.0284 0.0076 0.0111 0.0031 0.0127 0.0176 0.0043 0.0043 MT 0.0028 0.0284 0.0267 0.0065 0.0097 0.0031 0.0102 0.0133 0.0038 0.0039 MSFT 0.0015 0.0076 0.0065 0.0063 0.0049 0.0010 0.0046 0.0079 0.0018 0.0014 AAPL 0.0017 0.0111 0.0097 0.0049 0.0126 0.0016 0.0049 0.0049 0.0007 0.0020 K 0.0007 0.0031 0.0031 0.0010 0.0016 0.0026 0.0028 0.0046 0.0011 0.0003 GE 0.0020 0.0127 0.0102 0.0046 0.0049 0.0028 0.0122 0.0163 0.0041 0.0022 BAC 0.0031 0.0176 0.0133 0.0079 0.0049 0.0046 0.0163 0.0393 0.0080 0.0017 PFE 0.0015 0.0043 0.0038 0.0018 0.0007 0.0011 0.0041 0.0080 0.0041 0.0011 XOM 0.0011 0.0043 0.0039 0.0014 0.0020 0.0003 0.0022 0.0017 0.0011 0.0026PORTFOLIO ANALYSIS FOR MONTHLY DATA Variance-Covariance Matrix The VBA computes Covariance_S for every entry of the variance- covariance matrix. 2 Here ’ s the result: Should We Divide by M – 1 or by M In the above calculations, we use the sample covariance (in Excel Covariance.S and in VBA Covariance_S ) to divide by M – 1 instead of M in order to get the unbiased estimate of the variances and covariances. We don ’ t think this matters very much, but for reference to a higher authority, we suggest our discussion of M versus M – 1 in section 8.2. Starting with Excel 2010, Microsoft has cleared up considerable confusion that once existed in Excel about whether to divide by M or M – 1. The new versions of Excel have standardized the nomenclature and computations for these functions: Excel 2010 and laterOther (older) versions of this function (still work)Comments When used in VBA Covariance.S Sample covariance, divides by M–1 Application.WorksheetFunction.Covariance_S Covariance.P Covar Population covariance, divides by M Application.WorksheetFunction.Covariance_P 2. Since the covariance matrix is symmetric, we ’ ve actually done too many computations. But given the speed of our computers, who cares? 256 Chapter 10 Excel 2010 and laterOther (older) versions of this function (still work)Comments When used in VBA Var.S VarS Sample variance Application.WorksheetFunction.Var_S Application.WorksheetFunction.VarS Var.P VarP Population variance Application.WorksheetFunction.Var_P Application.WorksheetFunction.VarP Confused? Don ’ t worry! As the discussion in Chapter 8 indicates, perhaps it doesn ’ t matter very much. 10.3 The Correlation Matrix Using the Excel function Correl we can compute the correlation matrix of the returns: Function CorrMatrix(rng As Range) As Variant Dim i As Integer Dim j As Integer Dim numcols As Integer numcols = rng.Columns.Count numrows = rng.Rows.Count Dim matrix() As Double ReDim matrix(numcols - 1, numcols - 1) 257 Calculating the Variance-Covariance Matrix For i = 1 To numcols For j = 1 To numcols matrix(i - 1, j - 1) = _ Application.WorksheetFunction.Correl(rng. _ Columns(i), rng.Columns(j)) Next j Next i CorrMatrix = matrix End Function 1 2 3456789 1011121314AB C D E F G H I J K McDonalds US SteelArcelor- MiƩal MicrosoŌ Apple KelloggGeneral ElectricBank of America Pﬁzer Exxon MCD X MT MSFT AAPL K GE BAC PFE XOM MCD 1.0000 0.4199 0.3859 0.4238 0.3379 0.2920 0.4064 0.3506 0.5411 0.4741 X 0.4199 1.0000 0.8898 0.4898 0.5062 0.3078 0.5904 0.4556 0.3491 0.4361 MT 0.3859 0.8898 1.0000 0.5044 0.5277 0.3692 0.5659 0.4103 0.3602 0.4620 MSFT 0.4238 0.4898 0.5044 1.0000 0.5497 0.2416 0.5312 0.5050 0.3542 0.3581 AAPL 0.3379 0.5062 0.5277 0.5497 1.0000 0.2827 0.3964 0.2205 0.0945 0.3425 K 0.2920 0.3078 0.3692 0.2416 0.2827 1.0000 0.4846 0.4559 0.3487 0.1234 GE 0.4064 0.5904 0.5659 0.5312 0.3964 0.4846 1.0000 0.7461 0.5842 0.3926 BAC 0.3506 0.4556 0.4103 0.5050 0.2205 0.4559 0.7461 1.0000 0.6328 0.1723 PFE 0.5411 0.3491 0.3602 0.3542 0.0945 0.3487 0.5842 0.6328 1.0000 0.3435 XOM 0.4741 0.4361 0.4620 0.3581 0.3425 0.1234 0.3926 0.1723 0.3435 1.0000 <-- {=CorrMatrix('Page 253'!B3:K62)}CORRELATION MATRIX Here ’ s another version of the correlation matrix, this time only the upper half: ’ Triangular correlation matrix Function CorrMatrixTriangular(rng As Range) _ As Variant Dim i As Integer Dim j As Integer Dim numcols As Integer numcols = rng.Columns.Count numrows = rng.Rows.Count Dim matrix() As Variant ReDim matrix(numcols - 1, numcols - 1) 258 Chapter 10 Here are some statistics for the correlations. The average correlation for our sample (0.4226) is a bit high (usually a sample of stocks will give average correlation of 0.2–0.3). The largest correlations ( ρ Arcelor,US Steel = 0.8898, ρ GE,BankAmerica = 0.7461) look quite high, though perhaps there are economic explanations. 3 16 171819202122232425262728AB C D E F G H I J K McDonalds US SteelArcelor- MiƩal MicrosoŌ Apple KelloggGeneral ElectricBank of America Pﬁzer Exxon MCD X MT MSFT AAPL K GE BAC PFE XOM MCD 1.0000 0.4199 0.3859 0.4238 0.3379 0.2920 0.4064 0.3506 0.5411 0.4741 X 1.0000 0.8898 0.4898 0.5062 0.3078 0.5904 0.4556 0.3491 0.4361 MT 1.0000 0.5044 0.5277 0.3692 0.5659 0.4103 0.3602 0.4620 MSFT 1.0000 0.5497 0.2416 0.5312 0.5050 0.3542 0.3581 AAPL 1.0000 0.2827 0.3964 0.2205 0.0945 0.3425 K 1.0000 0.4846 0.4559 0.3487 0.1234 GE 1.0000 0.7461 0.5842 0.3926 BAC 1.0000 0.6328 0.1723 PFE 1.0000 0.3435 XOM 1.0000 <-- {=CorrMatrixTriangular('Page 253'!B3:K62)} 3. Arcelor and U.S. Steel are, of course, both steel companies. GE has one of the largest fi nancing operations in the world; perhaps this explains the high correlation between the returns of Bank of America and GE? Or perhaps it ’ s just a fl uke of the data? For i = 1 To numcols For j = 1 To numcols If i < = j Then matrix(i - 1, j - 1) = _ Application.WorksheetFunction.Correl(rng. _ Columns(i), rng.Columns(j)) Else matrix(i - 1, j - 1) = “” End If Next j Next i CorrMatrixTriangular = matrix End Function 259 Calculating the Variance-Covariance Matrix 30 31 32 33 34 35 36AB C D E F G H I J Average 0.4226 <-- =AVERAGEIF(B18:K27,\"<1\") Largest 0.8898 <-- =LARGE(B18:K27,11) Smallest 0.0945 <-- =SMALL($B$18:$K$27,1)Next largest 0.7461 <-- =LARGE(B18:K27, 12) Next small 0.1234 <-- =SMALL($B$18:$K$27,2) etc. 0.6328 <-- =LARGE(B18:K27,13) etc. 0.1723 <-- =SMALL($B$18:$K$27,3) etc. 0.5904 <-- =LARGE(B18:K27,14) etc. 0.2416 <-- =SMALL($B$18:$K$27,5) etc. 0.5842 <-- =LARGE(B18:K27,15) etc. 0.2416 <-- =SMALL($B$18:$K$27,5)Some correla Ɵon staƟsƟcs 10.4 Computing the Global Minimum Variance Portfolio (GMVP) The two most prominent uses of the variance-covariance matrix are to fi nd the global minimum variance portfolio (GMVP) and to fi nd effi cient portfolios. Both uses illustrate the problematics of working with sample data and provide us with the introduction needed for sections 10.7–10.10, which discuss alterna-tives to the sample variance-covariance matrix. In this section we discuss the GMPV . Suppose there are N assets having a variance-covariance matrix S . The GMVP is the portfolio x = { x 1 , x 2 , … , x N } which has the lowest variance from among all feasible portfolios. The minimum variance portfolio is defi ned by xx x xS SGMVP GMVP GMVP GMVP Nrow row rowT=…{} =⋅ ⋅⋅− −,, ,,, , , 121 11 11 whhere N-dimensional row vector of s11 1 11 1rowrow=…{} = ↑,, ,/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/dncurlybracketright/horizcurlybracketext⋅⋅ () =⎧ ⎨⎪⎪ ⎩⎪ ⎪⎫ ⎬⎪⎪−S Sum numerator xx x xGMVPGMVP GMVP GMVP N1 1 2, , ,/vertellipsis ⎭ ⎭⎪ ⎪=⋅⋅=⎧ ⎨⎪⎪ ⎩− −S Scolumn columnT columncolumn1 11 1111 1 1, where/vertellipsis⎪ ⎪ ⎪⎫ ⎬⎪⎪ ⎭⎪ ⎪ =↑ −N-dimensional column vector of s 1 11/verticalbraceright S Sum ncolumn uumerator() 260 Chapter 10 This formula is due to Merton. 4 The particular fascination of the minimum variance portfolio is that it is the only portfolio on the effi cient frontier whose computation does not require the asset expected returns. The mean μ GMVP and the variance σGMVP2 of the minimum variance portfolio are given by: μσGMVP GMVP GMVP GMVP GMVPTxE r xS x=⋅ () =⋅ ⋅ ,2 Here ’ s an implementation of these formulas for our particular example. We use two VBA functions for the unit column and row vectors: 4. Robert C. Merton, “An Analytical Derivation of the Effi cient Portfolio Frontier,” Journal of Financial and Quantitative Analysis (1973). ‘I thank Priyush Singh and Ayal Itzkovitz Function UnitrowVector(numcols As Integer) _ As Variant Dim i As Integer Dim vector() As Integer ReDim vector(0, numcols - 1) For i = 1 To numcols vector(0, i - 1) = 1 Next i UnitrowVector = vector End Function Function UnitColVector(numrows As Integer) _ As Variant Dim i As Integer Dim vector() As Integer ReDim vector(numrows - 1, 0) For i = 1 To numrows vector(i - 1, 0) = 1 Next i UnitColVector = vector End Function 261 Calculating the Variance-Covariance Matrix Applying this to our 10-asset example: 1 2 3456789 1011121314151617181920212223242526272829303132AB C D E F G H I J K MCD X MT MSFT AAPL K GE BAC PFE XOM MCD 0.0020 0.0037 0.0028 0.0015 0.0017 0.0007 0.0020 0.0031 0.0015 0.0011 X 0.0037 0.0380 0.0284 0.0076 0.0111 0.0031 0.0127 0.0176 0.0043 0.0043 MT 0.0028 0.0284 0.0267 0.0065 0.0097 0.0031 0.0102 0.0133 0.0038 0.0039 MSFT 0.0015 0.0076 0.0065 0.0063 0.0049 0.0010 0.0046 0.0079 0.0018 0.0014 AAPL 0.0017 0.0111 0.0097 0.0049 0.0126 0.0016 0.0049 0.0049 0.0007 0.0020 K 0.0007 0.0031 0.0031 0.0010 0.0016 0.0026 0.0028 0.0046 0.0011 0.0003 GE 0.0020 0.0127 0.0102 0.0046 0.0049 0.0028 0.0122 0.0163 0.0041 0.0022 BAC 0.0031 0.0176 0.0133 0.0079 0.0049 0.0046 0.0163 0.0393 0.0080 0.0017 PFE 0.0015 0.0043 0.0038 0.0018 0.0007 0.0011 0.0041 0.0080 0.0041 0.0011 XOM 0.0011 0.0043 0.0039 0.0014 0.0020 0.0003 0.0022 0.0017 0.0011 0.0026 GMVP as row 0.0326 0.2117 0.1754 0.0705 0.0873 0.0340 0.1166 0.1891 0.0493 0.0335 <-- {=MMULT(unitrowvector(10),B4:K13)/SUM(MMULT(unitrowvector(10),B4:K13))} 0.0326 0.2117 <-- {=MMULT(B4:K13,uni tcolvector(10))/SUM(MMULT( B4:K13,unitcolvector(10)))} 0.1754 0.0705 0.08730.0340 0.1166 0.18910.04930.0335 Mean -0.80% T(B15:K15,'Page 253'!B64:K64) Variance 0.0130 <-- {=MMULT(MMULT(B15:K15,B4:K13),B18:B27)} Sigma 11.40% <-- =SQRT(B31)Variance-Covariance Matrix GMVP as columnCOMPUTING THE GLOBAL MINIMUM VARIANCE PORTFOLIO GMVP sta ƟsƟcs 10.5 Four Alternatives to the Sample Variance-Covariance Matrix In succeeding sections we illustrate four alternatives to the sample variance- covariance matrix: • The single-index model assumes that the only sources of variance risk are the market variance and the betas of the assets. • The constant correlation model assumes the correlation between all asset returns is constant, so that σ ij = ρ σ i σ j . 262 Chapter 10 • Shrinkage methods assume that the variance-covariance matrix is a convex combination of the sample variance-covariance and a matrix with variances on the diagonal and zeros elsewhere. • Option methods use options to derive the standard deviations of returns for the assets. We combine this in section 10.9 with the constant correlation method to compute a variance-covariance matrix. The fi rst three models arise out of a distrust of return data for generating the covariances of the data in the future. The fourth method—using option data—goes further and assumes that even the sample variances are an inac-curate prediction of future variance. 10.6 Alternatives to the Sample Variance-Covariance: The Single-Index Model (SIM) The single-index model (SIM) began as an attempt to simplify some of the computational complexities of calculating the variance-covariance matrix. 5 The basic assumption of the SIM is that the returns of each asset can be linearly regressed on a market index x : /tildenosp/tildenosp /tildenosp rr ii i x i=+ +αβ ε where the correlation between ε i and ε j is zero. Given this assumption, it is easy to establish the following two facts: • Er Er ii i x/tildenosp/tildenosp()=+ () αβ • σββσ σijijx iij ij=≠=⎧⎨⎩ 2 2when when 5. W. M. Sharpe, “A Simplifi ed Model for Portfolio Analysis,” Management Science (1963). 263 Calculating the Variance-Covariance Matrix Function sim(assetdata As Range, marketdata As Range) _ As Variant Dim i As Integer Dim j As Integer Dim numcols As Integer numcols = assetdata.Columns.Count Dim matrix() As Double ReDim matrix(numcols - 1, numcols - 1) For i = 1 To numcols For j = 1 To numcols If i = j Then matrix(i - 1, j - 1) = Application. _ WorksheetFunction.Var_S(assetdata.Columns(i)) Else matrix(i - 1, j - 1) = _ Application.WorksheetFunction.Slope(assetdata. _ Columns(i), marketdata) * _ Application.WorksheetFunction.Slope(assetdata. _ Columns(j), marketdata) * _ Application.WorksheetFunction.Var_S(marketdata) End If Next j Next i sim = matrix End Function Essentially the SIM involves changes in the estimates of the covariances, but not the sample variance. We can automate the procedure for computing the SIM by writing some VBA code: 264 Chapter 10 The two arguments of this function are the asset returns and the market returns. Applying this code in our example: 1 2 3 4 5 6 7 8 9 1011 12 13 14 15 16 17 18 19 20 21 67 68 69 70 71 7273 74 75AB C D E F G H I J K L MCD X MT MSFT AAPL K GE BAC PFE XOM MCD 0.0020 0.0036 0.0031 0.0013 0.0016 0.0006 0.0021 0.0032 0.0009 0.0006 X 0.0036 0.0380 0.0198 0.0085 0.0105 0.0038 0.0137 0.0204 0.0059 0.0042 MT 0.0031 0.0198 0.0267 0.0073 0.0090 0.0033 0.0117 0.0175 0.0051 0.0036 MSFT 0.0013 0.0085 0.0073 0.0063 0.0038 0.0014 0.0050 0.0075 0.0022 0.0015 AAPL 0.0016 0.0105 0.0090 0.0038 0.0126 0.0017 0.0062 0.0092 0.0027 0.0019 K 0.0006 0.0038 0.0033 0.0014 0.0017 0.0026 0.0022 0.0034 0.0010 0.0007 GE 0.0021 0.0137 0.0117 0.0050 0.0062 0.0022 0.0122 0.0121 0.0035 0.0025 BAC 0.0032 0.0204 0.0175 0.0075 0.0092 0.0034 0.0121 0.0393 0.0052 0.0037 PFE 0.0009 0.0059 0.0051 0.0022 0.0027 0.0010 0.0035 0.0052 0.0041 0.0011 XOM 0.0006 0.0042 0.0036 0.0015 0.0019 0.0007 0.0025 0.0037 0.0011 0.0026 <-- {=sim(B16:K75,L16:L75)} Date MCD X MT MSFT AAPL K GE BAC PFE XOM ^GSPC 1-Mar-07 3.07% 11.18% 3.91% -1.06% 9.36% 3.13% 1.27% 0.38% 1.17% 5.13% 0.99% 2-Apr-07 6.93% 2.37% 1.00% 7.18% 7.15% 2.84% 4.17% -0.25% 4.64% 5.08% 4.24% 1-May-07 4.59% 11.02% 12.16% 2.80% 19.42% 2.55% 1.91% 0.73% 4.89% 5.09% 3.20% 1-Jun-07 0.41% -3.98% 3.93% -4.06% 0.70% -4.14% 2.60% -3.66% -7.23% 0.85% -1.80% 2-Jul-07 -5.85% -10.11% -2.23% -1.66% 7.66% 0.04% 1.24% -3.06% -8.39% 1.49% -3.25% 1-Aug-07 2.83% -3.72% 8.65% -0.53% 4.97% 6.42% 0.28% 6.66% 6.70% 1.09% 1.28% 1-Jun-11 3.35% -0.15% 3.86% 3.86% -3.56% -2.97% -3.24% -6.90% -4.07% -2.53% -1.84% 1-Jul-11 2.53% -14.09% -10.97% 5.24% 15.12% 0.82% -5.16% -12.05% -6.79% -1.97% -2.17% 1-Aug-11 5.12% -28.23% -33.99% -2.32% -1.46% -1.86% -9.36% -17.20% -0.27% -6.85% -5.85% 1-Sep-11 -2.92% -31.32% -32.29% -6.66% -0.92% -2.10% -5.99% -28.81% -7.13% -1.89% -7.45% 3-Oct-11 5.58% 14.13% 26.47% 6.77% 5.97% 1.90% 9.37% 10.99% 8.57% 7.24% 10.23% 1-Nov-11 3.58% 7.58% -8.23% -3.27% -5.74% -8.89% -4.89% -22.61% 5.11% 3.56% -0.51% 1-Dec -11 4.91% -3.13% -3.78% 1.47% 5.79% 2.83% 12.79% 2.18% 7.56% 5.24% 0.85% 3-Jan-12 -1.28% 13.17% 12.05% 12.88% 11.97% -2.10% 4.37% 24.87% -1.13% -1.22% 4.27% 1-Feb-12 0.94% 2.85% 12.71% 4.11% 7.73% 1.38% 2.22% 13.74% -0.19% 1.90% 2.97%COMPUTING THE SINGLE-INDEX VARIANCE-COVARIANCE MATRIX 10.7 Alternatives to the Sample Variance-Covariance: Constant Correlation The constant correlation model of Elton and Gruber (1973) computes the variance-covariance matrix by assuming that the variances of the asset returns are the sample returns, but that the covariances are all related by the same correlation coeffi cient, which is generally taken to be the average correlation coeffi cient of the assets in question. Since Cov ( r i , r j ) = σ ij = ρ ij σ i σ j , this means that in the constant correlation model: σσσ σρ σ σijii i ij i jij ij=== =≠⎧ ⎨⎩2when when 265 Calculating the Variance-Covariance Matrix Using our data for the 10 stocks, we can implement the constant correlation model. We fi rst compute the correlations of all the stocks: 1 2 3 4 56789 101112131415AB C D E F G H I J K Correlation 0.20 MCD X MT MSFT AAPL K GE BAC PFE XOM MCD 0.0020 0.0018 0.0015 0.0007 0.0010 0.0005 0.0010 0.0018 0.0006 0.0005 X 0.0018 0.0380 0.0064 0.0031 0.0044 0.0020 0.0043 0.0077 0.0025 0.0020 MT 0.0015 0.0064 0.0267 0.0026 0.0037 0.0017 0.0036 0.0065 0.0021 0.0017 MSFT 0.0007 0.0031 0.0026 0.0063 0.0018 0.0008 0.0017 0.0031 0.0010 0.0008 AAPL 0.0010 0.0044 0.0037 0.0018 0.0126 0.0012 0.0025 0.0044 0.0014 0.0011 K 0.0005 0.0020 0.0017 0.0008 0.0012 0.0026 0.0011 0.0020 0.0007 0.0005 GE 0.0010 0.0043 0.0036 0.0017 0.0025 0.0011 0.0122 0.0044 0.0014 0.0011 BAC 0.0018 0.0077 0.0065 0.0031 0.0044 0.0020 0.0044 0.0393 0.0025 0.0020 PFE 0.0006 0.0025 0.0021 0.0010 0.0014 0.0007 0.0014 0.0025 0.0041 0.0007 XOM 0.0005 0.0020 0.0017 0.0008 0.0011 0.0005 0.0011 0.0020 0.0007 0.0026 <-- {=constantcorr('Page 253'!B3:K62,'Page 265'!B2)}ESTIMATING THE CONSTANT CORRELATION VARIANCE-COVARIANCE MATRIX We ’ ve written a VBA function to compute this matrix from the return data: Function constantcorr(data As Range, corr As Double) _ As Variant Dim i As Integer Dim j As Integer Dim numcols As Integer numcols = data.Columns.Count numrows = data.Rows.Count Dim matrix() As Double ReDim matrix(numcols - 1, numcols - 1) If Abs(corr) > = 1 Then GoTo Out For i = 1 To numcols For j = 1 To numcols If i = j Then matrix(i - 1, j - 1) = Application. _ WorksheetFunction.Var_S(data.Columns(i)) Else 266 Chapter 10 10.8 Alternatives to the Sample Variance-Covariance: Shrinkage Methods A third class of methods of estimating the variance-covariance matrix has recently achieved popularity. So-called shrinkage methods assume that the variance-covariance matrix is a convex combination of the sample covariance matrix and some other matrix: Shrinkage variance covariance matrix Sample var cov O- *- *= +− () λλ 1 tther matrix In the example below, the “other” matrix is a diagonal matrix of only vari- ances, with zeros elsewhere. The shrinkage estimator λ = 0.3 (cell B20). matrix(i - 1, j - 1) = corr * jjunk(data, i) * _ jjunk(data, j) End If Next j Next i Out: If Abs(corr) > = 1 Then constantcorr = VarCovar(data) _ Else constantcorr = matrix End Function 267 Calculating the Variance-Covariance Matrix 1 23456789 101112131415161718192021 22 232425262728293031 32 333435363738394041 42 43444546474849AB C D E F G H Return data Date GE MSFT JNJ K BA IBM 03-Jan-94 56.44% -1.50% 6.01% -9.79% 58.73% 21.51% 03-Jan-95 18.23% 33.21% 41.56% 7.46% -0.24% 6.04% 02-Jan-96 56.93% 44.28% 57.71% 37.76% 65.55% 27.33% 02-Jan-97 42.87% 79.12% 22.94% -5.09% 54.34% 41.08% 02-Jan-98 47.11% 38.04% 17.62% 32.04% 37.11% 2.63% 04-Jan-99 34.55% 85.25% 26.62% -10.74% 15.05% -2.11% 03-Jan-00 28.15% 11.20% 3.41% -48.93% 43.53% 23.76% 02-Jan-01 4.61% -47.19% 10.69% 11.67% 28.29% 21.76% 02-Jan-02 -19.74% 4.27% 23.11% 19.90% -15.09% 4.55% 02-Jan-03 -44.78% -29.47% -5.67% 10.88% -23.23% 15.54% 02-Jan-04 35.90% 18.01% -1.27% 15.49% 39.82% 31.80% Average 23.66% 21.38% 18.43% 5.51% 27.63% 17.63% <-- =AVERAGE(G4:G14) Standard deviation 32.17% 40.71% 18.97% 23.86% 29.93% 13.56% <-- =STDEV(G4:G14) Variance 0.1035 0.1657 0.0360 0.0570 0.0896 0.0184 <-- =VAR(G4:G14) Shrinkage factor λ 0.3 <-- This is the weight put on the sample var-cov GE MSFT JNJ K BA IBM GE 0.1035 0.0228 0.0066 -0.0013 0.0257 0.0037 MSFT 0.0228 0.1657 0.0124 -0.0016 0.0114 -0.0007 JNJ 0.0066 0.0124 0.0360 0.0054 0.0030 -0.0012 K -0.0013 -0.0016 0.0054 0.0570 -0.0023 -0.0014 BA 0.0257 0.0114 0.0030 -0.0023 0.0896 0.0074 IBM 0.0037 -0.0007 -0.0012 -0.0014 0.0074 0.0184 GE MSFT JNJ K BA IBM GE 0.1035 0.0758 0.0222 -0.0043 0.0857 0.0123 MSFT 0.0758 0.1657 0.0412 -0.0052 0.0379 -0.0022 JNJ 0.0222 0.0412 0.0360 0.0181 0.0101 -0.0039 K -0.0043 -0.0052 0.0181 0.0570 -0.0076 -0.0046 BA 0.0857 0.0379 0.0101 -0.0076 0.0896 0.0248 IBM 0.0123 -0.0022 -0.0039 -0.0046 0.0248 0.0184 GE MSFT JNJ K BA IBM GE 0.1035 0.0000 0.0000 0.0000 0.0000 0.0000 MSFT 0.0000 0.1657 0.0000 0.0000 0.0000 0.0000 JNJ 0.0000 0.0000 0.0360 0.0000 0.0000 0.0000 K 0.0000 0.0000 0.0000 0.0570 0.0000 0.0000 BA 0.0000 0.0000 0.0000 0.0000 0.0896 0.0000 IBM 0.0000 0.0000 0.0000 0.0000 0.0000 0.0184ESTIMATING THE VARIANCE-COVARIANCE MATRIX USING THE SHRINKAGE APPROACH Gives weight 0.30 (the shrinkage factor) to sample var-cov and weight 0.70 to a diagonal matrix of only variances Shrinkage matrix Uses the array formula {=B20*B34:G39+(1-B20)*B44: G49} to compute the shrinkage covariance matrix Uses the array formula {=MMULT(TRANSPOSE(B4:G14-B 16:G16),B4:G14-B16:G16)/10} to compute the constant sample covariance matrix. In the shrinkage v ar-cov, this matrix is given weight lambda. Uses the array formula {=MMULT(TRANSPOSE(B4:G14-B16: G16),B4:G14-B16:G16)/10*IF(A44:A49=B43:G43,1,0)} to compute a matrix with only variances on diagonal and zeros elsewhere. In th e shrinkage var-cov this matrix is given weight 1-lambda. 268 Chapter 10 There is little theory about choosing the proper shrinkage estimator. 6 Our suggestion is to choose a shrinkage operator λ so that the GMVP is wholly positive (see next section for details). 10.9 Using Option Information to Compute the Variance Matrix 7 Another way to compute the variance matrix is to use the information from the options market. We use the implied volatility for each of the stocks from their at-the-money call options and then compute the variance matrix using constant correlation: σσ ρσ σiji implied i implied j impliedij ij==≠⎧ ⎨⎩ , ,,2if if Here ’ s an example for our 10-stock case. We use data from the options markets and the function CallVolatility discussed in Chapter 17 to compute the implied volatility for each of the 10 stocks and the S&P 500. We use our data set of fi ve years of returns to compute the historical volatility: 6. Three papers by Olivier Ledoit and Michael Wolf may offer some guidance: “Improved Estima- tion of the Covariance Matrix of Stock Returns with an Application to Portfolio Selection,” Journal of Empirical Finance , 2003. “A Well-Conditioned Estimator for Large-Dimensional Covariance Matrices,” Journal of Multivariate Analysis , 2004. “Honey, I Shrunk the Sample Covariance Matrix,” Journal of Portfolio Management , 2004. 7. This section uses some information from the chapters on options. 269 Calculating the Variance-Covariance Matrix We can now use the implied volatilities as the basis for a constant correla- tion variance-covariance matrix: 1 23 4 5 6 7 8 9 10 11 121314 15 1617 18 1920 21 222324 25 2627 28 293031 32 3334 35G F E D C B A Current date 10-Jul-12 Expire date 17-Aug-12 Interest 1.00% Stock price Strike PriceImplied volatilityHistorical volatility MCD 90.25 90.00 2.09 16.50% 15.42% <-- {=TRANSPOSE('Betas etc'!B11:L11)} X 20.28 20.00 1.58 55.05% 67.00% MT 14.67 15.00 0.75 47.12% 56.18% MSFT 29.74 30.00 1.07 30.74% 27.21% AAPL 608.21 610.00 25.30 33.04% 38.53% K 48.98 50.00 0.40 12.44% 17.67% GE 19.62 20.00 0.39 21.63% 37.91% BAC 7.48 8.00 0.22 43.04% 68.10% PFE 22.44 23.00 0.18 13.38% 21.87% XOM 83.11 85.00 0.90 15.23% 17.55% ^GSPC 1,341.47 1,350.00 22.50 14.96% 19.21% =callvolatility(B7,C7,($B$3-$B$2)/365,$B$4,D7)COMPARING IMPLIED AND HISTORICAL VOLATILITY 0%10%20%30%40%50%60%70%80%MCDXMTMSFTAAPLKGEBACPFEXOM^GSPCComparing Implied and Historical Vola ƟliƟes Historical: 2007 - 2012, Implied: July 10, 2012 Implied vola Ɵlity Historical vola Ɵlity 270 Chapter 10 The programming of the ImpliedVolVarCov is similar to previous VBAs in this chapter: Function ImpliedVolVarCov(varcovarmatrix As _ Range, volatilities As Range, corr As Double) As Variant Dim i As Integer Dim j As Integer Dim numcols As Integer numcols = varcovarmatrix.Columns.Count numrows = numcols Dim matrix() As Double ReDim matrix(numcols - 1, numcols - 1) If Abs(corr) > = 1 Then GoTo Out 1 2 34 5 6 789 101112131415 16 17 18 19 20 21 22 23 24 25262728293031AB C D E F G H I J K Correlation 0.20 MCD X MT MSFT AAPL K GE BAC PFE XOM MCD 0.0272 0.0182 0.0156 0.0101 0.0109 0.0041 0.0071 0.0142 0.0044 0.0050 X 0.0182 0.3031 0.0519 0.0338 0.0364 0.0137 0.0238 0.0474 0.0147 0.0168 MT 0.0156 0.0519 0.2221 0.0290 0.0311 0.0117 0.0204 0.0406 0.0126 0.0143 MSFT 0.0101 0.0338 0.0290 0.0945 0.0203 0.0076 0.0133 0.0265 0.0082 0.0094 AAPL 0.0109 0.0364 0.0311 0.0203 0.1091 0.0082 0.0143 0.0284 0.0088 0.0101 K 0.0041 0.0137 0.0117 0.0076 0.0082 0.0155 0.0054 0.0107 0.0033 0.0038 GE 0.0071 0.0238 0.0204 0.0133 0.0143 0.0054 0.0468 0.0186 0.0058 0.0066 BAC 0.0142 0.0474 0.0406 0.0265 0.0284 0.0107 0.0186 0.1852 0.0115 0.0131 PFE 0.0044 0.0147 0.0126 0.0082 0.0088 0.0033 0.0058 0.0115 0.0179 0.0041 XOM 0.0050 0.0168 0.0143 0.0094 0.0101 0.0038 0.0066 0.0131 0.0041 0.0232 Current date 10-Jul-12 Expire date 17-Aug-12 Interest 1.00% Stock price Strike PriceImplied volatility MCD 90.25 90.00 2.09 16.50% <-- =callvolatility(B22,C22,($B$18-$B$17)/365,$B$19,D22) X 20.28 20.00 1.58 55.05% MT 14.67 15.00 0.75 47.12% MSFT 29.74 30.00 1.07 30.74% AAPL 608.21 610.00 25.30 33.04% K 48.98 50.00 0.40 12.44% GE 19.62 20.00 0.39 21.63% BAC 7.48 8.00 0.22 43.04% PFE 22.44 23.00 0.18 13.38% XOM 83.11 85.00 0.90 15.23%CONSTANT CORRELATION MATRIX WITH IMPLIED VOLATILITIES <-- {=ImpliedVol(B5:K14,E22:E31,B2)} 271 Calculating the Variance-Covariance Matrix For i = 1 To numcols For j = 1 To numcols If i = j Then matrix(i - 1, j - 1) = volatilities(i) ∧ 2 Else matrix(i - 1, j - 1) = corr * _ volatilities(i) * volatilities(j) End If Next j Next i Out: If Abs(corr) > = 1 Then ImpliedVolVarCov = _ “ERR” Else ImpliedVolVarCov = matrix End Function 10.10 Which Method to Compute the Variance-Covariance Matrix? This chapter gives fi ve alternatives to computing the variance-covariance matrix: • The sample variance-covariance • The single-index model • The constant correlation approach • Shrinkage methods • Implied volatility-based variance-covariance matrices How do we compare these alternatives? Which one should we choose? We could compare the technical outcomes of using each of these methods—for example, show the alternative values of the GMVP using different methods—but this largely misses the point. The choice of how to compute the variance-covariance matrix is largely a question of how you view capital markets. If you strongly believe that the past predicts the future, then perhaps your choice should be to use the sample varcov matrix. This author prefers to get away from history … our preference is to use an option-based volatility model with a changing correlation: In “normal” times we would use a “normal” correlation of between 0.2 and 0.3; in times of crisis, we would use a much higher correlation, say, ρ = 0.5 − 0.6. 272 Chapter 10 1 2 34 5 6789 10 11 1213141516AB C D E F G H La-Z-Boy Kimball FlexsteelLeggett & PlattHerman Mille rShaw Industries 1982 36.67% 0.20% 41.54% 21.92% 26.13% 22.50% 1983 122.82% 61.43% 195.09% 62.27% 73.38% 117.89% 1984 14.44% 63.51% -38.38% -1.27% 45.15% 7.80% 1985 21.39% 28.42% 1.30% 81.17% 24.27% 38.14% 1986 45.36% -7.44% 21.89% 19.83% 10.73% 54.48% 1987 20.19% 48.27% 9.11% -10.21% -11.92% 26.82% 1988 -8.94% -11.28% 12.65% 13.77% 7.06% -6.24% 1989 27.02% 12.85% 12.08% 32.55% -7.55% 123.03% 1990 -11.64% 2.42% -17.13% -6.48% 1.31% 15.48% 1991 20.29% 6.90% 3.62% 50.12% -5.54% 19.92% 1992 34.08% 22.21% 33.46% 84.40% 5.71% 62.76% Beta 0.80 0.95 0.65 0.85 0.85 1.40 Mean returns 29.24% 20.68% 25.02% 31.64% 15.34% 43.87% <-- =AVERAGE(G3:G13)DATA FOR 6 FURNITURE COMPANIES 10.11 Summary In this chapter we considered how to compute the variance-covariance matrix which is central to all portfolio optimization. Starting with the standard sample variance-covariance matrix, we also showed how to compute several alterna-tives that have appeared in the literature as perhaps improving portfolio computations. Exercises 1. Below you will fi nd annual return data for six furniture companies for the years 1982– 1992. Use these data to calculate the variance-covariance matrix of the returns. The remaining exercises refer to the data in the tab Price data on the exercise spreadsheet that accompanies this book. This tab gives three years of price data for six stocks and the S&P 500 as a surrogate for the market. 2. Compute the returns of the data and the statistics for each of the assets (mean return, variance and standard deviation of return, beta). 3. Compute the sample variance-covariance matrix and the correlation matrix for the six stocks. 4. Use the function SIM defi ned in the chapter to compute the single-index variance-cova- riance matrix. 5. Compute the global minimum variance portfolio (GMVP) using the sample variance- covariance matrix. 6. Compute the GMVP using the constant correlation covariance matrix. 1 1 Estimating Betas and the Security Market Line 11.1 Overview The capital asset pricing model (CAPM) is one of the two most influential innovations in financial theory in the latter half of the twentieth century. 1 By integrating the portfolio decision with utility theory and the statistical behavior of asset prices, the formulators of the CAPM defined the paradigm which is now generally used for the analysis of stock prices. What does the CAPM actually say? What are its empirical implications? Roughly speaking, we can differentiate between two kinds of implications of the CAPM. First, the capital market line (CML) defines the individual optimal portfolios for an investor interested in the mean and variance of her optimal portfolio. Second, given agreement between investors on the statistical proper-ties of asset returns and on the importance of mean-variance optimization, the security market line (SML) defines the risk-return relation for each individual asset . It is useful to differentiate between the case wherein a risk-free asset exists and the case wherein there is no risk-free asset. 2 Case 1: A Risk-Free Asset Exists Suppose a risk-free asset exists and has return r f . We can differentiate between the individual optimization of investors and the general equilibrium implica-tions of the CAPM: • Individual optimization: Assuming that investors optimize based on the expected return and standard deviation of their portfolio returns (in the jargon of finance—they have “mean-variance” preferences), the CAPM states that each individual investor ’ s optimal portfolio falls on the line Er r Er r pfp x f()=+ ()− []σ , where portfolio x is a portfolio which maximizes Er r yf y()− σ for all feasible portfolios y . Proposition 1 of Chapter 9 shows that x can be computed by xx x xSE r r SE r rNf f=…{} =()− [] ()− []− −∑121 1,, , , where 1. The other remarkable innovation is option pricing theory, which is discussed in Chapters 15–19. These two innovations together have accounted for a number of Nobel Prizes in Econom-ics: Harry Markowitz (1990), William Sharpe (1990), Myron Scholes (1997), and Robert Merton (1997). But for their untimely demise, others associated with these theories—Jan Mossin (1936–1987), and Fischer Black (1938–1995)—would doubtless also have received the Nobel. 2. The existence (or non-existence) of a risk-free asset is closely related to the investment horizon. Assets which are risk-free over a short term may not be riskless over a longer term. 274 Chapter 11 S is the variance-covariance matrix of risky asset returns and Er Er Er Er N ()= () () … () {} 12,, , is the vector of expected asset returns. • General equilibrium : If all investors agree about the statistical assumptions of the model—the variance-covariance matrix S and the vector of expected asset returns E ( r )—and if a risk-free asset exists, then individual asset returns are defined by the security market line (SML): Er rCov r rEr r ifiM MMf ()=+()()− [], σ2 where M denotes the market portfolio—the value-weighted portfolio of all risky assets. The expression Cov r r iM M,() σ2 is generally termed the asset ’ s beta : βσiiM MCov r r=(), 2 . Case 2: No Risk-Free Asset Exists If there is no risk-free asset, then the implications of the CAPM both for individual optimization and for general equilibrium are defined by Black ’ s (1972) zero-beta model (Proposition 3 of Chapter 9): • Individual optimization : In the absence of a risk-free asset, individual optimal portfolios will fall along the efficient frontier . As shown in Proposition 2 of Chapter 9, this frontier is the upward-sloping portion of the mean-sigma combinations created by the convex combination of any two optimizing portfolios xSE r c SE r c=()− [] ()− []− −∑1 1 1 1 and ySE r c SE r c=()− [] ()− []− −∑1 2 1 2 , where c 1 and c 2 are two arbitrary constants. • General equilibrium : In the absence of a risk-free asset, if all investors agree about the statistical assumptions of the model—the variance-covariance matrix S and the vector of expected asset returns E ( r )—then individual asset returns are defined by the security market line (SML): Er ErCov r rEr Er iziy yyz ()=()+()()−() [], σ2 where y is any efficient portfolio and z is a portfolio which has zero covariance with y (the so-called “zero beta portfolio”). 275 Estimating Betas and the Security Market Line The case of no risk-free asset is obviously weaker than the case of a risk- free asset. If there is a risk-free asset, the general equilibrium version of the CAPM says that all portfolios are situated on a single, agreed-upon line. If there is no risk-free asset, then all optimal portfolios are on the same frontier; but in this case asset betas can differ, since there are many portfolios y which fulfill the equation Er ErCov r rEr Er iziy yyz ()=()+()()−() [], σ2 . The CAPM as a Prescriptive and a Descriptive Tool As you can see from the discussion above, the CAPM is both prescriptive and descriptive . As a prescriptive tool, the CAPM tells a mean-variance investor how to choose his optimal portfolio. By finding a portfolio of the form SE r c SE r c− −()− [] ()− []∑1 1 1 1 , the investor can identify an optimal portfolio from the data set. As a descriptive tool, the CAPM gives conditions under which we can generalize about the structure of expected returns in the market. Whether or not a risk-free asset exists, these conditions assume that investors agree on the statistical structure of asset returns—the variance-covariance matrix and the expected returns. In this case all the returns are expected to lie on a security market line (SML) of the form Er rCov r rEr r ifiM MMf ()=+()()− [], σ2 (if there is a risk-free asset) or of the form Er ErCov r rEr Er iziy yyz ()=()+()()−() [], σ2 i f there is no risk-free asset. This Chapter In this chapter we look at some typical capital market data and replicate a simple test of the descriptive part of the CAPM. This means that we have to calculate the betas for a set of assets, and we then have to determine the equa-tion of the security market line (SML). The test in this chapter is the simplest possible test of the CAPM. There is an enormous literature in which the pos-sible statistical and methodological pitfalls of CAPM tests are discussed. Good 276 Chapter 11 places to begin are textbooks by Elton, Gruber, Brown, and Goetzmann (2009), and Bodie, Kane, and Marcus (2010). 3 11.2 Testing the SML Typical tests of the security market line (SML) start with return data on a set of risky assets. The steps in the test are as follows: • Determine a candidate for the market portfolio M . In our example we will use the Standard & Poor ’ s 500 Index (S&P 500) as a candidate for M . This is a critical step: In principle, the “true” market portfolio should—as pointed out in Chapter 9—contain all the market ’ s risky assets in proportion to their value. It is clearly impossible to calculate this theoretical market portfolio, and we must therefore make do with a surrogate. As you will see in the next two sections, the propositions of Chapter 9 can shed much light on how the choice of the market surrogate affects the r -squared of our regression test of the CAPM. • For each of the assets in question, determine the asset beta, βσiiM MCov r r=(), 2 . This is often called the first-pass regression . • Regress the mean returns of the assets on their respective betas (the second- pass regression ): rii=+γγ β01 If the CAPM in its descriptive format holds, then the second-pass regression should be the security market line. 4 We illustrate the tests of the CAPM with a simple numerical example that uses data for the 30 stocks in the Dow-Jones Industrials. We start with the prices of the S&P 500 (symbol ∧ GSPC) and the stocks in the DJ30 (some of the rows and columns are not shown): 3. For further references, see the Selected References at the end of this book. Our personal expositional favorite is a paper by Roll, “Ambiguity When Performance Is Measured by the Securities Market Line,” Journal of Finance (1978). 4. This is a direct consequence of Propositions 3 and 4 of Chapter 9. 277 Estimating Betas and the Security Market Line 1 2 34 5 67 8 9 10 51 5253 54 5556 57AB C D E F G HI J K L M N DateS&P500 Index ^GSPCAlcoa AAAmerican International Group AIGAmerican Express AXPBoeing BACitigroup CCaterpillar CATDuPont DDDisney DISGeneral Electric GEGeneral Motors GMHome Depot HDHoneywell HON 03-Jul-01 1211.23 35.37 81.32 33.73 53.64 40.97 24.73 36.29 25.02 38.33 49.72 48.26 32.75 01-Aug-01 1133.58 34.50 76.43 30.46 47.06 37.49 22.45 35.01 24.14 36.04 43.14 44.06 33.2704-Sep-01 1040.94 28.06 76.24 24.30 30.79 33.15 20.11 32.07 17.68 32.93 33.81 36.79 23.57 01-Oct-01 1059.78 29.34 76.82 24.68 29.97 37.26 20.23 34.18 17.65 32.23 32.56 36.66 26.38 01-Nov-01 1139.45 35.09 80.54 27.60 32.43 39.34 21.45 38.21 19.43 34.08 39.63 44.78 29.7703-Dec-01 1148.08 32.32 77.64 29.93 35.83 41.46 23.63 36.63 19.88 35.63 38.75 48.97 30.38 02-Jan-02 1130.20 32.59 72.51 30.13 37.83 39.06 22.91 38.06 20.21 33.03 40.77 48.09 30.19 01-Feb-02 1106.73 34.31 72.38 30.64 42.64 37.29 25.29 40.68 22.07 34.39 42.67 48.00 34.43 01-Jul-05 1234.18 27.48 59.76 47.68 65.02 42.62 53.28 41.22 25.37 33.53 34.89 42.97 38.43 01-Aug-05 1220.33 26.38 58.92 47.89 66.26 42.89 54.85 38.55 24.93 32.66 32.86 39.92 37.66 01-Sep-05 1228.81 24.05 61.67 49.79 67.18 44.60 58.07 38.16 23.88 32.94 29.42 37.76 36.89 03-Oct-05 1207.01 23.92 64.49 49.41 63.91 44.86 52.22 40.62 24.11 33.17 26.33 40.63 33.65 01-Nov-05 1249.48 27.16 66.82 51.04 67.67 48.04 57.37 42.02 24.67 34.94 21.44 41.46 36.1501-Dec-05 1248.29 29.30 67.91 51.08 69.71 48.02 57.36 41.77 23.97 34.53 19.01 40.17 36.85 03-Jan-06 1280.08 31.21 65.15 52.19 67.79 46.09 67.69 38.48 25.31 32.27 23.56 40.24 38.01PRICE DATA FOR THE DOW-JONES INDUSTRIAL STOCKS AND THE STANDARD AND POORS 500 July 2001 - July 2006 1 2 3 4 567 8 9 1011 12 1314 15 16AB C D E F G H I J K L M N DateS&P 500 Index ^GSPCAlcoa AAAmerican International Group AIGAmerican Express AXPBoeing BACitigroup CCaterpillar CATDuPont DDDisney DISGeneral Electric GEGeneral Motors GMHome Depot HDHoneywell HON Average return 0.07% -0.09% -0.54% 0.72% 0.67% 0.30% 1.79% 0.18% 0.29% -0.23% -0.87% -0.52% 0.29% Beta 1.00 1.90 0.99 1.38 1.15 1.30 1.39 1.00 1.28 0.84 1.41 1.55 1.66 % 7 1 . 0 % 3 6 . 0 - % 7 9 . 0 - % 0 3 . 0 - % 0 2 . 0 % 1 1 . 0 % 9 6 . 1 % 1 2 . 0 % 8 5 . 0 % 2 6 . 0 % 1 6 . 0 - % 3 2 . 0 - 0 a h p l A R-squared 1 0.6085 0.3518 0.7052 0.2487 0.5972 0.5158 0.4362 0.3845 0.3221 0.2607 0.5288 0.5473 01-Aug-01 -6.63% -2.49% -6.20% -10.20% -13.09% -8.88% -9.67% -3.59% -3.58% -6.16% -14.20% -9.11% 1.58% 04-Sep-01 -8.53% -20.66% -0.25% -22.59% -42.42% -12.30% -11.01% -8.77% -31.14% -9.02% -24.37% -18.03% -34.47% 01-Oct-01 1.79% 4.46% 0.76% 1.55% -2.70% 11.69% 0.59% 6.37% -0.17% -2.15% -3.77% -0.35% 11.26% 01-Nov-01 7.25% 17.90% 4.73% 11.18% 7.89% 5.43% 5.86% 11.15% 9.61% 5.58% 19.65% 20.01% 12.09% 03-Dec-01 0.75% -8.22% -3.67% 8.10% 9.97% 5.25% 9.68% -4.22% 2.29% 4.45% -2.25% 8.94% 2.03% 02-Jan-02 -1.57% 0.83% -6.84% 0.67% 5.43% -5.96% -3.09% 3.83% 1.65% -7.58% 5.08% -1.81% -0.63% 01-Feb-02 -2.10% 5.14% -0.18% 1.68% 11.97% -4.64% 9.88% 6.66% 8.80% 4.03% 4.55% -0.19% 13.14%01-Mar-02 3.61% 0.47% -2.52% 11.66% 4.85% 9.02% 2.38% 0.66% 0.36% -2.89% 13.20% -2.72% 0.41%RETURN DATA FOR THE DOW-JONES INDUSTRIAL STOCKS AND THE STANDARD AND POORS 500 July 2001 - July 2006 =AVERAGE(C9:C68) =SLOPE(C9:C68,$B$9:$B$68) =INTERCEPT(C9:C68,$B$9:$B$68) =RSQ(C9:C68,$B$9:$B$68) We first transform these price data to returns: The First-Pass Regression Row 4 gives each asset ’ s average monthly return over the 60-month period (to annualize these returns, we would multiply by 12). Rows 5–7 report the results of the first-pass regression . For each asset i we report the regression r it = α i + β i r SP , t . We use the Excel function Slope to compute the β of each asset, and the functions Intercept and Rsq to compute the α and R 2 for each regression. 278 Chapter 11 As a check, we also compute the α , β , and R 2 for the S&P 500 index (column B). Not surprisingly, α SP = 0, β SP = 1, R 2 = 1. The Second-Pass Regression The SML postulates that the mean return of each security should be linearly related to its beta. Assuming that the historic data provide an accurate descrip-tion of the distribution of future returns, we postulate that E ( R i ) = α + β i Π + ε i , where the definitions of α and Π depend on whether we are in Case 1 or Case 2 of section 11.1: α=()r Erf zCase there exists a risk-free asset Case no risk-free1 2: :a asset has zero correlation with efficient portfolio.z y Er⎧ ⎨⎪ ⎩⎪ = ΠMMf yzr Er Er()− ()−()⎧⎨⎩Case Case1 2 In the second step of our test of the CAPM, we examine this hypothesis by regressing the mean returns on the β ’ s. 1 2 3 4 5 67 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 2425 26 2728 29 3031 32H G F E D C B A StockAverage monthly return Beta Alpha 3 2 0 0 . 0 - 8 2 0 9 . 1 % 9 0 . 0 - A A a o c l A Second-pass regression, regressing monthly returns on Beta American International Group AIG -0.54% 0.9936 -0.0061 Intercept 0.0036 <-- =INTERCEPT(B3:B32,C3:C32) American Express AXP 0.72% 1.3784 0.0062 Slope -0.0020 <-- =SLOPE(B3:B32,C3:C32) ) 2 3 C : 3 C , 2 3 B : 3 B ( Q S R = - - < 8 3 2 0 . 0 d e r a u q s - R 8 5 0 0 . 0 5 1 5 1 . 1 % 7 6 . 0 A B g n i e o B 1 2 0 0 . 0 2 5 9 2 . 1 % 0 3 . 0 C p u o r g i t i C ) 2 3 C : 3 C , 2 3 B : 3 B ( t p e c r e t n i t = - - < 1 8 3 2 . 1 t p e c r e t n i , c i t s i t a t s - t 9 6 1 0 . 0 3 0 9 3 . 1 % 9 7 . 1 T A C r a l l i p r e t a C ) 2 3 C : 3 C , 2 3 B : 3 B ( e p o l s t = - - < 4 5 2 8 . 0 - e p o l s , c i t s i t a t s - t 1 1 0 0 . 0 9 0 0 0 . 1 % 8 1 . 0 D D t n o P u D 0 2 0 0 . 0 5 0 8 2 . 1 % 9 2 . 0 S I D y e n s i D General Electric GE -0.23% 0.8420 -0.0030 General Motors GM -0.87% 1.4060 -0.0097 3 6 0 0 . 0 - 8 2 5 5 . 1 % 2 5 . 0 - D H t o p e D e m o H 7 1 0 0 . 0 0 4 6 6 . 1 % 9 2 . 0 N O H l l e w y e n o H Hewlett Packard HPQ 0.61% 1.9594 0.0046 8 5 0 0 . 0 - 4 6 7 5 . 1 % 7 4 . 0 - M B I 9 8 0 0 . 0 - 8 4 6 2 . 2 % 3 7 . 0 - C T N I l e t n I Johnson & Johnson JNJ 0.34% 0.2471 0.0032 5 0 0 0 . 0 7 1 9 7 . 1 % 8 1 . 0 M P J n a g r o M P J 9 0 0 0 . 0 0 9 5 3 . 0 % 2 1 . 0 O K a l o C a c o C 5 2 0 0 . 0 6 4 6 2 . 1 % 5 3 . 0 D C M s d l a n o D c M 9 5 0 0 . 0 4 0 5 6 . 0 % 4 6 . 0 M M M M 3 5 2 1 0 . 0 3 3 6 6 . 0 % 0 3 . 1 O M a i r t l A 8 6 0 0 . 0 - 9 9 0 6 . 0 % 3 6 . 0 - K R M k c r e M 3 4 0 0 . 0 - 9 1 2 1 . 1 % 5 3 . 0 - T F S M t f o s o r c i M 8 7 0 0 . 0 - 2 7 5 5 . 0 % 4 7 . 0 - E F P r e z i f P 3 9 0 0 . 0 7 8 6 1 . 0 % 4 9 . 0 G P e l b m a G r o t c o r P 0 5 0 0 . 0 - 5 7 2 1 . 1 % 1 4 . 0 - T T & T A United Technologies UTX 1.03% 1.0659 0.0095 7 5 0 0 . 0 - 1 3 2 0 . 1 % 9 4 . 0 - Z V n o z i r e V 0 3 0 0 . 0 - 0 0 0 6 . 0 % 5 2 . 0 - T M W t r a m l a W 3 8 0 0 . 0 5 5 4 6 . 0 % 8 8 . 0 M O X l i b o M n o x x ETHE SECOND-PASS REGRESSION 279 Estimating Betas and the Security Market Line The results (cells F4:G6) are very disappointing. Our test yields the follow- ing SML: Er R ii()=− = ↑↑0 0036 0 0020 0 0238 012.. , . γγβ/dncurlybracketleft/dncurlybracketmid/dncurlybracketright /dncurlybracketleft/dncurlybracketmid/dncurlybracketright There is nothing about these numbers which inspires confidence: • γ 0 should correspond to the risk-free rate over the period. In section 11.9 we discuss this rate, which changed wildly over the 60 months surveyed. At this point it is enough to point out that the average monthly risk-free interest rate was 0.18% (or 0.0018, exactly half of γ 0 ). • γ 1 should correspond to E ( r M ) − r f . The average monthly return of the S&P 500 over the period was − 0.10% and the average monthly risk-free inter- est rate was 0.18%, so that γ 1 should be approximated by − 0.28% (or 0.0028). • Both the t -statistics for the i (cell G8) and the slope (cell G9) indicate that they are not statistically different from zero. 5 Our test of the SML has failed. The CAPM may have prescriptive validity, but it does not describe our data. Why Are the Results So Bad? The experiment we did—checking the CAPM by plotting the security market line—does not appear to have worked out very well. There does not appear to be much evidence in favor of the SML: Neither the R 2 of the regression nor the t -statistics give much evidence that there is a relation between expected return and portfolio β . There are a number of reasons why these disappointing results may hold: • One reason is that perhaps the CAPM itself does not hold. This could be true for a variety of reasons: Ⴛ\u0003 Perhaps in the market short sales of assets are restricted. Our derivation of the CAPM (see Chapter 9 on efficient portfolios) assumes that there are no short-sale restrictions. Clearly this is an unrealistic assumption. The computation of efficient portfolios when short sales are restricted is 5. The functions TIntercept and TSlope were created by the author. They are attached to the spreadsheet for this chapter and are discussed in Chapter 3. 280 Chapter 11 considered in Chapter 12. In this case, however, there are no simple relations (such as those proved in Chapter 9) between the returns of assets and their betas. In particular, if short sales are restricted, there is no reason to expect the SML to hold. Ⴛ Perhaps individuals do not have homogeneous probability assessments, or perhaps they do not have the same expectations of asset returns, variances, and covariances. • Perhaps the CAPM holds only for portfolios and not for single assets. • Perhaps our set of assets isn ’ t large enough: After all, the CAPM talks about all risky assets , whereas we have chosen—for illustrative purposes—to do our test on a very small subset of these assets. The literature on CAPM testing records tests in which the set of risky assets has been expanded to include bonds, real estate, and even non-diversifiable assets such as human capital. • Perhaps the “market portfolio” isn ’ t efficient. This possibility is suggested by the mathematics of Chapter 9 on efficient portfolios, and it is this sugges-tion which we further explore in the next section. • Perhaps the CAPM holds only if the market returns are positive (in the period surveyed they were, on average, negative). 11.3 Did We Learn Something? The results of our exercise in section 11.1 are quite disappointing. Did we learn anything positive from this exercise? Absolutely. For example, the regres-sion model does a pretty good job of describing individual asset returns in relation to the S&P 500: 281 Estimating Betas and the Security Market Line On average the S&P 500 describes about 35% of the variability of the DJ30 stocks, which have an average beta of 1.12. If we exclude the seven stocks with the lowest R 2 , the S&P describes almost 43% of the variation in the stocks’ returns: 0.000.501.001.502.002.50Beta and R2for Each Stock as Regressed on SP500 Beta R-squared 1 2 345 67 89 101112 13 141516 1718AB C D E F G H I Average alpha 0.06% <-- =AVERAGE('Page 277 bottom'!C6:AF6) Average beta 1.12 <-- =AVERAGE('Page 277 bottom'!C5:AF5) Average r-squared 0.3510 <-- =AVERAGE('Page 277 bottom'!C7:AF7) Average R2 for best regressions Cutoff for R20.2<-- Below we count all R2 which are greater than this number 9.8258 <-- =SUMIF('Page 277 bottom'!C7:AF7,\">\"&TEXT(B7,\"0.00\")) 23 <-- =COUNTIF('Page 277 bottom'!C7:AF7,\">\"&TEXT(B7,\"0.00\")) Average R20.4272 <-- =B8/B9 T-statistics for intercept and slope Alcoa AAAmerican International Group AIGAmerican Express AXPBoeing BACitigroup CCaterpillar CATDuPont DDDisney DIS t-stat for intercept 0.3144 0.6324 -1.0525 -0.1584 -0.2013 -1.6120 -0.0192 -0.0371 t-stat for slope 9.4942 5.6112 11.7783 4.3815 9.2729 7.8607 6.6993 6.0199 Average absolute t-stat for intercept 0.3998 <-- {=AVERAGE(ABS(B14:AE14))} Average t-statfor slope 5.7866 <-- =AVERAGE(B15:AE15)OUR SML EXERCISE: WHAT DID WE LEARN? 282 Chapter 11 Cell B10 above computes the average R 2 for those regressions which had an R 2 > 0.2. This is 23 of the Dow-Jones 30. So—on average the first-pass regressions are very significant. The average R 2 of 35% that we got for our first-pass regressions of the basic SML is actually a respectable number in finance. Students—influenced by over-enthusiastic statistics instructors and an overly linear view of the world—often feel that the R 2 of any convincing regression should be at least 90%. Finance does not appear to be a highly linear profession: A good rule of thumb is that any financial regression that gives an R 2 greater than 80% is possibly misspecified and misleading. 6 Another way to look at the significance of our results is to compute the t -statistics for the intercept and slope of the first-pass regressions (rows 14–15 above). While the intercepts are not significantly different from zero (since their t -statistic is less than 2), the slopes are very significant. An Excel Note: Computing the Absolute Value of an Array of Numbers In the computations above we use a neat Excel trick related to array functions (see Chapter 34). By using Abs as an array function (that is, by entering the function using [Ctrl] + [Shift] + [Enter]), we can compute the average of the absolute values of a vector of numbers. A simple example is shown below: 1 2 3 45 67AB C D E F 8 6 - 3 - 2 - 1 s r e b m u N Average number -0.4000 < -- =AVERAGE(B3:F3) Average absolute number 4.0000 <-- {=AVERAGE(ABS(B3:F3))} The above, but not as array function 1.0000 <-- =AVERAGE(ABS(B3:F3))USING ABS FUNCTION IN ARRAY The Excel \"Abs\" function computes the absolute value If we use it as an array function, it can be applied to a range of numbers 6. An exception to this useful rule relates to diversified portfolios—here the R 2 increases dramatically. Notice cell B7: Using the same function as a regular function does not produce the correct answer. 283 Estimating Betas and the Security Market Line 11.4 The Non-Efficiency of the “Market Portfolio” When we calculated the SML in section 11.1, we regressed the mean return of each asset on the returns of the market portfolio. The propositions of Chapter 9 on efficient portfolios suggest that our failure to find adequate results may stem from the fact that the S&P 500 portfolio is not efficient rela-tive to the set of the six assets which we have chosen. Proposition 3 of Chapter 9 states that if we had chosen to regress our asset returns on a portfolio that is efficient with respect to the asset set itself, we would get an r -squared of 100%. Proposition 4 of Chapter 9 shows that if we get an r -squared of 100% then the portfolio on which we regress the asset returns is necessarily efficient with respect to the set of assets. In this section we give a numerical illustration of these propositions. In the spreadsheet below we create a “mysterious portfolio” in column B. This portfolio (its construction is described in the next subsection) is efficient with respect to the Dow-Jones 30. As you can see in cells A10:B12, when we perform the second-pass regression—regressing the individual average returns of the assets on their betas computed with respect to the mysterious portfo-lio—the results are perfect. The resulting regression has an intercept of 0.0030 and a slope of 0.0425. Most important—it has an R 2 of 100%. 1 2 3 4 5 678 9 10 111213 14 1516 17 18 19AB C D E F G H I J K L M N DateMysterious portfolioAlcoa AAAmerican International Group AIGAmerican Express AXPBoeing BACitigroup CCaterpillar CATDuPont DDDisney DISGeneral Electric GEGeneral Motors GMHome Depot HDHoneywell HON Average return 4.55% -0.09% -0.54% 0.72% 0.67% 0.30% 1.79% 0.18% 0.29% -0.23% -0.87% -0.52% 0.29% 0 0 . 0 9 1 . 0 - 8 2 . 0 - 3 1 . 0 - 0 0 . 0 3 0 . 0 - 5 3 . 0 0 0 . 0 9 0 . 0 0 1 . 0 0 2 . 0 - 9 0 . 0 - a t e B % 0 3 . 0 % 6 3 . 0 % 8 3 . 0 % 4 3 . 0 % 0 3 . 0 % 1 3 . 0 % 9 1 . 0 % 0 3 . 0 % 7 2 . 0 % 7 2 . 0 % 6 3 . 0 % 3 3 . 0 a h p l A 0 0 0 0 . 0 3 4 1 0 . 0 6 7 1 0 . 0 6 2 1 0 . 0 0 0 0 0 . 0 6 0 0 0 . 0 9 7 5 0 . 0 0 0 0 0 . 0 4 2 0 0 . 0 4 6 0 0 . 0 2 4 2 0 . 0 5 2 0 0 . 0 d e r a u q s - R SML--regressing the average returns on the betas Intercept 0.0030 <-- =INTERCEPT(C4:AF4,C5:AF5) Slope 0.0425 <-- =SLOPE(C4:AF4,C5:AF5) R-squared 1.0000 <-- =RSQ(C4:AF4,C5:AF5) 01-Aug-01 -1.01% -2.49% -6.20% -10.20% -13.09% -8.88% -9.67% -3.59% -3.58% -6.16% -14.20% -9.11% 1.58% 04-Sep-01 0.40% -20.66% -0.25% -22.59% -42.42% -12.30% -11.01% -8.77% -31.14% -9.02% -24.37% -18.03% -34.47% 01-Oct-01 4.71% 4.46% 0.76% 1.55% -2.70% 11.69% 0.59% 6.37% -0.17% -2.15% -3.77% -0.35% 11.26% 01-Nov-01 -1.33% 17.90% 4.73% 11.18% 7.89% 5.43% 5.86% 11.15% 9.61% 5.58% 19.65% 20.01% 12.09% 03-Dec-01 8.11% -8.22% -3.67% 8.10% 9.97% 5.25% 9.68% -4.22% 2.29% 4.45% -2.25% 8.94% 2.03%RETURN DATA FOR THE DOW-JONES INDUSTRIAL STOCKS AND THE STANDARD AND POORS 500 July 2001 - July 2006 The Mysterious Portfolio Is Efficient The propositions of Chapter 9 leave us with only one conclusion: The “mys- terious portfolio” must be efficient with respect to the DJ30. And so it is. In 284 Chapter 11 the spreadsheet below we show the construction of this efficient portfolio, which follows the propositions of Chapter 9. • We first construct the variance-covariance matrix S using the function Var- covar defined in Chapter 10. • We then compute the efficient portfolio by solving SE r c SE r c− −()− [] ()− []∑1 1 . In the spreadsheet below we use c = 0.0030, which then turns out to be the intercept of the second-pass regression. 1 2 3 456 7 89 10 11 12 1314 15 67 68 69 70 71727374 75 76 99 100 101 102 103 104 105 106 107 108 109110 111 112113 114 115 116117 118 119 120121 122 123 124 125126127 128 129 130 131 132 133134 135 136 137AB C D E F G H I J K L M N DateSP 500 Index ^SPXAlcoa AAAmerican International Group AIGAmerican Express AXPBoeing BACitigroup CCaterpillar CATDuPont DDDisney DISGeneral Electric GEGeneral Motors GMHome Depot HDHoneywell HON Average return 0.07% -0.09% -0.54% 0.72% 0.67% 0.30% 1.79% 0.18% 0.29% -0.23% -0.87% -0.52% 0.29% Beta 1.00 1.90 0.99 1.38 1.15 1.30 1.39 1.00 1.28 0.84 1.41 1.55 1.66 % 7 1 . 0 % 3 6 . 0 - % 7 9 . 0 - % 0 3 . 0 - % 0 2 . 0 % 1 1 . 0 % 9 6 . 1 % 1 2 . 0 % 8 5 . 0 % 2 6 . 0 % 1 6 . 0 - % 3 2 . 0 - 0 a h p l A R-squared 1 0.6085 0.3518 0.7052 0.2487 0.5972 0.5158 0.4362 0.3845 0.3221 0.2607 0.5288 0.5473 01-Aug-01 -6.63% -2.49% -6.20% -10.20% -13.09% -8.88% -9.67% -3.59% -3.58% -6.16% -14.20% -9.11% 1.58% 04-Sep-01 -8.53% -20.66% -0.25% -22.59% -42.42% -12.30% -11.01% -8.77% -31.14% -9.02% -24.37% -18.03% -34.47% 01-Oct-01 1.79% 4.46% 0.76% 1.55% -2.70% 11.69% 0.59% 6.37% -0.17% -2.15% -3.77% -0.35% 11.26% 01-Nov-01 7.25% 17.90% 4.73% 11.18% 7.89% 5.43% 5.86% 11.15% 9.61% 5.58% 19.65% 20.01% 12.09% 03-Dec-01 0.75% -8.22% -3.67% 8.10% 9.97% 5.25% 9.68% -4.22% 2.29% 4.45% -2.25% 8.94% 2.03% 02-Jan-02 -1.57% 0.83% -6.84% 0.67% 5.43% -5.96% -3.09% 3.83% 1.65% -7.58% 5.08% -1.81% -0.63% 01-Feb-02 -2.10% 5.14% -0.18% 1.68% 11.97% -4.64% 9.88% 6.66% 8.80% 4.03% 4.55% -0.19% 13.14% 01-Jun-06 0.01% 2.00% -2.92% -2.13% -1.62% -2.15% 2.08% -2.21% -1.65% -3.14% 10.09% -5.91% -2.16% 03-Jul-06 -0.37% 3.61% -0.14% -2.08% -2.37% 1.71% -2.58% -2.58% -0.57% 1.03% -1.05% -1.18% -3.38% The cells below compute the variance-covariance matrix fo r the DJ30 by using the formula {=varcovar(C9:AF68)} AA AIG AXP BA CC A TD DD I S G E G M H D H O N H P Q AA 0.0093 0.0032 0.0038 0.0045 0.0033 0.0046 0.0040 0.0042 0.0024 0.0046 0.0046 0.0061 0.0060 AIG 0.0032 0.0044 0.0020 0.0010 0.0023 0.0022 0.0022 0.0015 0.0015 0.0019 0.0021 0.0027 0.0024 AXP 0.0038 0.0020 0.0042 0.0030 0.0031 0.0029 0.0020 0.0037 0.0019 0.0033 0.0033 0.0042 0.0050 BA 0.0045 0.0010 0.0030 0.0083 0.0014 0.0029 0.0021 0.0037 0.0020 0.0043 0.0026 0.0053 0.0042 UTX 0.0038 0.0012 0.0031 0.0050 0.0022 0.0026 0.0021 0.0038 0.0018 0.0030 0.0023 0.0049 0.0048 VZ 0.0028 0.0018 0.0019 0.0007 0.0023 0.0022 0.0018 0.0014 0.0013 0.0006 0.0016 0.0024 0.0030 WMT 0.0018 0.0014 0.0011 0.0003 0.0015 0.0011 0.0014 0.0009 0.0009 0.0012 0.0024 0.0008 0.0008 XOM 0.0024 0.0010 0.0010 0.0017 0.0009 0.0021 0.0012 0.0004 0.0007 0.0020 0.0007 0.0020 0.0012 Finding an efficient portfolio Constant 0.30% AA 5.45% <-- {=MMULT(MINVERSE(varcov),TRANSPOSE(C4:AF4)-B105)/SUM(MMULT(MINVERSE(varcov),TRANSPOSE(C4:AF4)-B105))} AIG -11.77% AXP -5.78% BA -13.94% C -36.60% CAT 76.26% DD -22.55% DIS -17.05% GE -8.80% GM -37.73% HD -37.21% HON -17.40% HPQ 39.79% IBM -26.38% INTC -18.62% JNJ 65.08% JPM 53.61% KO -12.95% MCD -12.18% MMM -2.07% MP 42.15% MRK 8.29% MSFT 3.61% PFE -61.19% PG 54.67% T -8.38% UTX 44.05% VZ -36.55% WMT 64.78% XOM 29.40% Sum 100.00%RETURN DATA FOR THE DOW-JONES INDUSTRIAL STOCKS AND THE STANDARD AND POORS 500 July 2001 - July 2006 =AVERAGE(C9:C68) =SLOPE(C9:C68,$B$9:$B$68) =INTERCEPT(C9:C68,$B$9:$B$68) =RSQ(C9:C68,$B$9:$B$68) 285 Estimating Betas and the Security Market Line 1 2 3 4 5 6 7 89 1011 12AB C D E F G H I J K L M N DateMysterious portfolioAlcoa AAAmerican International Group AIGAmerican Express AXPBoeing BACitigroup CCaterpillar CATDuPont DDDisney DISGeneral Electric GEGeneral Motors GMHome Depot HDHoneywell HON Average return 8.88% -0.09% -0.54% 0.72% 0.67% 0.30% 1.79% 0.18% 0.29% -0.23% -0.87% -0.52% 0.29% 3 0 . 0 - 2 1 . 0 - 6 1 . 0 - 9 0 . 0 - 2 0 . 0 - 4 0 . 0 - 5 1 . 0 2 0 . 0 - 2 0 . 0 3 0 . 0 2 1 . 0 - 7 0 . 0 - a t e B % 1 5 . 0 % 6 5 . 0 % 8 5 . 0 % 4 5 . 0 % 1 5 . 0 % 2 5 . 0 % 2 4 . 0 % 1 5 . 0 % 9 4 . 0 % 9 4 . 0 % 6 5 . 0 % 4 5 . 0 a h p l A 9 0 0 0 . 0 7 3 2 0 . 0 9 5 2 0 . 0 6 5 2 0 . 0 0 1 0 0 . 0 5 4 0 0 . 0 7 6 4 0 . 0 5 1 0 0 . 0 5 0 0 0 . 0 9 1 0 0 . 0 9 9 3 0 . 0 1 6 0 0 . 0 d e r a u q s - R SML--regressing the average returns on the betasIntercept 0.0050 <-- =INTERCEPT(C4:AF4,C5:AF5) Slope 0.0838 <-- =SLOPE(C4:AF4,C5:AF5) R-squared 1.0000 <-- =RSQ(C4:AF4,C5:AF5)RETURN DATA FOR THE DOW-JONES INDUSTRIAL STOCKS AND THE STANDARD AND POORS 500 July 2001 - July 2006 The “mysterious portfolio” is not unique. Following we show results using another constant c, which gives another version of the SML. Note also that even though the R 2 of the second pass regression is 100% (since the “mysterious portfolio” is efficient), the R 2 ’ s of the individual first- pass regressions are far from notable. 11.5 So What ’ s the Real Market Portfolio? How Can We Test the CAPM? A little reflection will reveal that although the “mysterious” portfolio of the previous section may be efficient with respect to the 30 stocks of the Dow-Jones, it could not be the true market portfolio , even if the DJ30 stocks rep- resented the whole universe of risky securities. This is because many of the stocks appear in the “mysterious portfolio” with negative weights. Surely a minimal characteristic of the market portfolio must be that all shares appear in it with positive proportions . Roll (1977, 1978) suggests that the only test of the CAPM is to answer the question: Is the true market portfolio mean-variance efficient? If the answer to this question is “yes,” then it follows from Proposition 3 of Chapter 9 that a linear relation holds between the mean of each portfolio and its β . In our example, we can shed some light on this question by building a table of the asset proportions of portfolios on the efficient frontier. In the table below we give some evidence that all efficient portfolios for the DJ30 contain significant short positions. Using the wonders of Excel ’ s Data Table , we compute the largest short and long positions for a series of efficient portfolios, each defined by its own constant c . All of these portfolios contain large short positions (and, as you can see, also large long positions): 286 Chapter 11 105 106 107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141AB C D E F G H I An efficient portfolio Constant 0.30%Largest shortLargest long Constant c <-- Data table hidden: =B141 AA 5.5% 0.00% -32.64% 52.33% AIG -11.8% 0.05% -35.51% 53.58% AXP -5.8% 0.10% -38.87% 55.05% BA -13.9% 0.15% -42.86% 56.79% C -36.6% 0.20% -47.69% 59.70% CAT 76.3% 0.25% -53.65% 67.01% DD -22.6% 0.30% -61.19% 76.26% DIS -17.0% 0.35% -71.01% 88.32% GE -8.8% 0.40% -84.36% 104.71% GM -37.7% 0.45% -103.56% 128.28% HD -37.2% 0.50% -133.51% 165.05% HON -17.4% 0.55% -186.77% 230.42% HPQ 39.8% 0.60% -307.86% 379.08% IBM -26.4% 0.65% -853.66% 1049.09% INTC -18.6% 0.70% -1398.93% 1140.50% JNJ 65.1% 0.75% -422.59% 345.18% JPM 53.6% 0.80% -249.90% 204.50% KO -13.0% MCD -12.2% MMM -2.1% MP 42.1% MRK 8.3% MSFT 3.6% PFE -61.2% PG 54.7% T -8.4% UTX 44.1% VZ -36.6% WMT 64.8% XOM 29.4% Sum 100.0% Largest short -61.2% <-- =MIN(B108:B137) Largest long 76.3% <-- =MAX(B108:B137)Data table: computing the largest short and long position for a given constant c Our depressing conclusion: If the data for the DJ30 and the S&P 500 are representative, the CAPM as a descriptive theory of capital markets appears not to work. 7 11.6 Using Excess Returns Perhaps we should have conducted our experiment on the CAPM in terms of excess returns—the difference between the stocks’ monthly returns and the risk-free rates? In this section we perform this variation on the experiment and show that it does little to improve our analysis. 7. All is not lost! In Chapter 13 we examine the Black-Litterman model, which is a more positivist approach to portfolio choice. 287 Estimating Betas and the Security Market Line Below we show the same Dow-Jones data, with an additional column appended for Treasury bill returns; these varied wildly over the period: 1 2 34 5 6789 10 11 12131415 16 1718192021 22 2324252627 28 29303132 33 34AB C D E F G H I J K L M N O DateTreasury bill return risk-free rateS&P 500 Index ^GSPCAlcoa AAAmerican International Group AIGAmerican Express AXPBoeing BACitigroup CCaterpillar CATDuPont DDDisney DISGeneral Electric GEGeneral Motors GMHome Depot HDHoneywell HON Average return -0.22% -0.38% -0.83% 0.43% 0.37% 0.01% 1.50% -0.11% 0.00% -0.53% -1.16% -0.81% 0.00% 6 6 . 1 5 5 . 1 1 4 . 1 4 8 . 0 8 2 . 1 0 0 . 1 9 3 . 1 0 3 . 1 5 1 . 1 8 3 . 1 9 9 . 0 0 9 . 1 0 0 . 1 a t e B % 6 3 . 0 % 7 4 . 0 - % 6 8 . 0 - % 4 3 . 0 - % 8 2 . 0 % 1 1 . 0 % 1 8 . 1 % 9 2 . 0 % 3 6 . 0 % 3 7 . 0 % 1 6 . 0 - % 4 0 . 0 0 a h p l A 3 7 4 5 . 0 8 8 2 5 . 0 7 0 6 2 . 0 1 2 2 3 . 0 5 4 8 3 . 0 2 6 3 4 . 0 8 5 1 5 . 0 2 7 9 5 . 0 7 8 4 2 . 0 2 5 0 7 . 0 8 1 5 3 . 0 5 8 0 6 . 0 1 d e r a u q s - R 01-Aug-01 0.29% -6.92% -2.78% -6.49% -10.49% -13.38% -9.17% -9.97% -3.88% -3.87% -6.45% -14.49% -9.40% 1.28%04-Sep-01 0.28% -8.82% -20.95% -0.54% -22.89% -42.72% -12.60% -11.30% -9.06% -31.44% -9.32% -24.66% -18.33% -34.76% 01-Oct-01 0.22% 1.50% 4.17% 0.47% 1.26% -2.99% 11.40 % 0.30% 6.08% -0.46% -2.44% -4.06% -0.65% 10.97% 01-Nov-01 0.18% 6.96% 17.60% 4.44% 10.89% 7.60% 5.14% 5.56% 10.85% 9.32% 5.29% 19.36% 19.72% 11.80% 03-Dec-01 0.16% 0.46% -8.52% -3.96% 7.81% 9.68% 4.96 % 9.39% -4.52% 2.00% 4.16% -2.54% 8.65% 1.74% 02-Jan-02 0.14% -1.86% 0.54% -7.13% 0.37% 5.14% -6.26% -3 .39% 3.54% 1.35% -7.87% 4.79% -2.11% -0.92% 01-Feb-02 0.14% -2.39% 4.85% -0.47% 1.39% 11.68% -4.93% 9 .59% 6.36% 8.51% 3.74% 4.26% -0.48% 12.85% 01-Mar-02 0.14% 3.32% 0.17% -2.81% 11.37% 4.56% 8.73% 2.09% 0.37% 0.07% -3.18% 12.91% -3.02% 0.11% 01-Apr-02 0.15% -6.63% -10.64% -4.56% 0.03% -8.14% -13.70% -3.67% -6.07% 0.11% -17.32% 5.65% -5.00% -4.55% 01-May-02 0.14% -1.20% 2.91% -3.45% 3.29% -4.39% -0.18% -4.70% 3.81% -1.47% -1.58% -2.72% -10.94% 6.84% 03-Jun-02 0.14% -7.81% -5.67% 1.63% -16.02% 5.07% -11.10% -6.85% -3.86% -19.55% -6.64% -15.37% -12.83% -10.96% 01-Jul-02 0.14% -8.52% -20.04% -6.82% -3.04% -8.36% -14.72% -8.56% -6.04% -6.67% 10.00% -14.12% -17.65% -8.81% 01-Aug-02 0.14% 0.19% -7.82% -2.05% 1.97% -11.16% 4.83% - 2.69% -3.36% -12.53% -6.86% 3.63% 6.16% -7.45% 03-Sep-02 0.14% -11.95% -26.52% -14.03% -14.84% -8.55% -10.25% -16.22% -11.40% -3.81% -19.74% -21.01% -23.41% -32.66% 01-Oct-02 0.14% 8.00% 13.04% 13.11% 15.33% -14.04% 22.23% 9.92% 13.12% 9.47% 2.10% -16.00% 9.83% 9.71% 01-Nov-02 0.13% 5.26% 15.03% 3.78% 6.52% 13.76% 4.80% 19.76% 8.38% 16.87% 6.88% 18.89% -9.27% 8.80% 02-Dec-02 0.10% -6.52% -11.76% -12.10% -9.71% -3.46% -10.27% -9.04% -5.38% -18.59% -10.31% -7.70% -9.51% -8.34% 02-Jan-03 0.10% -3.07% -14.44% -6.96% 0.21% -4.64% -2.15% - 3.44% -11.59% 6.77% -5.42% -1.74% -14.19% 1.50% 03-Feb-03 0.10% -2.01% 4.08% -9.65% -5.92% -13.40% -3.27% 6.35% -2.57% -2.85% 4.38% -6.21% 11.20% -6.01% 03-Mar-03 0.10% 0.54% -5.87% 0.14% -1.35% -9.79% 2.98% 4.26% 5.51% -0.53% 5.55% -0.75% 3.77% -7.21% 01-Apr-03 0.09% 7.50% 17.16% 15.56% 12.98% 8.20% 12.76% 7.04% 8.74% 8.95% 14.11% 6.71% 14.09% 9.69% 01-May-03 0.09% 4.67% 6.77% -0.42% 9.27% 11.98% 4.61% -1.14% -0.40% 4.87% -2.87% -0.92% 14.14% 10.89% 02-Jun-03 0.09% 0.83% 3.27% -4.98% 0.07% 10.95% 3.97% 6.22% -1.50% 0.23% 0.31% 1.57% 1.81% 2.17% 01-Jul-03 0.08% 1.32% 8.24% 14.85% 5.45% -3.85% 5.05% 19.55% 5.10% 10.09% -1.16% 3.59% -6.29% 4.91% 01-Aug-03 0.08% 1.48% 3.09% -7.78% 1.68% 12.36% -3.60% 5.95% 2.31% -6.94% 3.62% 10.41% 2.73% 2.84% 02-Sep-03 0.08% -1.49% -9.09% -3.36% -0.29% -8.84% 4.56% - 4.54% -11.47% -1.96% 1.12% -0.71% -1.03% -9.82%EXCESS RETURN DATA FOR THE DOW-JONES INDUSTRIAL STOCKS AND THE STANDARD AND POORS 500 Monthly returns minus monthly Treasury bill return July 2001 - July 2006 0.00%0.05%0.10%0.15%0.20%0.25%0.30%0.35%0.40%0.45%Aug-01Oct-01Dec-01Feb-02Apr-02Jun-02Aug-02Oct-02Dec-02Feb-03Apr-03Jun-03Aug-03Oct-03Dec-03Feb-04Apr-04Jun-04Aug-04Oct-04Dec-04Feb-05Apr-05Jun-05Aug-05Oct-05Dec-05Mar-06May-06Jul-06Monthly Treasury Bill Rates, Aug2001- July2006 1 2 34 5 67 8 9 10 11 12H G F E D C B A StockAverage monthly excess returnBeta Alpha 4 0 0 0 . 0 8 2 0 9 . 1 % 8 3 . 0 - A A a o c l A Second-pass regression, regressing monthly returns on Beta American International Group AIG -0.83% 0.9936 -0.0061 Intercept 0.0007 <-- =INTERCEPT(B3:B32,C3:C32) American Express AXP 0.43% 1.3784 0.0073 Slope -0.0020 <-- =SLOPE(B3:B32,C3:C32) ) 2 3 C : 3 C , 2 3 B : 3 B ( Q S R = - - < 8 3 2 0 . 0 d e r a u q s - R 3 6 0 0 . 0 5 1 5 1 . 1 % 7 3 . 0 A B g n i e o B 9 2 0 0 . 0 2 5 9 2 . 1 % 1 0 . 0 C p u o r g i t i C ) 2 3 C : 3 C , 2 3 B : 3 B ( t p e c r e t n i t = - - < 9 3 4 2 . 0 t p e c r e t n i , c i t s i t a t s - t 1 8 1 0 . 0 3 0 9 3 . 1 % 0 5 . 1 T A C r a l l i p r e t a C ) 2 3 C : 3 C , 2 3 B : 3 B ( e p o l s t = - - < 4 5 2 8 . 0 - e p o l s , c i t s i t a t s - t 1 1 0 0 . 0 9 0 0 0 . 1 % 1 1 . 0 - D D t n o P u D 8 2 0 0 . 0 5 0 8 2 . 1 % 0 0 . 0 S I D y e n s i D General Electric GE -0.53% 0.8420 -0.0034 General Motors GM -1.16% 1.4060 -0.0086THE SECOND-PASS REGRESSION FOR EXCESS RETURNS Running the second-pass regression shows only minor changes from the results of section 11.2: 288 Chapter 11 11.7 Summary: Does the CAPM Have Any Uses? Is the game lost? Do we have to give up on the CAPM? Not totally: • First of all, it could be that the mean returns are approximately described by their regression on a market portfolio. In this alternative description of the CAPM, we claim (with some justification) that the β of an asset (which mea- sures the dependence of the asset ’ s returns on the market returns) is an impor- tant measure of the asset ’ s risk. • Second, the CAPM might be a good normative description of how to choose portfolios. As we showed in the appendix of Chapter 3, larger diversi-fied portfolios are quite well described by their betas, so that the average beta of a well-diversified portfolio may be a reasonable description of the portfolio ’ s risk. Exercises 1. In a well-known paper, Roll (1978) discusses tests of the SML in a four-asset context: s n r u t e R x i r t a m e c n a i r a v o c - e c n a i r a V 0.10 0.02 0.04 0.05 0.06 0.02 0.20 0.04 0.01 0.07 0.04 0.04 0.40 0.10 0.08 0.05 0.01 0.10 0.60 0.09 Security 1 0.59600 0.40700 -0.04400 -0.49600 Security 2 0.27621 0.31909 0.42140 0.52395 Security 3 0.07695 0.13992 0.29017 0.44076 Security 4 0.05083 0.13399 0.33242 0.53129 a. Derive two efficient portfolios in this 4-asset model and draw a graph of the efficient frontier. b. Show that the following four portfolios are efficient by proving that each is a convex combination of the two portfolios you derived in part a above: c. Suppose that the market portfolio is composed of equal proportions of each asset (i.e., the market portfolio has proportions (0.25,0.25,0.25,0.25)). Calculate the resulting SML. Is the portfolio (0.25,0.25,0.25,0.25) efficient? d. Repeat this exercise, but substitute one of the four portfolios of part b above as the candidate for the market portfolio. 289 Estimating Betas and the Security Market Line 1 2 3 4 5678 9 10 11 1213 14 151617 18 192021 22 23 24 25262728 29 30313233 34 35AB C D E F G H I J K L 1 23456789 1 01 1 Apple GoogleWhole Foods Seagate Comcast MerckJohnson- JohnsonGeneral ElectricHewlett PackardGoldman Sachs S&P 500 Monthly statistics Mean VarianceSigma Annual statistics Mean Variance Sigma Regressing individual assets on the S&P 500 Alpha BetaRsqT-test, intercept T-test, slope Date AAPL GOOG WFM STX CMCS A MRK JNJ GE HPQ GS SP500 1-Aug-07 4-Sep-07 1-Oct-07 1-Nov-07 3-Dec-07 2-Jan-08 1-Feb-083-Mar-08 1-Apr-08 1-May-08 2-Jun-08 1-Jul-08RETURN DATA: 10 STOCKS AND SP500 RETURN DAT A1 2 3 45 6 7 8 9 10 11 1213 14ABCDEFGH I JKL 123456789 1 0 1 1 Apple GoogleWhole Foods Seagate Comcast MerckJohnson- JohnsonGeneral ElectricHewlett PackardGoldman Sachs S&P 500 Date AAPL GOOG WFM STX CMCS A MRK JNJ GE HPQ GS S&P 500 2-Jul-07 131.76 510.00 35.75 21.18 24.17 39.78 51.39 31.84 43.69 178.93 125.27 1-Aug-07 138.48 515.25 42.72 23.37 24.00 40.20 52.84 31.93 46.85 167.21 121.404-Sep-07 153.47 567.27 47.26 23.15 22.25 41.73 56.18 34.24 47.34 205.91 123.22 1-Oct-07 189.95 707.00 47.98 25.29 19.37 47.04 55.73 34.04 49.14 235.90 127.81 1-Nov-07 182.22 693.00 41.66 23.43 18.90 47.93 58.29 31.67 48.64 215.65 129.83 3-Dec-07 198.08 691.48 39.52 23.16 16.80 47.23 57.39 30.92 48.07 204.62 124.39 2-Jan-08 135.36 564.30 38.41 18.50 16.71 37.47 54.33 29.49 41.63 190.21 123.53 1-Feb-08 125.02 471.18 34.23 19.69 17.98 36.00 53.67 27.89 45.49 161.69 116.103-Mar-08 143.50 440.47 32.11 19.11 17.85 31.11 56.19 31.15 43.56 157.65 112.33PRICE DATA: 10 STOCKS AND S&P 500, Jul2007 - Jul2012 S&P 500 represented by Vanguard's Index 500 fund (includes dividends) The remaining questions relate to a data set for 10 stocks. The data are given on the exercise file with this chapter. 2. Fill in the template file below. 290 Chapter 11 1 2 3 4 56789 1011 12 131415161718 19 2021222324 25 26272829ABCDEFGH I JKLM AAPL GOOG WFM STX CMCSA MRK JNJ GE HPQ GSAverage returns AAPL GOOG WFM STX CMCS A MRK JNJ GE HPQ GS Risk-free 0.20% Efficient portfolio AAPL GOOG WFM STX CMCS A MRK JNJ GE HPQ GSCOMPUTING AN EFFICIENT PORTFOLIO OF THE 10 STOCKS Variance-covariance matrix 3. Perform the second-pass regression: Regress the monthly average returns on the betas of the assets. Does this confirm that the S&P 500 is efficient? 4. Compute the variance-covariance matrix for the 10 stocks. Using the monthly average returns and a monthly risk-free interest rate of 0.20%, compute an efficient portfolio. Here ’ s the template: 5. Using the efficient portfolio instead of the S&P 500: a. Compute the monthly returns on the efficient portfolio. b. Regress the average monthly returns of the stocks on their betas with respect to the efficient portfolio. c. Explain your results in light of Propositions 3 and 4 from Chapter 9. 1 2 Efficient Portfolios Without Short Sales 12.1 Overview In Chapter 9 we discussed the problem of finding an efficient portfolio. As shown there, this problem can be written as finding a tangent portfolio on the envelope of the feasible set of portfolios: Finding Envelope Portfolios sigmamean x c The proof in the Appendix to Chapter 9 for solving for such an efficient portfolio involved finding the solution to the following problem: max() () ( )Θ=− = =⋅ == =∑Er c x Er x R x Erx p i iN xT ii iNσ such that where1 1 1∑ ∑ ∑ ∑ == = =σ σ pT iji j jN iN xS x x x 1 1 Proposition 1 of Chapter 9 gives a methodology for solving this problem. Solutions to the maximization problem allow negative portfolio proportions; 292 Chapter 12 when x i < 0, this assumes that the i th security is sold short by the investor and that the proceeds from this short sale become immediately available to the investor. Reality is, of course, considerably more complicated than this academic model of short sales. In particular, it is rare for all of the short-sale proceeds to become available to the investor at the time of investment, since brokerage houses typically escrow some or even all of the proceeds. It may also be that the investor is completely prohibited from making any short sales (indeed, most small investors seem to proceed on the assumption that short sales are impossible). 1 In this chapter we investigate these problems. We show how to use Excel ’ s Solver to find efficient portfolios of assets when we restrict short sales. 2 12.2 A Numerical Example We start with the problem of finding an optimal portfolio when no short sales are allowed. The problem we solve is similar to the maximization problem stated above, with the addition of the short-sales constraint x i > 0 for the asset proportions: max() ,, ,Θ=− = ≥= …=∑Er c x xi Nx p i iN iσ such that where1 011 1. The actual procedures for implementing a short sale are not simple. A well-written academic survey is a recent paper by Gene D’Avolio, “The Market for Borrowing Stock,” Journal of Finan- cial Economics (2003). There ’ s also a wonderful article, “Get Shorty,” in the 1 December 2003 issue of The New Yorker magazine by James Surowiecki. 2. We do not go into the efficient set mathematics when short sales of assets are restricted. This involves the Kuhn-Tucker conditions, a discussion of which can be found in Edwin Elton, Martin Gruber, Stephen Brown, and W. N. Goetzmann, Modern Portfolio Theory and Investment Analysis (Wiley, 8th edition, 2009). 293 Efficient Portfolios Without Short Sales Er x R x Er xS x x xxT ii iN pT iji j jN iN() ( ) =⋅ = === = =∑ ∑ ∑1 1 1σ σ Solving an Unconstrained Portfolio Problem To set the scene, we consider the optimization problem below, which we solve without any short-sale constraints. The spreadsheet shows a four-asset variance-covariance matrix and associated expected returns. Given a constant c = 8%, the optimal portfolio is given in cells B11:B14. Notice θ in cell B19: This is the Sharpe ratio of the portfolio, the ratio of its excess return over the constant c to its standard deviation: θσ=()− Er c x x . The optimal portfolio maximizes the Sharpe ratio θ . 1 23456789 10 11 121314 15 161718 19AB C D E F G H Variance-covariance matrix Means 0.10 0.03 -0.08 0.05 8% 0.03 0.20 0.02 0.03 9% -0.08 0.02 0.30 0.20 10% 0.05 0.03 0.20 0.90 11% c 3.0% <-- This is the constant Optimal portfolio without short sale re strictions (Chapter 9, Proposition 1) x1 0.6219 <-- {=MMULT(MINVERSE(B3:E6),G3:G6-C8)/SUM(MMULT(MINVERSE(B3:E6),G3:G6-C8))} x2 0.0804 x3 0.3542 x4 -0.0565 Total 1 <-- =SUM(B11:B14) Portfolio mean 8.62% <-- {=MMULT(TRANSPOSE(B11:B14),G3:G6)} Portfolio sigma 19.39% <-- {=SQRT(MMULT(TRANSPOSE(B11:B14),MMULT(B3:E6,B11:B14)))} θ = Theta = (mean-constant)/sigma 28.99% <-- =(B17-C8)/B18PORTFOLIO OPTIMIZATION ALLOWING SHORT SALES Follows Proposition 1, Chapter 9 There is another way to solve this unconstrained problem. Starting from an arbitrary portfolio (the spreadsheet below uses x 1 = x 2 = x 3 = x 4 = 0.25), we use Solver to find a solution: 294 Chapter 12 The Solver solution maximizes θ (cell B19) subject to the constraint that cell B15, which contains the sum of the portfolio positions, equals 1. 3 When we press Solve we get the solution we achieved before: 3. If Tools|Solver doesn ’ t work, you may not have loaded the Solver add-in. To do so, go to Tools|Add-ins and click next to the Solver Add-in . 295 Efficient Portfolios Without Short Sales Solving a Constrained Portfolio Problem The optimal solution above contains a short position in asset 4. To restrict the short selling, we add a no-short-sale constraint to Solver . Starting from an arbitrary solution, we bring up Solver as shown below: Pressing Solve yields the following solution: 1 2 3 4 5 6 78 9 10 11 12 1314 15 16 17 18 19H G F E D C B A Vs n a e M x i r t a m e c n a i r a v o c - e c n a i r a 0.10 0.03 -0.08 0.05 8% 0.03 0.20 0.02 0.03 9% -0.08 0.02 0.30 0.20 10% 0.05 0.03 0.20 0.90 11% c 3.0% <-- This is the constant Here we start with an arbitrary feasible portfolio and use Solve r x1 0.5856 x2 0.0965 x3 0.3179 x4 0.0000 ) 4 1 B : 1 1 B ( M U S = - - < 1 l a t o T Portfolio mean 8.73% <-- {=MMULT(TRANSPOSE(B11:B14),G3:G6)} Portfolio sigma 20.32% <-- {=SQRT(MMULT(TRANSPOSE(B11:B14),MMULT(B3:E6,B11:B14)))} = Theta = (mean-constant)/sigma 28.21% <-- =(B17-C8)/B18PORTFOLIO OPTIMIZATION WITHOUT SHORT SALES Solution with Solver, starting from an arbitrary feasible portfolio θ 296 Chapter 12 The non-negativity constraints is added by clicking on the Add button in the Solver dialogue box. This brings up the following window (shown here filled in): The second constraint (which constrains the portfolio proportions to sum to 1) is added in a similar fashion. An Alternative Method There ’ s another way of doing this. Solver has an option: “Make Unconstrained Variables Non-Negative.” Clicking this option gives the same result: 297 Efficient Portfolios Without Short Sales By changing the value of c in the spreadsheet, we can compute other port- folios; in the following example, we have set the constant c = 8.5%: 1 2 3 4 5 6 78 9 10 11 12 1314 15 16 17 18 19H G F E D C B A V s n a e M x i r t a m e c n a i r a v o c - e c n a i r a 0.10 0.03 -0.08 0.05 8% 0.03 0.20 0.02 0.03 9% -0.08 0.02 0.30 0.20 10% 0.05 0.03 0.20 0.90 11% c 8.5% <-- This is the constant Here we start with an arbitrary feasible portfolio and use Solve r x1 0.0000 x2 0.2515 x3 0.4885 x4 0.2601 ) 4 1 B : 1 1 B ( M U S = - - < 1 l a t o T Portfolio mean 10.01% <-- {=MMULT(TRANSPOSE(B11:B14),G3:G6)} Portfolio sigma 45.25% <-- {=SQRT(MMULT(TRANSPOSE(B11:B14),MMULT(B3:E6,B11:B14)))} = Theta = (mean-constant)/sigma 3.33% <-- =(B17-C8)/B18PORTFOLIO OPTIMIZATION WITHOUT SHORT SALES Solution with Solver, starting from an arbitrary feasible portfolio θ In both examples, the short-sale restriction is effective, with zero positions in some asset. However, not all values of c give portfolios in which the short- sale constraints are effective. For example, if the constant is 8%, we get: 1 2 3 4 5 6 78 9 10 11 12 1314 15 16 17 18 19H G F E D C B A V s n a e M x i r t a m e c n a i r a v o c - e c n a i r a 0.10 0.03 -0.08 0.05 8% 0.03 0.20 0.02 0.03 9% -0.08 0.02 0.30 0.20 10% 0.05 0.03 0.20 0.90 11% c 8.0% <-- This is the constant Here we start with an arbitrary feasible portfolio and use Solve r x1 0.2004 x2 0.2587 x3 0.4219 x4 0.1190 ) 4 1 B : 1 1 B ( M U S = - - < 1 l a t o T Portfolio mean 9.46% <-- {=MMULT(TRANSPOSE(B11:B14),G3:G6)} Portfolio sigma 31.91% <-- {=SQRT(MMULT(TRANSPOSE(B11:B14),MMULT(B3:E6,B11:B14)))} = Theta = (mean-constant)/sigma 4.57% <-- =(B17-C8)/B18PORTFOLIO OPTIMIZATION WITHOUT SHORT SALES Solution with Solver, starting from an arbitrary feasible portfolio θ 298 Chapter 12 As we saw for the example where c = 3%, as c gets lower, the short-sale constraint begins to be effective with respect to asset 4. For very high c ’ s (the case below illustrates c = 11%), only asset 4 is included in the maximizing portfolio: 8 9 10 11 12 13 14 15 1617 18 19H G F E D C B A c 11.0% <-- This is the constant Here we start with an arbitrary feasible portfolio and use Solve r x1 0.0000 x2 0.0000 x3 0.0000 x4 1.0000 ) 4 1 B : 1 1 B ( M U S = - - < 1 l a t o T Portfolio mean 11.00% <-- {=MMULT(TRANSPOSE(B11:B14),G3:G6)} Portfolio sigma 94.87% <-- {=SQRT(MMULT(TRANSPOSE(B11:B14),MMULT(B3:E6,B11:B14)))} = Theta = (mean-constant)/sigma 0.00% <-- =(B17-C8)/B18θ 12.3 The Efficient Frontier with Short-Sale Restrictions We want to graph the efficient frontier with short-sale restrictions. Recall that in the case of no short-sale restrictions discussed in Chapter 9, it was enough to find two efficient portfolios in order to determine the whole efficient frontier (this was proved in Proposition 2 of Chapter 9). When we impose short-sale restrictions, this statement is no longer true. In this case the determination of the efficient frontier requires the plotting of a large number of points. The only efficient (pardon the pun!) way of doing this is with a VBA program which repeatedly applies the Solver and puts the solutions in a table. In section 12.3 we describe such a program. Once we have the program and the graph of the efficient frontier without short sales, we can compare this efficient frontier to the efficient frontier with short sales allowed: 299 Efficient Portfolios Without Short Sales The relation between these two graphs is not all that surprising: • In general, the efficient frontier with short sales dominates the efficient frontier without short sales. This must clearly be so, since the short-sales restriction imposes an extra constraint on the maximization problem. • For some cases, the two efficient frontiers coincide. One such point occurs, as we saw above, when c = 8%. Putting these two graphs on one set of axes shows that the effect of the short-sale restrictions is mainly for portfolios with higher returns and sigmas. 12.4 A VBA Program for the Efficient Frontier Without Short Sales The output for the restricted short-sale case shown in section 12.3 was pro-duced with the following VBA program: 6%7%8%9%10%11%12%13% 18% 28% 38% 48% 58% 68% 78% 88% 98%Mean Return (%) Sigma (%)Comparing Two Efficient Frontiers For low sigmas the two frontiers coincide For higher sigmas, no restrictions on short sales gives higher returns No short sales Short sales allowed 300 Chapter 12 Sub Solve() SolverOk SetCell: = ”$B$19”, MaxMinVal: = 1, ValueOf: = ”0”, ByChange: = ”$B$11:$B$14” SolverSolve UserFinish: = True End Sub Sub Doit() Range(“Results”).ClearContents For counter = 1 To 40 Range(“constant”) = -0.04 + counter * 0.005 Solve Application.SendKeys (“{Enter}”) Range(“Results”).Cells(counter, 1) _ ActiveSheet.Range(“constant”) Range(“Results”).Cells(counter, 2) _ ActiveSheet.Range(“portfolio_sigma”) Range(“Results”).Cells(counter, 3) _ ActiveSheet.Range(“portfolio_mean”) Range(“Results”).Cells(counter, 4) _ ActiveSheet.Range(“x_1”) Range(“Results”).Cells(counter, 5) _ ActiveSheet.Range(“x_2”) Range(“Results”).Cells(counter, 6) _ ActiveSheet.Range(“x_3”) Range(“Results”).Cells(counter, 7) _ ActiveSheet.Range(“x_4”) Next counter End Sub ActiveSheet.Range(“x_3”) Range(“Results”).Cells(counter, 7) = _ ActiveSheet.Range(“x_4”) Next counter End Sub The program includes two subroutines: Solve calls the Excel Solver; and the subroutine Doit repeatedly calls the solver for different values of the range named Constant (this is cell C8 in the spreadsheet), putting the output in a range called “Results.” 301 Efficient Portfolios Without Short Sales The final output looks like this: 1 2 3 4 5 6 78 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25AB C D E F G H I J K L M N O RESULTS x n a e M a m g i S c s n a e M x i r t a m e c n a i r a v o c - e c n a i r a V 1 x2 x3 0.10 0.03 -0.08 0.05 8% Ctrl+A works the VBA program -0.035 20.24% 8.70% 0.6049 0.0885 0.3066 0.03 0.20 0.02 0.03 9% which calculates effic ient -0.03 20.25% 8.70% 0.6042 0.0887 0.3070 -0.08 0.02 0.30 0.20 10% portfolios for no-short sales. -0.025 20.25% 8.70% 0.6035 0.0890 0.3075 0.05 0.03 0.20 0.90 11% This program iteratively -0.02 20.25% 8.71% 0.6027 0.0893 0.3080 substitutes a constant ranging -0.015 20.25% 8.71% 0.6017 0.0897 0.3086 2 9 0 3 . 0 1 0 9 0 . 0 7 0 0 6 . 0 % 1 7 . 8 % 6 2 . 0 2 1 0 . 0 - % 2 / 1 ( % 6 1 l l i t ' % 5 . 3 - m o r f t n a t s n o c e h t s i s i h T - - < % 0 . 6 1 c jumps) and calculates the -0.005 20.26% 8.71% 0.5994 0.0908 0.3098 6 0 1 3 . 0 2 1 9 0 . 0 2 8 9 5 . 0 % 1 7 . 8 % 7 2 . 0 2 0 . o i l o f t r o p l a m i t p o x1 0.0000 0 0.005 20.27% 8.71% 0.5968 0.0917 0.3115 x2 0.0000 0 0.01 20.28% 8.72% 0.5950 0.0926 0.3123 x3 0.0000 0 0.015 20.29% 8.72% 0.5932 0.0934 0.3134 x4 1.0000 0 0.02 20.30% 8.72% 0.5910 0.0943 0.3147 Total 1.0000 <-- =SUM(B11:B14) 0.025 20.31% 8.73% 0.5885 0.0953 0.3161 0.03 20.32% 8.73% 0.5856 0.0965 0.3179 9 9 1 3 . 0 0 8 9 0 . 0 1 2 8 5 . 0 % 4 7 . 8 % 4 3 . 0 2 5 3 0 . 0 } ) 6 G : 3 G , ) 4 1 B : 1 1 B ( E S O P S N A R T ( T L U M M = { - - < % 0 0 . 1 1 n a e m o i l o f t r o P 4 2 2 3 . 0 8 9 9 0 . 0 9 7 7 5 . 0 % 4 7 . 8 % 7 3 . 0 2 4 0 . 0 } ) ) ) 4 1 B : 1 1 B , 6 E : 3 B ( T L U M M , ) 4 1 B : 1 1 B ( E S O P S N A R T ( T L U M M ( T R Q S = { - - < % 7 8 . 4 9 a m g i s o i l o f t r o P Theta -5.27% <-- =(B17-C8)/B18 0.045 20.41% 8.75% 0.5726 0.1019 0.3255 0.05 20.46% 8.76% 0.5659 0.1047 0.3294 0.055 20.54% 8.78% 0.5572 0.1083 0.3345 0.06 20.67% 8.80% 0.5452 0.1133 0.3415 0.065 20.90% 8.82% 0.5277 0.1205 0.3518 0.07 21.36% 8.87% 0.4992 0.1324 0.3684 0.075 23.27% 9.01% 0.4267 0.1630 0.3856PORTFOLIO OPTIMIZATION WITHOUT SHORT SALES Adding a Reference to Solver in VBA If the above routine does not work, you may need to add a reference to Solver in the VBA editor. Press [Alt] + F11 to get to the editor and then go to Tools|References : If this reference is missing, go to Tools|References on the VBA menu and make sure that Solver is checked: 302 Chapter 12 12.5 Other Position Restrictions It goes without saying that Excel and Solver can accommodate other position limits. Suppose, for example, that the investor wants at least 5% of her port- folio invested in any asset and no more than 40% of the portfolio invested in any single asset. This is easily set up in Solver : 303 Efficient Portfolios Without Short Sales This solves to give: 1 23456789 10 11 12 1314 15 161718 19AB C D E F G Vs n a e M x i r t a m e c n a i r a v o c - e c n a i r a 0.10 0.03 -0.08 0.05 8% 0.03 0.20 0.02 0.03 9% -0.08 0.02 0.30 0.20 10% 0.05 0.03 0.20 0.90 11% c 5.0% <-- This is the constant Here we start with an arbitrary feasible portfolio and use Solver x1 0.4000 x2 0.2270 x3 0.3230 x4 0.0500 ) 4 1 B : 1 1 B ( M U S = - - < 1 l a t o T Portfolio mean 9.02% <-- {=MMULT(TRANSPOSE(B11:B14),G3:G6)} Portfolio sigma 23.81% <-- {=SQRT(MMULT(TRANSPOSE(B11:B14),MMULT(B 3 θ = Theta = (mean-constant)/sigma 16.89% <-- =(B17-C8)/B18PORTFOLIO OPTIMIZATION WITH MORE COMPLICATED CONSTRAINTS 12.6 Summary No one would claim that Excel offers a quick way to solve for portfolio maxi- mization, with or without short-sale constraints. However, it can be used to illustrate the principles involved, and the Excel Solver provides an easy-to-use and intuitive interface for setting up these problems. Exercise Given the data below: a. Calculate the efficient frontier assuming no short sales are allowed. b. Calculate the efficient frontier assuming that short sales are allowed. c. Graph both frontiers on the same set of axes. 3 4567 8 9AB C D E F G H I ABCDEFMean returns 0 0 1 0 . 0 0 0 0 0 . 0 0 0 0 0 . 0 0 0 0 0 . 0 0 0 0 0 . 0 0 0 0 0 . 0 0 0 1 0 . 0 A 0 0 2 0 . 0 0 0 0 0 . 0 0 0 0 0 . 0 0 0 0 0 . 0 0 0 0 0 . 0 0 0 4 0 . 0 0 0 0 0 . 0 B 0 0 3 0 . 0 0 0 0 0 . 0 0 0 0 0 . 0 0 0 0 0 . 0 0 0 9 0 . 0 0 0 0 0 . 0 0 0 0 0 . 0 C 0 0 4 0 . 0 0 0 0 0 . 0 0 0 0 0 . 0 0 0 5 1 . 0 0 0 0 0 . 0 0 0 0 0 . 0 0 0 0 0 . 0 D 0 0 5 0 . 0 0 0 0 0 . 0 0 0 0 2 . 0 0 0 0 0 . 0 0 0 0 0 . 0 0 0 0 0 . 0 0 0 0 0 . 0 E 0 5 5 0 . 0 0 0 0 3 . 0 0 0 0 0 . 0 0 0 0 0 . 0 0 0 0 0 . 0 0 0 0 0 . 0 0 0 0 0 . 0 F 1 3 The Black-Litterman Approach to Portfolio Optimization 13.1 Overview Chapters 8–12 have set out the classic approach to portfolio optimization which was first explicated by Harry Markowitz in the 1950s and subsequently expanded by Sharpe (1964), Lintner (1965), and Mossin (1966). An enormous academic and practitioner literature (as well as several Nobel Prizes in Eco-nomics) testifies to the impact of this new point of view on asset valuation and portfolio choice. It is hardly an exaggeration to say that today no conversation about a stock ’ s risk is complete without mentioning its beta, and discussions of portfolio performance regularly invoke the alpha (both of these topics are discussed in Chapter 11). Markowitz, Sharpe, Lintner, and Mossin changed the paradigm of invest- ment management. Well before Markowitz et al., individual investors knew that they should “diversify” and not “put all their eggs in one basket.” But Markowitz and those who followed him gave statistical and implementational meaning to these clichés. Modern portfolio theory (MPT) changed the way intelligent investors discuss investment. Nevertheless, MPT has disappointed. It is possible to come away from a standard textbook discussion of portfolio optimization with the impression that a fixed set of mechanical optimization rules, combined with a bit of knowledge about personal preferences, suffices to define an investor ’ s optimal portfolio. Anyone who has tried to implement portfolio optimization using market data knows that the dream is often a nightmare. Implementations of portfolio theory produce wildly unrealistic portfolios, with huge short positions and corre-spondingly imaginary long positions. It might be thought that limiting short sales, as we have illustrated in Chapter 12, could solve some of these problems. However, short-sale limitations severely restrict the investible asset universe. The main problem with the mechanical implementation of portfolio optimi- zation is that historical asset return data produce bad predictions for future asset returns. The estimation of the covariances between asset returns and the estimation of expected returns—the underpinnings of portfolio theory—from historical data often produces unbelievable numbers. In Chapter 10 we alluded to some of these problems in the context of estimat- ing the variance-covariance matrix. There we showed that historical data may not be the best way to estimate this matrix—other methods, in particular the 306 Chapter 13 so-called “shrinkage” methods—may produce more reliable estimates of the covariances. In this chapter we take things a step further. We illustrate the prob-lems of standard portfolio optimization by using a 10-asset portfolio problem. The MPT optimization for our data produces an insane “optimal” portfolio, with many huge long and short positions. The problems of portfolio optimiza-tion illustrated in our example are, unfortunately, not unusual. Using the data in a mechanical way to derive “optimal” portfolios simply doesn ’ t work. 1 In 1991 Fischer Black and Robert Litterman of Goldman Sachs published an approach which deals with many of the problematics of portfolio optimiza-tion. 2 Black and Litterman start with the assumption that an investor chooses his optimal portfolio from among a given group of assets. This group of assets—it might be the Standard & Poor ’ s 500 Index, the Russell 2000, or a mix of international indices—defines the framework within which the investor chooses his portfolio. The investor ’ s universe of assets defines a benchmark portfolio. The Black-Litterman model takes as its starting point the assumption that, in the absence of additional information, the benchmark cannot be outper-formed. This assumption is based on much research, which shows that it is very difficult to outperform a typical well-diversified benchmark. 3 In effect the Black-Litterman model turns modern portfolio theory on its head—instead of inputting data and deriving an optimal portfolio, the BL 1. A paper by DeMiguel, Garlappi, and Uppal, “Optimal Versus Naive Diversification: How Inefficient Is the 1/N Portfolio Strategy?” in The Review of Financial Studies (2009), illustrates how badly mechanical optimization works. The authors examine optimal allocations among 10 sector portfolios. They find that a naive portfolio allocation rule of investing equal proportions in each portfolio—irrespective of market values—outperforms more sophisticated data-based optimizations. 2. Fischer Black and Robert Litterman, “Global Asset Allocation with Equities, Bonds, and Cur- rencies,” Goldman, Sachs & Co., Fixed Income Research (1991). Black and Litterman were apparently unaware of an earlier paper, which includes much of their research, by Sharpe, “Imput-ing Expected Security Returns from Portfolio Composition,” Journal of Financial and Quantita- tive Research (1974). Sharpe ’ s paper discusses the “reverse engineering” of the portfolio returns from portfolio composition. 3. “According to Lipper Analytical Services, over the 10 years ended in June 2000, more than 80% of ‘general equity’ mutual funds, meaning garden variety stock funds, underperformed the Standard and Poor ’ s 500 Index—the major benchmark for stock mutual funds” (quoted in www.fool.com/Seminars/OLA/2001/Retire1_4C.htm). Or, from a well-known academic: “Professional investment managers, both in the U.S. and abroad, do not outperform their index benchmarks” Burton G. Malkiel, “Reflections on the Efficient Market Hypothesis: 30 Years Later,” The Finan- cial Review (2005). 307 The Black-Litterman Approach to Portfolio Optimization approach assumes that a given portfolio is optimal and from this assumption derives the expected returns of the benchmark components. The implied vector of expected benchmark returns is the starting point of the BL model. The BL implied asset returns can be interpreted as the market ’ s information about the future returns of each asset in the benchmark portfolio. If our investor agrees with this market assessment, he ’ s finished: He can then buy the bench-mark, knowing that it is optimal. But what if he disagrees with one or more of the implied returns? BL shows how the investor ’ s opinions can be incorpo-rated into the optimization problem to produce a portfolio which is better for the investor. In this chapter we start with an illustration of the problematics of MPT. We then go on to illustrate the Black-Litterman approach. 13.2 A Naive Problem We start with a naive, though representative problem: The Super Duper Fund has set its benchmark portfolio to be a portfolio composed of 10 leading stocks. Joanna Roe, a new portfolio analyst for the Super Duper Fund, has decided to use portfolio theory to recommend optimal portfolio holdings based on this benchmark. The screen below gives 5 years of monthly price data on these stocks as of 1 July 2006 (note that some of the rows have been hidden): 1 2 3 4 5 67 8 9 10 11 1213 14 1516 17 6162 63 6465 66 67AB C D E F G H I J K L General Motors GMHome Depot HDInternational Paper IPHewlett- Packard HPQAltria MOAmerican Express AXPAlcoa Aluminum AADuPont DDMerck MRKMMM Market capitalization (billion $) 16.85 73.98 15.92 88.37 153.33 65.66 28.16 38.32 79.51 60.9 Benchmark proportion 2.71% 11.91% 2.56% 14.23% 24.69% 10.57% 4.53% 6.17% 12.80% 9.81% <-- =K3/SUM($B$3:$K$3) Monthly price data (includes dividends) 1-Jun-01 50.31 45.26 31.22 26.47 38.74 32.47 36.06 40.88 50.74 51.56 2-Jul-01 49.72 48.26 35.64 22.83 35.61 33.82 35.37 36.29 53.98 50.55 1-Aug-01 43.14 44.06 35.32 21.48 37.10 30.54 34.50 35.01 51.96 47.30 4-Sep-01 33.81 36.79 30.66 14.92 37.79 24.37 28.06 32.07 53.16 44.71 1-Oct-01 32.56 36.66 31.50 15.65 36.63 24.75 29.34 34.18 50.93 47.43 1-Nov-01 39.63 44.78 35.37 20.45 36.92 27.68 35.09 38.21 54.07 52.33 3-Dec-01 38.75 48.97 35.73 19.17 36.34 30.02 32.32 36.63 47.18 53.99 2-Jan-02 40.77 48.09 36.99 20.64 39.71 30.22 32.59 38.06 47.48 50.70 1-Feb-02 42.67 48.00 38.96 18.78 41.73 30.72 34.31 40.68 49.21 54.16 1-Mar-02 48.69 46.71 38.30 16.81 42.21 34.52 34.47 40.95 46.46 52.81 1-Apr-02 51.67 44.56 36.90 16.02 43.62 34.64 31.08 38.65 43.85 57.77 1-Dec-05 19.01 40.17 33.12 28.48 73.08 51.23 29.30 41.77 31.10 76.60 3-Jan-06 23.56 40.24 32.15 31.02 70.75 52.33 31.21 38.48 33.73 71.91 1-Feb-06 20.11 41.83 32.53 32.64 70.32 53.76 29.19 39.91 34.09 73.20 1-Mar-06 21.06 42.13 34.32 32.81 70.06 52.43 30.43 41.87 34.83 75.29 3-Apr-06 22.66 39.77 36.09 32.38 72.34 53.81 33.63 43.74 34.03 84.98 1-May-06 26.93 37.97 33.98 32.29 71.54 54.36 31.72 42.53 33.29 83.66 1-Jun-06 29.79 35.79 32.30 31.68 73.43 53.22 32.36 41.60 36.43 80.77PRICE AND MARKET CAP DATA FOR 10 COMPANIES 308 Chapter 13 Row 3 gives the current total equity value of each of the benchmark stocks, and row 4 computes the benchmark proportions—the individual equity values divided by the total market capitalization of the benchmark. Following the procedures described in Chapters 8 and 9, Joanna first trans- forms the price data to returns and then computes a variance-covariance matrix for these returns: 1 2 34 5 678 9 10 111213 14 1516606162 63 646566 67 68 69AB C D E F G H I J K General Motors GMHome Depot HDInternational Paper IPHewlett- Packard HPQAltria MOAmerican Express AXPAlcoa Aluminum AADuPont DDMerck MRKMMM Market cap (billion $) 16.85 73.98 15.92 88.37 153.33 65.66 28.16 38.32 79.51 60.9Benchmark proportion 2.71% 11.91% 2.56% 14.23% 24.69% 10.57% 4.53% 6.17% 12.80% 9.81% Mean return -0.87% -0.39% 0.06% 0.30% 1.07% 0.82% -0.18% 0.03% -0.55% 0.75% Return sigma 10.78% 8.41% 6.23% 10.80% 8.71% 6.43% 9.54% 6.12% 8.06% 5.54% Date GM HD IP HPQ MO AXP AA DD MRK MMM 02-Jul-01 -1.18% 6.42% 13.24% -14.79% -8.42% 4.07% -1.93% -11.91% 6.19% -1.98% 01-Aug-01 -14.20% -9.11% -0.90% -6.10% 4.10% -10.20% -2.49% -3.59% -3.81% -6.65% 04-Sep-01 -24.37% -18.03% -14.15% -36.44% 1.84% -22.57% -20.66% -8.77% 2.28% -5.63% 01-Oct-01 -3.77% -0.35% 2.70% 4.78% -3.12% 1.55% 4.46% 6.37% -4.29% 5.91% 01-Nov-01 19.65% 20.01% 11.59% 26.75% 0.79% 11.19% 17.90% 11.15% 5.98% 9.83%03-Dec-01 -2.25% 8.94% 1.01% -6.46% -1.58% 8.12% -8.22% -4.22% -13.63% 3.12% 02-Jan-02 5.08% -1.81% 3.47% 7.39% 8.87% 0.66% 0.83% 3.83% 0.63% -6.29% 01-Sep-05 -11.06% -5.56% -3.48% 5.32% 5.28% 3.90% -9.25% -1.02% -3.66% 3.05% 03-Oct-05 -11.10% 7.33% -2.08% -4.05% 1.81% -0.78% -0.54% 6.25% 3.63% 3.50% 01-Nov-05 -20.55% 2.02% 8.56% 5.66% -3.06% 3.28% 12.70% 3.39% 5.40% 3.77% 01-Dec-05 -12.03% -3.16% 6.39% -3.32% 3.67% 0.08% 7.58% -0.60% 7.86% -1.26% 03-Jan-06 21.46% 0.17% -2.97% 8.54% -3.24% 2.12% 6.32% -8.20% 8.12% -6.32% 01-Feb-06 -15.83% 3.88% 1.18% 5.09% -0.61% 2.70% -6.69% 3.65% 1.06% 1.78% 01-Mar-06 4.62% 0.71% 5.36% 0.52% -0.37% -2.51% 4.16% 4.79% 2.15% 2.82% 03-Apr-06 7.32% -5.76% 5.03% -1.32% 3.20% 2.60% 10.00% 4.37% -2.32% 12.11% 01-May-06 17.26% -4.63% -6.02% -0.28% -1.11% 1.02% -5.85% -2.81% -2.20% -1.57% 01-Jun-06 10.09% -5.91% -5.07% -1.91% 2.61% -2.12% 2.00% -2.21% 9.01% -3.52%RETURN DATA FOR THE SUPER-DUPER BENCHMARK PORTFOLIO 309 The Black-Litterman Approach to Portfolio Optimization Naive Optimization Using the return data, Joanna computes the sample variance-covariance matrix of excess returns as illustrated in Chapter 10. To implement the port-folio optimization, she needs data on the T-bill rate: The 1 July 2006 T-bill rate is 4.83% annually and 4.83%/12 = 0.40% monthly. Using the variance- covariance matrix, the T-bill rate, and the historical mean returns, she com-putes an “optimal” portfolio by solving the equation: Optimal portf olio x x xSrr rr rrGM f HD f MMM f 12 1 01 ,, ,… {} =− − −⎡ ⎣⎢ ⎢⎢− /vertellipsis ⎢ ⎢⎤ ⎦⎥⎥⎥⎥ … []− − −⎡ ⎣⎢ ⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥ =− −11 11 1,, , * * Srr rr rr SGM f HD f MMM f/vertellipsis rrr rr rr Sum Srr rr rGM f HD f MMM f GM f HD f MMM− − −⎡ ⎣⎢ ⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥ − − − −/vertellipsis /vertellipsis1* r rf⎡ ⎣⎢ ⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥⎡ ⎣⎢ ⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥ 310 Chapter 13 This portfolio is shown below (highlighted): 1 2 3 4 5 6 7 8 9 1011 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32AB C D E F G H I J K L M General Motors GMHome Depot HDInternatio nal paper IPHewlett- Packard HPQAltria MOAmerican Express AXPAlcoa Aluminum AADuPont DDMerck MRKMMM Market cap (billion $) 16.85 73.98 15.92 88.37 153.33 65.66 28.16 38.32 79.51 60.9Benchmark proportion 2.71% 11.91% 2.56% 14.23% 24.69% 10.57% 4.53% 6.17% 12.80% 9.81% Variance-covariance matrix of excess returns GM HD IP HPQ MO AXP AA DD MRK MMMMean return % 7 8 . 0 - 4 1 0 0 . 0 0 1 0 0 . 0 8 1 0 0 . 0 6 4 0 0 . 0 3 3 0 0 . 0 4 1 0 0 . 0 2 4 0 0 . 0 4 2 0 0 . 0 1 3 0 0 . 0 8 1 1 0 . 0 M G % 9 3 . 0 - 8 1 0 0 . 0 2 0 0 0 . 0 0 2 0 0 . 0 6 4 0 0 . 0 3 3 0 0 . 0 2 2 0 0 . 0 3 4 0 0 . 0 9 1 0 0 . 0 2 7 0 0 . 0 1 3 0 0 . 0 D H % 6 0 . 0 6 1 0 0 . 0 2 1 0 0 . 0 1 2 0 0 . 0 3 4 0 0 . 0 4 2 0 0 . 0 1 0 0 0 . 0 1 3 0 0 . 0 0 4 0 0 . 0 9 1 0 0 . 0 4 2 0 0 . 0 P I % 0 3 . 0 2 2 0 0 . 0 0 2 0 0 . 0 3 3 0 0 . 0 1 6 0 0 . 0 9 4 0 0 . 0 6 2 0 0 . 0 9 1 1 0 . 0 1 3 0 0 . 0 3 4 0 0 . 0 2 4 0 0 . 0 Q P H % 7 0 . 1 8 0 0 0 . 0 7 0 0 0 . 0 9 0 0 0 . 0 8 1 0 0 . 0 6 1 0 0 . 0 7 7 0 0 . 0 6 2 0 0 . 0 1 0 0 0 . 0 2 2 0 0 . 0 4 1 0 0 . 0 O M % 2 8 . 0 4 1 0 0 . 0 1 1 0 0 . 0 9 1 0 0 . 0 8 3 0 0 . 0 2 4 0 0 . 0 6 1 0 0 . 0 9 4 0 0 . 0 4 2 0 0 . 0 3 3 0 0 . 0 3 3 0 0 . 0 P X A % 8 1 . 0 - 4 2 0 0 . 0 8 1 0 0 . 0 1 4 0 0 . 0 3 9 0 0 . 0 8 3 0 0 . 0 8 1 0 0 . 0 1 6 0 0 . 0 3 4 0 0 . 0 6 4 0 0 . 0 6 4 0 0 . 0 A A % 3 0 . 0 9 1 0 0 . 0 7 1 0 0 . 0 8 3 0 0 . 0 1 4 0 0 . 0 9 1 0 0 . 0 9 0 0 0 . 0 3 3 0 0 . 0 1 2 0 0 . 0 0 2 0 0 . 0 8 1 0 0 . 0 D D % 5 5 . 0 - 5 0 0 0 . 0 6 6 0 0 . 0 7 1 0 0 . 0 8 1 0 0 . 0 1 1 0 0 . 0 7 0 0 0 . 0 0 2 0 0 . 0 2 1 0 0 . 0 2 0 0 0 . 0 0 1 0 0 . 0 K R M % 5 7 . 0 1 3 0 0 . 0 5 0 0 0 . 0 9 1 0 0 . 0 4 2 0 0 . 0 4 1 0 0 . 0 8 0 0 0 . 0 2 2 0 0 . 0 6 1 0 0 . 0 8 1 0 0 . 0 4 1 0 0 . 0 M M M Current t-bill rate 0.40% <-- =4.83%/12 \"Optimal\" portfolio } ) ) 9 1 B - 7 1 M : 8 M , ) 7 1 K : 8 B ( E S R E V N I M ( T L U M M ( M U S / ) 9 1 B - 7 1 M : 8 M , ) 7 1 K : 8 B ( E S R E V N I M ( T L U M M = { - - < % 2 . 0 8 4 M G % 8 . 1 8 9 D H % 3 . 9 8 6 P I % 3 . 1 2 2 Q P H % 7 . 3 6 2 - O M AXP -1763.7% % 5 . 4 2 3 - A A % 8 . 8 2 5 D D % 5 . 9 6 4 K R M MMM -918.9% Sum of proportions 1.00000 <-- =SUM(B22:B31)SUPER DUPER BENCHMARK PORTFOLIO—NAIVE OPTIMIZATION The “optimal” portfolio shown in cells B22:B31 is clearly not practically implementable: It contains too many large positions (both negative and posi-tive). Note, for example, the –1763.7% short position in AXP and the 528.8% position in DD. Most mutual funds are prevented from taking short positions, and even funds which short sell will find it difficult to short sell 17.63 times the fund value in AXP or to invest 9.19 times the fund value in MMM. The enormous long positions which result from these short-sale positions (e.g., 9.82 times fund value invested long in HD) are similarly impracticable. Why Does Naive Optimization Fail? In some sense the strange portfolio “optimization” positions were predictable. The spreadsheet below highlights some disturbing features of the data which can partially explain the odd “optimized” portfolio. 311 The Black-Litterman Approach to Portfolio Optimization • A number of the historical mean returns are negative. If we ignore the effects of correlations, a negative expected return should imply a short position in the stock. 4 There is, however, a deeper philosophical question about using past returns as proxies for future expected returns: Even though the past returns are negative, there is no reason to assume that this means that the future, expected returns from a stock should be negative. This is one of the problems when we use historical data to extract anticipations about the future. • The correlations between asset returns are in some cases very large. Large correlations for a particular stock can lead us to prefer other stocks with smaller returns but more moderate correlations. The spreadsheet below highlights stocks with negative historical returns and stocks whose correlations are greater than 0.5. 1 2 3 4 56789 10 11 1213 14 15161718 19 20L K J I H G F E D C B A General Motors GMHome Depot HDInternational Paper IPHewlett- Packard HPQAltria MOAmerican Express AXPAlcoa Aluminum AADuPont DDMerck MRKMMM Market cap (billion $) 16.85 73.98 15.92 88.37 153.33 65.66 28.16 38.32 79.51 60.9 Benchmark proportion 2.71% 11.91% 2. 56% 14.23% 24.69% 10.57% 4.53% 6.17% 12.80% 9.81% Mean return -0.87% -0.39% 0.06% 0.30% 1 .07% 0.82% -0.18% 0.03% -0.55% 0.75% Return sigma 10.78% 8.41% 6.23% 10.80% 8.71% 6.43% 9.54% 6.12% 8.06% 5.54% GM HD IP HPQ MO AXP AA DD MRK MMM GM 1.0000 0.3320 0.3459 0.3534 0.1428 0.4676 0.4430 0.2737 0.1109 0.2277 <-- =CORREL($B$24:$B$83,K24:K83) 6 2 0 . 0 1 9 8 3 . 0 8 1 6 5 . 0 1 6 0 6 . 0 2 1 0 3 . 0 8 1 6 4 . 0 2 1 5 3 . 0 0 0 0 0 . 1 D H 0 0.3800 <-- =CORREL($C$24:$C$83,K24:K83) 0 2 6 3 2 . 0 0 0 4 5 . 0 1 8 1 7 . 0 2 7 7 5 . 0 9 5 1 0 . 0 0 8 5 4 . 0 0 0 0 0 . 1 P I .4575 <-- =CORREL($D$24:$D$83,K24:K83) 6 6 6 3 . 0 2 3 2 2 . 0 4 2 9 4 . 0 0 7 7 5 . 0 5 6 9 6 . 0 2 8 6 2 . 0 0 0 0 0 . 1 Q P H 5 4 6 1 . 0 5 5 9 0 . 0 7 4 6 1 . 0 5 4 1 2 . 0 9 3 8 2 . 0 0 0 0 0 . 1 O M AXP 1.0000 0.6034 0.4855 0.2038 0.3798 AA 1.0000 0.6863 0.2294 0.4525 DD 1.0000 0.3287 0.5606 MRK 1.0000 0.1079 MMM 1.0000NEGATIVE RETURNS AND HIGH CORRELATIONS What About Changing the Variance-Covariance Matrix? In Chapter 10 we discussed various methods for shrinking the variance- covariance matrix. “Shrinkage,” you will recall, is a bit of jargon for taking a convex combination of the sample variance-covariance matrix with a diagonal matrix of only the variances. Shrinkage methods have been shown to be effec-tive at improving the performance of the global minimum variance portfolio (GMVP). 4. In principle you might want to include a negative-return stock in your portfolio if it has a negative correlation with enough other stocks to lower the total portfolio variance. However, this rarely happens. 312 Chapter 13 Will shrinkage help us solve the extreme positions of the naive portfolio optimization? We try this in the next spreadsheet, where cells B11:K20 contain a weighted combination of the sample covariance matrix (B41:K50) and an all-diagonal matrix of only the variances (B54:K63). The weight λ put on the sample covariance matrix is given in cell B7. For λ = 0.3, the “optimal” portfolio indeed contains fewer extreme long and short positions. But it is clear that shrinkage can never solve the fundamental problem of the data—using negative historical returns as proxies for expected returns will always produce some negative portfolio positions in an optimizer. It is this problem which Black and Litterman solve and which we discuss in the next section. 1 2 34 5 67 8 9 10 1112 13 1415 16 17 18 19 20 21 22 23 24 2526 27 2829 30 3132 33 34 35AB C D E F G H I J K L M General Motors GMHome Depot HDInternational paper IPHewlett- Packard HPQAltria MOAmerican Express AXPAlcoa Aluminum AADuPont DDMerck MRKMMM Market cap (billion $) 16.85 73.98 15.92 88.37 153.33 65.66 28.16 38.32 79.51 60.9 Benchmark proportion 2.71% 11.91% 2.56% 14.23% 24.69% 10.57% 4.53% 6.17% 12.80% 9.81% Variance-covariance matrix of excess returns Shrinkage factor, 0.3 <-- Weight on sample var-cov matrix GM HD IP HPQ MO AXP AA DD MRK MMMMean return % 7 8 . 0 - 4 0 0 0 . 0 3 0 0 0 . 0 6 0 0 0 . 0 4 1 0 0 . 0 0 1 0 0 . 0 4 0 0 0 . 0 3 1 0 0 . 0 7 0 0 0 . 0 9 0 0 0 . 0 8 1 1 0 . 0 M G % 9 3 . 0 - 5 0 0 0 . 0 1 0 0 0 . 0 6 0 0 0 . 0 4 1 0 0 . 0 0 1 0 0 . 0 7 0 0 0 . 0 3 1 0 0 . 0 6 0 0 0 . 0 2 7 0 0 . 0 9 0 0 0 . 0 D H % 6 0 . 0 5 0 0 0 . 0 4 0 0 0 . 0 6 0 0 0 . 0 3 1 0 0 . 0 7 0 0 0 . 0 0 0 0 0 . 0 9 0 0 0 . 0 0 4 0 0 . 0 6 0 0 0 . 0 7 0 0 0 . 0 P I % 0 3 . 0 7 0 0 0 . 0 6 0 0 0 . 0 0 1 0 0 . 0 8 1 0 0 . 0 5 1 0 0 . 0 8 0 0 0 . 0 9 1 1 0 . 0 9 0 0 0 . 0 3 1 0 0 . 0 3 1 0 0 . 0 Q P H % 7 0 . 1 2 0 0 0 . 0 2 0 0 0 . 0 3 0 0 0 . 0 5 0 0 0 . 0 5 0 0 0 . 0 7 7 0 0 . 0 8 0 0 0 . 0 0 0 0 0 . 0 7 0 0 0 . 0 4 0 0 0 . 0 O M % 2 8 . 0 4 0 0 0 . 0 3 0 0 0 . 0 6 0 0 0 . 0 1 1 0 0 . 0 2 4 0 0 . 0 5 0 0 0 . 0 5 1 0 0 . 0 7 0 0 0 . 0 0 1 0 0 . 0 0 1 0 0 . 0 P X A % 8 1 . 0 - 7 0 0 0 . 0 5 0 0 0 . 0 2 1 0 0 . 0 3 9 0 0 . 0 1 1 0 0 . 0 5 0 0 0 . 0 8 1 0 0 . 0 3 1 0 0 . 0 4 1 0 0 . 0 4 1 0 0 . 0 A A % 3 0 . 0 6 0 0 0 . 0 5 0 0 0 . 0 8 3 0 0 . 0 2 1 0 0 . 0 6 0 0 0 . 0 3 0 0 0 . 0 0 1 0 0 . 0 6 0 0 0 . 0 6 0 0 0 . 0 6 0 0 0 . 0 D D % 5 5 . 0 - 1 0 0 0 . 0 6 6 0 0 . 0 5 0 0 0 . 0 5 0 0 0 . 0 3 0 0 0 . 0 2 0 0 0 . 0 6 0 0 0 . 0 4 0 0 0 . 0 1 0 0 0 . 0 3 0 0 0 . 0 K R M % 5 7 . 0 1 3 0 0 . 0 1 0 0 0 . 0 6 0 0 0 . 0 7 0 0 0 . 0 4 0 0 0 . 0 2 0 0 0 . 0 7 0 0 0 . 0 5 0 0 0 . 0 5 0 0 0 . 0 4 0 0 0 . 0 M M M Current T-bill rate 0.40% <-- =4.83%/12 \"Optimal\" portfolio B - 0 2 M : 1 1 M , ) 0 2 K : 1 1 B ( E S R E V N I M ( T L U M M = { - - < % 3 . 4 8 M G 22)/SUM(MMULT(MINVERSE(B11:K20),M11:M20-B22))} % 4 . 6 9 D H % 2 . 0 5 P I % 6 . 3 - Q P H % 1 . 6 7 - O M AXP -134.6% % 5 . 2 3 A A % 5 . 2 6 D D % 1 . 2 1 1 K R M MMM -123.8% Sum of proportions 1.0000 <-- =SUM(B25:B34)SUPER DUPER BENCHMARK PORTFOLIO—NAIVE OPTIMIZATION WITH SHRUNK VARIANCE-COVARIANCE MATRIX The matrix below is a weighted combination of the sample variance-covariance matrix and a pure diagonal matrix of only variance s. {=B7*B39:K48+(1-B7)*B52:K61}λ 313 The Black-Litterman Approach to Portfolio Optimization 13.3 Black and Litterman ’ s Solution to the Optimization Problem The Black-Litterman (BL) approach provides an initial solution to the optimi- zation problem above. The BL approach is composed of two parts: Step 1 : What does the market think? A vast amount of financial research shows that it is difficult to beat the returns of benchmark portfolios. The first step of the BL approach takes this research as a starting point. It assumes that the benchmark is optimal and derives the expected returns of each asset under this assumption. Another way of saying this is that in Step 1 we compute the expected returns of the assets which would make the investor choose the benchmark using the optimization techniques in Chapters 9–11. Step 2 : Incorporating investor opinions. In Step 1, BL shows how to compute the benchmark asset returns based on the assumption of optimality. Suppose the investor has divergent opinions from these market-based expected returns. Step 2 shows how to incorporate these opinions into the optimization proce-dure. Note that—because of the correlations between asset returns—an inves-tor ’ s opinion about any particular asset ’ s returns will affect all the other expected returns. A critical part in Step 2 is to adjust all asset returns for an investor ’ s opinion about any return. An investor who follows the Black-Litterman procedure starts off by seeing what the market weights imply for the expected returns. He can then adjust these weights by adding his own opinions about any asset’s expected returns. In the next two sections we discuss these two steps in detail. 13.4 BL Step 1: What Does the Market Think? As shown in Chapter 9, an optimal portfolio must solve the equation: Efficient portfolio proportionsVariance covarianc⎡ ⎣⎢ ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥=- e e matrixExpected portfolio returnsRi⎡ ⎣⎢ ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥⎡ ⎣⎢ ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥− −1 *ssk free rate- Normalize to sum to⎧ ⎨⎪ ⎩⎪⎫ ⎬⎪ ⎭⎪ ↑ 1/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext 314 Chapter 13 Solving the equation for the vector of expected portfolio returns, this means that an efficient portfolio must solve the following equation: Expected portfolio returnsVariance covariance matr⎡ ⎣⎢ ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥=- iixEfficient portfolio proportionsNorma⎡ ⎣⎢ ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥⎡ ⎣⎢ ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥*llizing factorRisk free rate+- Joanna assumes that, in the absence of any additional knowledge or opinions about the market, the current market weights of the portfolio indicate the efficiency weights. She estimates that the expected benchmark return over the next month will be 1%, and uses this estimation to set the normalizing factor. 5 We illustrate below. Solving the first part of the last equation (without the normalizing factor) gives: 1 2 34 5 6 7 8 9 10 11 12 1314 15 16 17 18 19 2021 22 2324AB C D E F G H I J K L M Anticipated benchmark return 1.00% <-- =12%/12Current T-bill rate 0.40% General Motors GMHome Depot HDInternational Paper IPHewlett- Packard HPQAltria MOAmerican Express AXPAlcoa Aluminum AADuPont DDMerck MRKMMM Market cap (billion $) 16.85 73.98 15.92 88.37 153.33 65.66 28.16 38.32 79.51 60.9 Benchmark proportions 2.71% 11.91% 2.56% 14.23% 24.69% 10.57% 4.53% 6.17% 12.80% 9.81% Variance-covariance matrix GM HD IP HPQ MO AXP AA DD MRK MMMWithout normalizing factor GM 0.0118 0.0031 0.0024 0.0042 0.0014 0.0033 0.0046 0.0018 0.0010 0.0014 0.28% HD 0.0031 0.0072 0.0019 0.0043 0.0022 0.0033 0.0046 0.0020 0.0002 0.0018 0.32% IP 0.0024 0.0019 0.0040 0.0031 0.0001 0.0024 0.0043 0.0021 0.0012 0.0016 0.18% HPQ 0.0042 0.0043 0.0031 0.0119 0.0026 0.0049 0.0061 0.0033 0.0020 0.0022 0.47% MO 0.0014 0.0022 0.0001 0.0026 0.0077 0.0016 0.0018 0.0009 0.0007 0.0008 0.31% AXP 0.0033 0.0033 0.0024 0.0049 0.0016 0.0042 0.0038 0.0019 0.0011 0.0014 0.28% AA 0.0046 0.0046 0.0043 0.0061 0.0018 0.0038 0.0093 0.0041 0.0018 0.0024 0.38% DD 0.0018 0.0020 0.0021 0.0033 0.0009 0.0019 0.0041 0.0038 0.0017 0.0019 0.22% MRK 0.0010 0.0002 0.0012 0.0020 0.0007 0.0011 0.0018 0.0017 0.0066 0.0005 0.18% MMM 0.0014 0.0018 0.0016 0.0022 0.0008 0.0014 0.0024 0.0019 0.0005 0.0031 0.16% Check: The expected returnof the benchmark? 0.29% <-- {=MMULT(B7:K7,M11:M20)}SUPER DUPER BENCHMARK PORTFOLIO—WHAT DOES THE MARKET THINK? No normalizing factor Cells M11:M20 contain the array formula {=MMULT(B11:K20,TRANSPOSE(B7:K7)+B3)} 5. One percent per month is equivalent to estimating an annual expected benchmark return of 12%. 315 The Black-Litterman Approach to Portfolio Optimization Note that given the weights in row 7, the expected benchmark return is 0.29% per month as opposed to the 1% per month posited by Joanna (cell B2). To achieve this expected benchmark returns we multiply row 7 by a normalizing factor: Benchmark portfolio returnsVariance covariance mat⎡ ⎣⎢ ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥=- rrixBenchmark portfolio proportionsNorm⎡ ⎣⎢ ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥⎡ ⎣⎢ ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥*aalizing factorRisk free rate Variance covariance matrix+ =⎡ ⎣⎢ ⎢- - ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥⎡ ⎣⎢ ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥Benchmark portfolio proportions Expected ben *cchmark return Risk free rate Benchmark portfolio proportions− ⎡ ⎣- ⎢ ⎢ ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥⎡ ⎣⎢ ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥TVariance covariance matrixBenchmark port- ffolio proportions⎡ ⎣⎢ ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥⎛ ⎝⎜ ⎜⎜⎞ ⎠⎟ ⎟⎟⎛ ⎝⎜ ⎜⎜⎜⎞ ⎠⎟ ⎟⎟⎟ ↑ The norma alizing factor- /dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext+Risk free rate This procedure is illustrated below: 316 Chapter 13 In the spreadsheet above, we have performed an additional check by deriv- ing the optimal portfolio given the current T-bill rate of 0.40% and the expected returns in M12:M21. This should give us back the benchmark proportions in row 8—and it does! 13.5 BL Step 2: Introducing Opinions—What Does Joanna Think? Having made two assumptions—(i) that the benchmark is efficient and (ii) that the expected benchmark return is 1% per month—Joanna has derived the expected returns for each of the benchmark components (cells M12:M21). We are now ready to introduce Joanna ’ s opinions about asset returns. The rough idea is that if she disagrees with a market return, she can use the optimization 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 1617 18 19 20 2122 23 2425 26 27 28 29 30 31 32 33 3435 36 37 38AB C D E F G H I J K L M Anticipated benchmark return 1.00% <-- =12%/12Current T-bill rate 0.40% Normalizing factor 2.12 <-- {=(B2-B3)/MMULT(MMULT(B8:K8,B12:K21),TRANSPOSE(B8:K8))} General Motors GMHome Depot HDInternational Paper IPHewlett- Packard HPQAltria MOAmerican Express AXPAlcoa Aluminum AADuPont DDMerck MRKMMM Market cap (billion $) 16.85 73.98 15.92 88.37 153.33 65.66 28.16 38.32 79.51 60.9 Benchmark proportions 2.71% 11.91% 2.56% 14.23% 24.69% 10.57% 4.53% 6.17% 12.80% 9.81% Variance-covariance matrix GM HD IP HPQ MO AXP AA DD MRK MMMWith normalizing factor GM 0.0118 0.0031 0.0024 0.0042 0.0014 0.0033 0.0046 0.0018 0.0010 0.0014 0.96% HD 0.0031 0.0072 0.0019 0.0043 0.0022 0.0033 0.0046 0.0020 0.0002 0.0018 1.05% IP 0.0024 0.0019 0.0040 0.0031 0.0001 0.0024 0.0043 0.0021 0.0012 0.0016 0.77% HPQ 0.0042 0.0043 0.0031 0.0119 0.0026 0.0049 0.0061 0.0033 0.0020 0.0022 1.36% MO 0.0014 0.0022 0.0001 0.0026 0.0077 0.0016 0.0018 0.0009 0.0007 0.0008 1.05% AXP 0.0033 0.0033 0.0024 0.0049 0.0016 0.0042 0.0038 0.0019 0.0011 0.0014 0.97% AA 0.0046 0.0046 0.0043 0.0061 0.0018 0.0038 0.0093 0.0041 0.0018 0.0024 1.17% DD 0.0018 0.0020 0.0021 0.0033 0.0009 0.0019 0.0041 0.0038 0.0017 0.0019 0.84% MRK 0.0010 0.0002 0.0012 0.0020 0.0007 0.0011 0.0018 0.0017 0.0066 0.0005 0.77% MMM 0.0014 0.0018 0.0016 0.0022 0.0008 0.0014 0.0024 0.0019 0.0005 0.0031 0.73% Check: The expected return of the benchmark? 1.00% <-- {=MMULT(B8:K8,M12:M21)} } ) ) 3 B - 1 2 M : 2 1 M , ) 1 2 K : 2 1 B ( E S R E V N I M ( T L U M M ( M U S / ) 3 B - 1 2 M : 2 1 M , ) 1 2 K : 2 1 B ( E S R E V N I M ( T L U M M = { - - < % 1 7 . 2 M G % 1 9 . 1 1 D H % 6 5 . 2 P I % 3 2 . 4 1 Q P H % 9 6 . 4 2 O M % 7 5 . 0 1 P X A % 3 5 . 4 A A % 7 1 . 6 D D % 0 8 . 2 1 K R M % 1 8 . 9 M M M Sum of proportions 100.0% <-- =SUM(B28:B37)SUPER DUPER BENCHMARK PORTFOLIO—WHAT DOES THE MARKET THINK? Normalizing factor computed in cell B4, based on anticipated benchmark return The expected returns make the benchmark optimal Cells M12:M21 contain the array formula {=(MMULT(B12:K21,TRANSPOSE(B8:K8))*B4)+B3} Additional check: Optimal portfolio Note that Chapter 9 optimization on the expected returns in cells M11:M20 and the variance-covariance matrix produces the market weights as the optimal portfolio. 317 The Black-Litterman Approach to Portfolio Optimization procedure from Chapter 9 to derive a portfolio whose proportions differ from those of the benchmark. We have to be careful, however: Because asset returns are correlated, any opinion Joanna has about one asset ’ s returns will translate to an opinion about all other asset returns. To illustrate this point, suppose that Joanna thinks that the return on GM will be 1.1% over the next month instead of the market opinion of 0.96%. Then this translates to: 1 2 345 6 789 10 11 12 1314151617181920212223 24 25262728293031323334AB C D E F G H I J K Anticipated benchmark return 1.00% <-- =12%/12Current T-bill rate 0.40% Normalizing factor 2.12 <-- {=(B2-B3)/MMUL T(MMULT(B8:K8,B12:K21),TRANSPOSE(B8:K8))} General Motors GMHome Depot HDInternational Paper IPHewlett- Packard HPQAltria MOAmerican Express AXPAlcoa Aluminum AADuPont DDMerck MRK MMM Market cap (billion $) 16.85 73.98 15.92 88.37 153.33 65.66 28.16 38.32 79.51 60.9 Benchmark proportions 2.71% 11.91% 2.56% 14.23% 24.69% 10.57% 4.53% 6.17% 12.80% 9.81% Variance-covariance matrix GM HD IP HPQ MO AXP AA DD MRK MMM GM 0.0118 0.0031 0.0024 0.0042 0.0014 0.0033 0.0046 0.0018 0.0010 0.0014 HD 0.0031 0.0072 0.0019 0.0043 0.0022 0.0033 0.0046 0.0020 0.0002 0.0018 IP 0.0024 0.0019 0.0040 0.0031 0.0001 0.0024 0.0043 0.0021 0.0012 0.0016 HPQ 0.0042 0.0043 0.0031 0.0119 0.0026 0.0049 0.0061 0.0033 0.0020 0.0022 MO 0.0014 0.0022 0.0001 0.0026 0.0077 0.0016 0.0018 0.0009 0.0007 0.0008 AXP 0.0033 0.0033 0.0024 0.0049 0.0016 0.0042 0.0038 0.0019 0.0011 0.0014 AA 0.0046 0.0046 0.0043 0.0061 0.0018 0.0038 0.0093 0.0041 0.0018 0.0024 DD 0.0018 0.0020 0.0021 0.0033 0.0009 0.0019 0.0041 0.0038 0.0017 0.0019 MRK 0.0010 0.0002 0.0012 0.0020 0.0007 0.0011 0.0018 0.0017 0.0066 0.0005 MMM 0.0014 0.0018 0.0016 0.0022 0.0008 0.0014 0.0024 0.0019 0.0005 0.0031 Expected benchmark returns, no opinionsAnalyst opinion, delta, δReturns adjusted for opinionsOpinion- adjusted optimized portfolio 0.96% 0.14% GM 1.10% <-- =A25+B12/$B$12*$B$25 7.85% GM 1.05% 0.00% HD 1.08% <-- =A26+B13/$B$12*$B$25 11.28% HD 0.77% 0.00% IP 0.80% <-- =A27+B14/$B$12*$B$25 2.43% IP 1.36% 0.00% HPQ 1.41% 13.48% HPQ 1.05% 0.00% MO 1.07% 23.39% MO 0.97% 0.00% AXP 1.00% 10.01% AXP 1.17% 0.00% AA 1.23% 4.30% AA 0.84% 0.00% DD 0.86% 5.84% DD 0.77% 0.00% MRK 0.78% 12.13% MRK 0.73% 0.00% MMM 0.75% 9.29% MMMCells J25:J34 contain the array formula {=MMULT(MINVERSE(B12:K21),D25:D34-B3)/SUM(MMULT(MINVERSE(B12:K21),D25:D34-B3))}ADJUSTING THE BENCHMARK FOR AN ANALYST'S OPINION In this example the only opinion is about GM The δ introduced in cell B25 above indicates Joanna ’ s deviation from the Black-Litterman base case. In the example above, Joanna thinks that GM will differ from the market ’ s return of 0.96% (cell A25) by δ GM = 0.14% (cell B25). What this example illustrates is that—because asset returns are correlated through the variance-covariance matrix—an opinion about one asset ’ s returns 318 Chapter 13 (in this GM) also affects Joanna ’ s anticipated returns for all other assets. Because of the covariance between asset returns, for example, this means that the HD return she expects is 1.08%: rrCov r r Var rHD opinion adjusted HD marketHD GM GMGM ,,,. =+() ()= δ 108 8% , ,,rrCov r r Var rIP opinion adjusted IP marketIP GM GMGM =+() ()= δ 008 0.% and so on. The newly optimized portfolio is given in cells J24:J33. Joanna ’ s positive opinion about GM returns has, predictably, increased the proportion of GM in her portfolio. But her opinion about GM has also affected all the other portfolio weights: 24 25262728293031323334JKL Opinion- adjusted optimized portfolioPortfolio benchmark, no opinions 7.85% GM 2.71% 11.28% HD 11.91% 2.43% IP 2.56% 13.48% HPQ 14.23%23.39% MO 24.69%10.01% AXP 10.57% 4.30% AA 4.53% 5.84% DD 6.17% 12.13% MRK 12.80% 9.29% MMM 9.81% 319 The Black-Litterman Approach to Portfolio Optimization The Black-Litterman Tracking Matrix When Joanna has opinions about multiple stocks, the effect of these opinions on other stocks looks like a multivariate regression: rrGM opinion adjusted GM marketGM GM GMGMHD GM GMHD ,,,,=+ +σ σδσ σδ22 +++ + =σ σδσ σδIP GM GMIPMMM GM GMMMM HD opinion adjusted HD m rr,, ,,22… aarketGM HD HDGMHD HD HDHD IP HD HDIPMMM HD++ ++ +σ σδσ σδ σ σδσ,, ,,22 2…σ σδ HDMMM2 We define the Black-Litterman tracking matrix as: BLtrackingGM GM GMGM HD GMGM MMM GM HD GM HDHD H =σ σσ σσ σ σ σσ,, , ,,22 2 2/midhorizellipsis D D HDHD MMM HD MMM GM MMMMMM HP MMMMMM MMM MMσσ σ σ σσ σσ σ22 22/midhorizellipsis /midhorizellipsis/midhorizellipsis /midhorizellipsis /midhorizellipsis /midhorizellipsis, ,, , M M GM HD GMGM MMM GM HD GM HD2 221⎡ ⎣⎢ ⎢⎢⎢⎢⎢⎢⎢ ⎢⎤ ⎦⎥ ⎥⎥⎥⎥⎥⎥⎥ ⎥ = σ σσ σ σ σ,, ,/midhorizellipsis 222 221 1/midhorizellipsis /midhorizellipsis/midhorizellipsis /midhorizellipsis /midhorizellipsis /midhorizellipsisσ σ σ σσ σHD MMM HD MMM GM MMMMMM HP MMM, ,,⎡ ⎣⎢ ⎢⎢⎢⎢⎢⎢⎢ ⎢⎤ ⎦⎥ ⎥ ⎥⎥⎥⎥⎥⎥⎥ ⎥ The opinion-adjusted returns are then: 320 Chapter 13 r r rGM market HD market MMM marketGM, , ,, /vertellipsis⎡ ⎣⎢ ⎢⎢⎢⎢⎢⎢ ⎢⎤ ⎦⎥ ⎥⎥⎥⎥⎥⎥ ⎥+1 σ HHD GMGM MMM GM HD GM HDHD MMM HD MMM GM MMMσσ σ σ σσ σ σ σ22 22 21/midhorizellipsis /midhorizellipsis /midhorizellipsis/midhorizellipsis /midhorizellipsis /midhorizellipsis, ,, , σ σ σδ δ δMMM HP MMMGM HD MMM,* 21/midhorizellipsis/vertellipsis⎡ ⎣⎢ ⎢⎢⎢⎢⎢⎢⎢ ⎢⎤ ⎦⎥ ⎥⎥⎥⎥⎥⎥⎥ ⎥⎡ ⎣⎢ ⎢⎢⎢⎢⎢⎢⎤ ⎤ ⎦⎥ ⎥⎥⎥⎥⎥⎥ =r r GM opinion adjusted HD market opinion adjusted,- ,.- /vertellipsis/vertellipsis rMMM opinion adjusted ,-⎡ ⎣⎢ ⎢⎢⎢⎢⎢⎢ ⎢⎤ ⎦⎥ ⎥⎥⎥⎥⎥⎥ ⎥ The VBA function BLtracking takes the variance-covariance matrix as its argument and is defined as: ‘BLtracking ’ s argument is the variance- ‘covariance matrix Function BLtracking(rng As Range) As Variant Dim i As Integer Dim j As Integer Dim numcols As Integer numcols = rng.Columns.Count Dim matrix() As Double ReDim matrix(numcols - 1, numcols - 1) For i = 1 To numcols For j = 1 To numcols matrix(i - 1, j - 1) = rng(i, j) _ / rng(i, i) Next j Next i BLtracking = matrix End Function 321 The Black-Litterman Approach to Portfolio Optimization Here are the computations for our example: 1 23456789 10111213 14 15161718192021 22 2324252627AB C D E F G H I J K Tracking matrix GM HD IP HPQ MO AXP AA DD MRK MMM 9 6 1 1 . 0 9 2 8 0 . 0 5 5 5 1 . 0 0 2 9 3 . 0 8 8 7 2 . 0 3 5 1 1 . 0 0 4 5 3 . 0 9 9 9 1 . 0 9 8 5 2 . 0 0 0 0 0 . 1 M G 1 0 5 2 . 0 0 5 2 0 . 0 4 3 8 2 . 0 6 7 3 6 . 0 5 3 6 4 . 0 9 1 1 3 . 0 4 3 9 5 . 0 3 0 6 2 . 0 0 0 0 0 . 1 7 5 2 4 . 0 D H 3 6 0 4 . 0 6 5 0 3 . 0 6 0 3 5 . 0 4 9 9 0 . 1 4 5 9 5 . 0 2 2 2 0 . 0 0 4 9 7 . 0 0 0 0 0 . 1 8 3 7 4 . 0 5 8 9 5 . 0 P I 8 7 8 1 . 0 5 6 6 1 . 0 1 9 7 2 . 0 7 9 0 5 . 0 5 4 1 4 . 0 2 6 1 2 . 0 0 0 0 0 . 1 2 4 6 2 . 0 4 9 5 3 . 0 7 2 5 3 . 0 Q P H 6 4 0 1 . 0 4 8 8 0 . 0 8 5 1 1 . 0 1 5 3 2 . 0 6 9 0 2 . 0 0 0 0 0 . 1 8 2 3 3 . 0 4 1 1 0 . 0 9 0 9 2 . 0 9 6 7 1 . 0 O M 0 7 2 3 . 0 6 5 5 2 . 0 4 2 6 4 . 0 6 5 9 8 . 0 0 0 0 0 . 1 5 4 8 3 . 0 4 0 7 1 . 1 5 9 5 5 . 0 7 2 9 7 . 0 3 4 8 7 . 0 P X A 5 2 6 2 . 0 8 3 9 1 . 0 4 0 4 4 . 0 0 0 0 0 . 1 6 6 0 4 . 0 7 5 9 1 . 0 3 3 5 6 . 0 0 9 6 4 . 0 0 5 9 4 . 0 6 0 0 5 . 0 A A 7 6 0 5 . 0 7 2 3 4 . 0 0 0 0 0 . 1 4 9 6 0 . 1 7 9 0 5 . 0 2 4 3 2 . 0 7 8 6 8 . 0 6 9 4 5 . 0 3 4 3 5 . 0 0 2 8 4 . 0 D D 1 4 7 0 . 0 0 0 0 0 . 1 7 9 4 2 . 0 5 1 7 2 . 0 6 2 6 1 . 0 2 3 0 1 . 0 1 9 9 2 . 0 6 2 8 1 . 0 2 7 2 0 . 0 3 8 4 1 . 0 K R M 0 0 0 0 . 1 1 7 5 1 . 0 2 0 2 6 . 0 2 0 8 7 . 0 2 1 4 4 . 0 8 8 5 2 . 0 6 5 1 7 . 0 1 5 1 5 . 0 2 7 7 5 . 0 7 3 4 4 . 0 M M M Variance-covariance matrix GM HD IP HPQ MO AXP AA DD MRK MMM 4 1 0 0 . 0 0 1 0 0 . 0 8 1 0 0 . 0 6 4 0 0 . 0 3 3 0 0 . 0 4 1 0 0 . 0 2 4 0 0 . 0 4 2 0 0 . 0 1 3 0 0 . 0 8 1 1 0 . 0 M G 8 1 0 0 . 0 2 0 0 0 . 0 0 2 0 0 . 0 6 4 0 0 . 0 3 3 0 0 . 0 2 2 0 0 . 0 3 4 0 0 . 0 9 1 0 0 . 0 2 7 0 0 . 0 1 3 0 0 . 0 D H 6 1 0 0 . 0 2 1 0 0 . 0 1 2 0 0 . 0 3 4 0 0 . 0 4 2 0 0 . 0 1 0 0 0 . 0 1 3 0 0 . 0 0 4 0 0 . 0 9 1 0 0 . 0 4 2 0 0 . 0 P I 2 2 0 0 . 0 0 2 0 0 . 0 3 3 0 0 . 0 1 6 0 0 . 0 9 4 0 0 . 0 6 2 0 0 . 0 9 1 1 0 . 0 1 3 0 0 . 0 3 4 0 0 . 0 2 4 0 0 . 0 Q P H 8 0 0 0 . 0 7 0 0 0 . 0 9 0 0 0 . 0 8 1 0 0 . 0 6 1 0 0 . 0 7 7 0 0 . 0 6 2 0 0 . 0 1 0 0 0 . 0 2 2 0 0 . 0 4 1 0 0 . 0 O M 4 1 0 0 . 0 1 1 0 0 . 0 9 1 0 0 . 0 8 3 0 0 . 0 2 4 0 0 . 0 6 1 0 0 . 0 9 4 0 0 . 0 4 2 0 0 . 0 3 3 0 0 . 0 3 3 0 0 . 0 P X A 4 2 0 0 . 0 8 1 0 0 . 0 1 4 0 0 . 0 3 9 0 0 . 0 8 3 0 0 . 0 8 1 0 0 . 0 1 6 0 0 . 0 3 4 0 0 . 0 6 4 0 0 . 0 6 4 0 0 . 0 A A 9 1 0 0 . 0 7 1 0 0 . 0 8 3 0 0 . 0 1 4 0 0 . 0 9 1 0 0 . 0 9 0 0 0 . 0 3 3 0 0 . 0 1 2 0 0 . 0 0 2 0 0 . 0 8 1 0 0 . 0 D D 5 0 0 0 . 0 6 6 0 0 . 0 7 1 0 0 . 0 8 1 0 0 . 0 1 1 0 0 . 0 7 0 0 0 . 0 0 2 0 0 . 0 2 1 0 0 . 0 2 0 0 0 . 0 0 1 0 0 . 0 K R M 1 3 0 0 . 0 5 0 0 0 . 0 9 1 0 0 . 0 4 2 0 0 . 0 4 1 0 0 . 0 8 0 0 0 . 0 2 2 0 0 . 0 6 1 0 0 . 0 8 1 0 0 . 0 4 1 0 0 . 0 M M MBLACK-LITTERMAN TRACKING MATRIX Tracking factors = cov(i,j)/var(i) <-- {=bltracking(B18:K27)} We can now use the tracking matrix to discuss the situation where there is more than one opinion. Two or More Opinions Suppose Joanna believes the GM monthly return will be 1.10% instead of its market return of 0.96% and the HD monthly return to be 1% instead of its equilibrium return of 1.05%. Joanna also believes that the expected returns on all other assets other than GM and HD are correct. How can we reflect Joanna ’ s opinions? We use the BLtracking matrix to compute the unique set of deltas that solves for the expected returns: 322 Chapter 13 rrCov r r Var rHD opinion adjusted HD marketHD GM GMGM ,,,. =+() ()= δ 108 8% , ,,rrCov r r Var rIP opinion adjusted IP marketIP GM GMGM =+() ()= δ 008 0.% Here ’ s the implementation in Excel: 23 24252627 28 2930313233 34 3536373839 40 41424344 45 4647AB C D E F G H I J K L Expected benchmark returns, no opinionsAnalyst opinion, deltaJoanna's opinionsOpinion- adjusted optimized portfolioPortfolio benchmark, no opinions % 1 7 . 2 M G % 5 3 . 0 1 1 1 0 . 0 - - < % 0 1 . 1 M G % 9 1 . 0 % 6 9 . 0 % 1 9 . 1 1 D H % 4 0 . 6 % 1 = - - < % 0 0 . 1 D H % 9 0 . 0 - % 5 0 . 1 % 6 5 . 2 P I % 8 2 . 1 6 2 A = - - < % 7 7 . 0 P I % 1 0 . 0 - % 7 7 . 0 % 3 2 . 4 1 Q P H % 9 0 . 4 1 7 2 A = - - < % 6 3 . 1 Q P H % 0 0 . 0 % 6 3 . 1 % 9 6 . 4 2 O M % 7 0 . 5 2 8 2 A = - - < % 5 0 . 1 O M % 1 0 . 0 % 5 0 . 1 % 7 5 . 0 1 P X A % 5 6 . 9 9 2 A = - - < % 7 9 . 0 P X A % 6 0 . 0 - % 7 9 . 0 % 3 5 . 4 A A % 8 8 . 3 % 7 1 . 1 A A % 4 0 . 0 - % 7 1 . 1 % 7 1 . 6 D D % 6 1 . 7 % 4 8 . 0 D D % 3 0 . 0 % 4 8 . 0 % 0 8 . 2 1 K R M % 1 9 . 1 1 % 7 7 . 0 K R M % 1 0 . 0 - % 7 7 . 0 % 1 8 . 9 M M M % 7 5 . 0 1 3 3 A = - - < % 3 7 . 0 M M M % 1 0 . 0 % 3 7 . 0 {=MMULT(MINVERSE(tracking),D24:D33- A24:A33)} Tracking matrix GM HD IP HPQ MO AXP AA DD MRK MMM GM 1.0000 0.2589 0.1999 0.3540 0.1153 0.2788 0.3920 0.1555 0.0829 0.1169 HD 0.4257 1.0000 0.2603 0.5934 0.3119 0.4635 0.6376 0.2834 0.0250 0.2501 IP 0.5985 0.4738 1.0000 0.7940 0.0222 0.5954 1.0994 0.5306 0.3056 0.4063 HPQ 0.3527 0.3594 0.2642 1.0000 0.2162 0.4145 0.5097 0.2791 0.1665 0.1878 MO 0.1769 0.2909 0.0114 0.3328 1.0000 0.2096 0.2351 0.1158 0.0884 0.1046 AXP 0.7843 0.7927 0.5595 1.1704 0.3845 1.0000 0.8956 0.4624 0.2556 0.3270 AA 0.5006 0.4950 0.4690 0.6533 0.1957 0.4066 1.0000 0.4404 0.1938 0.2625 DD 0.4820 0.5343 0.5496 0.8687 0.2342 0.5097 1.0694 1.0000 0.4327 0.5067 MRK 0.1483 0.0272 0.1826 0.2991 0.1032 0.1626 0.2715 0.2497 1.0000 0.0741 MMM 0.4437 0.5772 0.5151 0.7156 0.2588 0.4412 0.7802 0.6202 0.1571 1.0000Cells J24:J33 contain the array formula {=MMULT(MINVERSE(B11:K20),D24:D33- B3)/SUM(MMULT(MINVERSE(B11: K20),D24:D33-B3))} ↑ Here are three comments: • The δ s in B24:B33 are computed so that the expected returns of GM and HD reflect Joanna ’ s opinions and so that the expected returns of all other assets are unchanged from the initial computation. • The formula for computing this δ -vector is given in row 34. • The revised optimal portfolio—given the two opinions about GM and HD— is computed in J24:J33. Two or More Opinions, a Different Interpretation There is another interpretation to Joanna ’ s opinions. Suppose she believes the GM monthly return will be 1.10% instead of its market return of 0.96% and the HD return to be 1% instead of its market return of 1.05%. Suppose further 323 The Black-Litterman Approach to Portfolio Optimization that she realizes that her two opinions reflect both on each other (i.e., that δ GM influences the return on HD and vice versa) and on all the other returns. With this alternative interpretation, we can easily solve for the new optimal portfolio: 23 2425 26 27 28 2930 31 32 33AB C D E F G H I J K L Expected benchmark returns, no opinionsAnalyst opinion, deltaMonthly returns adjusted for opinionsOpinion- adjusted optimized portfolioPortfolio benchmark, no opinions % 1 7 . 2 M G % 9 1 . 6 % 8 0 . 1 M G % 4 1 . 0 % 6 9 . 0 % 1 9 . 1 1 D H % 1 7 . 6 % 6 0 . 1 D H % 5 0 . 0 - % 5 0 . 1 % 6 5 . 2 P I % 7 9 . 6 % 3 8 . 0 P I % 0 0 . 0 % 7 7 . 0 % 3 2 . 4 1 Q P H % 0 1 . 9 % 9 3 . 1 Q P H % 0 0 . 0 % 6 3 . 1 % 9 6 . 4 2 O M % 9 1 . 2 2 % 6 0 . 1 O M % 0 0 . 0 % 5 0 . 1 % 7 5 . 0 1 P X A % 8 8 . 8 1 % 4 0 . 1 P X A % 0 0 . 0 % 7 9 . 0 % 3 5 . 4 A A % 9 1 . 0 % 2 2 . 1 A A % 0 0 . 0 % 7 1 . 1 % 7 1 . 6 D D % 1 1 . 9 % 8 8 . 0 D D % 0 0 . 0 % 4 8 . 0 % 0 8 . 2 1 K R M % 1 6 . 0 1 % 9 7 . 0 K R M % 0 0 . 0 % 7 7 . 0 % 1 8 . 9 M M M % 5 0 . 0 1 % 7 7 . 0 M M M % 0 0 . 0 % 3 7 . 0Cells J24:J33 contain the array formula {=MMULT(MINVERSE(B11:K20),D24:D33-B3)/SUM(MMULT(MINVERSE(B11:K20),D24:D33-B3))}<-- {=A24:A33+MMULT(tracking,B24:B33)} We leave it to you to decide which of these conflicting versions of Joanna ’ s opinions is correct. There is, of course, no “scientific” answer to this question. Do You Believe Your Opinions? Do we really believe our own opinions? Do we actually have confidence in what we believe? There is a whole theory of Bayesian adjustments to our beliefs, which is explained in Theil (1971). 6 An application to portfolio model- ing can be found in Black and Litterman (1999) and other associated papers. This author finds these papers dauntingly complicated and difficult to imple-ment. A simpler approach to the confidence question is to form a portfolio based on a convex combination of the market weights and the opinion-adjusted weights: Portfolio proportions Market weights Opinion adjuste=− () ∗ +∗1γ γ - dd weights where γ is our degree of confidence in our opinions. An application to our last example is given below: 6. Henri Theil, Principles of Econometrics (Wiley, 1971). 324 Chapter 13 13.6 Using Black-Litterman for International Asset Allocation 7 We end this chapter by implementing the BL model on data for five interna- tional indices. The spreadsheet below gives data on five major world stock market indices: • The S&P 500, a value-weighted index of the 500 largest U.S. stocks. • The MSCI World ex-US index: The Morgan Stanley Capital International (MSCI) World Ex-US Index comprises 21 developed countries based on GDP per capita. • The Russell 2000 Index: The Russell 3000 Index, which is market cap weighted and captures about 98% of the investable U.S. marketplace. The Russell 2000 Index consists of the 2,000 smallest companies in the Russell 3000 Index. • The MSCI Emerging Markets index: The Morgan Stanley Capital Interna- tional (MSCI) Emerging Markets index consists of indices for 26 emerging economies. 23 24 25 262728293031 32 3334353637 38 39 404142434445 46 4748AB C D E F G H I J K L Expected benchmark returns, no opinionsAnalyst opinion, deltaReturns adjusted for opinionsOpinion- adjusted optimized portfolioPortfolio benchmark, no opinions % 1 7 . 2 M G % 5 3 . 0 1 1 1 0 . 0 - - < % 0 1 . 1 M G % 9 1 . 0 % 6 9 . 0 % 1 9 . 1 1 D H % 4 0 . 6 % 1 = - - < % 0 0 . 1 D H % 9 0 . 0 - % 5 0 . 1 % 6 5 . 2 P I % 8 2 . 1 6 2 A = - - < % 7 7 . 0 P I % 1 0 . 0 - % 7 7 . 0 % 3 2 . 4 1 Q P H % 9 0 . 4 1 7 2 A = - - < % 6 3 . 1 Q P H % 0 0 . 0 % 6 3 . 1 % 9 6 . 4 2 O M % 7 0 . 5 2 8 2 A = - - < % 5 0 . 1 O M % 1 0 . 0 % 5 0 . 1 % 7 5 . 0 1 P X A % 5 6 . 9 9 2 A = - - < % 7 9 . 0 P X A % 1 0 . 0 - % 7 9 . 0 % 3 5 . 4 A A % 8 8 . 3 % 7 1 . 1 A A % 1 0 . 0 - % 7 1 . 1 % 7 1 . 6 D D % 6 1 . 7 % 4 8 . 0 D D % 1 0 . 0 % 4 8 . 0 % 0 8 . 2 1 K R M % 1 9 . 1 1 % 7 7 . 0 K R M % 1 0 . 0 - % 7 7 . 0 % 1 8 . 9 M M M % 7 5 . 0 1 3 3 A = - - < % 3 7 . 0 M M M % 1 0 . 0 % 3 7 . 0 {=MMULT(MINVERSE(B52:K61),D24:D33- A24:A33)} , opinion confidence 0.6 <-- Weight attached to analyst opinion Opinion and confidence- adjusted portfolio GM 7.29% <-- {=B36*J24:J33+(1-B36)*L24:L33} HD 8.39% IP 1.79% HPQ 14.15% MO 24.92% AXP 10.02% AA 4.14% DD 6.77% MRK 12.27% MMM 10.27%Cells J24:J33 contain the array formula {=MMULT(MINVERSE(B11:K20),D24:D33- B3)/SUM(MMULT(MINVERSE(B11: K20),D24:D33-B3))} ↑ γ 7. I thank Steven Schoenfeld of Northern Trust for providing me with the data and some suggestions. 325 The Black-Litterman Approach to Portfolio Optimization • The LB Global Aggregate index: This Lehman Brothers index covers the most liquid portion of the global investment-grade, fixed-rate bond market, including government, credit, and collateralized securities. 1 2 3 4 5 6 78 9AB C D E F G H I 5 YEARS ENDING DEC05 Correlation S&P500MSCI World ex- USRussell 2000MSCI EmergingLB Global aggregateWeightStandard deviation S&P500 1.0000 0.8800 0.8400 0.8100 -0.1600 24% 14.90% MSCI World ex-US 0.8800 1.0000 0.8300 0.8700 0.0700 26% 15.60% Russell 2000 0.8400 0.8300 1.0000 0.8300 -0.1400 3% 19.20% MSCI Emerging 0.8100 0.8700 0.8300 1.0000 -0.0500 3% 21.00% LB Global aggregate -0.1600 0.0700 -0.1400 -0.0500 1.0000 44% 5.80% 100%INDEX DATA, 2001-2005 Column H gives the value weights on each index in a composite portfolio as of end of December 2005, and column I gives the standard deviation of each index component. The Variance-Covariance Matrix We use Excel array functions (Chapter 34) to compute the variance-covariance matrix for the five indices from the correlation matrix above 12 13 1415 16 1718 19 2021 22AB C D E F G H Variance-covariance matrixS&P500MSCI World ex- USRussell 2000MSCI EmergingLB Global aggregate S&P500 0.0222 0.0205 0.0240 0.0253 -0.0014 MSCI World ex-US 0.0205 0.0243 0.0249 0.0285 0.0006 Russell 2000 0.0240 0.0249 0.0369 0.0335 -0.0016 MSCI Emerging 0.0253 0.0285 0.0335 0.0441 -0.0006 LB Global aggregate -0.0014 0.0006 -0.0016 -0.0006 0.0034 Checks First row of var-cov 0.0222 0.0205 0.0240 0.0253 -0.0014 <-- =I4*I8*F4 Standard deviation of composite 8.72% <-- {=SQRT(MMULT(MMULT(TRANSPOSE(H4:H8),B14:F18),H4:H8))}Variance-covariance matrix: cells below contain formula {=I4:I8*TRANSPOSE(I4:I8)*B4:F8} 326 Chapter 13 The strange formula, I4:I8 *Transpose(I4:I8) *B4:F8 , in the cells B14:F19 is composed of two parts: • I4:I8 *Transpose(I4:I8) multiplies the column vector I4:I8 times its trans- pose. This is equivalent to multiplying σ σ σ σ σSP MSCI World Russell MSCI Emerging LB Global500 2000⎡ ⎣⎢ ⎢⎢⎢⎢⎢⎤ ⎤ ⎦⎥ ⎥⎥⎥⎥⎥* σσ σ σ σSP MSCI World Russell MSCI Emerging LB Glob 500 2000 a al [] which—in the wonderful world of array functions—gives a matrix of the covariances: σσ σ σ σ σ σ σSP SP MSCI World SP Russell SP LBGlobal M5002 500 500 2000 500 SSCI World SP MSCI World LBGlobal SP LBGlobal MSCIσσ σσ σσ5002 500/midhorizellipsis /vertellipsis /vertellipsis WWorld LBGlobal /midhorizellipsis/midhorizellipsis σ2⎡ ⎣⎢ ⎢⎢⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥⎥⎥ • Multiplying the above by the matrix of correlations B4:F8 gives the variance-covariance matrix. • Of course the whole array formula I4:I8 *Transpose(I4:I8) *B4:F8 is entered with [Ctrl] + [Shift] + [Enter]. In rows 21 and 22 we perform two checks on our computation: Row 21 contains brute-force computations of the first row of the variance-covariance matrix—just to make sure our array formula works as advertised. In cell B22 we compute the standard deviation of the five-index portfolio using their rela-tive weights. 327 The Black-Litterman Approach to Portfolio Optimization The Black-Litterman implied expected returns are based on three assumptions: • The weighted portfolio of the five indices is mean-variance optimal. • The anticipated risk-free rate is 5%. • The expected return of the S&P 500 index is 12%. Given these assumptions the expected returns on the five-index portfolio are given in cells B29:B33. Note the array formula given in these cells: =∗MMult(B14:F18, H4:H8) (B26 B25) / Index((MMult(B14:F18, H4:H8- ))), 1, 1) + B25 This formula uses the expected return on the S&P 500 to normalize the returns. It is equivalent to:25 26 27 28 29 3031 32 33AB C D E F Risk-free rate 5.00% Expected return on S&P 500 12.00% Black-Litterman implied returns S&P 500 12.00% MSCI World ex-US 12.97% Russell 2000 13.30% MSCI Emerging 14.45% LB Global aggregate 5.76%<-- {=MMULT(B14:F18,H4:H8)*(B26-B25)/INDEX((MMULT(B14:F18,H4:H8)),1,1)+B25} 328 Chapter 13 Benchmark portfolio returnsVariance covariance mat⎡ ⎣⎢ ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥=- rrixBenchmark portfolio proportionsNorm⎡ ⎣⎢ ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥⎡ ⎣⎢ ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥*aalizing factorRisk free rate Variance covariance matrix+ =⎡ ⎣⎢ ⎢- - ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥⎡ ⎣⎢ ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥Benchmark portfolio proportions SP expect *500 e ed return Risk free rate Benchmark portfolio proportions− ⎡ ⎣⎢ ⎢ ⎢⎤- ⎦ ⎦⎥ ⎥ ⎥⎡ ⎣⎢ ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥TVariance covariance matrixBenchmark portfoli- o o proportions⎡ ⎣⎢ ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥⎛ ⎝⎜ ⎜⎜⎞ ⎠⎟ ⎟⎟⎛ ⎝⎜ ⎜⎜⎜⎞ ⎠⎟ ⎟⎟⎟ ↑ The normalizi ing factor- /dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext+Risk free rate What ’ s the Upshot? If we believe that the world portfolio is efficient (and in the absence of further information, there is little reason to believe otherwise), then the anticipated returns from each of its components are given by the Black-Litterman model, by the risk-free rate, and by an additional assumption on expected returns (in our case: the expected return of the S&P 500 index). The exercises to this chapter explore some other variations to the latter assumption. 13.7 Summary Applying portfolio theory is not merely a matter of using historical market data to derive covariances and expected returns. Blindly applying sample data to derive optimal portfolios (as in section 13.1) usually leads to absurd results. The Black-Litterman approach gets around these absurdities by first assuming that—in the absence of analyst opinions and other information—the bench-mark market weights and current risk-free interest rate correctly predict the future asset returns. The resulting asset returns can then be adjusted for opin-ions and confidence in opinions to derive an optimal portfolio. 329 The Black-Litterman Approach to Portfolio Optimization Exercises 1. You have decided to create your own index of higher-beta components of the Dow-Jones 30 Industrials. Using Yahoo ’ s stock screener, you come up with the data below. a. Compute the variance-covariance matrix of returns. b. Assuming that the risk-free rate is 5.25% annually ( = 5.25%/12 = 0.44% monthly), and that the expected high-beta index annual return is 12% ( = 1% monthly), compute the Black-Litterman monthly expected returns for each stock. 1 2 34567 8 9 10646566 67AB C D E F G H I J K L M N O 3M Company MMMAlcoa AAAmerican Express AXPAmerican International Group AIGCaterpillar CATDuPont DDExxon XOMHewlett Packard HPQHome Depot HDHoneywell HONIntel INTCIBMMcDonalds MCDMerck MRK Market cap ($B) 65.66 39.11 77.91 180.72 55.7 49.08 519.89 126.75 78.37 47.55 146.76 172.03 62.88 106.93 Beta 1.07 1.37 1.06 1.17 1.98 1.06 1.13 1.6 1.2 1.3 1.9 1.81 1.37 1.16 Stock prices 2-Jul-02 56.69 24.41 29.46 61.98 20.21 35.54 32.85 13.22 29.07 28.77 17.76 67.04 22.57 38.95 1-Aug-02 56.56 22.64 30.12 60.89 19.73 34.46 31.88 12.54 31.00 26.78 15.78 71.94 21.67 39.67 3-Sep-02 49.78 17.41 26.05 53.08 16.83 30.84 28.69 10.96 24.61 19.37 13.14 55.65 16.11 36.16 1-Oct-02 57.47 19.91 30.46 60.70 18.64 35.27 30.27 14.84 27.23 21.41 16.37 75.34 16.52 42.912-Apr-07 82.31 35.32 60.52 69.75 72.32 48.81 79.04 42.07 37.66 53.95 21.39 101.81 48.28 51.06 1-May-07 87.96 41.28 64.82 72.34 78.25 52.32 83.17 45.63 38.65 57.91 22.18 106.60 50.55 52.06 1-Jun-07 86.79 40.53 61.03 70.03 77.97 50.84 83.88 44.62 39.35 56.28 23.74 105.25 50.76 49.80 2-Jul-07 90.21 43.08 64.51 69.04 83.20 52.62 91.94 48.54 39.39 60.96 24.55 114.81 52.09 49.02HIGH-BETA INDEX FROM DOW-JONES 30 COMPONENTS 2. You are an analyst investing in the high-beta DJ30 portfolio from the previous problem. You believe that the monthly return of MMM will be 1%. What are your recommended optimal portfolio proportions? 3. Another analyst believes that HD will return only 0.5% per month over the next year. What are her recommended portfolio proportions? 1 4 Event Studies * 14.1 Overview Event studies are some of the most powerful and widely used applications of the capital asset pricing model (CAPM) discussed in Chapters 8–11 of Finan- cial Modeling . An event study is an attempt to determine whether a particular event in the capital market or in the life of a company affected a company ’ s stock market performance. The event-study methodology aims to separate company-specific events from market- and/or industry-specific events, and has often been used as evidence for or against market efficiency. An event study aims to determine if an event or announcement caused an abnormal movement in a company ’ s stock price. The abnormal returns (AR) are calculated as the difference between a stock ’ s actual return and its expected return, where the stock ’ s expected return is typically measured using the market model, which relies only on a stock ’ s market index to estimate its expected return. 1 Using the market model, we can measure the correlation between an individual stock ’ s returns and its corresponding market returns. In some cases, we sum the abnormal returns to arrive at the cumulative abnormal return (CAR), which measures the total impact of an event through a particular time period, also called the event window. 14.2 Outline of an Event Study In this section we outline the methodology of an event study. In succeeding sections we apply the methodology to a number of different cases. An event study is composed of three time frames: the estimation window (sometimes referred to as the control period), the e vent window , and the post- event window . The following chart illustrates these time frames. * This chapter was co-authored with Dr. Torben V oetmann, Principal at the Brattle Group ( Torben. V oetmann@brattle.com ) and adjunct professor at the University of San Francisco. 1. Abnormal returns are also referred to as residual returns and both terms are used interchange- ably throughout the chapter. 332 Chapter 14 The time line illustrates the timing sequence of an event. The length of the estimation window is represented as T 0 to T 1 . The event occurs at time 0 and the event window is represented as T 1 + 1 to T 2 . The length of the post-event window is represented as T 2 + 1 to T 3 . An event is defined as a point in time when a company makes an announce- ment or when a significant market event occurs. For example, if we are study- ing the impact of mergers and acquisitions on the stock market, the announcement date is normally the point of interest. If we are examining how the market reacts to earnings restatements, the event window begins on the event date when a company announces its restatement. In practice, it is common to expand the event window to 2 trading days, the event date and the following trading day. This is done to capture the market movement if the event was announced immediately before the market closed or after market closing. The event window often starts a few trading days before the actual event day. The length of the event window is centered on the announcement and is normally 3, 5, or 10. This enables us to investigate pre-event leakage of information. The estimation window is also used to determine the normal behavior of a stock ’ s return with respect to a market or industry index. The estimation of the stock ’ s return in the estimation window requires us to define a model of “normal” behavior: Most often we use a regression model for this purpose. 2 T0 T1 T1 + 1 0 T2 T2 T 1 + 3 Start date for estimation windowEnd date for estimation windowStart date for event windowEvent dateEnd date for event windowStart date for post-event windowEnd date for post-event windowTHE EVENT STUDY TIME LINE ESTIMATION WINDOW The estimation window is used to determine the normal behavior of the stock wrt market factors. Most often we use the regression Rit= α+ βRmtto determine this \"normal\" behavior.EVENT WINDOW We use data from this window, in conjunction with the αand βof the stock or stocks to determine whether: i) The event announcement was anticipated or leaked. ii) The \"post-announcement effect\": How long it took for the event information to be absorbed by the market.POST-EVENT WINDOW Used to investigate longer-term company performance following the event. 2. The regression model is similar to the first-pass regression discussed in Chapter 11. See further discussion below. 333 Event Studies The usual length of the estimation window is 252 trading days (or 1 calendar year), but you may not always have this many days in your sample. If not, you need to determine whether the number of observations you do have is sufficient to produce robust results. As a guideline, you should have a minimum of 126 observations; if you have less than 126 observations in the estimation window it is possible that the parameters of the market model will not indicate the true stock price movements, and thus the relationship between the stock returns and the market returns. The estimation window that you select is supposedly a period that was free of any problems, i.e., a period that reflects the stock ’ s normal price movements. 3 The post-event window is most often used to investigate the performance of a company following announcements such as a major acquisition or an IPO. The post-event window allows us to measure the longer-term impact of the event. The post-event window can be as short as 1 month and as long as several years depending on the event. Measuring the Stock ’ s Behavior in the Estimation Window and the Event Window As its name implies, the estimation window is used to estimate a model of the stock ’ s returns under “normal” circumstances. The most common model used for this purpose is the market model, which is essentially a regression of the company ’ s stock returns and the returns of the market index. 4 The market model for a stock i can be expressed as: rrit i i Mt=+αβ Here r i t and r M t represent the stock and the market return on day t . The coef- ficients α i and β i are estimated by running an ordinary least-square regression over the estimation window. The most common criteria for selecting market and/or industry indices are whether the company is listed on NYSE/AMEX or Nasdaq and whether any restrictions are imposed by data availability. In general, the market index 3. Of course something will always be going on in such a long window—quarterly earnings announcements, dividend announcements, news about the companies being considered, etc. Our assumption is that these other events constitute at most “noise” and are not material for the event being studied. 4. Financial economists most often use the market model to estimate the expected return of a security, although they sometimes use the market-adjusted model or the two-factor market model. See an example of the two-factor model in section 14.3. 334 Chapter 14 should be a broad-based value-weighted index or a float-weighted index. The industry index should be specific to the company being analyzed. For litigation purposes, it is common to construct the industry index instead of using alterna-tive S&P 500 or MSCI indices. Most industry indices are available from Yahoo. 5 Given the equation r it = α i + β i r Mt in the estimation window, we can now measure the impact of an event on the stock ’ s return in the event window. For a particular day t in the event window, we define the stock ’ s abnormal return as the difference between its actual return and its predicted return: AR r r it it i i Mt =− + ↑ Actual stock return in event window day t/verticalbracerightαβ(() ↑ ′Return predicted by the stock s and market returnα β, ,/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/dncurlybracketright/horizcurlybracketext We interpret the abnormal return during the event window as a measure of the impact the event had on the market value of the security. This assumes that the event is exogenous with respect to the change in the security ’ s market value. The cumulative abnormal return is a measure of the total abnormal returns during the event window. CAR t is the sum of all the abnormal returns from the beginning of the event window T 1 until a particular day t in the window: CAR AR tT j jt = + =∑ 1 1 Market-Adjusted and Two-Factor Models As mentioned above, you can use several alternative models to calculate a security ’ s expected return. The market-adjusted model is simplest in design and is often used to get a first impression of stock price movements. When using the market-adjusted model, you calculate the abnormal return by taking the difference between the actual return of the security and the actual return 5. Yahoo is probably not the best source for index data (though it is free!). A widely used source for industry data is Bloomberg. A wonderful free source of industry portfolio data is available from Fama-French at http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html . 335 Event Studies of the market index. Thus, there is no need to run ordinary least squares (OLS) regressions to estimate parameters. In fact, all you need is the returns at the time of the event. However, when testing the abnormal returns for statistical significance, you still need to gather returns for the estimation period. The two-factor model utilizes the returns from the market and the industry. You calculate a stock ’ s expected return using parameters from a regression of the actual returns against the market and industry returns during the estimation period. The industry returns are included primarily to account for industry-specific information in addition to the market-specific information. To calcu-late the abnormal return you subtract from the actual return the portion that can be explained by the intercept, the market, and the industry. The two-factor model is illustrated in detail in section 14.3. As Brown and Warner (1985) showed, the results in a large sample of events are not especially sensitive to your choice of estimation model. 6 However, if you are dealing with a small sample you should explore alternative models. 14.3 An Initial Event Study: Procter & Gamble Buys Gillette On 28 January 2005, Procter & Gamble announced a bid for Gillette Company. As can be seen from the press release on page 341, the bid valued Gillette at a premium of 18% over its market price. As might be expected, the bid had a dramatic effect on Gillette ’ s stock price: 6. Stephen Brown and Jerold Warner, “Using Daily Stock Returns: The Case of Event Studies,” Journal of Financial Economics (1985). 336 Chapter 14 $30$35$40$45$50$55$60 30-06-04 23-08-04 17-10-04 11-12-04 04-02-05 31-03-05 25-05-05 19-07-05 12-09-05 06-11-05 31-12-05Stock PriceGillette Company and Procter & Gamble Closing Stock Price 6/30/04 – 12/31/05 Procter & Gamble Gillette Company1/28/05 Announcement Date10/3/05 Completion Date From the graph it appears that there might have also been a decrease in the price of Procter & Gamble. The Estimation Window We will attempt an event study to judge the impact of the takeover announce-ment on the returns of Gillette and Procter & Gamble. To do this, we first determine the estimation window as the 252 trading days preceding the 2 days before the announcement on 28 January 2005: 337 Event Studies 1 23 4 56 7 8 9 10111213 14 15 258 259 260261 262263 264 265266267268 269 270271272 273 274275276277 278 279280281282 283 284285286287 288 289290291292 293 294AB C D E F G 7 0 0 0 . 0 t p e c r e t n I <-- =INTERCEPT($C$11:$C$262,$B$11:$B$262) 4 6 3 6 . 0 e p o lS <-- =SLOPE($C$11:$C$262,$B$11:$B$262) R-squared 0.1315 <-- =RSQ($C$11:$C$262,$B$11:$B$262) 3 1 1 0 . 0 x y e tS <-- =STEYX($C$11:$C$262,$B$11:$B$262) Days in estimation window 252 <-- =COUNT(A11:A262) Date NYSE GilletteExpected returnAbnormal return (AR)Cumulative abnormal return (CAR ) 27-Jan-04 -0.48% -0.42% 28-Jan-04 -1.26% -1.27% 29-Jan-04 0.00% -0.94% 30-Jan-04 -0.06% -1.39% 2-Feb-04 0.26% -0.74% 19-Jan-05 -0.78% -0.09% 20-Jan-05 -0.69% -0.56% 21-Jan-05 -0.20% -1.50% 24-Jan-05 -0.18% 0.57% 25-Jan-05 0.21% 1.44% 26-Jan-05 0.68% 0.07% 0.50% -0.44% -0.44% <-- =E263 27-Jan-05 0.04% 1.89% 0.09% 1.80% 1.36% <-- =F263+E264 28-Jan-05 -0.24% 12.94% -0.09% 13.03% 14.39% <-- =F264+E265 31-Jan-05 0.82% -1.71% 0.59% -2.30% 12.09% 1-Feb-05 0.80% -0.83% 0.57% -1.40% 10.69% 2-Feb-05 0.32% 0.80% 0.27% 0.52% 11.21% 3-Feb-05 -0.29% -0.59% 4-Feb-05 0.97% -1.29% 7-Feb-05 -0.23% -0.38% 8-Feb-05 0.09% -0.75% 9-Feb-05 -0.63% -1.20% 10-Feb-05 0.68% 0.37% 11-Feb-05 0.71% 1.58% 14-Feb-05 0.26% 0.67% 15-Feb-05 0.32% 1.68% 16-Feb-05 0.04% -0.41% 17-Feb-05 -0.47% 0.18% 18-Feb-05 0.21% 0.10% 22-Feb-05 -1.05% -1.82% 23-Feb-05 0.45% 2.05% 24-Feb-05 0.55% 0.81% 25-Feb-05 1.08% 0.57% 28-Feb-05 -0.55% -2.33% 1-Mar-05 0.41% 1.19%EVENT WINDOW Cell D263 contains formula =$B$2+$B$3*B263 Cell E263 contains formula =C263- D263GILLETTE RETURNS: ESTIMATION WINDOW AND EVENT WINDOW -4%-2%0%2%4%6%8%10%12%14%16%26jan0527jan0528jan0531jan051feb052feb05 Expected return Abnormal return (AR) Cumulative abnormal return (CAR) 338 Chapter 14 The regression results indicate the normal behavior of Gillette in the estima- tion window: r Gillette,t = 0.0007 + 0.6364 r NYSE,t . The Steyx function measures the standard error of the regression-predicted y -values. Below we show how to use this value to measure the significance of the event ’ s abnormal returns. The Event Window We define the event window as 2 days before and 3 days after the announce- ment. To measure the impact of the announcement effect in the event window we use the market model r Gillette ,t = 0.0007 + 0.6346 r NYSE , t . The formulas in the event window are in the spreadsheet above. As you can see, the announcement of the acquisition of Gillette by Procter & Gamble led to several large Gillette abnormal returns in the event window. We can use Steyx , the standard error of the regression prediction to measure the significance of the abnormal returns. Only two of the abnormal returns—on the event date 28 January and the day following—are actually significant at the 5% level: 1 2 3 4 5 6 7 8 9 10 1112 13 14 15 258 259 260 261 262 263 264 265266 267 268 269AB C D E F G H I 7 0 0 0 . 0 t p e c r e t n I <-- =INTERCEPT($C$11:$C$262,$B$11:$B$262) 4 6 3 6 . 0 e p o lS <-- =SLOPE($C$11:$C$262,$B$11:$B$262) R-squared 0.1315 <-- =RSQ($C$11:$C$262,$B$11:$B$262) 3 1 1 0 . 0 x y e tS <-- =STEYX($C$11:$C$262,$B$11:$B$262) Days in estimationwindow 252 <-- =COUNT(A11:A262) Date NYSE GilletteAbnormal return (AR)AR t-testAR significant? 27-Jan-04 -0.48% -0.42% 28-Jan-04 -1.26% -1.27% 29-Jan-04 0.00% -0.94% 30-Jan-04 -0.06% -1.39% 2-Feb-04 0.26% -0.74% 19-Jan-05 -0.78% -0.09% 20-Jan-05 -0.69% -0.56% 21-Jan-05 -0.20% -1.50% 24-Jan-05 -0.18% 0.57% 25-Jan-05 0.21% 1.44% 26-Jan-05 0.68% 0.07% -0.44% -0.39 no 27-Jan-05 0.04% 1.89% 1.80% 1.59 no 28-Jan-05 -0.24% 12.94% 13.03% 11.56 yes 31-Jan-05 0.82% -1.71% -2.30% -2.04 yes 1-Feb-05 0.80% -0.83% -1.40% -1.24 no 2-Feb-05 0.32% 0.80% 0.52% 0.46 no 3-Feb-05 -0.29% -0.59%Cell F263 contains formula =IF(ABS(E263)<1.96,\"no\",\"yes\")EVENT WINDOWGILLETTE RETURNS: THE SIGNIFICANCE OF THE ABNORMAL RETURNS Cell D263 contains formula =C263-($B$2+$B$3*B263) Cell E263 contains formula =D263/$B$5 339 Event Studies We calculate the test statistic by dividing the abnormal returns by the Steyx in cell B5. Assuming that the regression residuals are normally distributed, if the absolute value of the test statistic is larger than 1.96, then the abnormal return is significant at the 95% level (meaning that the chances that the abnor-mal return is random and insignificant are less than 5%). If the test statistic is larger than 2.58, its significance level is 1%. As can be seen from rows 263–268 above, at the 1% level, only the announcement itself has a significant abnormal return. 7 What About Procter & Gamble? Thus far we have concentrated on the event influence on the takeover target, Gillette. Applying the same methodology to Procter & Gamble ’ s stock returns shows that the announcement had a negative impact on its stock returns. There may also have been some leakage of the information prior to the announcement on 28 January 2005: 7. One limitation of Steyx is that the variance is slightly understated. The true variance of the market model is the estimation variance from Steyx and the additional variance due to the sam- pling error in α i and β i . However, the sampling error approaches zero as the length of the estima- tion window increases. Since we suggest using 252 trading days in the estimation window, the effect of the sampling error is minimal and it is, therefore, often disregarded when calculating the variance of the abnormal returns. 340 Chapter 14 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 258 259 260 261 262 263 264265 266 267 268 269270 271 272273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291AB C D E F G H 4 0 0 0 . 0 t p e c r e t n I <-- =INTERCEPT($C$11:$C$262,$B$11:$B$262) 7 7 8 5 . 0 e p o lS <-- =SLOPE($C$11:$C$262,$B$11:$B$262) R-squared 0.1872 <-- =RSQ($C$11:$C$262,$B$11:$B$262) 4 8 0 0 . 0 x y e tS <-- =STEYX($C$11:$C$262,$B$11:$B$262) Days in estimationwindow 252 <-- =COUNT(A11:A262) Date NYSE Procter-GambleAbnormal return (AR)AR t-testAR significant?Cumulative abnormal return 27-Jan-04 -0.48% -0.65% 28-Jan-04 -1.26% -0.56% 29-Jan-04 0.00% 2.41% 30-Jan-04 -0.06% 0.08% 2-Feb-04 0.26% 0.59% 19-Jan-05 -0.78% 1.69% 20-Jan-05 -0.69% 0.04% 21-Jan-05 -0.20% -1.85% 24-Jan-05 -0.18% -0.79% 25-Jan-05 0.21% 0.94% 26-Jan-05 0.68% -0.52% -0.96% -1.14 no -0.96% <-- =D263 27-Jan-05 0.04% -0.22% -0.28% -0.33 no -1.25% <-- =G263+D264 28-Jan-05 -0.24% -2.12% -2.02% -2.39 yes -3.26% <-- =G264+D265 31-Jan-05 0.82% -1.70% -2.23% -2.64 yes -5.49% 1-Feb-05 0.80% -0.68% -1.19% -1.41 no -6.67% 2-Feb-05 0.32% 1.00% 0.77% 0.91 no -5.90% 3-Feb-05 -0.29% -0.30% 4-Feb-05 0.97% -1.16% 7-Feb-05 -0.23% -0.17% 8-Feb-05 0.09% -1.05% 9-Feb-05 -0.63% -0.90% 10-Feb-05 0.68% 0.21% 11-Feb-05 0.71% 1.03% 14-Feb-05 0.26% 1.05% 15-Feb-05 0.32% 1.48% 16-Feb-05 0.04% -0.32% 17-Feb-05 -0.47% 0.04% 18-Feb-05 0.21% 0.32% 22-Feb-05 -1.05% -2.34% 23-Feb-05 0.45% 2.37% 24-Feb-05 0.55% 0.64% 25-Feb-05 1.08% 0.67% 28-Feb-05 -0.55% -2.03% 1-Mar-05 0.41% 0.79%Cell F263 contains formula =IF(ABS(E263)<1.96,\"no\",\"yes\")PROCTER & GAMBLE RETURNS: ESTIMATION WINDOW AND EVENT WINDOW EVENT WINDOW Cell D263 contains formula =C263-($B$2+$B$3*B263) Cell E263 contains formula =D263/$B$5 -7%-6%-5%-4%-3%-2%-1%0%1%26-Jan 27-Jan 28-Jan 31-Jan 01-Feb 02-Feb Abnormal return (AR) Cumulative abnormal return 341 Event Studies Summarizing: What Happened on the Announcement Date? On 28 January 2005, Procter & Gamble announced the purchase of Gillette. Each share of Gillette was purchased for 0.975 shares of Procter & Gamble. At the 5% significance level, the acquisition announcement had significant effects on the stock prices of Gillette and Procter & Gamble only on the announcement date and the day after. After an initial positive impact on Gillette (a 13.03% increase in the normally anticipated stock return on the event date 28 January and a further − 2.30% on 31 January) and an initial negative impact on Procter & Gamble ( − 2.02% on 28 January and − 2.23% on 31 January), there were no additional significant effects on the stock prices around the announcement. The cumulative effects are summarized below: 342 Chapter 14 The table above attempts to measure the short-term synergies of the announcement by multiplying the CAR for Gillette and P&G times their market value on the day before the event window. In the short period of time measured by this event window, the cumulative synergy appears to be negative, with the positive value creation for Gillette shareholders outweighed by the negative impact on P&G. 8 14.4 A Fuller Event Study: Impact of Earnings Announcements on Stock Prices In the previous section we used the event-study methodology to explore the impact of a merger announcement on the returns of both the takeover target (Gillette) and acquirer (Procter & Gamble). In this section we show how to aggregate the returns of an event in order to evaluate the market response to a particular type of event. We consider the effect of earning announcements on a set of stores in the grocery industry. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17AB C D E F G H I Shares outstanding (thousands)Share price, 25jan05Market value, 25jan05 (billion $ ) Gillette 1,000,000 44.53 44.53 P&G 2,741,000 53.49 146.62 Date Gillette P&G Sum Gillette P&G Sum 26-Jan-05 -0.44% -0.96% -1.40% -0.19 -1.41 -1.61 <-- =F12+G12 27-Jan-05 1.80% -0.28% 1.52% 0.61 -1.83 -1.22 28-Jan-05 13.03% -2.02% 11.01% 6.41 -4.78 1.63 31-Jan-05 -2.30% -2.23% -4.52% 5.38 -8.04 -2.66 1-Feb-05 -1.40% -1.19% -2.59% 4.76 -9.78 -5.02 2-Feb-05 0.52% 0.77% 1.29% 4.99 -8.66 -3.66GILLETTE PURCHASED BY PROCTER & GAMBLE Measuring the synergies in event window Abnormal returns (AR)Cumulative abnormal valuations (billion $)Cell G12 contains formula =$D$4*SUM($C$12:C12)/1000Cell F12 contains formula =$D$3*SUM($B$12:B12)/1000 8. A study commissioned by the Massachusetts Secretary of the Commonwealth William F. Galvin after the merger offer suggests that the synergies of the merger, between $22 and $28 billion, were largely captured by Procter & Gamble. See the report and an article from Business Week on the disk that accompanies this book. 343 Event Studies An Initial Example: Safeway ’ s Positive Earnings Surprise on 20 July 2006 To set the stage, consider the earnings announcement made by Safeway on 20 July 2006. On this date Safeway announced earnings per share (EPS) of $0.42, a number which exceeded by 6 cents the market consensus estimate of $0.36. 9 On the same day, the S&P 500 declined by 0.85%, and Safeway stock rose by 8.39%. The spreadsheet below shows the example of Safeway ’ s earnings announcement on 20 July 2006. We use the event-study methodology to gauge the market reaction to this earnings surprise: 1 2 3 456 7 89 10 11 12 131415 16 1718 19C B A 6 0 - l u J - 0 2 e t a d t n e m e c n u o n n A 2 4 . 0 $ e r a h s r e p s g n i n r a E 6 3 . 0 $ e t a m i t s e s g n i n r a e s u s n e s n o C Earnings surprise (forecast error) $0.06 % 9 3 . 8 y a w e f a S % 5 8 . 0 - 0 0 5 P & S 1 0 0 0 . 0 t p e c r e t n I 9 8 2 9 . 0 e p o l S 8 1 1 0 . 0 x y e t S 2 1 B + 9 B * 3 1 B = - - < % 8 7 . 0 - n r u t e r d e t c e p x E 7 1 B - 8 B = - - < % 7 1 . 9 n r u t e r l a u d i s e R 5 7 . 7 c i t s i t a t s - t <-- =B18/B14The residual return: Expected stock returns versus actual returnsHow did the market interpret the earnings surprise? Regressing Safeway returns on the S&P returns using the market model: Safeway = 0.0001 + 0.9289*SPTHE MARKET REACTION TO A POSITIVE EARNINGS SURPRISE BY SAFEWAY, 20 July 2006 <-- =INTERCEPT(OFFSET('Stock Prices'!$A$2,138,8,252,1),OFFSET('Stock Prices'!$A$2,138,2,252,1)) In cells B12:B14 we have regressed Safeway daily returns on those of the S&P 500 for the 252 trading days preceding the announcement. The regression shows that r Safeway = 0.0001 + 0.9289* r S & P 500 and that the standard error of the estimate is 0.0118. Given these data, we can see that on the day of the announcement the anticipated return of Safeway, given the negative 0.85% return of the S&P and absent the earnings surprise, should have been − 0.78%. This means that the abnormal return, measuring the impact of the earnings announcement, was 9. Yahoo is the source of our earnings surprise data (see below). 344 Chapter 14 9.17% (cell B18, above). The t -statistic for the return was 7.75, showing that it is highly significant. The Earnings Surprise Numbers Our earnings surprise numbers are drawn from Yahoo, as shown in the follow- ing screenshot. While Yahoo is an admirable source of data, it does not provide a database of historical analyst estimates and actual earnings numbers; such data are available from Bloomberg ’ s Best Consensus Earnings Estimates and other commercial sources. 345 Event Studies An Event Study: The Grocery Industry We extend our Safeway study by considering 16 quarterly earnings announce- ments by four grocery companies for fiscal year 2006. 10 1 2 345 6 789 101112 13 141516171819 20 21 22 23 24 25 26 27AB C D E F G H I J K LM N OP Q Calendar Date Ticker Consensus Actual Surprise: =D3-C3Starting PointIntercept Slope STEXYActual ReturnS&P 500 ReturnExpected Return: =H3+I3*M3Abnormal Return: =L3-N3t-stat 7-Mar-06 KR 0.36 0.39 0.03 44 0.0003 0.6662 0.0123 1.36% -0.19% -0.09% 1.46% 1.1808 <-- =O3/J3 20-Jun-06 KR 0.42 0.42 0.00 117 0.0004 0.6063 0.0113 5.05% 0.00% 0.04% 5.01% 4.4355 <-- =O4/J4 12-Sep-06 KR 0.29 0.29 0.00 175 0.0006 0.5628 0.0108 -5.67% 1.03% 0.64% -6.31% -5.8201 <-- =O5/J5 5-Dec-06 KR 0.28 0.30 0.02 234 0.0003 0.4483 0.0118 5.08% 0.40% 0.21% 4.87% 4.1297 18-Apr-06 SVU 0.56 0.55 -0.01 73 -0.0008 0.7049 0.0123 -0.28% 1.69% 1.11% -1.39% -1.1313 26-Jul-06 SVU 0.57 0.53 -0.04 142 -0.0003 0.5416 0.0122 -7.09% -0.04% -0.05% -7.03% -5.7632 10-Oct-06 SVU 0.53 0.61 0.08 195 -0.0002 0.6014 0.0128 4.36% 0.20% 0.10% 4.26% 3.3170 9-Jan-07 SVU 0.56 0.54 -0.02 256 0.0003 0.5238 0.0130 -1.70% -0.05% 0.00% -1.70% -1.3061 27-Apr-06 SWY 0.30 0.32 0.02 80 0.0001 1.0139 0.0130 2.88% 0.33% 0.34% 2.54% 1.9473 20-Jul-06 SWY 0.36 0.42 0.06 138 0.0001 0.9289 0.0118 8.39% -0.85% -0.78% 9.17% 7.7519 12-Oct-06 SWY 0.39 0.39 0.00 197 0.0003 0.7533 0.0134 -1.43% 0.95% 0.75% -2.18% -1.6265 27-Feb-07 SWY 0.60 0.61 0.01 289 0.0012 0.7505 0.0131 -3.95% -3.53% -2.54% -1.41% -1.0814 4-May-06 WFMI 0.35 0.36 0.01 85 0.0006 0.8345 0.0175 12.50% 0.32% 0.33% 12.17% 6.9434 1-Aug-06 WFMI 0.34 0.35 0.01 146 -0.0007 1.2329 0.0164 -12.51% -0.45% -0.63% -11.88% -7.2345 3-Nov-06 WFMI 0.29 0.29 0.00 213 -0.0014 1.3199 0.0195 -26.21% -0.22% -0.43% -25.78% -13.2186 22-Feb-07 WFMI 0.40 0.38 -0.02 286 -0.0020 1.5321 0.0243 13.13% -0.09% -0.33% 13.46% 5.5465 Positive surprise2.65% Non-positive surprise-3.24%EARNINGS ANNOUNCEMENT IN 2006-07 FOR KROGER (KR), SUPERVALU (SVU), SAFEWAY (SWY), AND WHOLE FOODS (WFMI) Cell G18 contains formula: =COUNTIF('Stock Prices'!$A$3:$A$551,\"<=\"&TEXT(A18,\"0\"))-252 Cell H18 contains formula: =INTERCEPT(OFFSET('Stock Prices'!$A$2,$G18,10,252,1),OFFSET('Stock Prices'!$A$2,$G18,2,252,1)) Cell J18 contains formula: =STEYX(OFFSET('Stock Prices'!$A$2,$G18,10,252,1),OFFSET('Stock Prices'!$A$2,$G18,2,252,1))Cell I18 contains formula: =SLOPE(OFFSET('Stock Prices'!$A$2,$G18,10,252,1),OFFSET('Stock Prices'!$A$2,$G18,2,252,1))<-- =SUMIF($E$3:$E$18,\">0\",$O$3:$O$18)/COUNTIF(E3:E18,\">0\") <-- =SUMIF($E$3:$E$18,\"<=0\",$O$3:$O $18 )/COUNTIF (E3:E18,\"<=0\" ) For each announcement we have determined the intercept and slope of the market-model regression for the 252 days preceding the announcement. 11 Here ’ s a specific example from the above spreadsheet: 2 3 18AB C D E F G H I J K LM N OP Calendar Date Ticker Consensus Actual Surprise: =D3-C3Starting PointIntercept Slope STEXYActual ReturnS&P 500 ReturnExpected Return: =H3+I3*M3Abnormal Return: =L3-N3T-stat 7-Mar-06 KR 0.36 0.39 0.03 44 0.0003 0.6662 0.0123 1.36% -0.19% -0.09% 1.46% 1.1808 22-Feb-07 WFMI 0.40 0.38 -0.02 286 -0.0020 1.5321 0.0243 13.13% -0.09% -0.33% 13.46% 5.5465 10. We included only Kroger, Supervalu, Safeway, and Whole Foods in the sample. This is obvi- ously an incomplete sample, both in terms of the firms covered and the number of announcements. However, this extended example is meant to impart the flavor of a full-bodied event study. 11. The event window is defined in column G by the “Starting point,” which uses Countif to locate a date 252 business days before the event date in the data base of stock returns. Notice that the “Starting point” is used in the Intercept , Slope , Rsq formulas in columns H, I, and J. 346 Chapter 14 Row 3 tracks the market model of Kroger stock to the S&P 500 in the 252 trading days before the earnings announcement on 7 March 2006. The market model is r Safeway = 0.0001 + 0.9289* r S & P 500 . Kroger ’ s actual return on the announcement date, 1.36%, is 1.46% higher than the return which would have been predicted by its market model. However, dividing this 1.46% by the standard deviation of the abnormal returns (the regression residuals) ( Steyx = 0.0123) gives a t -statistic of 1.1808, which is not significant at the 5% level. Row 18 tracks the market model of Whole Foods stock to the S&P 500 in the year before the earnings announcement after market close on 21 February 2007. The market model is r Safeway = 0.0001 + 0.9289* r S & P 500 , with Steyx = 0.0243. The abnormal return on the day of the announcement, 13.46%, is significant at the 1% level (hence the boldface in cell P18). To temper this interpretation, note that on the day of the earnings announcement, Whole Foods announced the merger with Wild Oats Markets; this makes it difficult to interpret the true market reaction to the earnings release. In general, we have to be careful interpreting abnormal returns when an event is announced with confounding information. The Cumulative Abnormal Returns We restate the data in slightly different form in the spreadsheet below—using the Offset function—and then compute the abnormal returns in an event window which goes from − 10 to + 10 days around the earnings announcements: 347 Event Studies We can compute the average abnormal return (AAR) and cumulative abnor- mal return (CAR) for each of the days in the event window. In the following table we perform this computation separately for positive versus non-positive earnings announcements: 1 2 3 456 7 8 9 10 1112 13 14 15 16 171819 20 2122 23 242526 27 282930 31 3233 34 35AB C D E F G H I J K L M N O P Q Calendar Date 7-Mar-06 20-Jun-06 12-Sep-06 5-Dec-06 18-Apr-06 26-Jul-06 10-Oct-06 9-Jan-07 27 -Apr-06 20-Jul-06 12-Oct-06 27-Feb-07 4-May-06 1-Aug-06 3-Nov- 06 22-Feb-07 Ticker KR KR KR KR SVU SVU SVU SVU SWY SWY SWY SWY WFMI WFMI WFMI WFMI Consensus 0.36 0.42 0.29 0.28 0.56 0.57 0.53 0.56 0.3 0.36 0.39 0.6 0.35 0.34 0.29 0.4Actual 0.39 0.42 0.29 0.3 0.55 0.53 0.61 0.54 0.32 0.42 0.39 0.61 0.36 0.35 0.29 0.38 Surprise 0.03 0.00 0.00 0.02 -0.01 -0.04 0.08 -0.02 0.02 0.06 0.00 0.01 0.01 0.01 0.00 -0.02 Starting Point 44 117 175 234 73 142 195 256 80 138 197 289 85 146 213 286 Intercept 0.0003 0.0004 0.0006 0.0003 -0.0008 -0.0003 -0.0002 0.0003 0.0001 0.0001 0.0003 0.0012 0.0006 -0.0007 -0.0014 -0.0020 Slope 0.6662 0.6063 0.5628 0.4483 0.7049 0.5416 0.6014 0.5238 1.0139 0.9289 0.7533 0.7505 0.8345 1.2329 1.3199 1.5321 STEXY 0.0123 0.0113 0.0108 0.0118 0.0123 0.0122 0.0128 0.0130 0.0130 0.0118 0.0134 0.0131 0.0175 0.0164 0.0195 0.0243 Day relative to event -10 0.59% -0.07% 0.72% -0.46% -0.68% -1.81% -1.04% 0.47% 0.32% -0.01% 0.36% 0.46% -0.52% -3.87% 0.05% 0.26% -9 -1.19% 0.89% 0.38% -1.20% -1.06% 0.33% -0.43% 0.36% 0.65% -0.9 6% -0.94% 0.29% -1.94% 0.93% -0.06% 0.94% -8 1.08% 0.58% -0.32% 0.00% 0.25% -0.35% 0.29% -0.92% -0.65% 0.21% 0.22% 0.60% -1.20% -0.33% -0.98% 1.82% -7 -0.67% -1.34% 0.85% -0.23% -0.86% 1.30% 0.05% 0.66% 0.90% -0.7 8% -0.16% -0.96% -1.27% -0.18% 0.53% -0.87% -6 0.98% -0.35% -0.59% -0.67% -0.55% 1.24% -0.66% -0.48% -2.4 0% 0.20% -3.61% 0.33% -0.59% -1.79% 0.10% -0.11% -5 -0.34% 1.41% -0.84% 0.42% 0.29% 0.13% 2.44% -1.05% -0.66% 0.19% -4.99% 0.68% -1.35% -0.97% 0.25% 0.35% -4 -0.23% 0.11% 0.49% 0.62% -0.71% 0.79% -0.63% 0.71% -0.57% 0.93% 0.88% 0.21% 0.09% -1.88% 0.31% 0.35% -3 -1.55% -1.16% -0.39% -1.92% -1.01% -0.64% -0.11% -0.46% -0.80% 0.92% 1.21% -3.80% 0.41% 0.85% -1.52% 1.22% -2 0.93% -0.59% 1.97% 0.98% 0.34% 0.49% -0.05% 0.68% 0.61% 1.79% 2.36% -1.12% -0.28% 1.38% 0.03% -1.01% -1 0.03% -0.26% 0.29% 2.63% 0.29% -0.60% 2.95% -0.79% 0. 82% -1.33% 0.30% 0.60% 1.08% 0.01% -4.74% -0.39% 0 1.46% 5.01% -6.31% 4.87% -1.39% -7.03% 4.26% -1.70% 2.54% 9.17% -2.18% -1.41% 12.17% -11.88% -25.78% 13.46% 1 1.43% -0.63% 0.38% -1.35% -1.12% -4.37% 0.58% -1.57% -0.12% 0.83% -2.34% 1.01% 1.42% -0.14% -0.94% -2.45% 2 -1.15% -0.56% 0.93% -0.15% 1.43% -2.64% 0.99% 1.59% 1.33% -1.44% 0.34% 0.37% 0.37% -0.19% 2.02% 0.06% 3 1.08% 1.15% -2.90% -0.24% -0.82% 0.87% 0.20% -0.91% -3.2 8% -0.24% 0.35% -1.44% -1.78% 0.67% 3.11% 0.94% 4 0.03% 1.37% 0.27% 2.61% 0.36% 0.20% -0.71% -0.56% -1.34 % -0.23% 1.26% -0.06% -0.40% 0.24% 0.14% -1.13% 5 0.11% -0.31% -0.31% 1.19% -0.99% 0.62% -0.47% -0.53% 0.58% 0.76% -1.94% -0.59% 0.04% -4.00% 0.44% -1.13% 6 -0.12% 2.70% 0.50% -0.42% -0.23% -0.76% 0.83% 0.04% 1.02% -1 .13% 0.93% -0.40% -0.76% -1.24% 0.84% 0.41% 7 -0.20% 0.35% -0.96% 0.75% 0.63% 0.11% 0.27% 1.26% -0.45 % -0.09% 0.13% 1.20% 1.25% -0.02% 0.25% 1.97% 8 -0.18% 0.73% 1.90% 0.33% 0.46% -0.41% -0.02% 1.75% -1.43% 0. 26% -2.28% -0.12% -0.46% -1.25% -0.34% -0.63% 9 -1.34% -0.52% 0.14% -2.86% 0.23% -1.15% -0.23% 0.04% -0.82% 1.04% 0.13% -0.12% -1.59% 7.14% -0.99% -1.50% 10 0.86% 0.08% -0.14% -1.19% -0.88% -1.27% 0.00% 0.48% 0.46% -0.33% 0.92% -0.12% -0.85% 2.10% -0.12% -0.63% CUMULATIVE ABNORMAL RETURNS IN THE WINDOW -10 TO +10 ABNORMAL RETURN 348 Chapter 14 3 4 56 7 8 9 10 11 12 13 14 15 16 1718 19 2021 22 2324 25 2627 28 2930 31 3233 34 3536 37 38 39 40 4142 43ST U V W X Y Z A A A B % 4 5 . 0 % 9 4 . 0 Day relative to eventAAR T-statCumulative Abnormal ReturnsAAR T-statCumulative Abnormal Returns -10 -0.57% -1.1615 -0.57% -0.09% -0.1632 -0.09% -9 -0.48% -0.9931 -1.05% 0.10% 0.1944 0.02% -8 0.00% 0.0026 -1.05% 0.04% 0.0670 0.05% -7 -0.39% -0.8046 -1.44% 0.01% 0.0251 0.07% -6 -0.57% -1.1777 -2.01% -0.54% -1.0058 -0.48% -5 0.05% 0.1043 -1.96% -0.55% -1.0278 -1.03% -4 -0.18% -0.3753 -2.14% 0.37% 0.6774 -0.67% -3 -0.75% -1.5410 -2.89% -0.34% -0.6376 -1.01% -2 0.53% 1.0900 -2.36% 0.54% 0.9917 -0.47% -1 0.85% 1.7437 -1.51% -0.74% -1.3685 -1.21% 0 2.65% 5.4406 1.13% -3.24% -6.0062 -4.46% 1 0.46% 0.9409 1.59% -1.63% -3.0190 -6.08% 2 0.02% 0.0335 1.61% 0.40% 0.7356 -5.69% 3 -0.63% -1.2939 0.98% 0.22% 0.4121 -5.47% 4 0.02% 0.0355 0.99% 0.24% 0.4434 -5.23% 5 -0.30% -0.6087 0.70% -0.52% -0.9620 -5.75% 6 -0.28% -0.5690 0.42% 0.55% 1.0269 -5.19% 7 0.34% 0.6998 0.76% 0.47% 0.8643 -4.72% 8 -0.36% -0.7326 0.41% 0.14% 0.2680 -4.58% 9 0.15% 0.3154 0.56% -0.45% -0.8382 -5.03% 10 0.12% 0.2425 0.68% -0.20% -0.3614 -5.23% Cell X35 contains formula =SUMIF($B$6:$Q$6,\"<=0\",B35:Q35)/COUNTIF($B $6:$Q$6,\"<=0\") Cell Y35 contains formula =X35/$Y$11 Cell Z35 contains formula =X35+Z34Cell T35 contains formula =SUMIF($B$6:$Q$6,\">0\",B35:Q35)/COUNTIF($B$6:$ Q$6,\">0\") Cell U35 contains formula =T35/$U$11 Cell V35 contains formula =T35+V34Positive-Earnings AnnouncementsNon-Positive Earnings AnnouncementsUnadjusted cross-sectional errors - PositiveUnadjusted cross-sectional errors - Non-PositiveCell U11 contains formula {=SQRT(SUMPRODUCT(IF($B$6:$Q$6>0,$B$11:$Q$11),IF($B$6:$Q$6>0,$B$11:$Q$11))*(1/COUNTIF($B$6:$Q$6,\">0\")^2) )} 349 Event Studies The test statistics for the positive and non-positive announcements have been computed by dividing the average abnormal return (AAR) for each day by the appropriate cross-sectional error for the specific type of return (cells U11 and Y11): cell U11:(Sumproduct of Steyx for positive announ cements Number o ff positive announ cements Sumproduct of Steyx for nega) :2 11 cell Yttive announ cements Number of negative announ cements ()2 Graphing the CARs gives: -7%-6%-5%-4%-3%-2%-1%0%1%2% Event DaysCumulative Average Abnormal Returns - 1 0 - 9- 8- 7- 6- 5- 4- 3- 2- 10 1 2 3 4 5 6 7 8 9 1 0Positive Earnings Announcements Non-Positive Earnings Announcements On average, there appears to have been little leakage prior to the announce- ment date of neither the good news announcements nor the bad news. The market appears to have absorbed the information in the announcements rapidly—following the announcement date (“event day 0”), there appears to have been little additional response. 350 Chapter 14 14.5 Using a Two-Factor Model of Returns for an Event Study The model used in section 14.2 assumes an equilibrium model r it = α i + β i r Mt . This so-called “one factor” model assumes that the returns on the stocks in question are driven only by one market index. In this section we illustrate a two-factor model. We assume that returns are a function of both a market and an industry factor: r it = α i + β i , Market r Mt + β i , Industry r Industry , t . We then use this model to determine if a specific event influenced the returns and in which direction. Our event: On 16 November 2006, Wendy ’ s announced the purchase by tender of 22,418,000 shares at a price of $35.75 per share. This share purchase represented approximately 19% of the firm ’ s equity. Wendy ’ s stock closed on 16 November at $35.66. 351 Event Studies Did the Repurchase Affect Wendy ’ s Returns? We start by regressing the daily returns on Wendy ’ s on the S&P 500 and the S&P 500 Restaurant Index for the 252 days preceding the tender date of 16 November 2006. We use the array function Linest to do this computation. 12 The Linest box looks like: 12. The use of Linest to perform multiple regressions is discussed in Chapter 33. It is not the most user friendly of Excel functions. 352 Chapter 14 (Note that the #N/A above is produced by Excel and simply means that there is no entry for this column.) From this box we can conclude that Wendy ’ s return is sensitive to both the market and the industry. rWendys t , ...=+ ↑0 0012 0 5095 Market reaction coefficient Standard d errorIndustry reaction coefficient : .. 0 14100 4157/dncurlybracketleft/dncurlybracketmid/dncurlybracketright∗+ ↑rMt .. : ., Standard error 0 0851/dncurlybracketleft/dncurlybracketmid/dncurlybracketright∗rIndustry t This Linest box is shown again (see following). Dividing the coefficients by their respective standard errors (row 9) shows that they are both significant at the 1% level. Note that cell C4 gives the standard error of the y -estimate; we use this in the analysis to determine the significance of the abnormal returns. A further analysis follows the spreadsheet. 2 3 4 5 6 7AB C D Industry Market Intercept 7 5 1 4 . 0 > - - e p o l S 0.5095 0.0012 Standard Error --> 0.0851 0.1410 0.0007 R2 --> 0.3140 0.0103 #N/A F statistic --> 56.9738 94 2 #N/A SSxy --> 0.0122 0.0266 #N/A 353 Event Studies In rows 267–272 of the spreadsheet we use the two-factor model to analyze the abnormal returns (AR) and the cumulative abnormal returns (CAR) of the Wendy ’ s announcement. While there is little AR or CAR on the days before the announcement, it is clear that the announcement on 16 November had a considerable impact on Wendy ’ s returns on the day following ( − 5.87% abnor- mal return on 17 November) and on the next day ( − 1.61% AR on 20 Novem- ber). Dividing the abnormal return by the standard error in C5 shows that only the AR on the event day is significant at the 5% level. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 1516 17 18 19 263264265 266 267 268 269270 271 272273 274 275276 277 278279 280 281282 283 284285 286 287 288 289290 291 292293 294 295296 297AB C D E F G H I J Industry Market Intercept 7 5 1 4 . 0 > - - e p o l S 0.5095 0.0012 Standard Error --> 0.0851 0.1410 0.0007 R2 --> 0.3140 0.0103 #N/A F statistic --> 56.9738 94 2 #N/A SSxy --> 0.0122 0.0266 #N/A 8 1 8 8 . 4 t a t s -t 3.6142 1.8367 <-- =D3/D4 Days in estimation window 252 <-- =COUNT(A15:A266) Date Wendy's Intl S&P 500 S&P 500 Restaurant IndexExpected returnAbnormal return (AR)Cumulative abnormal return (CAR)T-test of AR 15-Nov-05 0.08% -0.39% -1.26% 16-Nov-05 -0.37% 0.18% -0.93% 17-Nov-05 0.84% 0.94% 1.60% 18-Nov-05 0.27% 0.44% 0.19% 21-Nov-05 1.08% 0.53% 0.92% 9-Nov-06 -0.89% -0.53% -0.35% 10-Nov-06 1.46% 0.19% 0.95% 13-Nov-06 0.08% 0.25% -0.05% 14-Nov-06 0.73% 0.63% 0.03% 15-Nov-06 0.25% 0.24% 0.21% 0.33% -0.08% -0.08% <-- =F267 -0.0741 <-- =F267/$C$5 16-Nov-06 0.31% 0.23% 1.26% 0.76% -0.45% -0.53% <-- =G267+F268 -0.4363 17-Nov-06 -6.44% 0.10% -1.78% -0.57% -5.87% -6.40% <-- =G268+F269 -5.6805 2 8 5 5 . 1 - % 1 0 . 8 - % 1 6 . 1 - % 2 0 . 0 % 9 1 . 0 - % 5 0 . 0 - % 9 5 . 1 - 6 0 - v o N - 0 2 4 8 7 0 . 0 - % 9 0 . 8 - % 8 0 . 0 - % 3 2 . 0 % 7 0 . 0 % 6 1 . 0 % 5 1 . 0 6 0 - v o N - 1 2 22-Nov-06 2.80% 0.23% 0.27% 0.35% 2.45% -5.64% 2/7/20052/8/20052/9/2005 2/10/20052/11/20052/14/2005 2/15/2005 2/16/20052/17/2005 2/18/2005 2/22/20052/23/2005 2/24/2005 2/25/2005 2/28/2005 3/1/2005WENDY'S RETURNS: ESTIMATION WINDOW AND EVENT WINDOW Cell F267 contains formula =B267- E267Cell E267 contains formula =$D$3+$C$3*C267+$B$3*D267Cells B3:D7 contain the array formula {=LINEST(B15:B266,C15:D266,,TRUE)} Cell C5 is the standard error of the y estimate, used in the t-test of the abnormal returns EVENT WINDOW -10%-8%-6%-4%-2%0%2%4% 15nov06 16nov06 17nov06 20nov06 21nov06 22nov06 Expected return Abnormal return (AR) Cumulative abnormal return (CAR) 354 Chapter 14 Furthermore, an analysis of the announcement broken down into the market and the industry factors shows that on both of the 2 days after the 16 November announcement date the effects of the market index on Wendy ’ s returns were slight. On 17 November, however, there was a significant impact of the S&P 500 Restaurant Index on Wendy ’ s which was lacking on 20 November. To see this, we first discuss the day after the event, 17 November 2006: 13 14 266 267 268 269 270271 272AB C D E F G H Date Wendy's Intl S&P 500 S&P 500 Restaurant IndexExpected returnAbnormal return (AR)Cumulative abnormal return (CAR) 14-Nov-06 0.73% 0.63% 0.03% 15-Nov-06 0.25% 0.24% 0.21% 0.33% -0.08% -0.08% <-- =F267 16-Nov-06 0.31% 0.23% 1.26% 0.76% -0.45% -0.53% <-- =G267+F268 17-Nov-06 -6.44% 0.10% -1.78% -0.57% -5.87% -6.40% <-- =G268+F269 20-Nov-06 -1.59% -0.05% -0.19% 0.02% -1.61% -8.01% 21-Nov-06 0.15% 0.16% 0.07% 0.23% -0.08% -8.09% 22-Nov-06 2.80% 0.23% 0.27% 0.35% 2.45% -5.64%EVENT WINDOW On 17 November, the S&P 500 rose by 0.10% and the S&P 500 Restaurant Index fell by 1.78%. Given the regression r Wendys , t = 0.0012 + 0.5095* r Mt + 0.4157* r Industry , t , the change in the S&P 500 would have affected Wendy ’ s returns by approximately + 0.05% ( = 0.5095*0.10%) and the change in the industry index would have affected Wendy ’ s returns by approximately − 0.74% ( = 0.4157* − 1.78%). But Wendy ’ s decreased by − 6.44% on the same day, well in excess of the impact of either of the two factors. Here are the data for 20 November: 13 14 266 267 268 269 270 271 272AB C D E F G H Date Wendy's Intl S&P 500 S&P 500 Restaurant IndexExpected returnAbnormal return (AR)Cumulative abnormal return (CAR) 14-Nov-06 0.73% 0.63% 0.03% 15-Nov-06 0.25% 0.24% 0.21% 0.33% -0.08% -0.08% <-- =F267 16-Nov-06 0.31% 0.23% 1.26% 0.76% -0.45% -0.53% <-- =G267+F268 17-Nov-06 -6.44% 0.10% -1.78% -0.57% -5.87% -6.40% <-- =G268+F269 20-Nov-06 -1.59% -0.05% -0.19% 0.02% -1.61% -8.01% 21-Nov-06 0.15% 0.16% 0.07% 0.23% -0.08% -8.09% 22-Nov-06 2.80% 0.23% 0.27% 0.35% 2.45% -5.64%EVENT WINDOW On 20 November, the S&P 500 fell by 0.05% and the S&P 500 Restaurant Index fell by 0.19%. Given the regression r Wendys,t = 0.0012 + 0.5095* r Mt + 0.4157* r Industry , t , the change in the S&P 500 would have affected Wendy ’ s returns by approximately − 0.08% and the change in the Restaurant Industry 355 Event Studies index would have affected Wendy ’ s returns by approximately − 0.03%. But Wendy ’ s decreased by − 1.59% on the same day, which is again well in excess of the impact of either of the two factors. The impact of the announcement was felt even in the third day after the event, but we leave this analysis to the reader. 14.6 Using Excel ’ s Offset Function to Locate a Regression in a Data Set The analysis in section 14.2 requires us to do a regression of a specific stock ’ s returns on the returns of the S&P 500, where the starting point of the regres-sion is the 252 trading days before a specific date. The technique in section 14.2 uses a number of Excel functions: • The functions Intercept , Slope , Rsq give the regression intercept, slope, and r -squared. These functions have been illustrated in Chapter 2 and in the previous portfolio chapters. The function Steyx gives the standard deviation of the regression residuals. • The function CountIf counts the number of cells in a range which meet a specific condition. CountIf has the syntax CountIf(data,condition) . However , the condition must be a text condition (which means that in this example we will use the Excel function Text to translate a date to a text number—more later). • The function Offset (see also Chapter 33) allows us to specify a cell or a block of cells in an array. To illustrate the problem, consider the following data of returns for General Mills (GIS) and the S&P 500. We want to run a regression of the GIS returns on the S&P 500 returns for 10 dates before 29 January 1997: 356 Chapter 14 To run this regression, we first use CountIf(data,condition) to count the row number of the data on which the starting date falls. Since condition must be a text entry, we translate the date in cell B26 to a text by using Text(b26, ″ 0 ″ ) . The Excel function = CountIf(A3:A24, ″ < = ″ &Text(B26, ″ 0 ″ )) now counts the number of cells in the column A3:A24 which are less than or equal to the date in cell B26. The answer, as you can see in cell B27, is 19. Next, we use Offset(A3:F24,B27-11,2,10,1) to locate the 10 rows of GIS returns before the 19th row indicated by the starting date. This is a tricky function! 1 2 3 45 6 78 9 10 11 12 1314 15 1617 18 1920 21 2223 24 2526 27 28 29 3031 32 3334 35 3637G F E D C B A DateGeneral Mills GISn r u t e R 0 0 5 P S n r u t e R 3 0 . 8 4 7 6 9 . 7 5 7 9 - n a J - 3 6-Jan-97 58.19 0.0040 <-- =LN(B4/B3) 747.65 -0.0005 <-- =LN(E4/E3) 4 7 0 0 . 0 3 2 . 3 5 7 4 9 1 0 . 0 3 3 . 9 5 7 9 - n a J - 7 4 6 0 0 . 0 - 1 4 . 8 4 7 0 0 0 0 . 0 3 3 . 9 5 7 9 - n a J - 8 6 8 0 0 . 0 5 8 . 4 5 7 7 9 0 0 . 0 1 9 . 9 5 7 9 - n a J - 9 1 6 0 0 . 0 5 . 9 5 7 0 0 0 0 . 0 1 9 . 9 5 7 9 - n a J - 0 1 0 0 0 0 . 0 1 5 . 9 5 7 8 3 0 0 . 0 - 8 6 . 9 5 7 9 - n a J - 3 1 2 2 1 0 . 0 6 8 . 8 6 7 8 3 0 0 . 0 1 9 . 9 5 7 9 - n a J - 4 1 2 2 0 0 . 0 - 2 . 7 6 7 9 5 0 0 . 0 - 6 5 . 9 5 7 9 - n a J - 5 1 3 3 0 0 . 0 5 7 . 9 6 7 0 0 0 0 . 0 6 5 . 9 5 7 9 - n a J - 6 1 3 8 0 0 . 0 7 1 . 6 7 7 0 0 0 0 . 0 6 5 . 9 5 7 9 - n a J - 7 1 7 0 0 0 . 0 7 . 6 7 7 0 2 0 0 . 0 - 4 4 . 9 5 7 9 - n a J - 0 2 7 7 0 0 . 0 2 7 . 2 8 7 1 1 2 0 . 0 1 7 . 0 6 7 9 - n a J - 1 2 5 4 0 0 . 0 3 2 . 6 8 7 3 1 1 0 . 0 4 . 1 6 7 9 - n a J - 2 2 1 1 1 0 . 0 - 6 5 . 7 7 7 2 1 1 0 . 0 9 0 . 2 6 7 9 - n a J - 3 2 1 9 0 0 . 0 - 2 5 . 0 7 7 4 7 0 0 . 0 - 3 6 . 1 6 7 9 - n a J - 4 2 2 7 0 0 . 0 - 2 0 . 5 6 7 5 5 0 0 . 0 - 9 2 . 1 6 7 9 - n a J - 7 2 0 0 0 0 . 0 2 0 . 5 6 7 8 3 0 0 . 0 - 6 0 . 1 6 7 9 - n a J - 8 2 7 9 0 0 . 0 5 . 2 7 7 7 6 1 0 . 0 9 0 . 2 6 7 9 - n a J - 9 2 0 5 1 0 . 0 7 1 . 4 8 7 9 1 0 0 . 0 1 2 . 2 6 7 9 - n a J - 0 3 5 2 0 0 . 0 6 1 . 6 8 7 7 3 0 0 . 0 4 4 . 2 6 7 9 - n a J - 1 3 7 0 0 0 . 0 3 7 . 6 8 7 6 5 0 0 . 0 - 9 0 . 2 6 7 9 - b e F - 3 Starting date 29-Jan-97 Rows from top of data to starting date 19 <-- =COUNTIF(A3:A24,\"<=\"&TEXT(B26,\"0\")) Regression Intercept 0.0022 <-- =INTERCEPT(OFFSET(A3:F24,B27-11,2,10,1),OFFSET(A3:F24,B27-11,5,10,1)) Slope 0.5198 <-- =SLOPE(OFFSET(A3:F24,B27-11,2,10,1),OFFSET(A3:F24,B27-11,5,10,1)) R-squared 0.1413 <-- =RSQ(OFFSET(A3:F24,B27-11,2,10,1),OFFSET(A3:F24,B27-11,5,10,1)) Check Intercept 0.0022 <-- =INTERCEPT(C11:C20,F11:F20) Slope 0.5198 <-- =SLOPE(C11:C20,F11:F20) R-squared 0.1413 <-- =RSQ(C11:C20,F11:F20)USING OFFSET, COUNTIF, AND TEXT TO LOCATE A REGRESSION IN A DATA SET 357 Event Studies Offset A F B Reference arrayStarting row in ref(: , -32 4 2 7 1 1 ↑↑/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/dncurlybracketright/horizcurlybracketext eerence arraycolumns over from top corner of referen/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/dncurlybracketright/horizcurlybracketext,2 2↑ cce array Fix starting corner in reference array from which d/verticalbraceright ↑ aata is consideredrows starting corner /dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/verticalbraceright,,10 10↑ below1 1 1↑ ↑Only column of data Data c onsidered/verticalbraceright /dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/dncurlybracketright/horizcurlybracketext) The functions Intercept , Slope , Rsq can now be used with Offset (A3:F24,B27-11,2,10,1) and Offset(A3:F24,B27-11,5,10,1) : = ↑Intercept Offset A F B y-data(( : , - , , , ) 3 24 27 11 2 10 1/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /dncurlybracketright /horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /dncurlybracketright /horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext, (: , - , , , ) ) Offset A F B x-data3 2 4 2 7 1 151 01 ↑ 14.7 Summary Event studies, used to determine the impact of a particular market effect on a specific stock or a generic market effect on a set of stocks, are some of the most widely used technologies in practical finance. While Excel may not be the optimal tool for performing an event study, we have used it in this chapter to illustrate both uses of the event study. We have shown that Excel can readily be used to perform either a one-factor or a two-factor event study. The Excel techniques employed are easily acquired by a sophisticated user. III V ALUATION OF OPTIONS Chapters 15–19 deal with option pricing and applications. Chapter 15 is an introduction to options. After defining the option terminology, Chapter 15 discusses option payoffs and basic option arbitrage propositions. In Chapter 16 we discuss the binomial option pricing model and its implementation in Excel. After showing how these binomial models work, we use Visual Basic for Applications (VBA) to build binomial option pricing functions for both European and American options. One of the applications discussed is the pricing of employee stock options. Chapter 17 discusses the Black-Scholes pricing formulas for European calls and puts. These formulas can be implemented either by direct calculation in the spreadsheet or by using VBA to build new spreadsheet functions. An exten-sion of the Black-Scholes model to the pricing of dividend paying stocks (the so-called Merton model) is implemented. We show how to apply the option pricing models to the valuation of structured securities. Chapter 18 discusses the computation of “Greeks”—the derivatives of the option-pricing formula which show the sensitivities of the option valuation to its various parameters. Chapter 19 discusses real options—the application of the option pricing models to real investments. Once you have mastered the ideas in these chapters, we refer you to the Monte Carlo section of this book. Chapters 24–30 show how option pricing strategies can be simulated in Excel. These chapters also show how more complicated options—whose payments are path dependent—can be priced using Monte Carlo methods. 1 5 Introduction to Options 15.1 Overview In this chapter we give a brief introduction to options. The chapter can, at best, serve as an introduction to the already informed. If you know nothing what-soever about options, read an introduction to the topic in a basic finance text. 1 We start with the basic definitions and options terminology, go on to discuss graphs of option payoffs and “profit diagrams,” and finally discuss some of the more important option arbitrage propositions (sometimes referred to as linear pricing restrictions). In subsequent chapters we discuss two methods of pricing options: The binomial option pricing model (Chapter 16) and the Black-Scholes option pricing model (Chapter 17). 15.2 Basic Option Definitions and Terminology An option on a stock is a security that gives the holder the right to buy or to sell one share of the stock on or before a particular date for a predetermined price. Here is a brief glossary of terms and notation used in the field of options: • Call, C : An option that gives the holder the right to buy a share of stock on or before a given date at a predetermined price. • Put, P : An option that gives the holder the right to sell a share of stock on or before a given date at a predetermined price. • Exercise price, X : The price at which the holder can buy or sell the underly- ing stock; sometimes also referred to as the strike price . • Expiration date, T : The date on or before which the holder can buy or sell the underlying stock. • Stock price, S t : The price at which the underlying stock is selling at date t . The current stock price is denoted S 0 . • Option price : The price at which the option is sold or bought. 1. Good chapters can be found in the following books: John Hull, Options, Futures and Other Derivatives (Prentice Hall, 8th edition, 2011); Zvi Bodie, Alex Kane, and Alan J. Marcus, Invest- ments (McGraw-Hill, 9th edition, 2011). 362 Chapter 15 American versus European options : In the jargon of options markets, an American option is an option which can be exercised on or before the expira- tion date T , whereas a European option is one which can be exercised only on the expiration date T . This terminology is confusing for two reasons: • The options sold on both European and American options exchanges are almost invariably American options. • The simplest option pricing formulas (these include the famous Black- Scholes option pricing formula discussed in Chapter 17) are for European options . As we show in section 15.6, in many cases we can price American options as if they were European options. We use C t to denote the price of a European call on date t , and P t to denote the European put price. If it is clear that the option price refers to today ’ s price, we often drop the subscript, writing C or P instead of C 0 or P 0 . When we need fuller notation, we write C t ( S t ,X,T ) for the price of a call on date t when the price of the underlying stock is S t , the exercise price is X , and the expiration date is T . If we wish to specify that our option pricing formula relates to an American option, we use the superscript A : C C SX T P SX TtA tA ttA t , ( ,, ) ( ,, ) or . When written without superscripts, the options pricing refers to European options. At-the-money , in-the-money , out-of-the-money : If the exercise price X of a call or a put is equal to the current price of the stock S 0 , then the option is at-the-money . If a positive cash flow could be made by immediately exercising an American option (that is, S 0 − X > 0 for a call and X − S 0 > 0 for a put), then the option is in-the-money . 2 Writing Options Versus Purchasing Options: Cash Flows The purchaser of a call option acquires the right to buy a share of stock for a given price on or before date T and pays for this right at the time of purchase. The writer or seller of this call option is the seller of this right: The writer collects the option price today in return for obligating herself to deliver one share of stock in the future for the exercise price, if the purchaser of the call demands. In terms of cash flows, the purchaser of an option always has an 2. It is of course not logical, that you can ever make an immediate profit by buying an American option and immediately exercising it. Thus, for American calls, C 0 > S 0 − X , and for American puts, P 0 > X − S 0 . In-the-money and out-of-the-money refers only to the relation between S 0 and X without taking into account the option price. 363 Introduction to Options initial negative cash flow (the price of the option) and a future cash flow which is at worst zero (if it is not worthwhile exercising the option) and otherwise positive (if the option is exercised). The cash-flow position of the writer of the option is reversed: An initial positive cash flow is followed by a terminal cash flow which is at best zero. T e m i T 0 e m i T Purchase call option, cash flow < 0Terminal call payoff, Max[ ST - X, ] > Cash flows of call buyer Between times and T: Cash flow = 0 for European optionCash flow > 0 for American option Write (I.e., issue) call option,cash flow > 0Pay terminal call payoff- Max[ ST - X, ] < Cash flows of call writer Between times and T: Cash flow = 0 for European option Cash flow < 0 for American optionCall Option Payoff Patterns 000 00 0 A similar payoff pattern holds for the cash flows of the purchaser and writer of a put option on a stock: 364 Chapter 15 T e m i T 0 e m i T Purchase put option, cash flow < 0Terminal put payoff,Max[ X - S T,] > Cash flowsof put buyer Between times and T: Cash flow = 0 for European optionCash flow > 0 for American option Write (I.e., issue) call option,cash flow > 0Pay terminal call payoff- Max[ X - S T, ] < Cash flows of put writer Between times and T: Cash flow = 0 for European optionCash flow < 0 for American optionPut Option Payoff Patterns 0 000 00 15.3 Some Examples Below we show the most actively traded options on 22 October 2012 ( http:// biz.yahoo.com/opt/stat1.html ). Each option represents a trade on 100 units of the underlying (so that 36,371 Microsoft 29 November calls represent call options on 3.6 million shares of MSFT with an exercise price of $29). The “open interest” is the number of outstanding contracts at the end of the day. For MSFT, 36,371 calls were traded on 22 October, and at the end of the day 206,064 calls were outstanding. 365 Introduction to Options A few facts stand out about this list: • Seven of the options are on indices. The options enable investors/speculators to make bets on broad-based market movements. • The list is approximately evenly divided between puts (8 out of 20) and calls. This is not always true—when investors are optimistic about future market movements, calls tend to dominate the most active, and vice versa. • The options in the most-active list tend to be short-term options. Although longer-term options exist, these are traded less than the near-term. 15.4 Option Payoff and Profit Patterns One of the attractions of options is that they allow their owners to change the payoff patterns of the underlying assets. In this section we consider: • The basic payoff and profit patterns of a call and a put option and a share. • The payoff patterns of various combinations of options and shares. Rank StockOption exercise priceCall or put?Option expirationClosing stock price ClosingChange from previous day VolumeOpen Interest Short description of underlying 1 XLF 17 Call 17-Nov-12 16.11 0.06 0.01 433,998 2,358,344 Tracks index of financial stocks 2 SPY 143 Put 17-Nov-12 143.41 1.94 -0.23 89,617 1,803,974 Tracks SP5003 QQQ 65 Put 17-Nov-12 66.02 0.81 -0.25 52,780 759,554 Tracks Nasdaq 100 4 IWM 78 Put 17-Nov-12 81.83 0.54 -0.09 43,168 448,734 Tracks Russell 20005 MSFT 29 Call 17-Nov-12 28 0.23 -0.20 36,371 206,064 Microsoft6 HPQ 17 Put 18-May-13 14.71 3.23 -0.18 26,425 6,984 Hewlett-Packard7 SLV 34 Call 17-Nov-12 31.39 0.15 0.01 26,250 121,974 Tracks silver price8 UTX 72.5 Put 17-Nov-12 77.83 0.38 -0.01 24,515 22,674 United Technologies9 FB 21 Call 17-Nov-12 19.32 0.78 0.10 24,390 183,944 Facebook 10 INTC 22 Call 17-Nov-12 21.46 0.20 0.01 23,339 190,434 Intel11 ECA 26 Call 17-Nov-12 23.02 0.18 -0.23 20,252 219,634 Encana Corp. 12 GE 22 Call 17-Nov-12 21.7 0.31 -0.15 19,603 227,984 General Electric 13 BTU 16 Call 19-Jan-13 29.95 13.00 3.00 19,091 218,994 Peabody Energy14 NLY 8 Put 17-Jan-15 15.94 0.66 0.05 16,771 177,934 Annaly Capital Management (a REIT) 15 CSCO 19 Call 17-Nov-12 18.19 0.36 0.00 16,654 569,894 Cisco16 AET 45 Call 17-Nov-12 44.2 1.26 0.35 16,486 22,004 Aetna 17 EEM 41 Put 22-Dec-12 41.9 1.14 -0.22 15,454 444,464 Tracks MSCI emerging markets index18 MS 19 Call 17-Nov-12 17.45 0.14 -0.05 14,654 289,574 Morgan Stanley19 NXY 20 Put 22-Dec-12 24.14 0.77 0.27 14,645 71,564 Nexen (energy)20 FXI 37 Call 17-Nov-12 37.67 1.16 0.25 13,948 1,127,324 Tracks China 25 indexMOST ACTIVE OPTIONS, 22 OCTOBER 2012 Option price 366 Chapter 15 Stock Profit Patterns We start with the payoff pattern from a purchased stock . Suppose you buy a share of General Pills stock in July at its then-current market price of $40. If in September the price of the stock is $70, you will have made a $30 profit; if its price is $30, you will have a loss (or a negative profit) of $10. 3 Generalize this by writing the price of the stock in September as S T and its price in July by S 0 . Then we write the profit function from the stock as: Profit from stock S S T=− 0 Payoff from the Short Sale of a Stock Suppose we had sold one share of GP stock short in July, when its market price was $40. If in September the market price of GP was $70, and if at that point we undid the short sale (i.e., we purchase a share at the market price in order to return the share to the lender of the original short), then our profit would be − $30: Profit from short s ale of stock S S profit from purchase of sto T =− =−0 ( cck) Notice that the profit from the short sale is the negative of the profit from the purchase; this is always the case (also for options, considered below). Graphing Stock Profit Patterns The Excel graph below graphs the profit patterns from both a purchase and a short sale of the GP stock described above. 3. Our use of the word profit in this section constitutes a slight abuse of language and the standard finance concept of the word, since we are ignoring the interest costs associated with buying the asset. In the case at hand, this abuse of language is both traditional and harmless. 367 Introduction to Options Call Option Profit Patterns As in the case of a stock, we start with the payoff pattern from a purchased call . We go back to the General Pills (GP) options of the previous section. Suppose that in July you bought one GP September 40 call for $4. 4 In Sep- tember you will exercise the call only if the market price of GP is higher than $40. If we write the initial (July) call price as C 0 , we can write the profit func- tion from the call in September as follows: Call profit in September S X C S ST T T=− − =− − =−max( , ) max( , )0 40 0 4 40 if ≤ ≤ −>⎧⎨⎩40 44 40 SS TT if -50-40-30-20-1001020304050 0 1 02 03 04 05 06 07 08 0Proﬁt Terminal stock price, STSTOCK PROFIT PATTERNS Bought stock Shorted stock 4. Because the exercise price of this call is equal to the current market price of the stock, it is called an at-the-money call. When the exercise price of the call is higher than the current market price, it is called an out-of-the-money call, and when the exercise price is lower than the current market price, the call is an in-the-money call. 368 Chapter 15 Payoff Pattern from a Written Call In options markets the purchaser of a call buys the call from a counterparty who issues the call. In the jargon of options, the issuer of the call is called the call writer . It is worthwhile to spend a few minutes considering the difference between the security bought by the call purchaser and the call writer: • The call purchaser buys a security which gives the right to buy a share of stock on or before date T for price X. The cost of this privilege is the call price C 0 , which is paid at the time of the call purchase. Thus the call purchaser has an initial negative cash flow (the purchase price C 0 ); on the other hand, his cash flow at date T is always non-negative: max( S T − X, 0). • The call writer gets C 0 at the date of the call purchase. In return for this price, the writer of the call agrees to sell a share of the stock for price X on or before date T . Notice that whereas the call purchaser has an option, the call writer has undertaken an obligation. Note that the cash flow pattern of the call writer is opposite to that of the call purchaser: The writer ’ s initial cash flow is positive ( + C 0 ), and her cash flow at date T is always non-positive: − max( S T − X, 0). The profit of a call writer is the opposite of that of the call purchaser. For the case of the GP options: Call writer s profit in September C S X S T T′ =− − =− −0 0 44 0 0max( , ) max( , ) ) =+≤ −>⎧⎨⎩44 0 44 40if ifS SST TT Graphing the profit patterns of the bought and the written call gives: 369 Introduction to Options Put Option Profit Patterns Payoff Pattern from a Purchased Put If in July you bought one GP September 40 put for $2, then in September you will exercise the put only if the market price of GP is lower than $40. If we write the initial (July) put price as P 0 , we can write the profit function from the put in September as follows: Put profit in September X S P S ST T T=− − =− − =−max( , ) max( , )0 40 0 2 380 ifS SST T≤ −>⎧⎨⎩40 24 0 if Payoff Pattern from a Written Put The put writer obligates herself to purchase one share of GP stock on or before date T for the put exercise price of X . For putting herself in this invidious position, the writer of the put receives, at the time the put is written, the put price P 0 . The payoff pattern from writing the GP September 40 put is therefore: -30-20-100102030 0 1 02 03 04 05 06 07 08 0Proﬁt Terminal stock price, STCALL OPTION PROFIT PATTERNS Bought call WriƩen call 370 Chapter 15 Put writer s profit in September P X S ST T′ =− − =− −0 0 24 0 0max( , ) max( , ) = =−+ ≤ >⎧⎨⎩38 40 24 0SS STT Tif if Graphing the profit patterns of the bought and the written put gives: -40-30-20-10010203040 0 1 02 03 04 05 06 07 08 0Proﬁt Terminal stock price, STPUT OPTION PROFIT PATTERNS Bought put WriƩen put 15.5 Option Strategies: Payoffs from Portfolios of Options and Stocks There is some interest in graphing the combined profit pattern from a portfolio of options and stocks. These patterns give an indication of how options can be used to change the payoff patterns of “standard” securities such as stocks and bonds. Here are a few examples. The Protective Put Consider the following combination: • One share of stock, purchased for S 0 • One put, purchased for P with exercise price X 371 Introduction to Options This option strategy is often called a “protective put” strategy or “portfolio insurance”; in Chapter 29 we return to this topic, exploring it in much further detail. The payoff pattern of the protective put is given by: Stock profit P ut profit S S X S P SSX SPTT TT+= − + − − =−+−−00 000 max( , ) ifSSX SSP S X XS P S X SSP S XT TT T TT≤ −− >⎧⎨⎩ =−− ≤ −− >⎧⎨⎩00 00 00if if if When applied to the GP example (that is, buying a share at $40 and a put with X = $40 for $2) this gives the following graph: -40-30-20-10010203040 0 1 02 03 04 05 06 07 08 0Proﬁt Terminal stock price, STPROTECTIVE PUT PROFIT Stock proﬁ tPutproﬁt ProtecƟve put proﬁ t This pattern looks very much like the payoff pattern from a call. 5 5. In section 15.5 we prove and illustrate the put-call parity theorem . It follows from this theorem that a call must be priced at a price C such that C = P + S 0 − Xe − rT . Thus, when calls are correctly priced according to this theorem, the payoff from a put + stock combination is the same as that from a call + bond combination. We prove this theorem and give an illustration in the next section. 372 Chapter 15 Spreads Another combination involves buying and writing calls with different exercise prices. When the bought call has a low exercise price and the written call has a higher exercise price, the combination is called a bull spread . As an example, suppose you bought a call (for $4) with an exercise price of $40 and wrote a call (for $2) with an exercise price of $50. This bull spread gives a profit of max( , ) (max( , ) ) SS S SSTT T TT−− − −− =−+ ≤ −− + =−40 0 4 50 0 2 42 4 0 40 4 2 42if iifif40 50 40 4 50 2 8 50≤≤ −− − −−= ≥⎧⎨⎪ ⎩⎪S SS S T TT T () The Excel graph given below shows each of the two calls and the resulting spread profit: 0 1 02 03 04 05 06 07 0Proﬁt Terminal stock price, STBull Spread Pro ﬁt Chart Purchased call, X=40 WriƩen call, X=50 Spreadproﬁt 15.6 Option Arbitrage Propositions In succeeding chapters we price options given specific assumptions about the probability distribution of the underlying asset (usually the stock) on which the option is written. However, there is much that can be learned about the 373 Introduction to Options pricing of options without making these specific probability assumptions. In this section we consider a number of these arbitrage restrictions on option pricing. Our list is by no means exhaustive, and we have concentrated on those propositions which provide insight into the pricing of options or which will be used in later sections. Throughout we assume that there is a single risk-free interest rate which prices bonds; we also assume that this risk-free rate is continuously com-pounded, so that the present value of a riskless security which pays off X at time T is given by e − rT X . proposition 1 Consider a call option written on a stock which pays no divi- dends before the option ’ s expiration date T . Then the lower bound on a call option price is given by: C Max S XerT 00 0 ≥−−(, ) Comment Before proving this proposition, it will be helpful to consider its meaning: Suppose that the riskless interest rate is 10%, and suppose we have an American call option with maturity T = 1/2 (i.e., the expiration date of the option is one-half year from today) with X = 80 written on a stock whose current stock price S 0 = 83. A naive approach to determining a lower bound on this option ’ s price would be to state that it is worth at least $3, since it could be exercised immediately with a profit of $3. Proposition 1 shows that the option ’ s value is at least 83 − e − 0.10*0.5 80 = 6.90. Furthermore, a careful examination of the proof below will show that this fact does not depend on the option being an American option—it is also true for a European option. 1 2 3 456 7 8C B A Current stock price, S 0 83 5 . 0 T , y t i r u t a m o t e m i t n o i t p O 0 8 X , e c i r p e s i c r e x e n o i t p O % 0 1 r , e t a r t s e r e t n I Naive minimum option price, Max(S 0-X,0) 3 <-- =MAX(B2-B4,0) Proposition 1 lower bound on option price, Max(S 0 - Exp(-rT)X,0) 6.902 <-- =MAX(B2-EXP(-B5*B3)*B4,0)PROPOSITION 1—HIGHER LOWER BOUNDS FOR CALL PRICES 374 Chapter 15 Proof of Proposition 1 Standard arbitrage proofs are built on the consider- ation of the cash flows from a particular strategy. In this case the strategy is the following: At time 0 (today): • Buy one share of the stock • Borrow the PV of the option exercise price X • Write a call on the option. At time T: • Exercise the option if this is profitable. • Repay the borrowed funds. This strategy produces the following cash-flow table: Today At Time T Action Cash Flow S T < X S T ≥ X Buy stock − S 0 + S T + S T Borrow PV of X + Xe − rt − X − X Write call + C 0 0 − ( S T − X ) Total − S 0 + Xe − rT + C S T − X < 0 0 Note that at time T , the cash flow resulting from this option is either negative (if the call is not exercised) or zero (when S T ≥ X ). Now a financial asset (in this case: the combination of purchasing a stock, borrowing X , and writing a call) which has only non-positive payoffs in the future must have a positive initial cash flow; this shows that: C S Xe C S XerT rT 00 0 0 0 −+ > >−−−or To finish the proof, we note that in no case can the value of a call be less than zero. Thus we have that C 0 ≥ max( S 0 − Xe − rT , 0), which proves the proposition. Proposition 1 has an immediate and very interesting consequence: In many cases the early-exercise feature of an American call option is worthless; this means that an American call option can be valued as if it were a European call. The precise conditions are the following: 375 Introduction to Options proposition 2 Consider an American call option written on a stock which will not pay any dividends before the option ’ s expiration date T . Then it is never optimal to exercise the option before its maturity. Proof of Proposition 2 Suppose the holder of the option is considering exer- cising it early, at some date t < T . The only reason to consider such early exer- cise is that S t − X > 0, where S t is the price of the underlying stock at time t . However, by Proposition 1 the market value of the option at time t is at least S t − Xe − r(T − t) , where r is the risk-free rate of interest. Since S t − Xe − r(T − t) > S t − X , it follows that the option ’ s holder is better off selling the option in the market than exercising it. Proposition 2 means that many American call options can be priced as if they were European calls. Note that this is not true for American puts, even if the underlying stock pays no dividends; in Chapter 16 we give some examples in the context of a binomial model. proposition 3 ( put bounds ) The lower bound on the value of a put option is: PX e SrT 00 0 ≥−−max( , ) Proof of Proposition 3 The proof of this proposition has the same form as the proof of the previous theorem. We set up a table of strategies: Today At Time T Action Cash Flow S T < X S T ≥ X Short stock + S 0 − S T − S T Lend PV of X − Xe − rT + X + X Write put + P 0 − ( X − S T ) 0 Total P 0 + S 0 − Xe rT 0 X − S T < 0 Since the strategy has only negative or zero payoffs in the future, it must have a positive cash flow today, so that we can conclude that: PX e SrT 00 0 −+ ≥− 376 Chapter 15 Combined with the fact that in no case can a put value be negative, this proves the proposition. proposition 4 ( put - call parity ) Let C 0 be the price of a European call with exercise price X written on a stock whose current price is S 0 . Let P 0 be the price of a European put on the same stock with the same exercise price X . Suppose both put and call have exercise date T , and suppose that the continu- ously compounded interest rate is r . Then: CX e P SrT 00 0 += +− Proof of Proposition 4 The proof is similar in style to that of the two previ- ous propositions. We consider a combination of the four assets (the put, the call, the stock, and a bond), and show that the pricing relation must hold: Today At Time T Action Cash Flow S T < X S T ≥ X Buy call − C 0 0 + S T − X Buy a bond with payoff X at time T − Xe − rT X X Write a put + P 0 − ( X − S T )0 Short one share of the stock + S 0 − S T − S T Total − C 0 − Xe − rT + P 0 + S 0 00 Since the strategy has future payoffs which are zero no matter what happens to the price of the stock, it follows that the initial cash flow of the strategy must also be zero. 6 This means that: CX e P SrT 00 0 0 +− − =− which proves the proposition. 6. This is a fundamental fact of finance: If a financial strategy has future payoffs which are identi- cally zero, then its current cost must also be zero. Likewise, if a financial strategy has future payoffs which are non-negative, then its time-zero payoff must be negative (that is, it must cost something). 377 Introduction to Options Put-call parity states that the stock price S 0 , the price of a call C 0 with exer- cise price X and the price of a put P 0 with exercise price X , are simultaneously determined with the interest rate r . Following is an illustration which uses the call price C 0 , the option exercise price X , the current stock price S 0 , and the interest rate r to compute the price of a put with exercise price X and time to maturity T : 1 2 3 4 5 6 7 8 9C B A Current stock price, S 0 55 Option time to maturity, T 0.5 Option exercise price, X 60 % 0 1 r , e t a r t s e r e t n I Call price, C 0 3 Put price, P 0 5.0738 <-- =B6+B4*EXP(-B5*B3)-B2PUT-CALL PARITY This spreadsheet uses put-call parity to derive the put price P 0 from the call price C0, the interest rate r, the time to maturity T, and the exercise price X. proposition 5 ( call option price convexity ) Consider three European calls, all written on the same non-dividend paying stock and with the same expiration date T . We suppose that the exercise prices on the calls are X 1 , X 2 , and X 3 , and denote the associated call prices by C 1 , C 2 , and C 3 . We further assume that XXX 213 2=+ . Then CCC 213 2<+ It follows that the call option price is a convex function of the exercise price. 378 Chapter 15 Proof of Proposition 6 To prove the proposition, we consider the following strategy of three calls with exercise prices X 1 < X 2 < X 3 . We suppose one call each with exercise price X 1 and X 3 is purchased and that two calls with exercise price X 2 are written. Such a strategy is commonly called a “butterfly.” 7 At Time 0 At Time T Action Cash Flow S T < X 1 X 1 ≤ S T < X 2 X 2 ≤ S T < X 3 X 3 ≤ S T Buy call with exercise price X 1 − C 1 0 S T − X 1 S T − X 1 S T − X 1 Buy call with exercise price X 3 − C 3 00 0 S T − X 3 Write two calls with exercise price X 2 + 2 C 2 00 − 2 ( S T − X 2 ) − 2 ( S T − X 2 ) Total 2 C 2 − C 1 − C 3 0 S T − X 1 ≥ 0 2X 2 − X 1 − S T = X 3 − S T > 0 0 Since the payoffs in the future are all non-negative (with a positive probabil- ity of being positive, it follows that the initial cash flow from the position must be negative: 202213 213CCC CCC−−< ⇒ <+ This proves the proposition. (Note that the assumption that XXX 213 2=+ i s made for convenience and does not affect the generality of the argument.) Without proof we state a similar proposition for puts: proposition 6 ( put price convexity ) Consider three European puts, all written on the same non-dividend paying stock and with the same expiration date T . We suppose that the exercise prices on the calls are X 1 , X 2 , and X 3 , and denote the associated put prices by P 1 , P 2 , and P 3 . We further assume that XXX 213 2=+ . Then the put price is a convex function of the exercise price: 7. Any strategy of three options (calls or puts) with three exercise prices in which one option each of the extreme exercise price is either bought or written and in which two options with the middle exercise price are held in the opposite position is called a butterfly. 379 Introduction to Options PPP 213 2<+ Without proof we state a similar proposition for a butterfly composed of puts. proposition 7 ( call option bounds with a known future dividend ) Consider a call with exercise price X and maturity date T . Suppose that at some time t < T , the stock will, with certainty, pay a dividend D . Then the lower bound on the call option price is given by: CS D e X ert rT 00 0 ≥− −−−max( , ) Proof of Proposition 7 The proof involves only a minor modification of the proof of Proposition 1. Today Time t At Time T Action Cash Flow S T < X S T ≥ X Buy stock − S 0 + D + S T + S T Borrow the PV of the dividend D + De − rT − D Borrow PV of X + Xe − rT − X − X Write call + C 0 0 − ( S T − X ) Total − S 0 + De − rt + Xe − rT + C 0 0 S T − X < 0 0 This proves the proposition. 15.7 Summary This chapter summarizes the basic definitions and features of options. It is, however, by no means an adequate introduction to these complex securities for those with no preknowledge. To decipher the mysteries of options, we recommend the introductory chapters of a good option text. 380 Chapter 15 Exercises 1. When you looked at the newspaper quotes for options on ABC stock, you saw that a February call option with X = 37.5 is priced at 6.375, whereas the April call option with the same exercise price is priced at 6. Can you devise an arbitrage out of these prices? Do you have an explanation for the newspaper quotes? 2. An American call option is written on a stock whose price today is S = 50. The exercise price of the call is X = 45. a. If the call price is 2, explain how you would use arbitrage to make an immediate profit. b. If the option is exercisable at time T = 1 year and if the interest rate is 10%, what is the minimum price of the option? Use Proposition 1. 3. A European call option is written on a stock whose current price S = 80. The exercise price X = 80, the interest rate r = 8%, and the time to option exercise T = 1. The stock is assumed to pay a dividend of 3 at time t = ½. Use Proposition 7 to determine the minimum price of the call option. 4. A put with an exercise price of 50 has a price of 6 and a call on the same stock with an exercise price of 60 has a price of 10. Both put and call have the same expiration date. On the same set of axes, draw the profit diagram for: a. One put bought and one call bought. b. Two puts bought and one call bought. c. Three puts bought and one call bought. d. All three lines cross each other for the same value of S T . Derive this value. 5. Consider the following two calls: • Both calls are written on shares of ABC Corp. whose current share price is $100. ABC does not pay any dividends. • Both calls have one year to maturity. • One call has X 1 = 90 and has price of 30; the second call has X 2 = 100 and has price of 20. • The riskless, continuously compounded interest rate is 10%. By designing a spread (i.e., buying one call and writing another) position, show that the difference between the two call prices is too large and that a riskless arbitrage exists. 6. A share of ABC Corp. sells for $95. A call on the share with exercise price $90 sells for $8. a. Graph the profit pattern from buying one share and one call on the share. b. Graph the profit pattern from buying one share and two calls. c. Consider the profit pattern from buying one share and calls. At which share price do all of the profit lines cross? 7. A European call with a maturity of 6 months and exercise price X = 80 is written on a stock whose current price is 85 is selling for $12.00; a European put written on the same stock with the same maturity and with the same exercise price is selling for $5.00. If the annual interest rate (continuously compounded) is 10%, construct an arbitrage from this situation. 381 Introduction to Options 8. Prove Proposition 6. Then solve the following problem: Three puts on shares of XYZ with the same expiration date are selling at the following prices: Exercise price 40: 6 Exercise price 50: 4 Exercise price 60: 1 Show an arbitrage strategy which allows you to profit from these prices and prove that it works. 9. The current stock price of ABC Corp. is 50. Prices for six-month calls on ABC are given in the table below. Draw a profit diagram of the following strategy: Buy one 40 call, write two 50 calls, buy one 60 call, and write two 70 calls. Call Price 40 16.5 50 9.560 4.570 2 10. Consider the following option strategy, which consists only of calls: Exercise Price Bought/Written? Number?Price per Call Option 20 1 written 45 30 2 bought 3340 1 written 2250 1 bought 1860 2 written 1770 1 bought 16 a. Draw the profit diagram for this strategy. b. The prices given include one violation of an arbitrage condition. Identify this violation and explain. 11. A share of Formila Corp. is currently trading at $38.50, and a 1-year call option on Formila with X = $40 is trading at $3. The risk-free interest rate is 4.5%. a. What should be the price of a 1-year put option on the stock with X = $40? Why? b. If the price of a put is $2, construct an arbitrage strategy. c. If the price of a put is $4, construct an arbitrage strategy. 1 6 The Binomial Option Pricing Model 16.1 Overview Next to the Black-Scholes model (discussed in Chapter 17), the binomial option pricing model is the most widely used option pricing model. It has many advantages: It is a simple model, which—in addition to giving many insights into option pricing—is easily programmed and adapted to numerous, and often quite complicated, option pricing problems. When extended to many periods, the binomial model becomes one of the most powerful ways of valuing securities like options whose payoffs are contingent on the market prices of other assets. The binomial model depends on using state prices to compute the values of risky assets. When the state pricing principles underlying the model are under-stood, we gain deeper insight into the economics of contingent asset pricing. In this chapter, which illustrates the simple uses of the binomial model, we devote a considerable amount of space to deriving and using state prices. In Chapters 29 and 30 we return to the binomial model and use it in the Monte Carlo pricing of contingent securities. 16.2 Two-Date Binomial Pricing To illustrate the use of the binomial model, we start with the following very simple example: • There is one period and two dates, date 0 = today and date 1 = one year from now. • There are two “fundamental” assets: A stock and a bond. There is also a derivative asset, a call option written on the stock. • The stock price today is $50 and at date 1 will either go up by 10% or go down by 3%. • The one-period interest rate is 6%. • The call option matures at date 1 and has exercise price X = $50. Here is a picture from a spreadsheet which incorporates this model. Notice that in cells B2, B3, and B6 we have used values for 1 plus the 10% up move, 1 plus the − 3% down move, and 1 plus the 6% interest. We use capital letters U , D , and R to denote these values. 1 1. Should there be a need to distinguish between 1.10—1 plus the 10% up move of the stock—and 10% (the up move itself), we will use U for the former and lowercase u for the latter. 384 Chapter 16 We wish to price the call option. We do this by showing that there is a combination of the bonds and stocks which exactly replicates the call option ’ s payoffs . To show this, we use some basic linear algebra; suppose we find A shares of the stock and B bonds such that: 55 1 06 5 48 5 1 06 0AB AB+= +=. .. This system of equations solves to give A BA=−= =−=−5 55 48 50 7692 04 8 5 10 635 1959.. . .. Thus purchasing 0.77 of a share of the stock and borrowing $35.20 at 6% for one period will give payoffs of $5 if the stock price goes up and $0 if the stock price goes down—the payoffs of the call option. It follows that the price of the option must be equal to the cost of replicating its payoffs; that is, Call option price =∗ − −0 7692 50 35 1959 3 2656.$ $ . $ . This logic is called “pricing by arbitrage”: If two assets or sets of assets (in our case—the call option and the portfolio of 0.77 of the stock and − $35.20 of the bonds) have the same payoffs, they must have the same market price. 1 2 3 4 5 67 8 9 10 11 1213 14 1516 17AB C D EF G H I J Up, U 1.10 Down, D 0.97 Initial stock price 50.00 Interest rate, R 1.06Exercise price 50.00 e c i r p d n o B e c i r p k c o t S 6 $ B $ * 1 1 $ G $ = - - < 6 0 . 1 2 B * 1 1 $ B $ = - - < 0 0 . 5 5 0 0 . 1 0 0 . 0 5 6 $ B $ * 1 1 $ G $ = - - < 6 0 . 1 3 B * 1 1 $ B $ = - - < 0 5 . 8 4 Call option 5.00 <-- =MAX(D10-$B$7,0) ??? 0.00 <-- =MAX(D12-$B$7,0)BINOMIAL OPTION PRICING IN A ONE-PERIOD MODEL 385 The Binomial Option Pricing Model Applying the same logic to a put gives the put price as 0.4354: 19 2021 22 23AB C D EF G Solving the portfolio problem: A shares + B bonds combine to give option payoffs A 0.7692 <-- =D15/(D10-D12) B -35.1959 <-- =-D12*B20/B6 Call price 3.2656 <-- =B20*B5+B21 1 2 3 4 5 6 78 9 10 11 12 13 1415 16 17AB C D E F G G Up, U 1.10 Down, D 0.97 Solving the put price 55*A+1.06*B=0 5 . 1 = B * 6 0 . 1 + A * 5 . 8 4 0 0 . 0 5 e c i r p k c o t s l a i t i n I Interest rate, R 1.06 ) 5 . 8 4 - 5 5 ( / 5 . 1 - = A 0 0 . 0 5 e c i r p e s i c r e x E Put option B=-55*A/1.06 0.00 <-- =MAX($B$7-B5*B2,0) ??? 1.50 <-- =MAX($B$7-B5*B3,0) Solving the portfolio problem: A shares + B bonds combine to give option payoffs A -0.2308 <-- =-D11/(B5*(B2-B3)) B 11.9739 <-- =-B5*B2*B14/B6 Put price 0.4354 <-- =B14*B5+B15BINOMIAL PUT OPTION PRICING IN A ONE-PERIOD MODEL In succeeding sections we show that this simple arbitrage argument can be extended to multiple periods. But in the meantime we confine ourselves in the next section to generalizing the logic. 16.3 State Prices There is actually a simpler (and more general) way to solve this problem: Viewed from today, there are only two possibilities for next period: Either the stock price goes up or it goes down. Think about the market determining a price q U for $1 in the “up” state of the world and a price q D for $1 in the “down” state of the world. Then both the bond and the stock have to be priced using these state prices : 386 Chapter 16 q S Uq S DS q Uq D qR qRUD U D UD∗∗ + ∗∗ = ⇒ + = ∗+ ∗=1 1 The state prices are thus an illustration of the linear pricing principle: If the stock price can move up in one period by a factor U and down by a factor D , and if 1 plus the one-period interest rate is R , then any other asset will be priced by discounting its payoff in the “up” state by q U and by discounting its payoff in the “down” state by q D . The two equations above solve to give: qRD RU DqUR RU DUD=− −=− − (),() In our case these state prices are given by: 1 2 3 4 56 7 8 9 10 11 12C B A 0 1 . 1 U , p U 7 9 . 0 D , n w o D 6 0 . 1 R , e t a r t s e r e t n I State prices qU 0.6531 <-- =(B4-B3)/(B4*(B2-B3)) qD 0.2903 <-- =(B2-B4)/(B4*(B2-B3)) Pricing the stock: 1 = q U*U+q D*D? 1 <-- =B7*B2+B8*B3 Pricing the bond: 1/R = q U+qD ? 1.06 <-- =1/(B7+B8)Check: Confirm that state prices actually price the stock and the bondDERIVING THE STATE PRICES In rows 11 and 12 we check that the state prices indeed give back the interest rate and the stock price. We can now use the state prices to price the call and the put on the stock and also to establish that put-call parity holds. The call and the put options should be priced by: Cq S UX q S D X Pq XS U q XS UD UD=∗ − +∗ − =− ∗ +− ∗max( , ) max( , ) max( , ) max(000 D D,)0 or if priced by put call parity PCP V X S=+ − () 387 The Binomial Option Pricing Model In a spreadsheet: 1 2 3 4 5 6 78 9 10 11 12 13 14 15 16 17 18 19 20C B A 0 1 . 1 U , p U 7 9 . 0 D , n w o D 6 0 . 1 R , e t a r t s e r e t n I 0 0 . 0 5 S , e c i r p k c o t s l a i t i n I 0 0 . 0 5 X , e c i r p e s i c r e x e n o i t p O State prices qU 0.6531 <-- =(B4-B3)/(B4*(B2-B3)) qD 0.2903 <-- =(B2-B4)/(B4*(B2-B3)) Pricing the call and the put ) 0 , 6 B - 3 B * 5 B ( X A M * 0 1 B + ) 0 , 6 B - 2 B * 5 B ( X A M * 9 B = - - < 6 5 6 2 . 3 e c i r p l l a C 6 B ( X A M * 9 B = - - < 4 5 3 4 . 0 e c i r p t u P -B5*B2,0)+B10*MAX(B6-B5*B3,0) Put-call parity 4 1 B + 5 B = - - < 4 5 3 4 . 0 5 t u p + k c o t S 4 B / 6 B + 3 1 B = - - < 4 5 3 4 . 0 5 ) X ( V P + l l a CBINOMIAL OPTION PRICING WITH STATE PRICES IN A ONE-PERIOD (TWO-DATE) MODEL Note about PV(X) in put-call parity: In the continuous-time framework (the standard Black-Scholes framework), PV(X) = X*Exp(-r*T). Because the framework here is discrete time, PV(X) is also discrete-time: PV(X)=X/(1+r)=X/R. The formulas we use (with S = 50, X = 50 , U = 1.10, D = 0.97 , R = 1.06) are: Cq S UX q S D X UD=∗ − +∗ − =∗ +∗ =max( , ) max( , ) .. .00 0 6531 5 0 2903 0 3 2657 for the call, and Pq XS U q XS D UD=− ∗ +− ∗ =∗ − +max( , ) max( , ) . max( , ) .00 0 6531 50 55 0 0 2903 ∗∗−=max( . , ) . 50 48 5 0 0 4354 for the put. As expected—the put-call parity theorem holds for this particular put and call (cells B17:B18): PS CX R+= + = + = + 0 4354 50 3 2750 10 6... 388 Chapter 16 State Prices or Risk-Neutral Prices? Multiplying the state prices by 1 plus the interest rate, R , gives the risk-neutral prices : π U = q U R , π D = q D R . The risk-neutral prices look like a probability distribution of the states, since they sum to 1: ππUD U D qR qRRD RU DRUR RU DR += + =− −+− −=() ()1 Furthermore, there is a fundamental equivalence of pricing by the risk-neutral prices and pricing by the state prices. Suppose an asset has state-dependent payoffs X U in the “up” state and X D in the “down” state of a 2-date model. Then the date 0 price of the asset using the state prices is q U X U + q D X D and the date 0 price of the asset using the risk-neutral prices is the discounted expected asset payoff, where the expectation is computed using the risk-neutral prices as if they are the actual state probabilities: ππUU DDXX RExpected asset payoff using risk neutral prices r+=+“” - 1 ==+qX qXUU DD Pricing with state prices or pricing with risk-neutral prices is, of course, the same. This author prefers to use state prices, but many researchers are more comfortable using the pseudo-probabilities of the risk-neutral prices and then discounting the “expected” payoffs. XU Pricing by state prices qU*XU+qD*XD XD XU Pricing by risk-neutral prices (pU*XU+pD*XD)/R XDEQUIVALENCE OF PRICING BY STATE PRICES AND RISK-NEUTRAL PRICES Relation of risk-neutral to state prices: pU=qU*R, pD = q D*R 389 The Binomial Option Pricing Model To drive home the equivalence between state prices and risk-neutral prices, we close this subsection with a numerical example: 1 2 345 6 78 9 10 11 12 13 14 15 16 1718 19 202122C B A 0 1 . 1 U , p U 7 9 . 0 D , n w o D 6 0 . 1 R , e t a r t s e r e t n I 0 0 . 0 5 S , e c i r p k c o t s l a i t i n I 0 0 . 0 5 X , e c i r p e s i c r e x e n o i t p O State prices qU 0.6531 <-- =(B4-B3)/(B4*(B2-B3)) qD 0.2903 <-- =(B2-B4)/(B4*(B2-B3)) Risk-neutral prices πU = q U*R 0.6923 <-- =B9*$B$4 πD = q D*R 0.3077 <-- =B10*$B$4 Pricing the call and the put using state prices ) 0 , 6 B - 3 B * 5 B ( X A M * 0 1 B + ) 0 , 6 B - 2 B * 5 B ( X A M * 9 B = - - < 6 5 6 2 . 3 e c i r p l l a C ) 0 , 3 B * 5 B - 6 B ( X A M * 0 1 B + ) 0 , 2 B * 5 B - 6 B ( X A M * 9 B = - - < 4 5 3 4 . 0 e c i r p t u P Pricing the call and the put using risk-neutral prices 4 B / ) ) 0 , 6 B - 3 B * 5 B ( X A M * 4 1 B + ) 0 , 6 B - 2 B * 5 B ( X A M * 3 1 B ( = - - < 6 5 6 2 . 3 e c i r p l l a C 4 B / ) ) 0 , 3 B * 5 B - 6 B ( X A M * 4 1 B + ) 0 , 2 B * 5 B - 6 B ( X A M * 3 1 B ( = - - < 4 5 3 4 . 0 e c i r p t u PRISK-NEUTRAL PRICES OR STATE PRICES? 16.4 The Multi-Period Binomial Model The binomial model can easily be extended to more than one period. Consider, for example, a two-period (three-date) binomial model that has the following characteristics: • In each period the stock price goes up by 10% or down by − 3% from what it was in the previous period. This means that U = 1.10, D = 0.97. • In each period the interest rate is 6%, so that R = 1.06. Because U , D , and R are the same in each period, qRD RU DqUR RU DUD=− −==− −=().,(). 0 6531 0 2903 390 Chapter 16 We can now use these state prices to price a call option written on the stock after two periods. As before, we assume that the stock price is $50 initially and that the call exercise price is X = 50 after two periods. This gives the fol- lowing picture: e c i r p d n o B e c i r p k c o t S 6 3 2 1 . 1 0 0 0 5 . 0 6 0 0 6 0 . 1 0 0 0 0 . 5 5 6 3 2 1 . 1 0 0 . 1 0 0 5 3 . 3 5 0 0 0 0 . 0 5 0 0 6 0 . 1 0 0 0 5 . 8 4 6 3 2 1 . 1 0 5 4 0 . 7 4 Date 0 Date 1 Date 2 Call option price 10.5000 7.8302 0 0 5 3 . 3 2 9 4 7 . 5 2.1880 0.0000 How was the call option price of 5.7492 determined? To do this, we go back-ward, starting at period two: At date two : At the end of two periods the stock price is either $60.50 (cor- responding to two “up” movements in the price), $53.35 (one “up” and one “down” movement), or $47.05 (two “down” movements in the price). Given the exercise price of X = 50, this means that the terminal option payoff in period 2 is $10.50, $3.35, or $0. At date one : At date one, there are two possibilities: Either we have reached an “up” state, in which case the current stock price is $55 and the option will pay off $10.50 or $3.35 in the next period: 10.5000 ???? 3.3500 We use the state prices of q u = 0.6531, q d = 0.2903 to price the option at this state: Option price at up state date “” , . . . . . 1 0 6531 10 50 0 2903 3 35 7 83=∗ +∗ = 0 02 The alternative possibility is that we ’ re in the “down” state of period one: 391 The Binomial Option Pricing Model 3.3500 ???? 0.0000 Using the same state prices (which, after all, depend only on the “up” and “down” movements of the stock price and the interest rate), we get: Option price at down state date 1 “” , . .. . =∗ +∗ =0 6531 3 35 0 2903 0 2 1880 At date 0 : Going backward in this way, we ’ ve now filled in the following picture: 10.5000 7.8302 0 0 5 3 . 3 ? ? ? ? 2.1880 0.0000 Thus at period 0 the buyer of an option owns a security which will be worth $7.83 if the underlying stock has an “up” movement in its return and which will be worth $2.19 if the stock has a “down” movement in its return. We can again use the state prices to value this option: Option price at date 0 =∗ +∗ =0 6531 7 830 0 2903 2 188 5 749.. .. . 1 2 3 4 5 6 7 8 9 10 11 121314 15 16 17 18 19 20 21 22 23 24AB C D E F G H I J K 0 1 . 1 U , p U 7 9 . 0 D , n w o D State prices Interest rate, R 1.06 qU 0.6531 <-- =(B4-B3)/(B4*(B2-B3)) Initial stock price, S 50.00 qD 0.2903 <-- =(B2-B4)/(B4*(B2-B3)) Option exercise price, X 50.00 e c i r p d n o B e c i r p k c o t S 6 3 2 1 . 1 0 0 0 5 . 0 6 0 0 6 0 . 1 0 0 0 0 . 5 5 6 3 2 1 . 1 0 0 . 1 0 0 5 3 . 3 5 0 0 0 0 . 0 5 0 0 6 0 . 1 0 0 0 5 . 8 4 6 3 2 1 . 1 0 5 4 0 . 7 4 Call option price =qU*E18+q D*E20 10.5000 <-- =MAX(E9-$B$5,0) 7.8302 ) 0 , 5 $ B $ - 1 1 E ( X A M = - - < 0 0 5 3 . 3 2 9 4 7 . 5 2.1880 =q U*C19+q D*C21 0.0000 <-- =MAX(E13-$B$5,0) =qU*E20+q D*E22BINOMIAL OPTION PRICING WITH STATE PRICES IN A TWO-PERIOD (THREE-DATE) MODEL 392 Chapter 16 Extending the Binomial Pricing Model to Many Periods It is clear that the logic of the above example can be extended to many periods. Here ’ s another Excel graphic showing a 5-date model using the same “up” and “down” parameters as before: 73.2050 Stock price 66.5500 5 3 5 5 . 4 6 0 0 0 5 . 0 6 0 5 8 6 . 8 5 0 0 0 0 . 5 5 5 4 2 9 . 6 5 0 0 5 3 . 3 5 0 0 0 0 . 0 5 5 9 4 7 . 1 5 0 0 0 5 . 8 4 0 7 9 1 . 0 5 0 5 4 0 . 7 4 45.6337 44.2646 23.2050 Call price 19.3802 5 3 5 5 . 4 1 2 0 0 0 . 6 1 2 5 1 5 . 1 1 0 9 1 0 . 3 1 5 4 2 9 . 6 2 0 5 8 . 8 0 6 3 4 . 0 1 7 9 7 5 . 4 3 9 5 6 . 6 0 7 9 1 . 0 4 8 2 0 . 3 0.1287 0.0000 Date 0 Date 1 Date 2 Date 3 Date 41.2625 Bond price 1.1910 5 2 6 2 . 1 6 3 2 1 . 1 0 1 9 1 . 1 0 0 6 0 . 1 5 2 6 2 . 1 6 3 2 1 . 1 0 0 0 0 . 1 0 1 9 1 . 1 0 0 6 0 . 1 5 2 6 2 . 1 6 3 2 1 . 1 1.1910 1.2625 393 The Binomial Option Pricing Model Do You Really Have to Price Everything Backward? The answer is “no.” There ’ s no necessity to price the call price payoffs “backward” at each node back from the terminal date, as long as the call is European . 2 It is enough to price each of the terminal payoffs by the state prices, providing you count properly the number of paths to each terminal node. Here ’ s an illustration, using the same example: 2. When we discuss American options in section 16.5 we will see that backward pricing is critical. 1 2 3 4 5 6 78 9 10 111213 14 15161718 19 20AB C D E F G H 0 1 . 1 U , p U 7 9 . 0 D , n w o D State prices 6 0 . 1 R , e t a r t s e r e t n I qU 0.6531 <-- =(B4-B3)/(B4*(B2-B3)) Initial stock price, S 50.00 qD 0.2903 <-- =(B2-B4)/(B4*(B2-B3)) Option exercise price, X 50.00 Number of \"up\" steps at terminal dateNumber of \"down\" steps at terminal dateTerminal stock price = S*U^(# up) *D^(# down)Option payoff at terminal stateState price for terminal date = q U^(# up) *qD^(# down)Number of paths to terminal stateValue =payoff*state price*#paths 4 0 73.2050 23.2050 0.1820 1 4.2224 3 1 64.5535 14.5535 0.0809 4 4.7078 2 2 56.9245 6.9245 0.0359 6 1.4933 1 3 50.1970 0.1970 0.0160 4 0.0126 0 4 44.2646 0.0000 0.0071 1 0.0000 Call price 10.4360 <-- =SUM(G10:G14) Put price 0.0407 <-- =G15+B6/B4^4-B5 NotesThere are 5 dates in this model (0, 1, ... , 5) but only 4 periods and thus only 4 possible \"up\" or \"down\" steps.The put price in cell G16 is computed using put-call parity: put = call + PV(X) - stock BINOMIAL OPTION PRICING WITH STATE PRICES IN A FOUR-PERIOD (FIVE-DATE) MODEL Here is an explanation for the table above: For each terminal option payoff, we consider: 394 Chapter 16 How was this terminal payoff reached? How many “up” steps did the stock make and how many “down” steps did it make?Example: The terminal payoff of 14.5535 arises when the stock price is 64.5535. This happens when the stock price goes up 3 times and down once. What is the price per dollar of the payoff in the particular state? State price q qUupsteps Ddownsteps=## Example: The value at time 0 of the terminal payoff considered above is 0.6531 3 *0.2903 1 = 0.0809. How many paths are there with the same terminal payoff?The answer is given by the binomial coefficient Number of periods Number of up steps “”⎛ ⎝⎜⎞⎠⎟ Example: There are 4 34⎛ ⎝⎜⎞⎠⎟= paths which give the terminal stock price of 64.5535. The Excel function Combin(4,3) gives this binomial coefficient. What is the value at time 0 of a particular terminal payoff?The answer is the product of the payoff times the price times the number of paths.Example: 14.5535*0.0809*4 = 4.7078. What is the value at time 0 of the option?The sum of the values of each payoff.Total value: 10.4360. This is the multi-period call option value in the five date (four-period) binomial model. European puts can be priced either by using the logic above or—as in cell G16 above—by using put-call parity. To recapitulate: The price of a European call option in a binomial model with n periods is given by: 395 The Binomial Option Pricing Model Call pricen iqq S U D X Put pricenUi Dni i ni in =⎛ ⎝⎜⎞⎠⎟ ∗− =−− =∑ max( , ) 0 0 i iq q X S U D Direct pricing Call priUi Dni i ni in⎛⎝⎜⎞⎠⎟ −∗ −− =∑ max( , ) 0 0 cceX RS Using put call parityn+−⎧ ⎨⎪⎪ ⎩⎪ ⎪- In section 16.7 we implement these formulas in VBA. 16.5 Pricing American Options Using the Binomial Pricing Model We can use the binomial pricing model to calculate the prices of American options as well as European options. We reconsider the basic model above, in which U p = 1.10, Down = 0.97, R = 1.06, S = 50, X = 50. We examine the three-date version of the model. Recall from Chapter 15 that an American call option on a non-dividend-paying stock has the same value as a European call option. It is thus more interesting to start with the pricing of an American put. The payoff patterns for the stock and the bond have been given above, and it remains only to consider the payoff patterns for a put option with X = 50. We reference the states of the world by using the following labels: UU U UD orDU D DDState labels 0 Put Payoffs at Date Three Here are the values of the stock and the date three put payoffs: Stock price American put payoffs 0 0 0 0 . 0 0 0 0 5 . 0 6 ? ? ? ? 0 0 0 0 . 5 5 0 0 0 0 . 0 ? ? ? ? 0 0 5 3 . 3 5 0 0 0 0 . 0 5 ? ? ? ? 0 0 0 5 . 8 4 0 5 5 9 . 2 0 5 4 0 . 7 4 396 Chapter 16 At date two, the holder of an American put can choose whether to hold the put or to exercise it. We now have the following value function: Put value at date 2 state UPut value if exercised X S qU U==− ()maxmax , 0 ∗∗+ ∗⎧⎨⎩ Put payoff in state UU q Put payoff in state UD D A similar function holds for the put value in state d at date two. The resulting tree now looks like: American put payoffs 0.0000 0.0000 0 0 0 0 . 0 ? ? ? ? 1.5000 2.9550 Here ’ s the explanation: • In state U , the put is valueless. When the stock price is $55, it is not worth- while to early-exercise the put, since max( X − S U , 0) = max(50 − 55, 0) = 0. On the other hand, since the future put payoffs from state U are zero, state- dependent present value of these future payoffs (the second line in the previous formula) is also zero. • In state D , on the other hand, the holder of the put gets max(50 − 48.5, 0) = 1.5 if he exercises the put; however, if he holds the put without exercise, its market value is the state-dependent value of the future payoffs: qq UD∗+ ∗ = ∗+ ∗ =0 2 9550 0 6531 0 0 2903 2 9550 0 8578 .. . .. It is clearly preferable to exercise the put in this state rather than to hold onto it. At date 0, a similar value function recurs: Put value at date 0Put value if exercised X S q Put pa U==− () ∗maxmax , 00 yyoff in state U q Put payoff in state D D+∗⎧⎨⎩ 397 The Binomial Option Pricing Model The spreadsheet is given below: 1 2 3 4 5 6 789 10111213141516 17 18 19 20 212223 24 25 26 27 28 29303132333435AB C D E F G H I J K 0 1 . 1 U , p U 7 9 . 0 D , n w o D State prices Interest rate, R 1.06 qU 0.6531 <-- =(B4-B3)/(B4*(B2-B3)) Initial stock price, S 50.00 qD 0.2903 <-- =(B2-B4)/(B4*(B2-B3)) Option exercise price, X 50.00 e c i r p d n o B e c i r p k c o t S 6 3 2 1 . 1 0 0 0 5 . 0 6 0 0 6 0 . 1 0 0 0 0 . 5 5 6 3 2 1 . 1 0 0 0 0 . 1 0 0 5 3 . 3 5 0 0 0 0 . 0 5 0 0 6 0 . 1 0 0 0 5 . 8 4 6 3 2 1 . 1 0 5 4 0 . 7 4 American put option =MAX(MAX(X-S*U,0),q U*put_payoff UU+qD*put_payoff UD) 0.0000 0 0 0 0 0 . 0 4 5 3 4 . 0 1.5 2.9550 =MAX(MAX(X-S*D,0),q U*put_payoff UD+qD*put_payoff DD) =MAX(MAX(X-S,0),q U*put_value U+qD*put_value D) European put option 0.0000 0 0 0 0 0 . 0 0 9 4 2 . 0 0.8578 2.9550AMERICAN PUT PRICING IN A TWO-PERIOD MODEL We can use the same logic to price an American call option, though—fol- lowing Proposition 2 of Chapter 15, we know that the value of an American and a European call should coincide. And so they do: 398 Chapter 16 1 2 3 4 5 6 789 101112 13 1415161718 19 20 212223 24 25 26 27 28 29 303132333435AB C D E F G H I J K 0 1 . 1 U , p U 7 9 . 0 D , n w o D State prices Interest rate, R 1.06 qU 0.6531 <-- =(B4-B3)/(B4*(B2-B3)) Initial stock price, S 50.00 qD 0.2903 <-- =(B2-B4)/(B4*(B2-B3)) Option exercise price, X 50.00 e c i r p d n o B e c i r p k c o t S 6 3 2 1 . 1 0 0 0 5 . 0 6 0 0 6 0 . 1 0 0 0 0 . 5 5 6 3 2 1 . 1 0 0 0 0 . 1 0 0 5 3 . 3 5 0 0 0 0 . 0 5 0 0 6 0 . 1 0 0 0 5 . 8 4 6 3 2 1 . 1 0 5 4 0 . 7 4 American call option =MAX(MAX(S*U-X,0),q U*call_payoff UU+qD*call_payoff UD) 10.5000 7.8302 0 0 5 3 . 3 2 9 4 7 . 5 2.1880 0.0000 =MAX(MAX(S*D-X,0),q U*call_payoff UD+qD*call_payoff DD) =MAX(MAX(S-X,0),q U*call_value U+qD*call_value D) European call option 10.5000 7.8302 0 0 5 3 . 3 2 9 4 7 . 5 2.1880 0.0000AMERICAN CALL PRICING IN A TWO-PERIOD MODEL 16.6 Programming the Binomial Option Pricing Model in VBA The pricing procedure used in the above examples can easily be programmed using Excel ’ s VBA programming language. In the binomial model the price can move up or down in any time period. If q U is the state price associated with an up move and if q D is the state price associated with a down move, then the binomial European option prices are given by: Binomial Europe an calln iqq S U D XUi Dni i ni in =⎛ ⎝⎜⎞⎠⎟ ∗− −− =max( , ) 0 0∑ ∑ =⎛⎝⎜⎞⎠⎟ −∗ −− = Binomial European putn iqq X S U DUi Dni i ni imax( , ) 0 0n n or by put call parity∑⎧ ⎨⎪ ⎩⎪- 399 The Binomial Option Pricing Model where U is an up move, R is a down move in the stock price, and n i⎛ ⎝⎜⎞⎠⎟ is the binomial coefficient (the number of up moves in n total moves: n in ini⎛ ⎝⎜⎞⎠⎟=− ()! !! We use Excel ’ s Combin(n,i) to give values for the binomial coefficients. Here are two VBA functions which compute the value of binomial European calls and puts. The function Binomial_eur_put uses put-call parity to price the put: Function Binomial_eur_call(Up, Down, Interest, _ Stock, Exercise, Periods) q_up = (Interest - Down) / _ (Interest * (Up - Down)) q_down = 1 / Interest - q_up Binomial_eur_call = 0 For Index = 0 To Periods Binomial_eur_call = Binomial_eur_call _ + Application.Combin(Periods, Index) _ * q_up ∧ Index * q_down ∧ (Periods - Index) _ * Application.Max(Stock * Up ∧ Index * Down _ ∧ (Periods - Index) - Exercise, 0) Next Index End Function Function Binomial_eur_put(Up, Down, Interest, _ Stock, Exercise, Periods) Binomial_eur_put = Binomial_eur_call _ (Up, Down, Interest, Stock, Exercise, _ Periods) + Exercise / Interest ∧ Periods - Stock End Function 400 Chapter 16 Implementing this in a spreadsheet, we get for the four-period example of section 16.4: 1 2 34 5 67 8 9 10 11 12 13 14C B A 0 1 . 1 U , p U 7 9 . 0 D , n w o D 6 0 . 1 R , e t a r t s e r e t n I 0 0 . 0 5 S , e c i r p k c o t s l a i t i n I Option exercise price, X 50.00 4 n , s d o i r e p f o r e b m u N ) 7 B , 6 B , 5 B , 4 B , 3 B , 2 B ( l l a c _ r u e _ l a i m o n i b = - - < 0 6 3 4 . 0 1 l l a c n a e p o r u E ) 7 B , 6 B , 5 B , 4 B , 3 B , 2 B ( t u p _ r u e _ l a i m o n i b = - - < 7 0 4 0 . 0 t u p n a e p o r u E 0 1 B + 5 B = - - < 7 0 4 0 . 0 5 t u p + k c o t S 7 B ^ 4 B / 6 B + 9 B = - - < 7 0 4 0 . 0 5 ) X ( V P + l l a CVBA FUNCTIONS FOR CALLS AND PUTS Checking put-call parity American Put Pricing Proposition 2 in section 15.6 states that the price of an American call on a non-dividend-paying stock is the same as that of a European option. The pricing of an American put, however, can be different. The following VBA function below uses a binomial option pricing model like the one from section 16.5 to price American puts: 401 The Binomial Option Pricing Model Function Binomial_amer_put(Up, Down, Interest, _ Stock, Exercise, Periods) q_up = (Interest - Down) / (Interest * _ (Up - Down)) q_down = 1 / Interest - q_up Dim OptionReturnEnd() As Double Dim OptionReturnMiddle() As Double ReDim OptionReturnEnd(Periods + 1) For State = 0 To Periods OptionReturnEnd(State) = Application.Max(Exercise _ - Stock * Up ∧ State * Down ∧ (Periods - State), 0) Next State For Index = Periods - 1 To 0 Step -1 ReDim OptionReturnMiddle(Index) For State = 0 To Index OptionReturnMiddle(State) = Application.Max _ (Exercise - Stock * Up ∧ State * Down ∧ _ (Index - State), _ q_down * OptionReturnEnd(State) + q_up * _ OptionReturnEnd(State + 1)) Next State ReDim OptionReturnEnd(Index) For State = 0 To Index OptionReturnEnd(State) = _ OptionReturnMiddle(State) Next State Next Index Binomial_amer_put = OptionReturnMiddle(0) End Function 402 Chapter 16 In this function we use two arrays, called OptionReturnEnd and OptionReturnMiddle . At each date t , these arrays store the option values for the date itself and the next date— t + 1. Here ’ s an implementation in a spreadsheet, using the two-period, three-date, example from section 16.5: 1 2 3456 7 89 10 11 12C B A 0 1 . 1 U , p U 7 9 . 0 D , n w o D 6 0 . 1 R , e t a r t s e r e t n I 0 0 . 0 5 S , e c i r p k c o t s l a i t i n I Option exercise price, X 50.00 2 n , s d o i r e p f o r e b m u N ) 7 B , 6 B , 5 B , 4 B , 3 B , 2 B ( t u p _ r e m a _ l a i m o n i b = - - < 4 5 3 4 . 0 t u p n a c i r e m A ) 7 B , 6 B , 5 B , 4 B , 3 B , 2 B ( t u p _ r u e _ l a i m o n i b = - - < 0 9 4 2 . 0 t u p n a e p o r u E ) 7 B , 6 B , 5 B , 4 B , 3 B , 2 B ( l l a c _ r e m a _ l a i m o n i b = - - < 2 9 4 7 . 5 l l a c n a c i r e m A ) 7 B , 6 B , 5 B , 4 B , 3 B , 2 B ( l l a c _ r u e _ l a i m o n i b = - - < 2 9 4 7 . 5 l l a c n a e p o r u EVBA FUNCTIONS FOR CALLS AND PUTS The values in cells B9 and B10 are for an American and a European put; these values correspond to those given in section 16.5. In cell B11 we use a function similar to the American put function to price American calls. Unsur-prisingly—given Proposition 2 of Chapter 15—this function gives the same value as the binomial European call pricing function. The VBA function works well for many more periods. 3 In the example below we calculate the value of an American put and call for options which expire at T = 0.75 of a year. The stochastic process which defines the stock returns has mean μ = 15%, and standard deviation σ = 35%. The annual continuously compounded interest rate is r = 6%, and each year is divided into 25 subperiods, so that a single period has length Δ t = 1/25 = 0.04. Given these numbers, Up, Down, and R are defined by Up Down R ett tt r t== =+−eeμσ μσ ΔΔ ΔΔ Δ,, . Here is the pricing of an American and a European call and put: 3. The discussion which follows is perhaps best read after Chapters 17 and 26. 403 The Binomial Option Pricing Model Notice that we have compromised on the number of periods, by using Excel ’ s Round function—since there are 25 divisions of one year and the option ’ s maturity is T = 0.75, the actual number of periods to maturity is 25*0.75, which is not a round number. This procedure works well even for a very large number of periods. In the example below, the option has a maturity T = 0.5, and the basic one-year period is divided into 400 subperiods. Excel easily computes the value of the American put and call, even though a considerable amount of computation is involved: 1 23 4 56 7 8 9 10 11 12 1314 15 16 17 1819 20C B A Mean return per year, μ 15% Standard deviation of annual return, σ 35% % 6 r , e t a r t s e r e t n i l a u n n A 0 0 . 0 5 S , e c i r p k c o t s l a i t i n I Option exercise price, X 50.00 Option exercise date (years) 0.75 Number of divisions of 1 year 25 <-- each year divided into 25 subperiods Δt, the length of one division 0.04 <-- =1/B9 Up move per Δt 1.078963 <-- =EXP(B2*B10+B3*SQRT(B10)) Down move per Δt 0.938005 <-- =EXP(B2*B10-B3*SQRT(B10)) Interest rate per Δ t 1.002403 <-- =EXP(B4*B10) Number of periods until maturity, n 19 <-- =ROUND(B8*B9,0) ) 5 1 B , 7 B , 6 B , 3 1 B , 2 1 B , 1 1 B ( t u p _ r e m a _ l a i m o n i b = - - < 1 1 3 1 . 5 t u p n a c i r e m A ) 5 1 B , 7 B , 6 B , 3 1 B , 2 1 B , 1 1 B ( t u p _ r u e _ l a i m o n i b = - - < 3 1 2 9 . 4 t u p n a e p o r u E ) 5 1 B , 7 B , 6 B , 3 1 B , 2 1 B , 1 1 B ( l l a c _ r e m a _ l a i m o n i b = - - < 1 0 5 1 . 7 l l a c n a c i r e m A ) 5 1 B , 7 B , 6 B , 3 1 B , 2 1 B , 1 1 B ( l l a c _ r u e _ l a i m o n i b = - - < 1 0 5 1 . 7 l l a c n a e p o r u EVBA FUNCTIONS FOR CALLS AND PUTS n divisions per year, Dt = 1/n Up=exp( m*Dt + s*sqrt( Dt)), Down = exp( m*Dt - s*sqrt( Dt)) 404 Chapter 16 16.7 Convergence of Binomial Pricing to the Black-Scholes Price In this section we discuss the convergence of the binomial model to the Black- Scholes pricing formula. The discussion assumes some understanding of log-normality (discussed in Chapter 26) and the Black-Scholes option pricing formula discussed in Chapter 17. So you may want to skip this section and come back to it later. Whenever we consider a finite approximation to the option pricing formulas, we have to use an approximation to the up and the down movements. One widespread translation of the interest rate r and the stock ’ s volatility σ to an “up” or “down” move necessary for the binomial model is: ΔΔ ΔΔtT n Re U up e D down ert tt== =+ = =+ =−/ 11σσ 1 23 4 56 7 8 9 10 11 12 1314 15 16 17 1819 20C B A Mean return per year, μ 15% Standard deviation of annual return, σ 35% % 6 r , e t a r t s e r e t n i l a u n n A 0 0 . 0 5 S , e c i r p k c o t s l a i t i n I Option exercise price, X 50.00 Option exercise date (years) 0.50 Number of divisions of 1 year 400 <-- each year divided into 400 subperiods Δt, the length of one division 0.0025 <-- =1/B9 Up move per Δt 1.018036 <-- =EXP(B2*B10+B3*SQRT(B10)) Down move per Δt 0.983021 <-- =EXP(B2*B10-B3*SQRT(B10)) Interest rate per Δ t 1.00015 <-- =EXP(B4*B10) Number of periods until maturity, n 200 <-- =ROUND(B8*B9,0) ) 5 1 B , 7 B , 6 B , 3 1 B , 2 1 B , 1 1 B ( t u p _ r e m a _ l a i m o n i b = - - < 2 8 8 2 . 4 t u p n a c i r e m A ) 5 1 B , 7 B , 6 B , 3 1 B , 2 1 B , 1 1 B ( t u p _ r u e _ l a i m o n i b = - - < 1 7 4 1 . 4 t u p n a e p o r u E ) 5 1 B , 7 B , 6 B , 3 1 B , 2 1 B , 1 1 B ( l l a c _ r e m a _ l a i m o n i b = - - < 8 4 2 6 . 5 l l a c n a c i r e m A ) 5 1 B , 7 B , 6 B , 3 1 B , 2 1 B , 1 1 B ( l l a c _ r u e _ l a i m o n i b = - - < 8 4 2 6 . 5 l l a c n a e p o r u EVBA FUNCTIONS FOR CALLS AND PUTS n divisions per year, Δt = 1/n Up=exp( μ*Δt + σ*sqrt( Δt)), Down = exp( * Δt - σ μ*sqrt( Δt)) 405 The Binomial Option Pricing Model This approximation guarantees that as Δ t → 0 (i.e., as n → ∞ ), the resulting distribution of the stock returns approaches the lognormal distribution. 4 Here ’ s an implementation of this methodology in a spreadsheet. The function Binomial_Eur_call is the same as that defined above; the function BSCall is the Black-Scholes formula and is defined and discussed in Chapter 17: 1 2 3456789 101112131415C B A e c i r p k c o t s t n e r r u C 0 6 S e c i r p e s i c r e x e n o i t p O 0 5 X ) s r a e y n i ( e s i c r e x e n o i t p o o t e m i T 0 0 0 5 . 0 T e t a r t s e r e t n i l a u n n A % 8 r k c o t s f o s s e n i k s i R % 0 3 a m g i S T f o s n o i s i v i d b u s f o r e b m u N 0 2 n Δt = T/n 0.0250 <-- =B4/B7 ) ) 9 B ( T R Q S * 6 B ( P X E = - - < 6 8 4 0 . 1 U , p U ) ) 9 B ( T R Q S * 6 B - ( P X E = - - < 7 3 5 9 . 0 D , n w o D Interest rate, R 1.0020 <-- =EXP(B5*B9) Binomial European call 12.8055 <-- =binomial_eur_call(B10,B11,B12,B2,B3,B7) Black-Scholes call 12.8226 <-- =BSCall(B2,B3,B4,B5,B6)BLACK-SCHOLES AND BINOMIAL PRICING The binomial model gives a good approximation to the Black-Scholes (cells B14:B15). As the n gets larger, this approximation gets better, though the convergence to the Black-Scholes price is not smooth: 4. An alternative approximation which converges to a lognormal price process is given in the next subsection. See also Omberg (1987), Hull (2006), and Benninga, Steinmetz, and Stroughair (1993). 406 Chapter 16 An Alternative Approximation to the Lognormal The approximation of the first part of this section is not the only approximation which works. If the stock price is lognormally distributed with mean μ and standard deviation σ , we can also use the following approximation: ΔΔ ΔΔ ΔΔtT n Re U up e D down ert tt tt== =+ = =+ =+−/ 11μσ μσ Implementing this in our spreadsheet gives: 1 2 345 6 789 10111213 14 1516 17 18 19 202122 23 242526 27 282930 31 323334 35 363738 39AB C D E F G H I J K e c i r p k c o t s t n e r r u C 0 6 S e c i r p e s i c r e x e n o i t p O 0 5 X ) s r a e y n i ( e s i c r e x e n o i t p o o t e m i T 0 0 0 5 . 0 T e t a r t s e r e t n i l a u n n A % 8 r k c o t s f o s s e n i k s i R % 0 3 a m g i S T f o s n o i s i v i d b u s f o r e b m u N 0 2 n Δt = T/n 0.0250 <-- =B4/B7 ) ) 9 B ( T R Q S * 6 B ( P X E = - - < 6 8 4 0 . 1 U , p U Down, D 0.9537 <-- =EXP(-B6*SQRT(B9)) Interest rate, R 1.0020 <-- =EXP(B5*B9) Binomial European call 12.8055 <-- =binomial_eur_call(B10,B11,B12,B2,B3,B7) Black-Scholes call 12.8226 <-- =BSCall(B2,B3,B4,B5,B6) Data table: Binomial price vs Black-Scholes n, number of subdivisions of TBinomial priceBlack- Scholes price 12.8055 12.8226 <-- Data table headers 10 12.8593 12.8226 50 12.8108 12.8226 75 12.8238 12.8226 100 12.8255 12.8226 125 12.8251 12.8226 150 12.8240 12.8226 175 12.8226 12.8226 200 12.8205 12.8226 225 12.8204 12.8226 250 12.8230 12.8226 275 12.8243 12.8226 300 12.8243 12.8226 325 12.8232 12.8226 350 12.8210 12.8226 375 12.8226 12.8226 400 12.8238 12.8226 425 12.8236 12.8226 450 12.8221 12.8226 475 12.8223 12.8226 500 12.8236 12.8226BLACK-SCHOLES AND BINOMIAL PRICING: CONVERGENCE Convergence of Binomial to Black-Scholes 12.8012.8112.8212.8312.8412.8512.8612.87 0 50 100 150 200 250 300 350 400 450 500n, number of subdivisions of TBinomial price Black-Scholes price 407 The Binomial Option Pricing Model The convergence of this parameterization to Black-Scholes is somewhat less smooth, though the ultimate result is the same. 5 1 2 3 4 5 6 7 89 1011 12 13 14 15 16 17 18 19 20 21 22 23 24 2526 27 28 29 30 31 32 33 34 35 36 37 38 39 40AB C D E F G H I J e c i r p k c o t s t n e r r u C 0 6 S e c i r p e s i c r e x e n o i t p O 0 5 X ) s r a e y n i ( e s i c r e x e n o i t p o o t e m i T 0 0 0 5 . 0 T e t a r t s e r e t n i l a u n n A % 8 r Mean return, μ 12% Sigma, σ 30% Riskiness of stock T f o s n o i s i v i d b u s f o r e b m u N 0 2 n Δt = T/n 0.0250 <-- =B4/B8 ) ) 0 1 B ( T R Q S * 7 B + 0 1 B * 6 B ( P X E = - - < 7 1 5 0 . 1 U , p U Down, D 0.9565 <-- =EXP(B6*B10-B7*SQRT(B10)) Interest rate, R 1.0020 <-- =EXP(B5*B10) Binomial European call 12.8388 <-- =binomial_eur_call(B11,B12,B13,B2,B3,B8) Black-Scholes call 12.8226 <-- =BSCall(B2,B3,B4,B5,B7) Data table: Binomial price vs Black-Scholes n, number of subdivisions of TBinomial priceBlack- Scholes price 12.8388 12.8226 <-- Data table headers 10 12.8158 12.8226 20 12.8388 12.8226 60 12.8271 12.8226 100 12.8237 12.8226 125 12.8191 12.8226 150 12.8162 12.8226 175 12.8184 12.8226 200 12.8194 12.8226 225 12.8196 12.8226 250 12.8192 12.8226 275 12.8195 12.8226 300 12.8210 12.8226 325 12.8222 12.8226 350 12.8230 12.8226 375 12.8234 12.8226 400 12.8233 12.8226 425 12.8227 12.8226 450 12.8216 12.8226 475 12.8211 12.8226 500 12.8225 12.8226BLACK-SCHOLES AND BINOMIAL PRICING: U=exp( mDt + s*sqrt( Dt) ), D=exp( mDt - s*sqrt( Dt) ) 12.81512.82012.82512.83012.83512.840 0 50 100 150 200 250 300 350 400 450 500n, number of subdivisions of TConvergence of Binomial to Black-Scholes Binomial price Black-Scholes price 5. Note that both methods actually converge quite quickly—within several dozen steps the bino- mial is within 0.01 of the Black-Scholes price. 408 Chapter 16 16.8 Using the Binomial Model to Price Employee Stock Options 6 An employee stock option (ESO) is a call option given by a company to its employees as part of their remuneration package. Like all call options, the value of an ESO depends on the current price of the stock, the option ’ s exercise price, and the time until exercise. However, ESOs typically have several special conditions: • The option has a vesting period. During this period, the employee is not allowed to exercise the option. An employee leaving the company before the vesting period forfeits his option. In the model of this section we assume that a typical employee of the company leaves at exit rate e per year. • An employee leaving the company after the vesting period is forced to immediately exercise his option. • For tax reasons, almost all ESOs have exercise prices equal to the stock price on the date of issue. In the model below, adapted from a paper by Hull and White (2004), we assume that an employee will choose to exercise her option when the price of the stock is greater than some multiple m of the ESO ’ s exercise price X. We first present the model ’ s implementation and results and then discuss the VBA program, which gives us these results: 1 23456789 1011121314C B A e c i r p k c o t s t n e r r u C 0 5 S e c i r p e s i c r e x e n o i t p O 0 5 X ) s r a e y n i ( e s i c r e x e n o i t p o o t e m i T 0 0 . 0 1 TVesting period (years) 3.00 e t a r t s e r e t n i l a u n n A % 0 0 . 5 t s e r e t n I k c o t s f o s s e n i k s i R % 5 3 a m g i S Stock dividend rate 2.50% Annual dividend rate on stock % 0 0 . 0 1 e , e t a r t i x E Option exercise multiple, m 3.00 r a e y e n o f o s n o i s i v i d b u s f o r e b m u N 0 5 n Employee stock option value 13.56 <-- =ESO(B2,B3,B4,B5,B6,B7,B8,B9,B10,B11) Black-Scholes call 19.18 <-- =BSCall(B2*EXP(-B8*B4),B3,B4,B6,B7)A BINOMIAL EMPLOYEE STOCK OPTION PRICING MODEL Based on Hull-White (2004) 6. This section has benefited from discussions with Torben V oetmann of Brattle Group and Zvi Wiener of Hebrew University, Jerusalem. 409 The Binomial Option Pricing Model The ESO function in cell B13 depends on the 10 variables listed in cells B2:B11. The screen for this function looks like: In the example above, the employee stock option is given when the stock price is $50. The ESO has exercise price X = $50. The option has a 10-year maturity and a 3-year vesting period. The interest rate is 5% annually, and the stock pays an annual dividend of 2.5% of its stock value. The rate at which employees leave the company is 10% per year. The model assumes that after the vesting period, the employee will choose to exercise his option if the stock price is three times or more the option ’ s exercise price. 7 The binomial model with which the computations in cell B13 were done divides each year into 50 subdivisions. Given these assumptions, the employee stock option is valued at $13.56 (cell B13). A comparable Black-Scholes option on a dividend-paying stock would be valued at $19.18. 8 The ESO Valuation and FASB 123 The American Financial Accounting Standards Board (FASB) and the Inter-national Accounting Standards Board (IASB) agree that executive stock options should be priced using a model of the type explored above, and that the value of options awarded should be accounted for in a firm ’ s net income. If, for example, a firm had issued 1 million options of the type which appear in the previous spreadsheet, we would value these options at $13,564,600. 7. Research cited by Hull and White (2004) shows that the average stock-price-to-exercise-price ratio at which ESO owners exercise their options is between 2.2 and 2.8. 8. We ’ re getting way ahead of ourselves here! The adaptation of Black-Scholes for dividend- paying stock is given in section 17.6. 410 Chapter 16 The VBA Code for the ESO Model Below we give the VBA code for this model. A short discussion follows the code. Function ESO(Stock As Double, X As Double, T As _ Double, Vest As Double, Interest As Double, _ Sigma As Double, Divrate As Double, _ Exitrate As Double, Multiple As Double, _ n As Single) Dim Up As Double, Down As Double, _ R As Double, Div As Double, _ piUp As Double, piDown As Double, _ Delta As Double, i As Integer, j As Integer ReDim Opt(T * n, T * n) ReDim S(T * n, T * n) Up = Exp(Sigma * Sqr(1 / n)) Down = Exp(-Sigma * Sqr(1 / n)) R = Exp(Interest / n) Div = Exp(-Divrate / n) ‘Risk-neutral Up and Down probabilities piUp = (R * Div - Down) / (Up - Down) piDown = (Up - R * Div) / (Up - Down) ’ Deﬁ ning the stock price ‘j is the number of Up steps For i = 0 To T * n For j = 0 To i S(i, j) = Stock * Up ∧ j _ * Down ∧ (i - j) Next j Next i 411 The Binomial Option Pricing Model ‘Option value on the last nodes of tree For i = 0 To T * n Opt(T * n, i) = _ Application.Max(S(T * n, i) - X, 0) Next i ‘Early exercise when stock price > multiple ‘ * exercise after vesting For i = T * n - 1 To 0 Step -1 For j = 0 To i If i > Vest * n And S(i, j) > = Multiple * X _ Then Opt(i, j) = Application.Max(S(i, j) - X, 0) If i > Vest * n And S(i, j) < Multiple * X _ Then Opt(i, j) = ((1 - Exitrate / n) * _ (piUp * Opt(i + 1, j + 1) + piDown * _ Opt(i + 1, j)) / R + Exitrate / n * _ Application.Max(S(i, j) - X, 0)) If i < = Vest * n Then Opt(i, j) = _ (1 - Exitrate / n) * (piUp * _ Opt(i + 1, j + 1) + piDown * Opt(i + 1, j)) / R Next j Next i ESO = Opt(0, 0) End Function 412 Chapter 16 ‘Deﬁ ning the stock price ‘j is the number of Up steps For i = 0 To T * n For j = 0 To i S(i, j) = Stock * Up ∧ j _ * Down ∧ (i - j) Next j Next i Explaining the VBA code 9 The VBA code has several parts. The first part defines the variables, adjusting the Up, Down, and 1 plus interest R for the n divisions of each year. Having made this adjustment, the code defines the risk-neutral probabilities π Up and π Down : 9. This subsection is tedious and can be skipped. But take a look at the next subsection, where we use Data|Table to do sensitivity analysis. Up = Exp(Sigma * Sqr(1 / n)) Down = Exp(-Sigma * Sqr(1 / n)) R = Exp(Interest / n) Div = Exp(-Divrate / n) ‘Risk-neutral Up and Down probabilities piUp = (R * Div - Down) / (Up - Down) piDown = (Up - R * Div) / (Up - Down) The stock price is defined as an array S ( i , j ), where i defines the periods, i = 0, 1, … , T * n , and j defines the number of Up steps at each period, j = 0, 1, … , i . The next part of the code defines the stock price. 413 The Binomial Option Pricing Model The option values are defined in the next piece of code, which is the heart of our employee stock option function. Option value is defined as an array Opt( i , j ): ‘Option value on the last nodes of tree For i = 0 To T * n Opt(T * n, i) = _ Application.Max(S(T * n, i) - X, 0) Next i ‘Early exercise when stock price > multiple ‘ * exercise after vesting For i = T * n - 1 To 0 Step -1 For j = 0 To i If i > Vest * n And S(i, j) > = Multiple * X _ Then Opt(i, j) = Application.Max(S(i, j) - X, 0) If i > Vest * n And S(i, j) < Multiple * X _ Then Opt(i, j) = ((1 - Exitrate / n) * _ (piUp * Opt(i + 1, j + 1) + piDown * _ Opt(i + 1, j)) / R + Exitrate / n * _ Application.Max(S(i, j) - X, 0)) If i < = Vest * n Then Opt(i, j) = _ (1 - Exitrate / n) * (piUp * _ Opt(i + 1, j + 1) + piDown * Opt(i + 1, j)) / R Next j Next i 414 Chapter 16 Here ’ s what this piece of code says: Opt i jS T n j X Terminal nodes Si j XAfte (, )max[ ( , ) , ] max[ ( , ) , ] =∗− −0 0r r vesting Si j m X Exitrate nOpt i j OpUp Down, (, ) (/ )(, )≥∗ −∗++ +111 π π tti j RAfter vesting Si j m X Exitrate n S i j X(, ) , (, ) /m a x ( , ) ,+ <∗ +∗−1 0 (() −∗++ ++(/ )(, ) (, )111 1Exitrate nOpt i j Opt i j RBefore veUp Downπ πssting⎧ ⎨⎪ ⎪⎪⎪⎪⎪ ⎩⎪ ⎪⎪⎪⎪⎪ At the terminal nodes, we simply exercise the option. Before the terminal nodes and after vesting, we check to see if the stock price is greater than the desired multiple m of the exercise price. If it is, we exercise the option. If S ( i , j ) < m * X , then the ESO ’ s payoff depends on whether the employee exits the firm or not. With a probability (1 − Exitrate / n ) the employee does not exit the firm, in which case the option payoff is the discounted expected next period payoff: (/ )(, ) (, )111 1−∗++ + +Exitrate nOpt i j Opt i j RUp Down ππ On the other hand, if the employee exits the firm and the vesting period has passed, he will try to see if he can exercise the option, giving the expected payoff: Exitrate n S i j X /m a x , ,∗ () − [] 0 Finally, before vesting, the ESO is simply worth the expected discounted (by the risk-neutral probabilities) payoff of the next period values: (/ )(, ) (, )111 1−∗++ + +Exitrate nOpt i j Opt i j RUp Down ππ The final step in the code is to define the value of the function ESO: ESO = Opt (0, 0). 415 The Binomial Option Pricing Model Some Sensitivity Analysis We can use data tables to perform sensitivity analysis on our ESO function. 1 23 4 567 8 9 10 11 121314 15 1617 18 1920 21 222324 25 2627 28 293031 32 3334 35F E D C B A e c i r p k c o t s t n e r r u C 0 5 S e c i r p e s i c r e x e n o i t p O 0 5 X ) s r a e y n i ( e s i c r e x e n o i t p o o t e m i T 0 0 0 0 . 0 1 T Vesting period (years) 3.00 e t a r t s e r e t n i l a u n n A % 0 0 . 5 t s e r e t n I k c o t s f o s s e n i k s i R % 5 3 a m g i S Stock dividend rate 2.50% Annual dividend rate on stock % 0 0 . 0 1 e , e t a r t i x E Option exercise multiple, m 3.00 r a e y e n o f o s n o i s i v i d b u s f o r e b m u N 5 2 n Employee stock option value 13.5275 <-- =ESO(B2,B3,B4,B5,B6,B7,B8,B9,B10,B11) Black-Scholes call 19.1842 <-- =BSCall(B2*EXP(-B8*B4),B3,B4,B6,B7) Sensitivity of ESO value to number of subdivisions n n 13.5275 <-- =B13, data table header 2 12.8213 5 13.2870 10 13.4312 25 13.5275 50 13.5646 75 13.5733 100 13.5753 200 13.5810ESO FUNCTION SENSITIVITY TO NUMBER OF SUBDIVISIONS n OF ONE YEAR 12.8012.9013.0013.1013.2013.3013.4013.5013.60 0 2 55 07 5 1 0 0 1 2 5 1 5 0 1 7 5 2 0 0ESO Subdivisions, n The graph gives ample evidence that n = 25 or 50 and does well enough for valuing ESOs. Since larger values of n become time consuming, we recom- mend lower numbers. In the graph below, we show the sensitivity of the ESO value to the employee exit rate e , the rate at which employees leave the firm each year: 416 Chapter 16 The exit rate has a major effect on the value of the ESO: the higher the turnover of employees, the lower the value of the employee stock options. In terms of FASB 123 valuation, the exit rate e is an important valuation factor. Finally we do a sensitivity of the ESO value on the exit multiple m . Recall that the Hull-White model assumes that an employee holding an ESO exercises her option when the stock price is a multiple m of the option exercise price X . Basically this locks the employee into a suboptimal strategy, since in general call options should be held to maturity (though note that in this case the option is written on a stock which pays a dividend, which may in some cases make early exercise optimal). In the example below, we clearly see the sub-optimality of early ESO exercise: the higher the multiple m , the higher the value of the ESO. 1 23 4 56789 101112131415 16 1718192021 22 2324252627 28 2930313233 34 35F E D C B A e c i r p k c o t s t n e r r u C 0 5 S e c i r p e s i c r e x e n o i t p O 0 5 X ) s r a e y n i ( e s i c r e x e n o i t p o o t e m i T 0 0 0 0 . 0 1 TVesting period (years) 3.00 e t a r t s e r e t n i l a u n n A % 0 0 . 5 t s e r e t n I k c o t s f o s s e n i k s i R % 5 3 a m g i S Stock dividend rate 2.50% Annual dividend rate on stock % 0 0 . 0 1 e , e t a r t i x E Option exercise multiple, m 3.00 r a e y e n o f o s n o i s i v i d b u s f o r e b m u N 0 5 n Employee stock option value 13.5646 <-- =ESO(B2,B3,B4,B5,B6,B7,B8,B9,B10,B11) Black-Scholes call 19.1842 <-- =BSCall(B2*EXP(-B8*B4),B3,B4,B6,B7) Sensitivity of ESO value to exit rate e Exit rate, e 13.5646 <-- =B13, data table header 0% 20.1732 1% 19.3621 3% 17.8536 5% 16.4828 7% 15.2347 9% 14.0963 11% 13.0561 13% 12.1039ESO FUNCTION SENSITIVITY TO EMPLOYEE EXIT RATE e 12.0013.0014.0015.0016.0017.0018.0019.0020.0021.00 0% 2% 4% 6% 8% 10% 12%ESO Exit rate, e 417 The Binomial Option Pricing Model Last But Not Least The Hull-White model is a numerical approximation of the ESO option valu- ation, but it is not a closed-form formula. A recent paper by Cvitani ć , Wiener, and Zapatero (2006) gives an analytical derivation of the value of employee stock options. The formula stretches over 16 pages of typescript and will not be given here. An Excel implementation of the formula exists and can be downloaded at http://pluto.mscc.huji.ac.il/ ∼ mswiener/research/ESO.htm . 16.9 Using the Binomial Model to Price Non-Standard Options: An Example The binomial model can also be used to price non-standard options. Consider the following example: You hold an option to buy a share of a company. The 1 23 4 5678 9 10 111213 14 15161718 19 20212223 24 2526272829 30 3132 33 34 35F E D C B A e c i r p k c o t s t n e r r u C 0 5 S e c i r p e s i c r e x e n o i t p O 0 5 X ) s r a e y n i ( e s i c r e x e n o i t p o o t e m i T 0 0 0 0 . 0 1 T Vesting period (years) 3.00 e t a r t s e r e t n i l a u n n A % 0 0 . 5 t s e r e t n I k c o t s f o s s e n i k s i R % 5 3 a m g i S Stock dividend rate 2.50% Annual dividend rate on stock % 0 0 . 0 1 e , e t a r t i x E Option exercise multiple, m 3.00 r a e y e n o f o s n o i s i v i d b u s f o r e b m u N 5 2 n Employee stock option value 13.5275 <-- =ESO(B2,B3,B4,B5,B6,B7,B8,B9,B10,B11) Black-Scholes call 19.1842 <-- =BSCall(B2*EXP(-B8*B4),B3,B4,B6,B7) Sensitivity of ESO value to multiple m m 13.5275 <-- =B13, data table header 1.0 9.1758 1.3 11.1610 1.6 12.2760 1.9 12.9793 2.2 13.2735 2.5 13.4467 2.8 13.4985 3.1 13.5423ESO FUNCTION SENSITIVITY TO OPTION EXERCISE MULTIPLE m 91011121314 1 . 01 . 21 . 41 . 61 . 82 . 02 . 22 . 42 . 62 . 83 . 0ESO Multiple mSensitivity of Hull-White Valuation to Exercise Multiple m 418 Chapter 16 option allows for early exercise, but the exercise price varies with the time at which you choose to exercise. For the case we consider, the option has the following conditions: • There are n possible exercise dates only (i.e., the option is only exercisable on these dates). • Exercise at date t precludes exercise at all dates s > t . However, if you don ’ t exercise at date s , you may still exercise at date t > s . • The exercise price at date t is X t , meaning that the exercise price can vary with time. We want to value this option using a binomial framework. To do so, we recognize that basically this is just an American option with three separate exercise prices. Here ’ s how we set this problem up in a spreadsheet, using the logic of the American option valuation described in section 16.5: 1 2 3456 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 2324 25 2627 28 29 30 313233 34 35 36 3738 39I H G F E D C B A Initial stock price 100 Exercise prices 0 0 1 1 e t a D % 0 1 p U 5 0 1 2 e t a D % 5 - n w o D 2 1 1 3 e t a D % 6 e t a r t s e r e t n I State prices q u 0.6918 <-- =(B5-B4)/((1+B5)*(B3-B4)) qd 0.2516 <-- =(B3-B5)/((1+B5)*(B3-B4)) Check1/(q u+qd) 1.06 <-- =1/(B8+B9) qu*(1+up)+q d*(1+down) 1 <-- =B8*(1+B3)+B9*(1+B4) Stock price 133.100 121.000 0 5 9 . 4 1 1 0 0 0 . 0 1 1 0 0 5 . 4 0 1 0 0 0 . 0 0 1 5 7 2 . 9 9 0 0 0 . 5 9 90.250 85.738 Date 0 Date 1 Date 2 Date 3 Value at each node 21.100 <-- =MAX(H16-E6,0) 16.000 ) 0 , 6 E - 8 1 H ( X A M = - - < 0 5 9 . 2 3 8 5 . 1 1 1 4 0 . 2 8 6 3 . 8 0 0 0 . 0 2 1 4 . 1 0.000 0.000 Early exercise? yes no no no noTIME-DEPENDENT EXERCISE PRICES =MAX(q U*H25+q D*H27,MAX(F16-E4,0)) =IF(q U*H25+q D*H27>= MAX(F16-E4,0),\"no\",\"yes\")=MAX(q U*F28+q D*F30,MAX(D19-E3,0)) 419 The Binomial Option Pricing Model Most of this spreadsheet follows section 16.5. Cells B15:H21 describe the stock price over time, which follows a binomial process with the “Up” = 1.10 and “Down” = 0.95 (cells B3 and B4). Where things get interesting is in the valuation: 22 232425 26 272829303132I H G F E D C B A Date 0 Date 1 Date 2 Date 3 Value at each node 21.100 <-- =MAX(H16-E6,0) 16.000 ) 0 , 6 E - 8 1 H ( X A M = - - < 0 5 9 . 2 3 8 5 . 1 1 1 4 0 . 2 8 6 3 . 8 0 0 0 . 0 2 1 4 . 1 0.000 0.000=MAX(q U*H25+q D*H27,MAX(F16-E4,0)) =MAX(q U*F28+q D*F30,MAX(D19-E3,0)) As is usual for an American option, at each node of the tree, we consider whether the option is worth more whether exercised or whether held. But note that in the above picture, the exercise price varies with the date, so that the exercise price at date 3 is E5, that of date 2 is E4, and that of date 1 is E3. As you can see in cell B28, the value of the American call option is 8.368. 16.10 Summary The binomial model is intuitive and easy to implement. As a widespread alternative to Black-Scholes pricing, the model can easily be put into a spread-sheet and programmed in VBA. This chapter has explored both the basic uses of the binomial model and its implementation to price American and other non-standard options. A section on employee stock options has shown how to implement the Hull-White (2004) model for valuing these options. Through-out, we have laid special stress on the role of state prices in implementing the model. Exercises 1. A stock selling for $25 today will, in 1 year, be worth either $35 or $20. If the interest rate is 8%, what is the value today of a one-year call option on the stock with exercise price $30? Use the simultaneous equation approach of section 16.2 to price the option. 2. In exercise 1, compute the state prices q U and q D , and use these prices to calculate the value today of a one-year put option on the stock with exercise price $30. Show that 420 Chapter 16 put-call parity holds: That is, using your answer from this problem and the previous problem, show that: Call priceX rStock price today Put price ++=+1 3. In a binomial model a call option and a put option are both written on the same stock. The exercise price of the call option is 30 and the exercise price of the put option is 40. The call option ’ s payoffs are 0 and 5 and the put option ’ s payoffs are 20 and 5. The price of the call is 2.25 and the price of the put is 12.25. a. What is the riskless interest rate? Assume that the basic period is one year. b. What is the price of the stock today? 4. All reliable analysts agree that a share of ABC Corp., selling today for $50, will be priced at either $65 or $45 1 year from now. They further agree that the probabilities of these events are 0.6 and 0.4, respectively. The market risk-free rate is 6%. What is the value of a call option on ABC whose exercise price is $50 and which matures in 1 year? 5. A stock is currently selling for 60. The price of the stock at the end of the year is expected either to increase by 25% or to decrease by 20%. The riskless interest rate is 5%. Calculate the price of a European put on the stock with exercise price 55. Use the binomial option pricing model. 6. Fill in all the cells labeled ??? in the following spreadsheet: Why is there no additional pricing tree for an American call option? 1 2 3 4 5 6 7 8 9 10 1112 13 14 15 16 17 18 19 20 21 2223 24 25 26 27 28 29 30AB C D E F G H I J K Up, U 1.35 Down, D 0.95 state prices qu Initial stock price 40 qd Interest rate, R 1.25 Exercise price 40 e c i r p d n o B e c i r p k c o t S ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? 1 ? ? ? 0 4 ? ? ? ? ? ? ? ? ? ? ? ? n o i t p o t u p n a e p o r u E n o i t p o l l a c n a e p o r u E ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? American put option ??? ??? ? ? ? ? ? ? ??? ???THREE-DATE BINOMIAL OPTION PRICING 421 The Binomial Option Pricing Model 7. Consider the following 2-period binomial model, in which the annual interest rate is 9% and in which the stock price goes up by 15% per period or down by 10%: e c i r p d n o B e c i r p k c o t S 1 8 8 1 . 1 0 5 2 1 . 6 6 9 0 . 1 0 5 . 7 5 1 8 8 1 . 1 1 0 0 5 7 . 1 5 0 5 9 0 . 1 0 0 . 5 4 1 8 8 1 . 1 0 0 0 5 . 0 4 a. Price a European call on the stock with exercise price 60. b. Price a European put on the stock with exercise price 60. c. Price an American call on the stock with exercise price 60. d. Price an American put on the stock with exercise price 60. 8. Consider the following three-date binomial model: • In each period the stock price either goes up by 30% or decreases by 10%. • The one-period interest rate is 25% e c i r p d n o B e c i r p k c o t S 5 2 6 5 . 1 0 7 . 0 5 5 2 . 1 0 0 . 9 3 5 2 6 5 . 1 1 0 1 . 5 3 0 3 5 2 . 1 0 0 . 7 2 5 2 6 5 . 1 0 3 . 4 2 422 Chapter 16 a. Consider a European call with X = 30 and T = 2. Fill in the blanks in the tree: Call option price ??? ??? ? ? ? ? ? ? ??? ??? b. Price a European put with X = 30 and T = 2. c. Now consider an American put with X = 30 and T = 2. Fill in the blanks in the tree: American put option price ??? ??? ? ? ? ? ? ? ??? ??? 9. A prominent securities firm recently introduced a new financial product. This product, called “The Best of Both Worlds” (BOBOW for short), costs $10. It matures in 5 years, at which point it repays the investor the $10 cost plus 120% of any positive return in the S&P 500 index. There are no payments before maturity. For example: If the S&P 500 is currently at 1,500, and if it is at 1,800 in 5 years, a BOBOW owner will receive back $12.40 = $10*[1 + 1.2*(1800/1500 - 1)]. If the S&P is at or below 1,500 in 5 years, the BOBOW owner will receive back $10. Suppose that the annual interest rate on a 5-year, continuously compounded, pure- discount bond is 6%. Suppose further that the S&P 500 is currently at 1,500 and that you believe that in 5 years it will be at either 2,500 or 1,200. Use the binomial option pricing model to show that BOBOWs are underpriced. 10. This problem is a continuation of the discussion of section 16.6. Show that as n → ∞ , the binomial European put price converges to the Black-Scholes put price. (Note that, as part of the chapter spreadsheet for this chapter, we have included a function called BSPut , which computes the Black-Scholes put price.) 11. Here ’ s an advanced version of exercise 10. Consider an alternative parameterization of the binomial: ΔΔ ΔΔtT n Re eqR R ert rt t U r== ==− ∗− =−+/ ()(/ ) (UpDown Up Down Downσσ22 −−−=−σσ22 1/)ΔΔtt DUqRq Construct binomial European call and put option pricing functions in VBA for this param- eterization and show that they also converge to the Black-Scholes formula. (The message here is that the parameterization of the binomial Up and Down is not unique.) 423 The Binomial Option Pricing Model 12. A call option is written on a stock whose current price is $50. The option has maturity of 3 years, and during this time the annual stock price is expected to increase by 25% or to decrease by − 10%. The annual interest rate is constant at 6%. The option is exercisable at date 1 at a price of $55, at date 2 for a price of $60, and at date 3 for a price of $65. What is its value today? Will you ever exercise the option early? 13. Reconsider the above problem. Show that if the date 1 exercise price is X , the date 2 exercise price is X *(1 + r ), and the date 3 exercise price is X *(1 + r ) 2 , you will not exercise the option early. 10 14. An investment bank is offering a security linked to the price 2 years from today of Bisco stock, which is currently at $3 per share. Denote Bisco ’ s stock price in two periods by S 2 . The security being offered pays off max( , ) S2340 0− . You estimate that in each of the next two periods, Bisco stock will either increase by 50% or decrease by 20%. The annual interest rate is 8%. Price the security. 10. It can also be shown that this property holds if the exercise prices grow more slowly than the interest rate. Thus for the problem considered in section 16.5, there will be early exercise of the American call only when the exercise prices grow at a rate faster than the interest rate. 1 7 The Black-Scholes Model 17.1 Overview In a path-breaking paper published in 1973, Fischer Black and Myron Scholes proved a formula for pricing European call and put options on non-dividend-paying stocks. Their model is probably the most famous model of modern finance. The Black-Scholes formula is relatively easy to use, and it is often an adequate approximation to the price of more complicated options. In this chapter we make no pretense at a full-blown development of the model; this requires a knowledge of stochastic processes, and a not-inconsiderable math-ematical investment. Instead, we shall describe the mechanics of the model and show how to implement it in Excel. We also illustrate several uses of the Black-Scholes formula in the valuation of structured assets. 17.2 The Black-Scholes Model Consider a stock whose price is lognormally distributed. 1 The Black-Scholes model uses the following formula to price European calls on a stock: C S Nd X e NdrT=−−() ()12 where dSX r T T dd T12 212=++ =−ln( ) ( )/ σ σ σ Here C denotes the price of a call, S is the price of the underlying stock, X is the exercise price of the call, T is the call ’ s time to exercise, r is the interest rate, and σ is the standard deviation of the logarithm of the stock ’ s return. N( ) denotes a value of the standard normal distribution. It is assumed that the stock will pay no dividends before date T . By the put-call parity theorem (see Chapter 15), a put with the same exercise date T and exercise price X written on the same stock will have price P = C − S + Xe − rT . Substituting for C in this equation and doing some algebra gives the Black-Scholes European put pricing formula: 1. The lognormal distribution is discussed in Chapter 26 though for purposes of applying the Black-Scholes model, section 17.4 is sufficient. 426 Chapter 17 PX e Nd S NdrT=− − −−() () 21 In Chapter 16 we hinted at one form of the proof of the Black-Scholes formula. There it was shown numerically that the Black-Scholes formula coincides with the binomial option pricing model formula when (i) the length of a typical period → 0, (ii) the “Up” and the “Down” moves in the binomial model converge to a lognormal price process, and (iii) the term structure of interest rates is flat. Implementing the Black-Scholes Formulas in a Spreadsheet The Black-Scholes formulas for call and put pricing are easily implemented in a spreadsheet. The following example shows how to calculate the price of a call option written on a stock whose current price S = 50, when the exercise price X = 45, the annualized interest rate r = 4%, and σ = 30%. The option has T = 0.75 years to exercise. All three of the parameters T , r , and σ are assumed to be in annual terms. 2 1 2 34 5 67 8 9 10 11 12 13 14 15 16C B A S 50 Current stock price X 45 Exercise price r 4.00% Risk-free rate of interest T 0.75 Time to maturity of option (in years) Sigma 30% Stock volatility, σ d1 0.6509 <-- (LN(S/X)+(r+0.5*sigma^2)*T)/(sigma*SQRT(T)) d2 0.3911 <-- d 1-sigma*SQRT(T) N(d 1) 0.7424 <-- Uses formula NormSDist(d 1) N(d 2) 0.6521 <-- Uses formula NormSDist(d 2) Call price 8.64 <-- S*N(d 1)-X*exp(-r*T)*N(d 2) Put price 2.31 <-- call price - S + X*Exp(-r*T): by Put-Call parity 2.31 <-- X*exp(-r*T)*N(-d 2) - S*N(-d 1): direct formulaBLACK-SCHOLES OPTION PRICING FORMULA 2. Section 26.7 in Chapter 26 discusses how to calculate the annualized σ of the lognormal process given non-annual data. 427 The Black-Scholes Model The spreadsheet calculates the put price twice: In cell B15 the put price is computed by using put-call parity, and in cell B16 it is calculated by using the direct Black-Scholes formula. We can use this spreadsheet to do the usual sensitivity analysis. For example, the following Data|Table (see Chapter 31) gives—as the stock price S varies— the Black-Scholes value of the call compared to its intrinsic value [i.e., max(S − X, 0)]. 18 19 2021 22 23 24 2526 27 28 29 30 31 32 33 34 35 36CD E F G H I J K L M N Stock priceCall priceIntrinsic value 8.6434 5 50 . 0 0 0 0 0 10 0.0000 0 15 0.0000 0 20 0.0029 0 25 0.0484 030 0.3101 0 35 1.1077 0 40 2.7319 0 45 5.2777 0 50 8.6434 5 55 12.6307 10 60 17.0378 15 65 21.7056 20 70 26.5256 25 75 31.4304 30 80 36.3811 35Data table: Comparing the Black-Scholes to the intrinsic value Data table header: = B14Data table header: =Max(B2-B3,0).This is the option's intrinsic value . 0510152025303540 0 1 02 03 04 05 06 07 08 0Black-Scholes Price Versus Intrinsic Value Call price Intrinsic value 17.3 Using VBA to Define a Black-Scholes Pricing Function Although the spreadsheet implementation of the Black-Scholes formulas illus- trated in the previous section is sufficient for some purposes, we are sometimes interested in having a closed form function which we can use directly in Excel. We can do so with Visual Basic for Applications. Below we define functions dOne , dTwo , and BSCall : 428 Chapter 17 Function dOne(Stock, Exercise, Time, _ Interest, sigma) dOne = (Log(Stock / Exercise) + _ Interest * Time) / (sigma * Sqr(Time)) _ + 0.5 * sigma * Sqr(Time) End Function Function dTwo(Stock, Exercise, Time, _ Interest, sigma) dTwo = dOne(Stock, Exercise, Time, _ Interest, sigma) - sigma * Sqr(Time) End Function Function BSCall(Stock, Exercise, Time, _ Interest, sigma) BSCall = Stock * Application.NormSDist _ (dOne(Stock, Exercise, Time, Interest, _ sigma)) - Exercise * Exp(-Time * Interest) * _ Application.NormSDist(dTwo(Stock, Exercise, _ Time, Interest, sigma)) End Function Note the use of the Excel function NormSDist , which gives the standard normal distribution. 3 3. We could have used the newer version of this function, Norm.S.Dist(x,TRUE or FALSE). TRUE gives the cumulative distribution, whereas FALSE gives the probability density. It seems simpler to use the old version of this function, NormSDist , which gives the cumulative distribution. 429 The Black-Scholes Model Function BSPut(Stock, Exercise, Time, _ Interest, sigma) BSPut = BSCall(Stock, Exercise, Time, _ Interest, sigma) + Exercise * _ Exp(-Interest * Time) - Stock End Function Using These Functions in an Excel Spreadsheet Here ’ s an example of these functions used in Excel. The graph was created by a data table (in presentations, we usually hide the first row of such a table; here we have shown it). 1 2 3 4 56 7 89 101112 13 1415 16 1718 19 2021 22 232425 26G F E D C B A S1 00 X1 00 Stock price Call Put e l b a T a t a D e h t f o r e d a e h e h t s i s i h T - - < 2 2 0 8 . 0 1 5 8 1 3 . 0 2 0 0 . 1 T 9 3 6 6 . 0 5 2 0 8 1 . 0 0 4 % 0 0 . 0 1 t s e r e t n I 1 4 9 8 . 5 4 4 0 1 4 . 0 5 4 % 0 0 . 0 4 a m g i S 50 0.8081 41.2918 Call price 20.3185 <-- =BSCall(B2,B3,B4,B5,B6) 55 1.4241 36.9079 Put price 10.8022 <-- =BSPut(B2,B3,B4,B5,B6) 60 2.3019 32.7857 65 3.4739 28.9576 70 4.9600 25.4437 0 2 5 2 . 2 2 3 8 6 7 . 6 5 7 a t a d a s i t h g i r e h t o T 3 0 8 3 . 9 1 5 6 9 8 . 8 0 8 e h t s e v i g t a h t e l b a t 9 7 1 8 . 6 1 1 4 3 3 . 1 1 5 8 r o f s e u l a v t u p d n a l l a c 2 8 4 5 . 4 1 5 4 6 0 . 4 1 0 9 k c o t s s u o i r a v 6 0 5 5 . 2 1 9 6 6 0 . 7 1 5 9 . s e c i r p 100 20.3185 10.8022105 23.7954 9.2791 110 27.4740 7.9578 115 31.3316 6.8154120 35.3469 5.8306 125 39.5002 4.9839 130 43.7736 4.2574BLACK-SCHOLES MODEL IN VB A =B8=B9 0102030405060 40 50 60 70 80 90 100 110 120 130 Stock price, SCall and Put Prices in VBA Call Put Pricing Puts By the put-call parity theorem we know that a put is priced by the formula P = C − S + Xe − rT . We can implement this in another VBA function, BSPut : 430 Chapter 17 17.4 Calculating the Volatility The Black-Scholes formula depends on five parameters: the stock price S , the option exercise price X , the option ’ s time to maturity T , the interest rate r , and the standard deviation of the returns of the stock underlying the option σ . Four of these five parameters are straightforward, but the fifth parameter, σ , is problematic. There are two common ways of computing sigma, σ : • σ can be computed based on the historical returns of the stock. • σ can be computed based on the implied volatility of the stock. In the two subsections below, we illustrate both methods of computing σ and apply them to the pricing of options on the Standard & Poor ’ s 500 (symbol SPY , called “spiders”). The Volatility of Historical Returns We can use historical stock returns to compute the volatility. The method is the following: • For a given time frame and frequency of returns, we compute the periodic volatility. The time frame commonly used varies wildly: Some practitioners use a short term of, say, 30 days, while others use a much longer (up to 1 year) time frame. Similarly, the frequency of returns can be daily, weekly, or some-times monthly. Since options are mostly short term, a shorter time frame is more common. • We annualize the periodic volatility by multiplying by the square root of the number of periods per year. Thus: σσ σ σannualmonthly weekly daily=∗ ∗ ∗⎧ ⎨⎪⎪ ⎩⎪ ⎪12 52 250 The number of days per year is an open question. Most practitioners use 250 or 252 for the number of transaction dates per year. However, instances of using 365 can also be found. 431 The Black-Scholes Model In the spreadsheet below we show one year ’ s daily prices for SPDR S&P 500 (SPY). This is an exchange-traded fund (ETF) that tracks the Standard & Poor ’ s 500. The historical prices of the SPY and the resulting historical volatil-ity are computed below: 12 3 45 6 7 8 9 1011 12 13 14 15 16 17 18 19 20AB C D E F G H Date Adj Close Return ) C : C ( T N U O C = - - < 2 5 2 t n u o C 7 0 . 7 1 1 1 1 - t c O - 0 1 11-Oct-11 117.19 0.10% <-- =LN(B4/B3) Average daily return 0.08% <-- =AVERAGE(C:C) 12-Oct-11 118.22 0.88% <-- =LN(B5/B4) Standard deviation of daily return 1.03% <-- =STDEV.S(C:C)13-Oct-11 117.98 -0.20% 14-Oct-11 120 1.70% Annualized mean return 0.99% <-- =12*G4 17-Oct-11 117.71 -1.93% Annualized sigma 16.34% <-- =SQRT(252)*G5 18-Oct-11 120.01 1.94% 19-Oct-11 118.59 -1.19% ) 5 5 2 C : 0 3 1 C ( T N U O C = - - < 6 2 1 t n u o C % 4 4 . 0 1 1 . 9 1 1 1 1 - t c O - 0 2 21-Oct-11 121.37 1.88% Average daily return 0.05% <-- =AVERAGE(C130:C255) 24-Oct-11 122.86 1.22% Standard deviation of daily return 0.87% <-- =STDEV.S(C130:C255) 25-Oct-11 120.47 -1.96% 26-Oct-11 121.69 1.01% Annualized mean return 0.59% <-- =12*G12 27-Oct-11 125.93 3.42% Annualized sigma 13.76% <-- =SQRT(252)*G13 28-Oct-11 125.9 -0.02% 31-Oct-11 122.87 -2.44% 1-Nov-11 119.44 -2.83%2-Nov-11 121.39 1.62%Return statistics, one yearSPY HISTORICAL PRICES, DAILY DAT A Return statistics, last half year The historical volatility based on a full year of data is 16.34%, whereas the volatility for the last 6 months is 13.76%. The Implied Volatility The implied volatility ignores history; instead it determines the option σ based on actual option prices. Whereas the historical volatility is a backward-looking volatility, the implied volatility is a forward-looking estimate. 4 To estimate the implied volatility for the SPY calls expiring 19 January 2013, we solve the Black-Scholes formula for the sigma, which gives the current market price: 4. The nomenclature “forward-looking” versus “backward-looking” makes it sound as if the implied volatility is always better than the historical. This is, of course, not the intention. 432 Chapter 17 The implied volatility is 15.22% for the call and 16.54% for the put. As shown in cells B14 and B17, these volatilities, when inserted in the Black- Scholes formula, give back the current market price. We have used functions CallVolatility and PutVolatility described below. Pricing At-the-Money SPY Options When we price the SPY at-the-money options for all maturities at the historical volatility, we see that the Black-Scholes model with the full-year ’ s historical volatility as a proxy for σ does a reasonable job of pricing the calls: 1 23456 7 89 1011121314 15 1617C B A Current date 09-Oct-12 Option expiration date 19-Jan-13 Current SPY price, S 144.2 Option strike price, X 144 Time to maturity, T 0.279452 <-- =(B3-B2)/365 % 8 0 . 0 e t a r t s e r e t n I 4 7 . 4 e c i r p l l a c l a u t c A 1 9 . 4 e c i r p t u p l a u t c A Implied call volatility 15.22% <-- =CallVolatility(B5,B6,B7,B8,B10) Proof: Black-Scholes call price 4.74 <-- =BSCall(B5,B6,B7,B8,B13) Implied put volatility 16.54% <-- =PutVolatility(B5,B6,B7,B8,B11) Proof: Black-Scholes put price 4.91 <-- =BSPut(B5,B6,B7,B8,B16)IMPLIED VOLATILITY FOR THE JANUARY 2013 SPY OPTIONS 1 234 5 6 7 89 10111213 14 151617 18 19H G F E D C B A Current date 09-Oct-12Current SPY price, S 144.2Exercise price, X 144 Sigma, σ 16.34% <-- =SPY!G8 ExpirationMarket priceInterest rateTime to maturity, TBS, historical sigmaImplied volatility 20-Oct-12 1.40 0.08% 0.0301 1.73 <-- =BSCall($B$3,$B$4,D8,C8,$B$5) 12.99% <-- =CallVolatility($B$3,$B$4,D8,C8,B8) 17-Nov-12 2.80 0.08% 0.1068 3.18 <-- =BSCall($B$3,$B$4,D9,C9,$B$5) 14.33% <-- =CallVolatility($B$3,$B$4,D9,C9,B9) % 5 7 . 4 1 4 3 . 4 7 2 0 2 . 0 % 8 0 . 0 3 9 . 3 2 1 - c e D - 2 2 % 0 4 . 4 1 9 5 . 4 4 7 2 2 . 0 % 8 0 . 0 6 0 . 4 2 1 - c e D - 1 3 % 2 2 . 5 1 8 0 . 5 5 9 7 2 . 0 % 8 0 . 0 4 7 . 4 3 1 - n a J - 9 1 % 3 2 . 5 1 0 3 . 6 9 2 3 4 . 0 % 8 0 . 0 8 8 . 5 3 1 - r a M - 6 1 % 8 5 . 5 1 5 5 . 6 8 5 6 4 . 0 % 2 1 . 0 5 2 . 6 3 1 - r a M - 8 2 % 7 0 . 7 1 2 0 . 8 4 1 0 7 . 0 % 2 1 . 0 7 3 . 8 3 1 - n u J - 2 2 % 0 2 . 7 1 1 1 . 8 8 7 1 7 . 0 % 2 1 . 0 3 5 . 8 3 1 - n u J - 8 2 % 4 7 . 6 1 3 3 . 9 7 0 5 9 . 0 % 2 1 . 0 5 5 . 9 3 1 - p e S - 1 2 % 4 6 . 7 1 5 4 . 9 3 5 7 9 . 0 % 2 1 . 0 8 1 . 0 1 3 1 - p e S - 0 3 % 1 0 . 8 1 5 8 . 0 1 7 6 7 2 . 1 % 8 1 . 0 3 9 . 1 1 4 1 - n a J - 8 1PRICING THE SPY AT-THE-MONEY OPTIONS Historical and Implied volatility 433 The Black-Scholes Model The historical volatility does a good job of pricing the call options: 02468101214Actual Call Price versus Black-Scholes using Historical σ Market price BS, historical sigma 0246810121416Actual Put Price versus Black-Scholes Price using Historical s Market price BS, historical sigma SPY data for puts produce similar, though less good, results: 434 Chapter 17 We also compute the implied volatilities of the at-the-money puts and calls: 0%5%10%15%20%25%20-Oct-1219-Nov -1219-Dec-1218-Jan-1317-Feb-1319-Mar- 1318-Apr-1318-May- 1317-Jun-1317-Jul-1316-Aug-1315-Sep -1315-Oct -1314-Nov -1314-Dec-1313-Jan-14Comparing Implied Put and Call Vola Ɵlity Implied call volaƟlity Implied put vola Ɵlity Comparing Historical with Implied Volatility It is impossible to say which of these two methods is better for pricing options. On the one hand it is common to attribute to the historical returns some kind of validity as a predictor of the future anticipated returns. On the other hand the implied volatility gives a good indication of what the market is currently thinking. Our advice: Use them both and compare. 17.5 A VBA Function to Find the Implied Volatility We design a Visual Basic for Applications (VBA) function which computes the implied volatility. To do this, we first note that the option price is a mono-tonic and increasing function of the sigma: Here ’ s a Data|Table from our basic Black-Scholes spreadsheet: 435 The Black-Scholes Model We use VBA to define a function CallVolatility , which finds the σ for a call option. The function is defined as CallVolatility(Stock, Exercise, Time, Interest, Target) , where the definitions are: Stock is the stock price S Exercise is the option ’ s exercise price X Time is the time to the option ’ s maturity T Interest is the interest rate r Target is the call price C The function finds σ for which the Black-Scholes formula = C . 1 23456789 10111213141516 17 1819202122232425262728D C B A S 45 Current stock price X 50 Exercise price T 1 Time to maturity of option (in years) r 8.00% Risk-free rate of interest Sigma 30.00% Stock volatility Call price 4.88 <-- =BSCall(B2,B3,B4,B5,B6) Data table: Call price as function of volatility s 4.8759 <-- =B8, table header 15% 2.1858 16% 2.364617% 2.543718% 2.722919% 2.9023 20% 3.0817 21% 3.261222% 3.440723% 3.620224% 3.799725% 3.979226% 4.158727% 4.3381BLACK-SCHOLES OPTION PRICE IS MONOTONIC IN SIGMA 1.802.102.402.703.003.303.603.904.204.50 15% 18% 21% 24% 27%BS call price Volatility, sCall Price and Volatility 436 Chapter 17 Function CallVolatility(Stock, Exercise, Time, _ Interest, Target) High = 2 Low = 0 Do While (High - Low) > 0.0001 If BSCall(Stock, Exercise, Time, Interest, _ (High + Low) / 2) > Target Then High = (High + Low) / 2 Else: Low = (High + Low) / 2 End If Loop CallVolatility = (High + Low) / 2 End Function The technique used by the function is very similar to the technique used in trial and error: We start with two estimates for the possible σ : A High estimate of 100% and a Low estimate of 0%. We now do the following: • Plug the average of the High and the Low into the Black-Scholes formula. This gives us CallOption(Stock, Exercise, Time, Interest, (High + Low) / 2) . (Note the function CallVolatility assumes that the function CallOption is available to the spreadsheet.) • I f CallOption(Stock, Exercise, Time, Interest, (High + Low) / 2 > Target , then the current σ estimate of (High + Low) / 2) is too high and we replace High by (High + Low) / 2 . • I f CallOption(Stock, Exercise, Time, Interest, (High + Low) / 2 < Target , then the current σ estimate of (High + Low) / 2) is too low and we replace Low by (High + Low) / 2 . We repeat this procedure (often called the bisection method) until the dif- ference High-Low is less than 0.0001 (or some other arbitrary constant). 437 The Black-Scholes Model 17.6 Dividend Adjustments to the Black-Scholes The Black-Scholes formula assumes that the option ’ s underlying security pays no dividends prior to the exercise date T . In certain cases it is easy to make an adjustment to the model for dividends. This section looks at two such adjustments: We first look at option pricing when future dividends are known with certainty, and we then examine option pricing when the underlying secu-rity pays out a continuous dividend. The principle underlying both cases is the same: The options are priced on an adjusted underlying value which nets out the present value of dividends paid between the option purchase date and the option exercise date. A Known Dividend to Be Paid Before the Option Expiration It often happens that a stock ’ s future dividend is known at the time the option is traded. This is most commonly the case when a dividend has already been announced, but it can also happen because many stocks pay quite regular and relatively inflexible dividends. In this case the option should be priced not on the current stock price S but on the stock price minus the present value of the dividend or dividends anticipated before the option expiration date T : Time 0Time t Dividend paymentTime T Option expiration Stock price = S Div Max[S T - X,0] Stock price minus PV(dividend) = S – Div*exp[-rt] Here ’ s an example: Coca-Cola (stock symbol KO) pays quarterly dividends in the middle of March, June, September, and November of each year. Divi- dends (see Figure 17.1 ) seem quite stable; on 28 July 2006, the last two divi-dends have been $0.31 per share. Figure 17.1 Yahoo data for Coca-Cola. Note the stability of the dividends. On 28 July 2006, the closing stock price is $44.52. 439 The Black-Scholes Model Computing the implied volatility for the January 2007 calls and puts on Coca-Cola shows that taking account of anticipated dividends makes a signifi- cant difference in the pricing. We can also deduce from the proximity of the prices which take dividends into account (cells B19:B20) versus the distance between the prices which do not take the dividends into account (cells B22:B23) that the former are correct. 1 2 3 45 6 7 8 9 10 11 12 131415 16 171819 20 21 22 23E D C B A 6 0 - l u J - 8 2 e t a d t n e r r u C Option expiration date 19-Jan-07 2 5 . 4 4 e c i r p k c o t s t n e r r u C % 0 0 . 5 e t a r t s e r e t n I DateAnticipated dividendPresent value Mid September 13-Sep-06 0.31 0.31 <-- =C8*EXP(-$B$5*((B8-$B$2)/365)) End November 29-Nov-06 0.31 0.30 <-- =C9*EXP(-$B$5*((B9-$B$2)/365)) Stock price net of PV(dividends) 43.91 <-- =B4-SUM(D8:D9) y e n o m e h t t a y l e t a m i x o r p p A - - < 0 0 . 5 4 X , e c i r p e s i c r e x E Time to maturity, T 0.4795 <-- =(B3-B2)/365 t s e r e t n i f o e t a r e e r f - k s i R % 0 0 . 5 r , e t a r t s e r e t n I 6 0 l u j 8 2 n o e c i r p l l a C - - < 0 8 . 1 e c i r p l l a C 6 0 l u j 8 2 n o e c i r p t u P - - < 5 8 . 1 e c i r p t u P Implied volatility Call, S net of dividends 14.95% <-- =CallVolatility(B11,B12,B13,B14,B15) Put, S net of dividends 15.15% <-- =PutVolatility(B11,B12,B13,B14,B16) Call, S with dividends 12.19% <-- =CallVolatility(B4,B12,B13,B14,B15) Put, S with dividends 17.45% <-- =PutVolatility(B4,B12,B13,B14,B16)PRICING THE COCA-COLA JAN07 CALLS AND PUTS Dividend Adjustments for Continuous Dividend Payouts—The Merton Model In the above subsection we looked at the case of known future dividends. This subsection discusses a model due to Merton (1973) for the pricing options on a stock which pays continuous dividends. Continuous dividends may seem an odd assumption. But a basket of stocks such as the S&P 500 index or the Dow Jones 30 can best be approximated by the assumption of a continuous dividend payout, since there are many stocks and since the index components more or less pay out their dividends throughout the year. Assuming the continuous dividend yield of k , Merton proved the following call option pricing formula: 440 Chapter 17 CS e N d X e N dkT rT=−−−() () ,12 where dSX r k T T dd T12 212=+− + =−ln( / ) ( ) σ σ σ This model is used below to price the exchange-traded fund which tracks the S&P 500 index: 1 2 34 5 67 8 9 10 11 12 13 14 15 16 17C B A e c i r p k c o t s t n e r r u c 8 9 . 7 2 1 S e c i r p e s i c r e x e 0 0 . 7 2 1 X 6 0 - l u J - 8 2 e t a d s ' y a d o t , 7 0 - r a M - 6 1 s e r i p x e n o i t p o - - < 9 2 3 6 . 0 T t s e r e t n i f o e t a r e e r f - k s i r % 0 0 . 5 r d l e i y d n e d i v i d % 0 7 . 1 k y t i l i t a l o v k c o t s % 4 1 a m g i S d1 0.3122 <-- =(LN(B2/B3)+(B5-B6+0.5*B7^2)*B4)/(B7*SQRT(B4)) d2 0.2008 <-- =B9-B7*SQRT(B4) N(d 1) 0.6226 <--- Uses formula NormSDist(d 1) N(d 2) 0.5796 <--- Uses formula NormSDist(d 2) 1 5 . 7 e c i r p l l a C <-- S*Exp(-k*T)*N(d 1)-X*exp(-r*T)*N(d 2) y t i r a p l l a C - t u P y b : ) T * r - ( p x E * X + ) T * k - ( p x E * S - e c i r p l l a c - - < 4 9 . 3 e c i r p t u P 3.94 <-- X*exp(-r*T)*N(-d 2)-S*Exp(-k*T)*N(-d 1): direct formulaMERTON'S DIVIDEND-ADJUSTED OPTION PRICING MODEL used here to price S&P 500 Spiders (symbol: SPY) The Merton model is often used to price currency options. Suppose we take an option on the euro. The option specifies a dollar exchange rate for euros (in the example below, the call option lets us buy 10,000 euros in 0.0575 years for $1.285 per euro). The asset underlying the option is a euro interest-bearing security with interest rate r € . 441 The Black-Scholes Model 17.7 Using the Black-Scholes Formula to Price Structured Securities A “structured security” is Wall Street parlance for securities which incorporate combinations of stocks, options, and bonds. In this section we give three examples of such securities and show how to price them using the Black-Scholes model. 5 In the process we also return to the discussion of Chapter 16, showing how the profit diagrams of option strategies can help us understand such securities. A Simple Structured Security: Principal Protection Plus Participation in Market Upside Moves A simple and popular structured offers guaranteed return of the investor ’ s principal plus some participation in the upside moves of the market. Here ’ s an example: Homeside Bank offers its customers the following “Principal-Protected, Upside Potential” security (PPUP). • Initial investment in the security: $1,000. • No interest paid on the security. • In 5 years the PPUP pays back the $1,000 plus 50% of the increase in the S&P 500 index. Writing the index price today as S 0 and the index price in 5 years as S T , the payoff on the PPUP can be written as: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17D C B A o r u e e n o f o e c i r p r a l l o d . S . U : e t a r e g n a h c x e t n e r r u C 6 7 2 . 1 S e c i r p e s i c r e x E 5 8 2 . 1 X rUS 5.00% U.S. interest rate r€ 5.50% Euro interest rate ) s r a e y n i ( n o i t p o f o y t i r u t a m o t e m i T 5 7 5 0 . 0 T s r a l l o d n i y t i l i t a l o v o r u E % 0 7 . 4 a m g i S d1 -0.6095 <--(LN(S/X)+(r US-r€+0.5*sigma^2)*T)/(sigma*SQRT(T)) d2 -0.6208 <-- d 1 - sigma*SQRT(T) Number of euros per call contract 10,000 N(d 1) 0.2711 <--- Uses formula NormSDist(d 1) N(d 2) 0.2674 <--- Uses formula NormSDist(d 2) 9 6 . 3 2 e c i r p l l a C <-- (S*Exp(-r €*T)*N(d 1)-X*exp(-r US*T)*N(d 2))*B11 3 2 . 2 1 1 e c i r p t u P <-- (X*exp(-r US*T)*N(-d 2)-S*Exp(-r €*T)*N(-d 1))*B11: direct formulaPRICING AN OPTION TO BUY EUROS IN DOLLARS Intuition: The underlying asset of the currency option is a euro. The euro pays a dividend, which is the euro interest rate. Therefore the Merton model applies, with the underlying asset price being S*exp(- r €*T), where r€is the interest rate on euros. Note also the change in d1, where rUS-r€appears instead of rUSas in the regular Black-Scholes formula. 5. Not all structureds can be priced using Black-Scholes; more complicated, path-dependent, securities often need to be priced using the Monte Carlo methods discussed in Chapters 24 and 25. 442 Chapter 17 $ , % max ,1 000 1 50 1 0 0+∗ −⎛ ⎝⎜⎞⎠⎟⎡ ⎣⎢⎤⎦⎥S S T To analyze the PPUP, we first rewrite the maturity payment as: $ , % max , $,1 000 1 50 1 0 1 0000+∗ −⎛ ⎝⎜⎞⎠⎟⎡ ⎣⎢⎤⎦⎥ = ↑S ST Payoff on zero c ooupon bondPayoff on at-the-m/dncurlybracketleft/dncurlybracketmid/dncurlybracketright+∗ ∗ − ↑$,%max( , ) 1 000500 00SSST ooney call option/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext /dncurlybracketright/horizcurlybracketext/horizcurlybracketext This shows that the PPUP payoff is composed of two parts: • A $1,000 return of principal. Since no interest is paid on this principal, its value today is the present value of the payment at the risk-free interest rate, $1,000* e − rT , where r is the interest rate and T = 5 is the maturity of the PPUP. • $,%1 00050 0∗S times the value today of an at-the-money call on the S&P 500. We can use the following spreadsheet to price this security: 1 2 3 4 5 6 7 89 10 11 12C B A Initial S&P 500 price, S 0 950 <-- The price of the S&P 500 at PPUP issuance 0 5 9 X , e c i r p e s i c r e x e d e r u t c u r t S % 0 0 . 5 r , s r a e y 5 r o f e t a r t s e r e t n i e e r f - k s i R 5 T , y t i r u t a m o t e m i T Volatility of S&P 500, σSP 25% r e n w o P U P P o t g n i o g P & S e h t n i e s a e r c n i f o e g a t n e c r e P - - < % 0 5 e t a r n o i t a p i c i t r a P Strutured components, value today 0 0 0 1 * ) 5 B * 4 B - ( P X E = - - < 0 8 . 8 7 7 y t i r u t a m t a 0 0 0 1 $ g n i y a p d n o B Participation rate /S 0*at-the-money call on S&P 500 162.52 <-- =1000*B7/B2*BSCall(B2,B3,B5,B4,B6) ) 1 1 B : 0 1 B ( M U S = - - < 2 3 . 1 4 9 y a d o t y t i r u c e s d e r u t c u r t s f o e u l a VANALYZING A SIMPLE STRUCTURED PRODUCT $1,000 Deposit with 50% Participation in S&P Increase over 5 Years The value of the structured security (cell B12) is $941.32. This valuation has two parts: • The present value of the bond part of the PPUP is $778.80 (cell B10). • The value of $,%1 00050 950∗ at-the-money calls on the S&P is $162.52. 443 The Black-Scholes Model Given the parameters in cells B2:B7, the PPUP is overpriced —it sells for $1,000, whereas its market value ought to be $941.32. Another way to think about the structured is to compute its implied volatility: What σ SP (cell B6) will give the market valuation (cell B12) of the PPUP to equal the $1,000 price being asked by the Homeside Bank? Either Goal Seek or Solver will solve this problem: 1 2 3 4 5 6 7 89 10 11 12C B A Initial S&P 500 price, S 0 950 <-- The price of the S&P 500 at PPUP issuance 0 5 9 X , e c i r p e s i c r e x e d e r u t c u r t S % 0 0 . 5 r , s r a e y 5 r o f e t a r t s e r e t n i e e r f - k s i R 5 T , y t i r u t a m o t e m i T Volatility of S&P 500, σSP 42.00% r e n w o P U P P o t g n i o g P & S e h t n i e s a e r c n i f o e g a t n e c r e P - - < % 0 5 e t a r n o i t a p i c i t r a P Structured components, value today 0 0 0 1 * ) 5 B * 4 B - ( P X E = - - < 0 8 . 8 7 7 y t i r u t a m t a 0 0 0 1 $ g n i y a p d n o B Participation rate /S 0*at-the-money call on S&P 500 221.20 <-- =1000*B7/B2*BSCall(B2,B3,B5,B4,B6) ) 1 1 B : 0 1 B ( M U S = - - < 0 0 . 0 0 0 1 y a d o t y t i r u c e s d e r u t c u r t s f o e u l a VANALYZING A SIMPLE STRUCTURED PRODUCT $1,000 Deposit with 50% Participation in S&P Increase over 5 Years More Complicated Structured Products Suppose you want to create a security with the following payoff pattern: X1 X1 X2 ST Strategy payoff 444 Chapter 17 The payoff pattern increases (dollar for dollar) as the terminal price of the underlying asset increases from 0 ≤ S T ≤ X 1 . Between X 1 and X 2 , the payoff pattern is flat, and for X 2 ≤ S T , the payoff again increases, dollar-for- dollar with the price of the underlying. The algebraic formula for this payoff pattern is: XX S S X TT 11 2 00 −− + −max( , ) max( , ) To prove that this formula creates the graph: XX S S X TT 11 2 00 −− + − ↑↑max( , ) max( , ) Payoff of written putP/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext /dncurlybracketright /horizcurlybracketext/horizcurlybracketext aayoff of bought call/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext /dncurlybracketright /horizcurlybracketext/horizcurlybracketext =−+= < ≤< +XXS SS X XX S X XSTT T T11 1 11 2 1 TTTXX S−≤⎧ ⎨⎪ ⎩⎪ 22 A slightly more complicated payoff pattern is the following: X1 X2 Y 445 The Black-Scholes Model The initial part of the payoff has slope YX1 , and the second increasing part of the payoff pattern has slope YX2 . This payoff pattern is created by the following formula: YY XXSY XT Y X−− + ↑11 20 1max( , ) m Payoff of written puts/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /dncurlybracketright /horizcurlybracketext/horizcurlybracketext/horizcurlybracketexta ax( , )SXT Y X− ↑20 2Payoff of bought calls/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /dncurlybracketright /horizcurlybracketext/horizcurlybracketext/horizcurlybracketext To prove that this is indeed the payoff: YY XXSY XT Y X−− + ↑11 20 1max( , ) m Payoff of written puts/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /dncurlybracketright /horizcurlybracketext/horizcurlybracketext/horizcurlybracketexta ax( , ) (SX YY XXST Y X− =−−↑2 110 2Payoff of bought calls/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /dncurlybracketright /horizcurlybracketext/horizcurlybracketext/horizcurlybracketext TTT T T TT TY XSSX YX S X YY XSXY XSXS) ()=< ≤< +− = ≤⎧ ⎨⎪ ⎪ ⎩⎪ ⎪11 12 22 22 As an example of this kind of structured payoff security, Figure 17.2 on p. 447 shows the term sheet for a structured product issued by ABN-AMRO bank. The payment on this “Airbag” security depends on the value of the Stoxx50—an index of European stocks. Here are the details: • Issuance date: 24 March 2003 • Terminal date: 24 March 2008 • Cost € 1,020 • Payment at terminal date: 446 Chapter 17 Payment at maturity Stoxx StoxxMaturity Initial =∗∗ 1 000 1 3350 50,.⎛ ⎛ ⎝⎜⎞⎠⎟ < <IfStoxx StoxxMaturity Matu50 1 618 50 1 000 1 618 50 50,. ,, . rrity Maturity InitialStoxx StoxxStox< ∗⎛ ⎝⎜⎞⎠⎟2 158 1 00050 50, ,I f x x Maturity50 2 158 >⎧ ⎨⎪ ⎪⎪ ⎩⎪ ⎪ ⎪, We recognize this security as one whose payoff has the form discussed earlier: YY XXS T Y X↑ ↑−− Bond payoff written puts with exerci/verticalbraceright 11 0 1max( , ) sse price purchased call wi XT Y XY XSX 12220 /dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /dncurlybracketright /horizcurlybracketext/horizcurlybracketext/horizcurlybracketext+− ↑max( , ) tth exercise price X2/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /dncurlybracketright /horizcurlybracketext/horizcurlybracketext/horizcurlybracketext where X X Y1 21 618 50 2 158 1 000= = =,. , , The spreadsheet on p. 448 shows the payoff. Cell B7 shows the payoff defi- nition given by the Airbag issuer, and cell B8 shows the payoff in the option terms defined above. The data table in cells A13:B29 show that these two definitions are equivalent: 447 The Black-Scholes Model Figure 17.2 The ABN-AMRO term sheet for its Euro Stoxx50 Airbag security. 448 Chapter 17 1 2 3 45 6 7 8 9 10 11 12 13 14 15 16 17 1819 20 21 22 23 24 25 26 27 28 29 30D C B A 0 0 . 0 0 0 , 1 Y X1 1,618.50 X2 2,158.00 ST 2,373.80 Airbag payoff By Airbag definition 1,100.00 <-- =IF(B5<B3,B2*(B4/B3)*B5/B4,IF(B5>B4,B2*B5/B4,1000)) Option formula 1,100.00 <-- =B2-B2/B3*MAX(B3-B5,0)+B2/B4*MAX(B5-B4,0) STAirbag definitionOption formula <-- Data table headers hidden 00 .00 0 .00 100 61.79 61.79 500 308.93 308.93 750 463.39 463.39 1,000 617.86 617.86 1,250 772.32 772.32 1,618.5 1,000.00 1,000.00 1,750 1,000.00 1,000.00 2,000 1,000.00 1,000.00 2,158 1,000.00 1,000.00 2,500 1,158.48 1,158.48 2,750 1,274.33 1,274.33 3,000 1,390.18 1,390.18 3,250 1,506.02 1,506.02 3,500 1,621.87 1,621.87 3,750 1,737.72 1,737.72Data table of payoffsABN-AMRO AIRBAG 0200400600800100012001400160018002000 0 1000 2000 3000 4000Airbag payoff Stoxx50 at Airbag expirationAirbag definition Option formula To see how the Airbag is priced, we use the Black-Scholes model and find the Stoxx50 volatility implied by the Airbag price: 449 The Black-Scholes Model When the Stoxx50 σ is 15.75% (cell B8), the Airbag ’ s price is € 1,020 (cell B14). The table shows the sensitivity of this price to the σ . Notice that Airbag values are not very sensitive to σ : Doubling the sigma from 10% to 20% increases the Airbag value by about € 17. This is because of the offsetting values of the short put and the long call in the Airbag. We can do one more exercise on the Airbag. Using a two-dimensional Data Table , we examine the Airbag ’ s price sensitivity to both time to maturity T and the Stoxx50 volatility σ : 1 2 3 4 5 6789 10 11 12 13 14 1516171819202122232425262728293031 32 333435363738C B A Stoxx50 price today, S 0 2,158.0 X1 1,618.50 X2 2,158.0 0 . 0 0 0 , 1 Y % 0 0 . 7 r , s r a e y 5 r o f e t a r t s e r e t n i e e r f - k s i R 5 T , y t i r u t a m o t e m i T % 5 7 . 5 1 a m g i s , 0 5 x x o t S e h t f o y t i l i t a l o V Airbag components, value today Bond paying X 1 at maturity 704.69 <-- =EXP(-B6*B7)*B5 Y/X 1 * written puts with exercise X 1 -4.69 <-- =-B5/B3*BSPut(B2,B3,B7,B6,B8) Purchased call with exercise X 2 320.01 <-- =B5/B4*BSCall(B2,B4,B7,B6,B8) ) 3 1 B : 1 1 B ( M U S = - - < 0 0 . 0 2 0 1 y a d o t y t i r u c e s d e r u t c u r t s f o e u l a V Table: Sensitivity of Airbag to Sigma 1,020.00 <-- =B14, data table header 0% 1,000.00 1% 1,000.003% 1,000.006% 1,000.169% 1,002.76 10% 1,004.5711% 1,006.8012% 1,009.3413% 1,012.0914% 1,014.9515% 1,017.8416% 1,020.7017% 1,023.4918% 1,026.16 19% 1,028.70 20% 1,031.1121% 1,033.3522% 1,035.4523% 1,037.3924% 1,039.1925% 1,040.84PRICING THE ABN-AIRBAG Find the Implied Volatility Airbag Pricing: Sensitivity to s 9951000100510101015102010251030103510401045 0% 5% 10% 15% 20% 25% Stoxx50 volatility, sAirbag initial price 450 Chapter 17 The Airbag is a fairly stable security—its price varies no more than 10% for a wide variety of σ ’ s and for nearly all times to maturity. A Reverse Convertible: Analyzing the UBS “Goals” The Swiss bank UBS has issued a series of stock-linked securities called “Goals.” All of the Goals pay interest on the initial price; the final repayment depends on the market price of the underlying stock: If the stock price is high, the Goals investor gets back her initial investment, and if the stock price is low, the Goals investor is paid out in a package of shares whose value is less than her initial investment. An example of such a security is the Cisco-linked Goals issued by UBS on 17 January 2001. The main details of this security are: • The purchaser pays UBS $1,000 on 23 January 2001. In return, she gets 3 payments of $97.50 =∗⎛ ⎝⎞⎠19 50 21 000.%$, on 23 July 2001, 23 January 2002, and 23 July 2002. 1 2 3 4 5 6789 10 11 1213 14 151617181920 21 22 2324 25 2627H G F E D C B A Stoxx50 price today, S 0 2,158.0 X1 1,618.50 X2 2,158.0 0 . 0 0 0 , 1 Y % 0 0 . 7 r , s r a e y 5 r o f e t a r t s e r e t n i e e r f - k s i R 5 T , y t i r u t a m o t e m i T % 5 7 . 5 1 a m g i s , 0 5 x x o t S e h t f o y t i l i t a l o V Airbag components, value today Bond paying X 1 at maturity 704.69 <-- =EXP(-B6*B7)*B5 Y/X 1 * written puts with exercise X 1 -4.69 <-- =-B5/B3*BSPut(B2,B3,B7,B6,B8) Purchased call with exercise X 2 320.01 <-- =B5/B4*BSCall(B2,B4,B7,B6,B8) ) 3 1 B : 1 1 B ( M U S = - - < 0 0 . 0 2 0 1 y a d o t y t i r u c e s d e r u t c u r t s f o e u l a V Time to maturity, T 1020.00 54321 0 . 0 0 0 1 5% 1000.02 1000.07 1000.20 1000.59 1001.77 1000.20 10% 1004.57 1006.22 1008.40 1011.13 1013.78 1000.40 15% 1017.84 1021.09 1024.72 1028.28 1029.65 1000.59 20% 1031.11 1035.21 1039.61 1043.69 1044.54 1000.79 Volatility of the Stoxx50, sigma --> 25% 1040.84 1045.48 1050.44 1055.14 1056.54 1000.99 30% 1047.16 1052.22 1057.69 1063.09 1065.58 1001.19 35% 1050.86 1056.29 1062.26 1068.39 1072.19 1001.39 40% 1052.66 1058.44 1064.88 1071.75 1076.95 1001.59 45% 1053.10 1059.19 1066.10 1073.70 1080.28 1001.79 50% 1052.55 1058.94 1066.29 1074.59 1082.53 1001.99ABN-AMRO AIRBAG SENSITIVITY TO TIME TO MATURITY AND SIGMA Data table header:=B14 451 The Black-Scholes Model • On 23 July 2002, in addition to the $97.50 payment ° If the price of Cisco stock > $39 per share, the purchaser of the security gets $1,000. ° If the price of Cisco stock < $39 per share, the purchaser gets 1 000 3925 641,.= shares of Cisco. • The closing stock price of Cisco on 23 January 2001 was 42.625. • The continuously compounded risk-free interest rate at the time of the Goals issuance was 5.2% annually (2.6% semiannually). To analyze the Cisco-linked Goals, we start by noting that the cash flow can be written as: Time 0 1 2 3 -1,000 97.50 97.50 97.50 1,000-25.641*Max(39-S T,0) To prove this, we write a short spreadsheet which compares the Goals payoff per definition with its payoff as described above: 452 Chapter 17 The equivalence of these two definitions means that the purchaser of the Cisco-linked Goals: • Acquires a $1,000 bond paying 9.75% interest semi-annually. • Writes UBS 25.641 puts with exercise X = 39 and with time to maturity T = 1.5. At the time the Goals were issued, the semi-annual interest rate was around 2.6%, far below 9.75%. Thus the bond component of the Goals was worth much more than $1,000. On the other hand, the purchaser of the Goals was giving UBS 25.641 puts. The value of this “gift” should be accounted for in any analysis of the Goals. We illustrate two ways to value the Goals. The first method assumes that the equilibrium NPV of any security should be zero. Doing this for the UBS security gives: 1 2 3 456 7 8 9 10 11 12131415161718 19 202122232425 26 2728AB C D E F G H I J Cisco price, 23 July 2002, S T 32 9 3 / 0 0 0 1 = - - < 0 1 4 6 . 5 2 o i t a r f f o y a P Terminal payoff As described by UBS 820.51 <-- =IF(B2>39,1000,B2*B3) In option terms 820.51 <-- =1000-B3*MAX(39-B2,0) Cisco stock price on 23 July 2002, S TUBS descriptionAlterna tive option description 820.51 820.51 <-- Data table headers, B5 and B6 respectively 0 0 . 0 0 0 . 0 0 10 256.41 256.41 15 384.62 384.62 20 512.82 512.82 22 564.10 564.10 24 615.38 615.38 26 666.67 666.67 30 769.23 769.23 32 820.51 820.51 34 871.79 871.79 38 974.36 974.36 39 1,000.00 1,000.00 40 1,000.00 1,000.00 42 1,000.00 1,000.00 44 1,000.00 1,000.00 46 1,000.00 1,000.00 47 1,000.00 1,000.00 50 1,000.00 1,000.00EQUIVALENCE OF 2 WAYS OF WRITING THE PAYOFF Data table: Comparing the payoff on Cisco-linked Goals 01002003004005006007008009001000 0 1 02 03 04 05 0UBS Cisco-Linked GOALS Terminal Payoff UBS description Alternative option description 453 The Black-Scholes Model −++++++ ↑ =1 00097 50 197 50 11 097 50 105 10 15,. (). (),. ().. .rrr Value $ $. .% .(205 11 26 25 641 39at r Puts on Cisco X= −∗ =/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /dncurlybracketright /horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext ,, . )T==15 0 In the spreadsheet below, we use this logic to price the puts embedded in the UBS security and we compare this price to the Black-Scholes price. Implicit put valuation =−++ +1 25 6411 00097 50 12 6 97 5005 .,. (. % ) . (. 112 61 097 50 12 6 205 11 25 64110 15+++⎡ ⎣⎢ ⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥ ==.% ),. (. % ) $. . .. $$.80 0 UBS is implicitly paying the Goals purchaser $8.00 per Cisco put. However, as shown below, the Black-Scholes price of such a put is $11.71 if σ = 80%. 6 This makes the Goals a bad buy. 6. The Cisco-linked Goals was issued during the NASDAQ crash of the early 2000s. The implied volatility of Cisco stock during this period varied between 80% and 120%. 454 Chapter 17 There is another way to look at the Goals. Consider a Goals purchaser who buys the Goals and also buys 25.641 puts on Cisco with T = 1.5, X = 39. This “engineered” combination of a Goals + 25.641 puts creates a risk-free security: 1 2 34 5 6 7 8 9 10 11 1213141516171819 20 21 2223 24 2526272829 30C B A % 0 2 . 5 e t a r e e r f - k s i r l a u n n A % 0 5 . 9 1 e t a r n o p u o C 0 0 0 , 1 t s o c l a i t i n I Conversion ratio: # of shares of Cisco received if share price is low 25.641 <-- =1000/39 Valuing the fixed payments at 5.20% Fixed payments Date Cash flow 23-Jan-01 (1,000.00) 0 5 . 7 9 1 0 - l u J - 3 2 <-- =$B$3*B4/2 23-Jan-02 97.50 23-Jul-02 1,097.50 PV of Goals bond component 205.11 <-- =XNPV(B2,B10:B13,A10:A13) Value of 25.641 puts embedded in Goals 205.11 <-- =B14 V 0 0 . 8 t u p r e p e u l a <-- =B16/25.641 This is what UBS is paying the Goals purchaser for the embedded puts. Valuing the puts with Black-Scholes e c i r p k c o t s t n e r r u C 5 2 6 . 2 4 S e c i r p e s i c r e x E 9 3 X e t a r t s e r e t n i e e r f - k s i R % 0 2 . 5 r ) s r a e y n i ( n o i t p o f o y t i r u t a m o t e m i T 5 . 1 T y t i l i t a l o v k c o t S % 0 8 a m g i S 1 7 . 1 1 e c i r p t u P <-- =BSPut(B21,B22,B24,B23,B25) ) \" o N \" , \" s e Y \" , 6 2 B > 7 1 B ( F I = - - < o N ? y u b d o o g a s l a o G e h t s IPRICING THE UBS GOALS IMPLICIT PUT Technical note : For didactic clarity, the computations use 5.2% as the interest rate for valuing both the bond component of the Goals (rows 10-14) and for the option valuation. Given a 2.6% semi-annual discrete interest rate, it would be technically more correct to use an equivalent continuously compounded interest rate of LN((1.026)^2) in the option computations. The reader can confirm that the effect of this correction is negligible. 455 The Black-Scholes Model Payoff Goals putsST +=−∗ − ↑ 25 6411 000 25 641 39 .$, . ( ) Payment on Goa als embedded puts Payment on puts p/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext +∗ − ↑25 641 39.( ) ST u urchased/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext=< ≥⎧ ⎨⎪ ⎪⎪⎪ ⎩⎪ ⎪⎪ ⎪$, $,1 00039 1 000 39S ST T In the spreadsheet below, we assume that the bought puts are priced using Black-Scholes and compare the rate of return on this “engineered” security to the risk-free rate. 1 2 3 4 5 6 7 8 9 10 11 1213 14 15 1617 18 1920C B A Initial cash flows Buy UBS security -1,000.00 Buy 25.641 puts -300.21 <-- =-25.641*BSPut(B16,B17,B19,B18,B20) Date Cash flow 23-Jan-01 (1,300.21) <-- =SUM(B3:B4) 23-Jul-01 97.50 23-Jan-02 97.50 23-Jul-02 1,097.50 IRR of above -0.43% <-- =XIRR(B8:B11,A8:A11) Inputs for Black-Scholes formula in cell B4 e c i r p k c o t s t n e r r u C 5 2 6 . 2 4 S e c i r p e s i c r e x E 9 3 X t s e r e t n i f o e t a r e e r f - k s i R % 0 2 . 5 r ) s r a e y n i ( n o i t p o f o y t i r u t a m o t e m i T 5 . 1 T y t i l i t a l o v k c o t S % 0 8 a m g i SCREATING A RISKLESS SECURITY WITH THE UBS GOALS AND 25.641 PUTS Cash flow of \"engineered\" security: GOALS + 25.641 bought puts Cell B13 uses the Excel function XIRR (see Chapter 33) to compute the annualized internal rate of return on the engineered security. Clearly this return is less than the alternative risk-free rate of return (5.2%), which can be earned in the market. This is an alternative confirmation of the fact that the Goals are a bad buy. 456 Chapter 17 THE SEC FILING FOR UBS AG $60,000,000 GOALS UBS AG $60,000,000 19.5% GOALs DUE JULY 23, 2002 ------------------------------------------------------------------ Each note being offered has the following terms: - - Issuer: UBS AG - - Issue: $60,000,000 USD principal amount of GOALs due July 23, 2002 linked to shares in the common stock of Cisco Systems, Inc. - - Coupon: 19.5% per annum, payable semi-annually in arrears on each January 23 and July 23 which shall be composed of (1) an interest coupon representing a rate of 5.2% per annum and (2) a coupon representing an option premium of 14.3% per annum - - Initial price of $39.00 per share, subject to underlying stock antidilution adjustments (strike price): - - Key dates: Trade: January 17, 2001 Settlement: January 23, 2001 Determination: July 18, 2002 Maturity: July 23, 2002 Proceeds at maturity are based on the closing price of Cisco Systems, Inc. common stock three business days before maturity: If the closing price of Cisco Systems, Inc. common stock is at or above the initial price per share of $39.00, holders will receive a cash payment equal to the principal amount of their GOALs. If the closing price of Cisco Systems, Inc. is lower than the initial price per share of $39.00, holders will receive 25.641 shares of Cisco Systems, Inc. common stock for each $1,000 principal amount of their GOALs (the stock redemption amount). Fractional shares will be paid in cash. The number of shares received for each $1,000 invested will be calculated by dividing the initial price per share of $39.00 into $1,000. The stock redemption amount and the initial price per share of $39.00 (strike price) may change due to stock splits or other corporate actions. Figure 17.3 From the SEC Filing for the UBS Cisco-linked Goals. 457 The Black-Scholes Model 17.8 Bang for the Buck with Options This section presents another application of the Black-Scholes formula. Suppose that you are convinced that a given stock will go up in a very short period of time. You want to buy calls on the stock that have a maximum “bang for the buck”—that is, you want the percentage profit on your option invest-ment to be maximal. Using the Black-Scholes formula, it is easy to show that you should: • Buy calls with the shortest possible maturity. • Buy calls that are most highly out of the money (i.e., with the highest exer- cise price possible). Here ’ s a spreadsheet illustration: 1 2 3 45 6 7 8 9 10 11 12 13 14 15 16 1718C B A S 25 Current stock price X 25 Exercise price r 6.00% Risk-free rate of interest T 0.5 Time to maturity of option (in years) Sigma 30% Stock volatility d1 0.2475 <-- (LN(S/X)+(r+0.5* sigma^2)*T)/(sigma*SQRT(T)) d2 0.0354 <-- d 1-sigma*SQRT(T) N(d 1) 0.5977 <-- Uses formula NormSDist(d 1) N(d 2) 0.5141 <-- Uses formula NormSDist(d 2) Call price 2.47 <-- S*N(d 1)-X*exp(-r*T)*N(d 2) Put price 1.73 <-- call price - S + X*Exp(-r*T): by put-call parity Call bang 6.0483 <-- =B11*B2/B14 Put bang 5.8070 <-- =NORMSDIST(-B8)*B2/B15\"BANG FOR THE BUCK\" WITH OPTIONS 458 Chapter 17 The “call bang” defined in cell B17 is simply the percentage change in the call price dividend by the percentage change in the stock price (in economics this is known as the “price elasticity”): Call bangCC SSC SS CNdS C=∂ ∂=∂ ∂=/ /()1 Similarly, for a put, the “bang for the buck” is defined by the formula below (of course the story behind the put “bang for the buck” is that you are con- vinced that the stock price will go down): Put bangPP SSP SS PNdS P=∂ ∂=∂ ∂=− −/ /() 1 This is defined in cell B18. To make the numbers easier to understand, we have dropped the minus sign, making the “put bang” = NdS P()−1 . The graph below shows the “bang for the buck” for both calls and puts: 0246810121416 15 17 19 21 23 25 27 29 31Profit elasticity--\"bang\" Option exercise price, X ($)\"Bang for the Buck\" The Price Elasticity of Calls and Puts as a Function of the Exercise Price X Calls Puts 459 The Black-Scholes Model If you play with the spreadsheet, you will see that the longer the time to maturity, the less the bang for the buck. (Another way of saying all of this is that the most risky options are the most out-of-the-money and the shortest-term options.) 2324 25 26272829 30 31323334 35 363738 39 404142DE F G HI Data table: Effect of S and T on \"call bang\" T--option time to exercise 6.0483 0.25 0.5 0.75 1 15 25.8856 14.1771 10.1696 8.1112 16 23.3305 12.9884 9.4123 7.5625 17 20.9954 11.9033 8.7218 7.0623 18 18.8590 10.9121 8.0914 6.6057 19 16.9052 10.0067 7.5154 6.1882 20 15.1222 9.1805 6.9891 5.8062 21 13.5007 8.4274 6.5082 5.4565 22 12.0334 7.7424 6.0691 5.1362 23 10.7137 7.1205 5.6682 4.8426 24 9.5347 6.5572 5.3025 4.5737 25 8.4893 6.0483 4.9691 4.3272 26 7.5694 5.5896 4.6655 4.1012 27 6.7664 5.1773 4.3892 3.8941 28 6.0706 4.8074 4.1379 3.7043 29 5.4720 4.4764 3.9094 3.5303 30 4.9598 4.1807 3.7019 3.3708Data table header: =B17 17.9 The Black (1976) Model for Bond Option Valuation 7 Black (1976) suggested an adaptation of the Black-Scholes model which is often used for simple valuation of options on bonds or forwards. Letting F stand for the forward price of an asset, the Black-Scholes equation given in section 17.2 is replaced by 7. This section is advanced and can be skipped on first reading. A full discussion of the pricing of options on bonds is beyond the scope of the current edition of this book. However, this very useful and often-used adaptation of the Black model is simple enough to attach to this chapter. 460 Chapter 17 Ce F N d X N drT=−−[( ) ( ) ] , 12 where dFX T T dd T12 212=+ =−ln( / ) σ σ σ The corresponding put price is given by: Pe X Nd F NdrT=− − −−[( ) ( ) ] 21 To use the Black (1976) model, consider the case of an option on a zero coupon bond, where the option maturity is T = 0.5. The option gives the holder the opportunity to buy the bond at time T for exercise price X = 130. Suppose that the risk-free interest rate is r = 4%. If the forward price of the bond to the exercise date is F = 133 and the volatility of the forward price is σ = 6%, then the pricing of the bond option using the Black (1976) model is given below. 1 2345 6 7 8 9 10 11 12C B A F 133.011 <-- Bond forward price X 130.000 <-- Exercise price t s e r e t n i f o e t a r e e r f - k s i R - - < % 0 0 . 4 r 5 . 0 T Sigma 6%<-- Bond forward price volatility, σ d1 0.5609 <-- =(LN(B2/B3)+B6^2*B5/2)/(B6*SQRT(B5)) d2 0.5185 <-- =B8-SQRT(B5)*B6 Call price 4.13 <-- =EXP(--B4*B5)*(B2*NORMSDIST(B8)-B3*NORMSDIST(B9)) Put price 1.02 <-- =EXP(-B4*B5)*(B3*NORMSDIST(-B9)-B2*NORMSDIST(-B8))USING THE BLACK (1976) MODEL TO PRICE A BOND OPTION Thus a call on the bond is worth 4.13 and a put is worth 1.02. Determining the Bond ’ s Forward Price The forward interest rate is the interest rate which can be locked in today for a loan in the future. In the example below, the current 7-year rate is 6% and the 4-year rate is 5%. By simultaneously creating a deposit in one maturity 461 The Black-Scholes Model and a loan in the other maturity, we create a security which has zero cash flows everywhere except at years 4 and 7: 1 2 34 5 6 7 89 10 11 12 13 14 151617 18 1920 21J I H G F E D C B A 7 W , y t i r u t a m d n o B 4 T , y t i r u t a m n o i t p O % 6 e t a r t n u o c s i d e r u p W r a e Y % 5 e t a r t n u o c s i d e r u p T r a e Y Discretely-compounded interest rates 012345678 6 3 . 0 5 1 - 0 0 . 0 0 1 % 0 0 . 6 t a t i s o p e d r a e y - 7 5 5 . 1 2 1 0 0 . 0 0 1 - % 0 0 . 5 t a n a o l r a e y - 4 Sum of above: A 3-year deposit at year 4 6 3 . 0 5 1 - 5 5 . 1 2 1 0 0 . 0 Discretely compounded forward interest rate from year 4 to year 7 7.35% <-- =(-I11/F11)^(1/(B2-B3))-1 Continuously-compounded interest rates 012345678 0 2 . 2 5 1 - 0 0 . 0 0 1 % 0 0 . 6 t a t i s o p e d r a e y - 7 4 1 . 2 2 1 0 0 . 0 0 1 - % 0 0 . 5 t a n a o l r a e y - 4 Sum of above: A 3-year deposit at year 4 0 2 . 2 5 1 - 4 1 . 2 2 1 0 0 . 0 Continuously compounded forward interest rate from year 4 to year 7 7.33% <-- =LN(-I19/F19)/(B2-B3)THE FORWARD INTEREST RATE The spreadsheet above shows two forward rate computations. If the interest rates are discretely compounded, then the forward rate from year 4 to year 7 is given by: Discretely c ompounded forward rate year tor r , 47=+() +()⎡ ⎣⎢1 177 44⎤ ⎤ ⎦⎥ − =+() +()⎡⎣⎢⎤⎦⎥ − =⎛ ⎝⎜⎞⎠⎟() ()13 7 4131 16 151 1 5036 1 2155/ /% % . .113 17 3 5/ .%() −= If the rates are continuously compounded (as in the Black model and most option calculations): Continously compounde d forward rate year toe er r,ln47=⎛ ⎝⎞⎠∗1 37 47 ∗ ∗⎡ ⎣⎢⎤⎦⎥ =⎛ ⎝⎞⎠⎛⎝⎞⎠= 4 1 31 52201 221473 3...% 462 Chapter 17 To apply the forward interest rate to the example in the previous subsection, assume that the bond in question has a maturity of 2 years and a face value at maturity of 147. Then if the 2-year interest rate is r 2 = 6% and the interest rate to the option ’ s maturity is r 0 . 5 = 4%, the forward price of the bond is F = 133.011, as shown below: 1 2 3 4 5 6 7 8 9C B A Bond's maturity, N 2 Option maturity, T 0.5 Bond maturity value 147 Interest rate to N 6% Interest rate to T 4% Bond forward price to T 133.011 <-- =B4*EXP(-B6*B2)*EXP(B7*B3)DETERMINING THE FORWARD PRICE OF THE BOND 17.10 Summary The Black-Scholes formula for pricing options is one of the most powerful innovations in finance. The formula is widely used both to price options and as a conceptual framework for analyzing complex securities. In this chapter we have explored the implementation of the Black-Scholes formula. Using “plain vanilla” Excel allows us to price Black-Scholes options; using VBA we are able define both the Black-Scholes price and the implied volatility for options. Finally, we showed how to use Black-Scholes to price structured products—combinations of options, stocks, and bonds. Exercises 1. Use the Black-Scholes model to price the following: • A call option on a stock whose current price is 50, with exercise price X = 50, T = 0.5, r = 10%, σ = 25%. • A put option with the same parameters. 463 The Black-Scholes Model 2. Use the data from exercise 1 and Data|Table to produce graphs that show: • The sensitivity of the Black-Scholes call price to changes in the initial stock price S . • The sensitivity of the Black-Scholes put price to changes in σ . • The sensitivity of the Black-Scholes call price to changes in the time to maturity T . • The sensitivity of the Black-Scholes call price to changes in the interest rate r . • The sensitivity of the put price to changes in the exercise price X . 3. Produce a graph comparing a call ’ s intrinsic value [defined as max( S − X , 0)] and its Black-Scholes price. From this graph you should be able to deduce that it is never optimal to exercise early a call priced by the Black-Scholes. 4. Produce a graph comparing a put ’ s intrinsic value [ = max( X − S ,0)] and its Black-Scholes price. From this graph you should be able to deduce that it may be optimal to exercise early a put priced by the Black-Scholes formula. 5. The table below gives prices for American Airlines (AMR) options on 12 July 2007. The option with exercise price X = $27.50 is assumed to be the at-the-money option. a. Compute the implied volatility of each option (use the functions CallVolatility and PutVolatility defined in the chapter). b. Graph these volatilities. Is there a volatility “smile”? 1 2 34 5 67 8 9 1011 1213 14 1516 17 18 19 2021AB C D E F G Stock price 27.82 Current date 12-Jul-07Expiration date 16-Nov-07 Time to maturity, 0.35 <-- =(B4-B3)/365 Interest 5% StrikeCall option priceImplied volatility StrikePut option priceImplied volatility 5 1 . 0 0 . 5 1 0 5 . 3 1 0 . 5 1 5 2 . 0 5 . 7 1 0 4 . 0 1 5 . 7 1 5 5 . 0 0 . 0 2 0 4 . 8 0 . 0 2 6 0 . 1 5 . 2 2 0 2 . 7 5 . 2 2 0 9 . 1 0 . 5 2 0 9 . 4 0 . 5 2 5 9 . 2 5 . 7 2 0 3 . 3 5 . 7 2 0 3 . 4 0 . 0 3 0 3 . 2 0 . 0 3 0 1 . 6 5 . 2 3 5 6 . 1 5 . 2 3 0 4 . 7 0 . 5 3 0 0 . 1 0 . 5 3 0 6 . 9 5 . 7 3 0 7 . 0 5 . 7 3 0 7 . 2 1 0 . 0 4 5 4 . 0 0 . 0 4 45.0 0.25 50.0 0.05AMR OPTIONS 464 Chapter 17 6. Re-examine the X = 17.50 call for AMR in the previous exercise. a. Is the call correctly priced? b. What price would be necessary for this call in order for the implied volatility to be 60%? 7. Use the Excel Solver to find the stock price for which there is the maximum difference between the Black-Scholes call option price and the option ’ s intrinsic value. Use the fol- lowing values: S = 45, X = 45, T = 1, σ = 40%, r = 8%. 8. As shown in this chapter, Merton (1973) shows that for the case of an asset with price S paying a continuously compounded dividend yield k , this leads to the following call option pricing formula: CS e N d X e N dkT rT=−−−() () ,12 where dSX r k T T dd T12 212=+− + =−ln( / ) ( ) σ σ σ a. Modify the BSCall and BSPut functions defined in this chapter to fit the Merton model. b. Use the function to price an at-the-money option on an index whose current price is S = 1500, when the option ’ s maturity T = 1, the dividend yield is k = 2.2%, its standard deviation σ = 20%, and the interest rate r = 7%. 9. On 12 July 2007 call and put options to purchase and sell 10,000 euros at $1.37 per euro are traded on the Philadelphia options exchange. The options’ expiration date is 20 Decem-ber 2007. If the dollar interest rate is 5%, the euro interest rate is 4.5% and the volatility of the euro is 6%, what should be the price of a call and a put? 10. Note that you can use the Black-Scholes formula to calculate the call option premium as a percentage of the exercise price in terms of S/X : C S Nd X e NdC XS XNd e NdrT rT=− ⇒ = −−−() () () ()12 1 2 where dSX r T T dd T12 212=++ =−ln( / ) ( ) σ σ σ Implement this in a spreadsheet. 465 The Black-Scholes Model 11. Note that you can also calculate the Black-Scholes put option premium as a percentage of the exercise price in terms of S/X: P S Nd X e NdP XeN dS XNdrT rT=− − + − ⇒ = − − −−−() () () () 12 2 1 where dSX r T T dd T12 212=++ =−ln( / ) ( ) σ σ σ Implement this in a spreadsheet. Find the ratio of S/X for which C/X and P/X cross when T = 0.5, σ = 25% , r = 10%. (You can use a graph or you can use Excel ’ s Solver.) Note that this crossing point is affected by the interest rate and the option maturity, but not by σ . 12. Consider a structured security of the following type: The purchaser invests $1,000 and in three years gets back the initial investment plus 95% of the increase in a market index whose current price is 100. The interest rate is 6% per year, continuously compounded. Assuming the security is fairly priced, what is the implied volatility of the market index? 1 8 Option Greeks 18.1 Overview In this chapter we discuss the sensitivities of the Black-Scholes formula to its various parameters. The “Greeks,” as they are called (because of the Greek letters used to denote most of them), are the partial derivatives of the Black-Scholes formula with respect to its arguments. They can be thought of as giving a measure of the riskiness of an option: • Delta, denoted by Δ , is the partial derivative of the option price with respect to the price of the underlying stock price: ΔΔCall PutSS=∂ ∂=∂ ∂Call Put, . Delta, Δ , can be thought of as a measure of the variability of the option ’ s price when the price of the underlying changes. • Gamma, Γ , is the second derivative of the option ’ s price with respect to the underlying stock. Gamma gives the convexity of the option price with respect to the stock price. For options priced by the Black-Scholes formula, the call and put have the same gamma: ΓΓCall PutSS=∂ ∂==∂ ∂2 22 2Call Put . • Vega is the sensitivity of the option price to the standard deviation of the underlying stock ’ s return σ : For no obvious reason, the Greek letter kappa, κ , is sometimes used to denote vega. Given the Black-Scholes formula, calls and puts have the same vega: κσσ=∂ ∂=∂ ∂Call Put . • Theta, θ , is change in the option ’ s value as the time to maturity decreases. We generally expect that options become less valuable with the passage of time (though this turns out not to be always true). Writing T as the option ’ s remaining time to maturity, we set theta equal to the negative of the derivative of the option price with respect to T : θθCall PutTT=−∂ ∂=−∂ ∂Call Put, . • Rho, ρ , measures the interest rate sensitivity of an option: ρρCall Putrr=−∂ ∂=−∂ ∂Call Put, . In this chapter we show you how to measure an option ’ s Greeks and how to use them in hedging. For generality we illustrate using the Merton model (Chapter 17, section 6), an extended version of the Black-Scholes formula which applies to both stocks paying a continuous dividend or to currencies. 468 Chapter 18 18.2 Defining and Computing the Greeks The “Greeks” are the sensitivities of an option price with respect to certain of its variables. In the table below we set out the Greeks for options defined on an underlying which pays a continuous dividend. As discussed in section 17.6, such options are priced using the Merton model. Of course, the standard Black-Scholes model is obtained from the Merton model by setting the dividend yield k = 0. Currency options can be priced by the Merton formula by setting S = current exchange rate, X = option exercise exchange rate, r = domestic interest rate, and k = foreign interest rate. The Merton version of the Black-Scholes formula is given by: CS e N d X e N d PS e N dX e N d kT rT kT rT=− =− − + −−− −−() () () ()12 12 where dS Xrk T T dd T12 212 =⎛ ⎝⎞⎠+− + =−ln ( / ) σ σ σ The table on page 469 gives the Greeks for this formula. The appendix to this chapter gives the VBA implementations of these functions. 469 Option Greeks Black-Scholes Greeks Measures Call Put Delta, written as either Δ or δ Price sensitivity of option ∂ ∂V S Δ Call = e − kT N ( d 1 ) Δ Put = e − kT ( N ( d 1 ) − 1) = − e kT N ( − d 1 ) Gamma, written as Γ Second-order price sensitivity ∂ ∂2 2V S . The option ’ s convexity with respect to underlying price. eN d STe STkT d kT − () −′=()/ 12 12 2 σσ π Vega, no Greek letter, though sometimes the Greek kappa κ is usedSensitivity to volatility ∂ ∂Vσ Se N d TST ekTdk T −−() − ′ = ()12 12 2π Theta, written as θ Time sensitivity −∂ ∂V T −′+ −− − −Se N d TkSe N d rXe N dkT kT rT()() ()1 1 22σ −′−− +−− − −Se N d TkSe N d rXe N dkT kT rT()() ()1 1 22σ Rho, ρ Interest rate sensitivity XTe − rT N ( d 2 ) − XTe − rT N ( − d 2 ) Reminders: dSX r k T Tdd T N x ex 12 212 2 1 22 =+− +⎛ ⎝⎜⎞⎠⎟ =− ′=−()ln( / ) ,, ( ) σ σσπ 470 Chapter 18 The Greeks are implemented in the spreadsheet below, which shows both the brute-force calculation of each Greek as well as a VBA function implementation. 1 234567 8 9 10 11 12 13 14 1516 17 181920 21 2223 24 25262728 29 303132C B A e c i r p k c o t s t n e r r u C 0 0 1 S e c i r p e s i c r e x E 0 9 X ) s r a e y n i ( n o i t p o f o y t i r u t a m o t e m i T 5 . 0 Tr 6.00% Risk-free rate of interest k 2.00% Dividend yield Sigma 35% Stock volatility d 1 0.6303 <-- =(LN(B2/B3)+(B5-B6+0.5*B7^2)*B4)/(B7*SQRT(B4)) d2 0.3828 <-- d 1-sigma*SQRT(T) N(d 1) 0.7357 <-- Uses formula NormSDist(d 1) N(d 2) 0.6491 <-- Uses formula NormSDist(d 2) Call price 16.1531 <-- =B2*EXP(-B6*B4)*B12-B3*EXP(-B5*B4)*B13 16.1531 <-- =bsmertoncall(B2,B3,B4,B5,B6,B7) Put price4.4882<-- =B3*EXP(-B5*B4)*NORMSDIST(-B10)-B2*EXP(-B6*B4 )*NORMSDIST (-B9) 4.4882 <-- =bsmertonput(B2,B3,B4,B5,B6,B7) Delta 0.7284 <-- =EXP(-B6*B4)*NORMSDIST(B9) Gamma 0.0131 <-- =EXP(-(B9^2)/2-B6*B4)/(B2*B7*SQRT(2*B4*PI())) Vega 22.8976 <-- =B2*SQRT(B4)*EXP(-(B9^2)/2)*EXP(-B6*B4)/SQRT(2*PI()) Theta -9.9587 <-- =-B2*EXP(-(B9^2)/2-B6*B4)*B7/SQRT(8*B4*PI())+B6*B2*EXP(- B6*B4 )*B12-B5*B3*EXP (-B5*B4 )*B13 Rho 28.3446 <-- =B3*B4*EXP(-B5*B4)*NORMSDIST(B10) Delta 0.7284 <-- =deltacall(B2,B3,B4,B5,B6,B7) Gamma 0.0131 <-- =optiongamma(B2,B3,B4,B5,B6,B7) Vega 22.8976 <-- =vega(B2,B3,B4,B5,B6,B7) Theta -9.9587 <-- =Thetacall (B2,B3,B4,B5,B6,B7 ) Rho 28.3446 <-- =rhocall(B2,B3,B4,B5,B6,B7)BLACK-SCHOLES GREEKS Uses Merton model for a continuously dividend-paying stock Call Greeks, brute force Call Greeks, VBA formulas 471 Option Greeks Greek calculations for puts are given below: 20 212223 24 252627 28 293031 32G F E Delta -0.2616 <-- =-EXP(-B6*B4)*NORMSDIST(-B9) Gamma 0.0131 <-- =EXP(-(B9^2)/2-B6*B4)/(B2*B7*SQRT(2*B4*PI())) Vega 22.8976 <-- =B2*EXP(-(B9^2)/2-B6*B4)*SQRT(B4)/SQRT(2*PI()) Theta -6.6984 <-- =-B2*EXP(-(B9^2)/2-B6*B4)*B7/SQRT(8*B4*PI())-B6*B2*EXP(- B6*B4 )*(1-B12 )+B5*B3*EXP (-B5*B4 )*(1-B13 ) Rho -15.3255 <-- =-B3*B4*EXP(-B5*B4)*NORMSDIST(-B10) Delta -0.2616 <-- =deltaput(B2,B3,B4,B5,B6,B7) Gamma 0.0131 <-- =optiongamma(B2,B3,B4,B5,B6,B7) Vega 22.8976 <-- =vega(B2,B3,B4,B5,B6,B7) Theta -6.6984 <-- =Thetaput (B2,B3,B4,B5,B6,B7 ) Rho -15.3255 <-- =rhoput(B2,B3,B4,B5,B6,B7)Put Greeks, brute force Put Greeks, VBA formulas Excel can be used to examine the sensitivities of the Greeks to various parameters. We give some examples below. Figures 18.1 and 18.2 show the deltas as functions of the stock price and as functions of the moneyness of the call option. -1-0.8-0.6-0.4-0.200.20.40.60.81 02 0 4 0 6 0 8 0 1 0 0 1 2 0 1 4 0DeltaStock priceCall and Put Deltas as Func tions of Stock Price Call delta Put delta Figure 18.1 As a call or a put becomes more in-the-money, the delta tends toward + 1 for a call and –1 for a put. Essentially, the call or put price moves in tandem with the underlying stock price. An extremely out-of-the-money put or call has a delta = 0. 472 Chapter 18 0.00.10.20.30.40.50.60.70.80.91.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0Call delta Time to option expiration, TCall Delta, Time to Maturity, and Moneyness Out of the money At the money In the money Figure 18.2 As the option ’ s maturity T increases, the delta of an at-the-money and an out-of-the-money call increases, whereas the delta of an in-the-money call decreases. Figures 18.3 and 18.4 show the theta of a call as a function of the stock price and the time to option expiration: 473 Option Greeks -12-11-10-9-8-7-6-5-4-3-2-10123456 0 20 40 60 80 100 120 140ThetaStock priceCall and Put Thetas as Fun ctions of Stock Price Option Exercise Price = 100 Call theta Put theta Figure 18.3 Very in-the-money puts can have a positive theta, meaning that as the time to maturity gets shorter, the put gains in value. Other than this case, options generally have a negative theta, meaning that they lose value as the time to maturity decreases. -25-20-15-10-50 0 . 10 . 20 . 30 . 40 . 50 . 60 . 70 . 80 . 91 . 0ThetaTime to option maturityCall Theta, Time to Maturity, and Moneyness Out of the money At the money In the money Figure 18.4 Calls always have negative theta (meaning that they lose value as the time to maturity decreases). However, the rate at which they lose value varies with the moneyness of the call. 474 Chapter 18 18.3 Delta Hedging a Call 1 Delta hedging is a fundamental technique in option pricing. The idea is to replicate an option by a portfolio of stocks and bonds, with the portfolio pro-portions determined by the Black-Scholes formula. Suppose we decide to replicate an at-the-money European call option which has 12 weeks to run until expiration. The stock on which the option is written has S 0 = $40 and exercise price X = $35, the interest rate is r = 4%, and the stock ’ s volatility is σ = 25%. The Black-Scholes price of this option is 5.44: 1 2 3456789 10 11 12 1314151617181920 21 222324252627282930 31 3233343536H G F E D C B A S, current stock price 40.00X, exercise 35.00 r, interest rate 2.00% k, dividend yield 0.00% T, expiration 0.2308 <-- =12/52 % 5 2 a m g i S ) 7 B , 5 B , 4 B , 6 B , 3 B , 2 B ( l l a c n o t r e m s b = - - < 4 4 . 5 e u l a v S B Weeks until expirationTime until expirationStock priceStock = =C13*deltacall(C13,$B$3, B13 ,$B$4 ,0,$B$7 )Investment in stockBondPorfolio valuePortfolio cash flow 4 4 . 5 4 4 . 5 4 0 . 0 3 - 8 4 . 5 3 0 0 0 . 0 4 8 0 3 2 . 0 2 1 11 0.2115 38.042 30.19 -3.5498 -26.50 3.69 0.00 10 0.1923 38.884 33.17 2.3135 -28.82 4.35 0.00 9 0.1731 38.568 32.62 -0.2814 -28.55 4.07 0.00 8 0.1538 38.501 32.87 0.3044 -28.87 4.00 0.00 7 0.1346 37.768 30.87 -1.3759 -27.50 3.36 0.00 6 0.1154 39.383 36.54 4.3488 -31.86 4.67 0.00 5 0.0962 40.406 39.29 1.8031 -33.68 5.61 0.00 4 0.0769 39.626 38.34 -0.1859 -33.51 4.84 0.00 3 0.0577 39.216 38.20 0.2496 -33.77 4.43 0.00 2 0.0385 39.745 39.58 0.8646 -34.65 4.93 0.00 1 0.0192 41.522 41.52 0.1756 -34.83 6.69 0.00 5 3 . 8 9 9 1 . 3 4 0 0 0 0 . 0 0 Hedged position payoff 8.35 <-- =G25 Actual call payoff 8.20 <-- =MAX(C25-B3,0) Formulas Cell D14: =C14*deltacall(C14,$B$3,B14,$B$4,0,$B$7) Cell E14: =D14-D13*C14/C13Cell F14: =F13*EXP($B$4/52)-E14Cell G14: =D14+F14Cell H14: =(D13*C14/C13-D14)+F13*EXP($B$4*(B13-B14))-F14DELTA HEDGING A CALL Hedging portfolioInitial pricing of call using Black-Scholes formula At initial date, the stock and bond positions are set using the Black- Scholes formula: Stock = SN(d1), Bond = -X*exp(-rT)N(d2). At each subsequent date t, the stock position is adjusted to St*Δcall. The bond position is adjusted so that the net cash flow of the portfolio is zero. At the final date, the stock and bond portfolios are liquidated. 1. This topic is discussed again in Chapter 29. 475 Option Greeks Note that we use the formula BSMertoncall but with the dividend yield k = 0%, so that this is, in effect, a regular BS call option. In the spreadsheet above, we create this option by replicating, on a week- to-week basis, the BS option pricing formula using delta hedging. • At the beginning, 12 weeks before the option ’ s expiration, we determine our stock/bond portfolio according to the formula Call SN d Xe N drT=−−() ()12 , so that we have a dollar amount SN d()1 of shares in the portfolio and have borrowing of Xe N drT−()2 . Having determined the portfolio holdings at the beginning of the 12-week period, we now determine our portfolio holdings for each of the successive weeks as follows: • In each successive week we set the stock holdings in the portfolio according to the formula SN d() 1 , but we set the portfolio borrowing so that the net cash flow of the portfolio is zero. Note that SN d S Call ()1=Δ , hence the name “delta hedging.” • At the end of the 12-week period, we liquidate the portfolio. The delta hedge would be perfect if we rebalanced our portfolio continu- ously. However, here we have rebalanced only weekly. Had we a perfect hedge, the portfolio would have paid off max[ , ] SXTerminal − 0 (cell B27); the actual hedge payoff (cell B28) is slightly different. Using the technique of Data Table on a blank cell explained in Chapter 31, we replicate this simula-tion to check the deviation between the desired payoff and the hedge position payoff: 476 Chapter 18 18.4 Hedging a Collar A collar is an option strategy designed to protect the holder of a package of shares against possible price losses. The usual collar is a combination of a written call plus a purchased put, designed so that the net cost of the position is zero. Thus the collar provides costless protection to its holder. Here ’ s an example: On 1 January 2008, a bank ’ s client holds 5,000,000 shares of XYZ Corp. Each share is currently worth $55. Because the stock is currently restricted, the client cannot sell the shares until 1 year from now. However, he is worried that the stock price will decline, and hence he desires to purchase a collar. The client asks an investment bank to design the following package: • He wants to buy a put on the shares with T = 1 year and exercise price x Put = $49.04 • He wants to write a call on the shares with T = 1 year and exercise price X C al l = $70.00. The exercise prices have been set so that the Black-Scholes value of the call and the put are equal: 12 1314 15 16 17 18 19 2021 22 23 24 25 26 2728 29 30 31 32 33KL M N O P Q R S T U V SimulationDelta hedge payoffMax(ST- X,0)Hedge— actual payoff 5.4024 5.3669 0.0355 <-- =L13-M13, data table header 1 3.4743 3.5591 -0.08482 0.3252 0.0000 0.3252 3 0.0971 0.0000 0.0971 4 -0.0193 0.0000 -0.0193 5 11.8112 12.2037 -0.3925 6 3.5610 3.4877 0.0733 7 10.6744 10.7604 -0.08608 8.6602 8.8020 -0.1417 9 10.3202 10.2422 0.0780 10 4.3520 4.2742 0.077711 2.3202 2.1388 0.1814 12 0.0123 0.0000 0.0123 13 6.4462 6.2541 0.1920 14 2.7854 3.5831 -0.797815 10.6339 10.7932 -0.1592 16 3.1851 3.0200 0.1651 17 1.8986 2.0582 -0.1596 18 13.6581 13.8167 -0.1586 19 7.9048 7.8179 0.0869 20 7.5720 7.6190 -0.0471-1.0-0.8-0.6-0.4-0.20.00.20.4 1 2 3 4 5 6 7 8 9 1 01 11 21 31 41 51 61 71 81 92 02 1Hedge—Actual Payo ﬀ 477 Option Greeks Given the X C all = 70 for the call, the put exercise price was determined using Solver : 1 23456 7 89 1011121314 15D C B A Call Put 0 0 . 5 5 0 0 . 5 5 S 4 0 . 9 4 0 0 . 0 7 X 1 1 T r, interest 4.00% 4.00% k, dividend yield 0.00% 0.00%Sigma 40% 40% BS option value 4.74 4.74 <-- =bsmertonput(C3,C4,C5,C6,C7,C8) Call minus put 0.00 <-- =B10-C10 =bsmertoncall(B3,B4,B5,B6,B7,B8)COLLAR: THE PURCHASER OWNS A WRITTEN CALL AND A BOUGHT PUT 478 Chapter 18 The point of the collar is to give the purchaser upside potential with limited downside risk. In the example above, for example, the terminal payoffs of the put, the call, and the collar are given by: -20-10010203040506070 0 1 02 03 04 05 06 07 08 09 0 Terminal stock price, STCollar Payoff Put payoﬀ Call payoﬀ Collar payo ﬀ Collar + Stock posi Ɵon In addition to his collar, the client has a portfolio of the shares. The payoffs to the holder of the collar plus the shares are never less than $49. This is, of course, the protection that the client was seeking. 479 Option Greeks A Slightly Longer Story Even though the Black-Scholes value of the collar is initially zero, actually the investment bank sold the collar to the client for $5. There are several reasons why the client might want to pay this: • Perhaps there is low liquidity in the options (this is often the case in longer- term options), so that the bank is actually supplying a valuable liquidity service. • It might be that the options do not actually exist—either because the particu- lar long-term options in question are not marketed or perhaps because there are no options on the particular underlying stock (this is often the case for specific portfolios). In this case the bank is actually creating the options under-lying the collar by creating an appropriate portfolio of stocks and bonds and by changing the portfolio proportions over time (see next subsection). The creation and constant monitoring of this portfolio is a service worth paying for. Delta Hedging the Collar: The Bank ’ s Problem The client for the collar is short a call and long a put. The bank wants to make a similar investment, so that it will parallel the client ’ s portfolio and have the money to pay off the client at the maturity of his collar. In terms of the -20-10010203040506070 0 1 02 03 04 05 06 07 08 09 0 Terminal stock price, STCollar Payoff + Stock Value to Holder Holder Never Gets Less Than Collar X put Collar payoff Collar + stock 480 Chapter 18 Black-Scholes formula this turns out to mean that the net position of the bank is a short stock financed by a bond investment: −−− ↑[ ( [] ) ( [] ) ]SN d X X e N d XrT 12 Call Call Call Short call/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /horizcurlybracketext/horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /dncurlybracketleft/dncurlybracketmid/horizcurlybracketext−− + −− ↑SN d X X e N d XrT( [ ]) ( [ ]) 12 Put Put Put Long put/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext =− + − ↑SNd X N d X(([ ] ) ( [ ] ) ) 11 Call Put Short stock k position Call Call Put/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext ++ −−e X N d X XNdrT[( [ ] ) ( 22 2[] ) ]XPut Long bond position↑/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext We rewrite this in terms of Greeks: −+ − ↑SNd X N d X(([ ] ) ( [ ] ) ) 11 Call Put Short stock position/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /dncurlybracketright/dncurlybracketright /horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext −+ −− ↑eX N d X X N d XrT[( [ ] ) ( [ ] ) ] Call Call Put Put Long bon22 dd position Call Call Put Put/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext =− −SX X(( ) (ΔΔ )))([ ] ) ([ ] )++−⎡ ⎣⎢⎤ ⎦⎥−eXN d X XNd XrTCall Call Put Put2 2 Here ’ s a run of a simulated position over the course of a year. In this simula- tion the position is updated every Δ t = 0.05; assuming 250 trading days in a year, this is approximately every 12 days. 481 Option Greeks 1 2 3 4 5 67 8 9 10 11121314 15 16171819 20 21222324 25 26272829 30 31323334 35 36373839 40G F E D C B A 0 0 . 5 5 S Xcall 70.00 Xput 49.04 % 0 0 . 4 r k, dividend yield 0.00 % 0 4 a m g i S Time until expiration Stock priceStock =- B10*(deltacall(B10,$B$3,A10,$B$5,$B$ 6,$B$7)- deltaput(B10,$B$4,A10,$B$5,$B$6,$B$ d n o B ) ) 7Portfolio valuePortfolio cash flow 0 0 . 0 0 0 . 0 8 2 . 6 3 8 2 . 6 3 - 0 0 . 5 5 0 0 . 1 0 0 . 0 2 7 . 4 - 9 5 . 7 3 1 3 . 2 4 - 6 2 . 2 6 5 9 . 0 0 0 . 0 5 1 . 3 - 4 4 . 6 3 9 5 . 9 3 - 6 0 . 0 6 0 9 . 0 0 0 . 0 0 0 . 0 1 - 5 8 . 0 4 5 8 . 0 5 - 7 5 . 0 7 5 8 . 0 0 0 . 0 0 7 . 8 - 1 5 . 9 3 1 2 . 8 4 - 8 8 . 8 6 0 8 . 0 0 0 . 0 8 8 . 5 1 - 6 0 . 6 4 4 9 . 1 6 - 4 2 . 9 7 5 7 . 0 0 0 . 0 4 3 . 6 1 - 3 4 . 6 4 8 7 . 2 6 - 6 9 . 9 7 0 7 . 0 0 0 . 0 7 6 . 9 1 - 4 5 . 9 4 1 2 . 9 6 - 2 3 . 4 8 5 6 . 0 0 0 . 0 4 4 . 3 1 - 5 1 . 4 4 8 5 . 7 5 - 4 8 . 6 7 0 6 . 0 0 0 . 0 7 0 . 1 1 - 6 3 . 1 4 3 4 . 2 5 - 0 8 . 3 7 5 5 . 0 0 0 . 0 5 4 . 2 2 - 7 0 . 6 5 2 5 . 8 7 - 3 9 . 9 8 0 5 . 0 0 0 . 0 3 4 . 3 2 - 7 5 . 7 5 1 0 . 1 8 - 9 1 . 1 9 5 4 . 0 0 0 . 0 9 4 . 7 1 - 4 2 . 3 5 3 7 . 0 7 - 3 6 . 4 8 0 4 . 0 0 0 . 0 5 0 . 2 1 - 0 2 . 7 4 4 2 . 9 5 - 4 2 . 8 7 5 3 . 0 0 0 . 0 7 3 . 9 1 - 3 9 . 8 5 0 3 . 8 7 - 4 0 . 8 8 0 3 . 0 0 0 . 0 8 1 . 9 2 - 4 1 . 7 6 2 3 . 6 9 - 0 2 . 9 9 5 2 . 0 0 0 . 0 7 3 . 5 2 - 9 0 . 7 6 6 4 . 2 9 - 1 4 . 5 9 0 2 . 0 0.15 121.46 -121.44 70.98 -50.47 0.00 0.10 136.73 -136.73 71.13 -65.60 0.00 0.05 130.28 -130.28 71.28 -59.00 0.00 0 9 . 7 6 - 2 3 . 9 3 1 0 0 . 0 Check: Collar payoff to client at time 0Short call payoff -69.32 <-- =-MAX(B30-B3,0) Long put payoff 0.00 <-- =MAX(B4-B30,0) ) 4 3 B : 3 3 B ( M U S = - - < 2 3 . 9 6 - l a t o T Payoff to bank from delta hedge -67.90 <-- =E30 Terminal cash flow to bank 1.42 <-- =-B35+B38DELTA HEDGING A COLLAR =(C10*B11/B10- C11)+D10*EXP($B$5*(A10-A11)) Formula in cell F11 = =(C10*B11/B10-C11)- (D11-D10*EXP($B$5*(A10-A11)))ٳ =C29*B30/B29+D29*EXP($B$5*(A29-A30)) 482 Chapter 18 Here ’ s what happens in this spreadsheet: • The initial (row 10) stock and bond positions are determined by the Black- Scholes formula. The stock position is − S ( Δ Call ( X Call ) − Δ Put ( x Put )) and the bond position is e − rT [ X Call N ( d 2 [ X Call ])] + X Put N ( − d 2 [ X Put ]). Not surprisingly, the net value of this portfolio is zero—this is the way we determined the collar X C all and X P ut . • In each of the subsequent rows, the stock position is determined by the Black-Scholes formula, and the bond position is determined so that the net cash flow of the position is zero: Bonds Stock positionStock price Stock priceStock p tt t=∗ − − −__ __ 1 1oosition t ↑ ↑Determined by Black-Scholes Cash flow i/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext nnto stocks/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext +∗ − Bond position t _ exp( 1 rrt t∗ ↑ −Δ) Value today of bond position 1/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext • At the terminal date (row 30), the portfolio is liquidated: Stock positio n Stock positionStockprice Terminal PreviousTe__ =∗rrminal Previous PreviousStockprice Bond position r t +∗ ∗ _ exp( ) Δ • At the terminal date, the purchaser of the collar collects on his short position in the call and his long position in the put (cell B35). The bank collects its position value (cells E30 or B38). The bank ’ s net cash flow on termination is the difference between these two (cell B40). We can use Data Table on a blank cell to show many simulations. For details see the spreadsheet for this chapter. Below we show a graph that gives the bank ’ s net profit in 21 simulations of the delta hedging strategy for the collar. 483 Option Greeks Making the Collar Gamma Neutral As the option gets closer to expiration, the hedge position can become sensitive to small changes in the stock price, meaning that the gamma of the collar can grow enormously. There are two solutions to moderate the gamma of the collar: • We can increase our hedge frequency as we get closer to the collar expiration date. • We can change our hedge strategy in order to temper the hedge gamma, as we get closer to the option maturity. Below we explore both solutions. Increasing the Hedge Frequency The main problem of the hedge seems to be for the dates close to the end of the expiration period. Since the initial options have maturity T = 1, this means that we have to be very careful during the last two months of the hedging period. Delta hedging the position more often may work, though it is easy to come up with counter-examples: -3-2-1012345 1 2 3 4 5 6 7 8 9 1 01 11 21 31 41 51 61 71 81 92 02 1Net Bank Pro ﬁt from Delta Hedge of Collar 21 Simula Ɵons 484 Chapter 18 1 2 3 4 5 67 8 9 10 11 121314 15 161718 19 20212223 24 252627 28 293031 32 333435 36 373839 40F E D C B A 0 0 . 5 5 S Xcall 70.00 Xput 49.04 % 0 0 . 4 r k, dividend yield 2.00% % 0 4 a m g i S Time until expiration Stock priceStock =- B10*(deltacall(B10,$B$3,A10,$B$5,$B$ 6,$B$7)- deltaput(B10,$B$4,A10,$B$5,$B$6,$B$ d n o B ) ) 7Porfolio valuePortfolio cash flow 0 0 . 0 0 0 . 0 9 2 . 8 1 9 2 . 8 1 - 0 0 . 5 5 0 2 . 0 0 0 . 0 7 4 . 0 0 9 . 8 1 3 4 . 8 1 - 2 6 . 3 5 9 1 . 0 0 0 . 0 0 3 . 0 5 8 . 7 1 5 5 . 7 1 - 2 1 . 4 5 8 1 . 0 0 0 . 0 4 1 . 0 4 7 . 6 1 0 6 . 6 1 - 5 6 . 4 5 7 1 . 0 0 0 . 0 1 5 . 1 6 9 . 2 2 4 4 . 1 2 - 5 1 . 0 5 6 1 . 0 0 0 . 0 8 0 . 1 8 5 . 0 2 9 4 . 9 1 - 8 1 . 1 5 5 1 . 0 0 0 . 0 2 5 . 1 2 7 . 2 2 0 2 . 1 2 - 5 0 . 0 5 4 1 . 0 0 0 . 0 4 0 . 1 0 8 . 9 1 6 7 . 8 1 - 0 2 . 1 5 3 1 . 0 0 0 . 0 3 2 . 1 5 6 . 0 2 2 4 . 9 1 - 1 7 . 0 5 2 1 . 0 0 0 . 0 4 0 . 2 5 1 . 6 2 1 1 . 4 2 - 1 6 . 8 4 1 1 . 0 0 0 . 0 5 9 . 0 9 4 . 9 1 5 5 . 8 1 - 3 8 . 0 5 0 1 . 0 0 0 . 0 8 0 . 2 3 7 . 8 2 5 6 . 6 2 - 5 7 . 7 4 9 0 . 0 0 0 . 0 6 6 . 3 0 7 . 7 3 4 0 . 4 3 - 4 9 . 4 4 8 0 . 0 0 0 . 0 0 9 . 2 6 3 . 5 3 6 4 . 2 3 - 7 9 . 5 4 7 0 . 0 0 0 . 0 8 3 . 6 5 7 . 5 4 7 3 . 9 3 - 6 0 . 1 4 6 0 . 0 0 0 . 0 4 8 . 6 9 5 . 6 4 5 7 . 9 3 - 0 6 . 0 4 5 0 . 0 0 0 . 0 6 0 . 9 3 3 . 7 4 7 2 . 8 3 - 5 3 . 8 3 4 0 . 0 0 0 . 0 2 8 . 0 1 0 4 . 7 4 8 5 . 6 3 - 0 6 . 6 3 3 0 . 0 0 0 . 0 6 1 . 1 1 3 4 . 7 4 7 2 . 6 3 - 8 2 . 6 3 2 0 . 0 0 0 . 0 3 7 . 1 1 5 4 . 7 4 2 7 . 5 3 - 3 7 . 5 3 1 0 . 0 * 9 2 C = - - < 1 1 . 1 1 6 3 . 6 3 0 0 . 0 B Check: Collar payoff to client at time 0 Short call payoff 0.00 <-- =-MAX(B30-B3,0) Long put payoff 12.68 <-- =MAX(B4-B30,0) ) 4 3 B : 3 3 B ( M U S = - - < 8 6 . 2 1 l a t o T Payoff to bank from delta hedge 11.11 <-- =E30 Terminal cash flow to bank -1.56 <-- =-B35+B38MODERATING THE COLLAR GAMMA This example starts with T = 0.20 and hedges every Delta_t = 0.01 485 Option Greeks Repeated simulation of this hedge shows that it works quite well. Making the Hedge Gamma Neutral Another strategy is to add another asset to the hedge position, in an effort to neutralize the gamma. In the example below we have added an out-of-the-money put to the position to neutralize the large call gamma: 1 2 3 4567 8 9 1011121314 15 16171819202122 23 2425262728E D C B A Call Put Another put 0 0 . 8 4 0 0 . 8 4 0 0 . 8 4 S 0 0 . 5 3 4 0 . 9 4 0 0 . 0 7 X % 0 0 . 5 % 0 0 . 5 % 0 0 . 5 r % 0 0 . 0 % 0 0 . 0 % 0 0 . 0 ld e i y d n e d i v i d , k 0 0 2 0 . 0 0 0 2 0 . 0 0 0 2 0 . 0 T % 0 0 . 0 4 % 0 0 . 0 4 % 0 0 . 0 4 a m g i S 0 0 . 0 6 6 . 1 0 0 . 0 s e c i r p n o i t p O ) 8 D , 6 D , 5 D , 7 D , 4 D , 3 D ( t u p a t l e d = - - < 0 0 0 0 . 0 4 0 3 6 . 0 - 0 0 0 0 . 0 a t l e D ) 8 D , 6 D , 5 D , 7 D , 4 D , 3 D ( a m m a g = - - < 2 7 8 , 8 1 1 , 1 0 7 8 0 , 2 7 4 , 4 9 4 a m m a G Bank position: short call with X = 70.00 + long put with X = 49.04 + put with X = 35.00 1 - 0 0 . 0 7 = X , l l a C 1 4 0 . 9 4 = X , t u P 8 3 9 . 1 4 4 0 0 . 5 3 = X , t u P } ) 2 1 D : 2 1 B , ) 9 1 B : 7 1 B ( E S O P S N A R T ( T C U D O R P M U S = { - - < 4 0 3 6 . 0 - a t l e d n o i t i s o P } ) 3 1 D : 3 1 B , ) 9 1 B : 7 1 B ( E S O P S N A R T ( T C U D O R P M U S = { - - < 3 5 5 1 . 0 a m m a g n o i t i s o P Position cost Without second put 1.6604 <-- =B17*B10+B18*C10 With second put 1.6604 <-- =B17*B10+B18*C10+B19*D10 Traditional collar delta -0.6304 <-- =-B12+C12COLLAR HEDGE, DELTA & GAMMA in this example we costlessly neutralize a large call gamma This can be done at very little cost, since the put in question is almost cost- less (cell D10). Of course, it may not always be possible to costlessly neutral- ize the gamma. In this case we will have to make some compromises. 18.5 Summary In this chapter we have explored the sensitivities of the option pricing formula to its various parameters. Using these Greeks, we have delved into the intrica-cies of delta hedging, a useful technique for replicating an option position with 486 Chapter 18 a combination of stocks and bonds. The interested reader should know that there is much more which can be said about this topic. Good starting places for further reading are Hull (2006) and Taleb (1997). An extensive collection of option pricing formulas including Greeks can be found in Haug (2006). Exercises 1. Produce a graph similar to the second panel of Figure 18.2 for puts. 2. Figure 18.4 shows the call theta as a function of time to maturity. Produce a similar graph for puts. 3. Although θ is generally negative, there are cases (typically of high interest rates) where it can be positive: • An in-the-money put with a high interest rate • An in-the-money call on a currency which has a high interest rate (or—equivalently—an in-the-money call on a stock with a very high dividend payout rate). Find two examples. Appendix: VBA for Greeks The VBA for the Greeks used in this chapter: Black-Scholes Functions Throughout the chapter we use the Merton version of the Black-Scholes formula for pricing options with a continuous dividend yield (see Chapter 17 for details). The VBA connected with this model is given below. Function dOne(stock, exercise, time, _ interest, divyield, sigma) dOne = (Log(stock / exercise) + _ (interest - divyield) * time) / _ (sigma * Sqr(time)) + 0.5 * sigma * _ Sqr(time) End Function 487 Option Greeks Function dTwo(stock, exercise, time, _ interest, divyield, sigma) dTwo = dOne(stock, exercise, time, _ interest, divyield, sigma) - sigma * _ Sqr(time) End Function Function BSMertonCall(stock, exercise, time, _ interest, divyield, sigma) BSMertonCall = stock * Exp(-divyield * _ time) * Application.NormSDist _ (dOne(stock, exercise, time, _ interest, divyield, sigma)) - exercise * _ Exp(-time * interest) * Application.NormSDist _ (dTwo(stock, exercise, time, interest, _ divyield, sigma)) End Function ‘Put pricing function uses put-call parity theorem Function BSMertonPut(stock, exercise, time, _ interest, divyield, sigma) BSMertonPut = BSMertonCall(stock, exercise, _ time, interest, divyield, sigma) + _ exercise * Exp(-interest * time) - _ stock * Exp(-divyield * time) End Function 488 Chapter 18 Defining the Normal Distribution The option pricing functions above use the old version of the Excel function NormSDist . In Excel 2010 and onward, there is another function Norm.S.Dist(x,False/True) . If the second parameter in this function is set to False , it computes the normal density; with the parameter set to True , it com- putes the normal distribution function. 2 The VBA writing of these functions is Application.Norm_S_Dist(x,0 or 1) . Without regard for consistency, we have used both versions of this func-tion in our VBA for Greeks. Sometimes it is convenient to use a homemade function for the normal probability density defined below: ’ The standard normal probability density, ’ this is N’(x) Function normaldf(x) normaldf = Exp(-x ∧ 2 / 2) / _ (Sqr(2 * Application.Pi())) End Function Defining the Greeks Below we give the Greeks in VBA: Function DeltaCall(stock, exercise, time, interest, _ divyield, sigma) DeltaCall = Exp(-divyield * time) * _ Application.NormSDist(dOne(stock, exercise, _ time, interest, divyield, sigma)) End Function 2. In Excel instead of False or True, we can also use 0 or 1. When using these functions in VBA, 0 or 1 is mandatory. 489 Option Greeks Function DeltaPut(stock, exercise, time, interest, _ divyield, sigma) DeltaPut = -Exp(-divyield * time) * _ Application.NormSDist(-dOne(stock, exercise, _ time, interest, divyield, sigma)) End Function In VBA there is a native function called Gamma which has nothing to do with options. Hence we use OptionGamma to define the Greek that refers to the option ’ s convexity with respect to the underlying price, ∂∂22VS . Function OptionGamma(stock, exercise, time, _ interest, divyield, sigma) temp = dOne(stock, exercise, time, _ interest, divyield, sigma) OptionGamma = Exp(-divyield * time) * _ Application.Norm_S_Dist(temp, 0) / _ (stock * sigma * Sqr(time)) End Function Function Vega(stock, exercise, time, _ interest, divyield, sigma) Vega = stock * Sqr(time) * _ normaldf(dOne(stock, exercise, _ time, interest, divyield, sigma)) _ * Exp(-divyield * time) End Function 490 Chapter 18 Function ThetaCall(stock, exercise, time, _ interest, divyield, sigma) ThetaCall = -stock * normaldf _ (dOne(stock, exercise, time, _ interest, divyield, sigma)) * _ sigma * Exp(-divyield * time) / _ (2 * Sqr(time)) + divyield * stock * _ Application.NormSDist(dOne(stock, _ exercise, time, interest, _ divyield, sigma)) * Exp(-divyield * time) _ - interest * exercise * Exp(-interest * _ time) * Application.NormSDist _ (dTwo(stock, exercise, time, _ interest, divyield, sigma)) End Function Function ThetaPut(stock, exercise, time, _ interest, divyield, sigma) ThetaPut = -stock * normaldf _ (dOne(stock, exercise, _ time, interest, divyield, sigma)) * _ sigma * Exp(-divyield * time) / _ (2 * Sqr(time)) - divyield * stock _ * Application.NormSDist(-dOne(stock, _ exercise, time, interest, divyield, _ sigma)) * Exp(-divyield * time) _ + interest * exercise * Exp _ (-interest * time) * Application.NormSDist _ (-dTwo(stock, exercise, time, _ interest, divyield, sigma)) End Function 491 Option Greeks Function RhoCall(stock, exercise, time, _ interest, divyield, sigma) RhoCall = exercise * time * _ Exp(-interest * time) * _ Application.NormSDist(dTwo _ (stock, exercise, time, interest, _ divyield, sigma)) End Function Function RhoPut(stock, exercise, time, _ interest, divyield, sigma) RhoPut = -exercise * time * _ Exp(-interest * time) * _ Application.NormSDist(-dTwo _ (stock, exercise, time, interest, _ divyield, sigma)) End Function 1 9 Real Options 19.1 Overview The standard net present value (NPV) analysis of capital budgeting values a project by discounting its expected cash flows at a risk-adjusted cost of capital. This discounted cash flow (DCF) technique is by far the most widely used practice for evaluating capital projects, be they acquisitions of companies or the purchases of machines. However, standard NPV analysis does not take account of the flexibility inherent in the capital budgeting process: Part of the complexity of the capital budgeting process is that the firm can change its decision dynamically, depending on the circumstances. Here are two examples: 1. A firm is considering replacing some of its machines with a new type of machine. Instead of replacing all the machines together, it can first replace one machine. Based on the performance of the first machine replaced, the firm can then decide whether to replace the rest of the machines. This “option to wait” (or perhaps the “option to expand”) is not valued in the standard NPV process. It is essentially a call option. 2. A firm is considering investing in a project which will produce (uncertain) cash flows over time. One option—not valued in the standard NPV frame-work—is to abandon the project if its performance is not satisfactory. The abandonment option is, as we see below, a put option which is implicit in many projects. It is also sometimes called the “option to contract scale.” There are many other real options. In the leading book on the valuation of real options, Trigeorgis (1996) lists the following common real options: • The option to defer or to wait with developing a natural resource or build a plant. • The time-to-build option (staged investment): At each stage the investment can be re-evaluated and (possibly) abandoned or expanded. • The option to alter operating scale (expand, contract, shut down, or restart). • The option to abandon. • The option to switch inputs or outputs. • The growth option—an early investment in a project constitutes an option to “get into the market” at a later date. 494 Chapter 19 The recognition of real options is an important extension of the NPV tech- niques. However, modeling and valuing real options is more difficult than modeling and valuing standard cash flows by the DCF method. Our examples below illustrate these difficulties. Often it is best to implement real options by recognizing that the DCF technique misjudges the value of a project because it ignores the project ’ s real options. Our usual conclusion will be that real options add to the value of a project, and that the NPV thus underestimates the true value. 19.2 A Simple Example of the Option to Expand In this section we give a simple example of the option to expand. Consider ABC Corp., which has six widget machines. ABC is considering replacing each of the old machines with a new machine that costs $1,000. The new machines have a 5-year life. The anticipated cash flows for the new machine are given below. 1 1 2 34 5 678G F E D C B A 5 4 3 2 1 0 r a e Y 0 5 1 0 0 2 0 0 4 0 0 3 0 2 2 0 0 0 1 - e n i h c a m e l g n i s f o F C Discount rate for machine cash flows (risk-adjusted) 12% % 6 e t a r t n u o c s i d s s e l k s i R Present value of machine's future cash flows 932.52 <-- =NPV(B5,C3:G3) 3 B + ) 3 G : 3 C , 5 B ( V P N = - - < 8 4 . 7 6 - e n i h c a m e l g n i s f o V P NTHE OPTION TO EXPAND The financial analyst working on the replacement project has estimated a cost of capital for the project of 12%. Using these anticipated cash flows and the 12% cost of capital, the analyst has concluded that the replacement of a single old machine by a new machine is unprofitable, since the NPV is negative: −++()+()+()+() ↑1000220 11 2300 11 2400 11 2200 11 2150 11 22345. .... TThe present value of the machine’s future cash flow is $932 25 267 48 .. /dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext=− 1. These cash flows are the incremental cash flow of replacing a single old machine by a new machine. The computations include taxes, incremental depreciation, and the sale of the old machine. 495 Real Options Now comes the (real options) twist. The line manager in charge of the widget line says, “I want to try one of the new machines for a year. At the end of the year, if the experiment is successful, I want to replace five other similar machines on the line with the new machines.” Does this change our previously negative conclusion about replacing a single machine? The answer is “yes.” To see this, we now realize that what we have is a package: • Replacing a single machine today. This has an NPV of − 67.48. • The option of replacing five more machines in one year. Suppose that the risk-free rate is 6%. Then we view each such option as a call option on an asset which has current value S equal to the present value of the machine ’ s future cash flows. As can be seen in cell B7 above, this present value is S = 932.52. The exercise price of this option is X = 1,000. Of course these call options can be exercised only if we purchase the first machine now. 2 Suppose we assume that the Black-Scholes option pricing model can price this option. In this case we have: 1 2 3 4 56789 1011 12 13 14 151617 18 19 20 21222324G F E D C B A 5 4 3 2 1 0 r a e Y 0 5 1 0 0 2 0 0 4 0 0 3 0 2 2 0 0 0 1 - e n i h c a m e l g n i s f o F C Discount rate for machine cash flows (risk-adjusted) 12% % 6 e t a r t n u o c s i d s s e l k s i R Present value of machine's future cash flows 932.52 <-- =NPV(B5,C3:G3) 3 B + ) 3 G : 3 C , 5 B ( V P N = - - < 8 4 . 7 6 - e n i h c a m e l g n i s f o V P N 5 r a e y t x e n t h g u o b s e n i h c a m f o r e b m u N Option value of single machine purchased in one more year 143.98 <-- =B24 1 1 B * 0 1 B + 8 B = - - < 9 3 . 2 5 6 t c e j o r p l a t o t f o V P N Black-Scholes Option Pricing Formula s F C e n i h c a m f o V P 2 5 . 2 3 9 S t s o c e n i h c a M = e c i r p e s i c r e x E 0 0 . 0 0 0 1 X t s e r e t n i f o e t a r e e r f - k s i R % 0 0 . 6 r ) s r a e y n i ( n o i t p o f o y t i r u t a m o t e m i T 1 T y t i l i t a l o V - - < % 0 4 a m g i S d1 0.1753 <-- (LN(S/X)+(r+0.5*sigma^2)*T)/(sigma*SQRT(T)) d2 -0.2247 <-- d 1 - sigma*SQRT(T) N(d 1) 0.5696 <--- Uses formula NormSDist(d 1) N(d 2) 0.4111 <--- Uses formula NormSDist(d 2) 8 9 . 3 4 1 e c i r p l l a c S B = e u l a v n o i t p O <-- S*N(d 1)-X*exp(-r*T)*N(d 2)THE OPTION TO EXPAND 2. What we ’ re really doing is pricing the cost of learning! 496 Chapter 19 As cell B12 shows, the value of the whole project is 652.39. Our conclusion: Buying one machine today, and knowing that we have the option to purchase five more machines in one year is a worthwhile project. One critical element here is the volatility. The lower the volatility (i.e., the lower the uncertainty), the less worthwhile this project is: 27 28 293031 32 3334 35 363738 39 404142BC D E F G HI σ 652.39 <-- =B12 , data table header 1% -63.48 10% 97.1620% 283.09 30% 468.40 40% 652.3950% 834.59 60% 1,014.54 70% 1,191.81Data Table Project Value as Function of Sigma -20002004006008001,0001,2001,400 0% 10% 20% 30% 40% 50% 60% 70% Sigma This is not very surprising: The value of the project as a whole comes from our uncertainty about the actual cash flows 1 year from now. The less this uncertainty is (measured by σ ), the less valuable the project will be. Sidebar: Is Black-Scholes the Appropriate Valuation Tool for Real Options? The answer is almost certainly no: Black-Scholes is not the appropriate tool. However, the Black-Scholes model is by far the most numerically tractable (i.e., easiest) model we have for valuing options of any kind. In valuing real options we often use the Black-Scholes model, realizing that at best it can give an approximation to the actual option value. Such is life. Having said this, you should realize that the assumptions of the Black- Scholes option valuation model—continuous trading, constant interest rate, no exercise before final option maturity—are not really appropriate to the real options considered in this chapter. In many cases real options involve what, in 497 Real Options a securities option context, would be considered dividend-paying securities and/or early exercise. Two examples: • The staged-investment real option, when we have the opportunity to expand or contract the investment over time, is intrinsically an option with early exercise. • When an option to abandon an investment exists, as long as the investment is still in place and not abandoned, it continues to pay “dividends,” in the form of cash flows. We can only hope that the Black-Scholes model gives an approximation to the option value intrinsic in the real options. 19.3 The Abandonment Option Consider the following capital budgeting project: 7 8 9 10 11 12 1314 15ABCDE Project cash flows 150 100 80 -50 80 -50 -60 As you can see, the initial cost of this project is 50. In one period the project will produce cash flows of either $100 or − $50; that is, under certain circum- stances, it will lose money. Two periods hence the project again has chances of either losing money (in the worst case) or making money. Valuing the Project In order to value the project, we use the state prices from option pricing. 3 The state price q u is the price today of $1 to be paid in the succeeding period in 3. See discussion below on how to calculate these state prices. 498 Chapter 19 The methodology is to calculate state-dependent present value factors (how this is done is discussed below) and to multiply these factors times the indi- vidual state-dependent cash flows. Each node of the tree is discounted by the relevant state price for the node; for example the cash flow of 80 which occurs at date 2 is discounted by q U q D . The NPV of the project is the sum of all the discounted cash flows plus the initial cost (cell B31). The Abandonment Option Can Enhance Value Now suppose that we can abandon the project at date 1 if its cash flow “threat-ens” to be − 50; suppose, furthermore, that this abandonment means that all subsequent cash flows will also be zero. As the picture below shows, this option to abandon the project enhances its value: 1 2 3 4 5 6 7 89 1011 12 13141516 17 18192021 22 23242526 27 28293031AB C D E F G H I J K L s e c i r p e t a t S a t a d t e k r a M Expected market return 12% qU 0.3087 <-- =(1+B5-B9)/((1+B5)*(B8-B9)) Sigma of market return 30% qD 0.6347 <-- =(B8-1-B5)/((1+B5)*(B8-B9)) % 6 e t a r e e r f - k s i R One-period \"up\" and \"down\" of market ) 4 B ( P X E = ' p U ' s i e v i t a n r e t l a d i l a v a t a h t e t o n , ) 4 B + 3 B ( P X E = - - < 2 6 9 1 2 5 . 1 p U ) 4 B - ( P X E = ' n w o D ' s i e v i t a n r e t l a d i l a v a t a h t e t o n , ) 4 B - 3 B ( P X E = - - < 7 2 5 3 8 . 0 n w o D s r o t c a f e u l a v t n e s e r p t n e d n e p e d - e t a t S s w o l f h s a c t c e j o r P 2 ^ 3 E = - - < 3 5 9 0 . 0 0 5 1 7 8 0 3 . 0 0 0 1 4 E * 3 E = - - < 9 5 9 1 . 0 0 8 1 0 5 - 4 E * 3 E = - - < 9 5 9 1 . 0 0 8 7 4 3 6 . 0 0 5 - 2 ^ 4 E = - - < 8 2 0 4 . 0 0 6 - State-by-state present value 14.2981 <-- =E14*K14 30.8740 15.6755 <-- =E16*K16 -50 15.6755 <-- =E18*K18 -31.7328 -24.1673 <-- =E20*K20 Net present value -29.38 <-- =SUM(A23:E29)PRICING AN ABANDONMENT OPTION =C15*I15the “up” state; and the price q d is the price today of $1 to be paid in the “down” state. The spreadsheet fragment below shows all the relevant details, leading to a project valuation of − $29.38 (implying rejection of the project): 499 Real Options Thinking about this further, it is clear that it might even be worthwhile to pay to abandon the project . Here ’ s what the project looks like when we pay $10 to abandon it in the troublesome state (this payment can be thought of as representing the cost of closing down a facility, etc.): 34 35363738394041 42 434445AB C D E F G H I J K L t n e m n o d n a b a h t i w e u l a v t n e s e r P t n e m n o d n a b a h t i w s w o l f h s a C 4 1 K * 6 3 E = - - < 1 8 9 2 . 4 1 0 5 1 0 4 7 8 . 0 3 0 0 1 6 1 K * 8 3 E = - - < 5 5 7 6 . 5 1 0 8 0 5 - 0 5 - 0 0 0 0 0 0 Present value with abandonment 10.85 <-- =SUM(G36:K42) 3435363738394041 42 434445AB C D E F G H I J K L t n e m n o d n a b a h t i w e u l a v t n e s e r P t n e m n o d n a b a h t i w s w o l f h s a C 4 1 K * 6 3 E = - - < 1 8 9 2 . 4 1 0 5 1 0 4 7 8 . 0 3 0 0 1 6 1 K * 8 3 E = - - < 5 5 7 6 . 5 1 0 8 0 5 - 0 5 - 0 0 6 6 4 3 . 6 - 0 1 - 0 0 Present value with abandonment 4.50 <-- =SUM(G36:K42) Abandonment When We Sell the Equipment Another possibility is, of course, that “abandonment” means selling the equip- ment. In this case there might even be a positive cash flow from abandonment. As an example, suppose that we can sell the asset for $15: 34 35 36 37 38 39 40414243 44 45AB C D E F G H I J K L t n e m n o d n a b a h t i w e u l a v t n e s e r P t n e m n o d n a b a h t i w s w o l f h s a C 4 1 K * 6 3 E = - - < 1 8 9 2 . 4 1 0 5 1 0 4 7 8 . 0 3 0 0 1 6 1 K * 8 3 E = - - < 5 5 7 6 . 5 1 0 8 0 5 - 0 5 - 0 0 8 9 1 5 . 9 5 1 0 0 Present value with abandonment 20.37 <-- =SUM(G36:K42) 500 Chapter 19 Determining the State Prices The method we have used above to determine the state prices was explained in greater detail in Chapter 16. We assume that in each period the market portfolio (by which we mean some large, diversified stock market portfolio such as the S&P 500) moves either “Up” or “Down”; the size of these moves is determined by the mean return μ of the market portfolio and by the standard deviation σ of the market portfolio ’ s returns. Assuming that the returns on the market portfolio have mean μ = 12% and standard deviation of returns σ = 30%, we have—in the above examples—calculated Up Down =+ [] == − [] = exp . , exp . μσ μσ 15 3 08 4 Denote by q U the price today for one dollar in the “Up” state in one period and denote by q D the price today for one dollar in the “Down” state in one period. Then—as explained in Chapter 16—the state prices are calculated by solving the system of linear equations: 1 1 1=∗+∗ +=+qU p q D o w n rqqUD UD The solution to this system of equations is: qRD o w n RU pD o w nqUp R RU pD o w nUD=− ∗−()=− ∗−(), This method is illustrated in the above spreadsheet: 2 3 4 5 6 7 8 9AB C D E F G H I s e c i r p e t a t S a t a d t e k r a M Expected market return 12% qU 0.3087 <-- =(1+B5-B9)/((1+B5)*(B8-B9)) Sigma of market return 30% qD 0.6347 <-- =(B8-1-B5)/((1+B5)*(B8-B9)) % 6 e t a r e e r f - k s i R One-period \"up\" and \"down\" of market ) 4 B ( P X E = ' p U ' s i e v i t a n r e t l a d i l a v a t a h t e t o n , ) 4 B + 3 B ( P X E = - - < 2 6 9 1 2 5 . 1 p U ) 4 B - ( P X E = ' n w o D ' s i e v i t a n r e t l a d i l a v a t a h t e t o n , ) 4 B - 3 B ( P X E = - - < 7 2 5 3 8 . 0 n w o D 501 Real Options Alternative State Price Determinations An alternative method of calculating the state prices is to try to match them to the project ’ s cost of capital. Reconsider the project discussed above, and suppose that the actual probability of each state ’ s occurrence is ½. Further-more, suppose that the risk-free rate is 6%. Finally, assume that the project ’ s discount rate—if it has no options whatsoever—is 22%. Then we can calculate the project ’ s NPV without real options as 12.48: 1 2 34567 8 9 1011121314 15 1617181920 21 22 23AB C D E F G H Project cost of capital 22% <-- This is the discount rate for the project if it has no options Risk-free rate 6% Project cash flows 150 100 80 -50 80 -50 -60 Project expected cash flows : Assumes equal state probabilities 2 1 0 r a e Y Expected CF -50 25 62.5 Project NPV 12.48 <-- =NPV(B2,C17:D17)+A9 State prices qU 0.4241 <-- =1/(1+B3)-B23 qD 0.5193 <-- Determined by SolverMATCHING THE STATE PRICES TO THE COST OF CAPITAL =AVERAGE(C7:C1) =AVERAGE(E6:E12) In cells B22 and B23 we look for state prices q U and q D , which have two properties: 1. They are consistent with the risk-free interest rate. This means that qqRUD+= =11 10 6. . 2. The state prices give the same NPV for the project as that calculated by the cost of capital. 502 Chapter 19 The second requirement means that we have to use the Excel Solver to determine the state prices. Here ’ s what the solution looks like (the discussion of how Solver was used follows the next spreadsheet): 21 22 23 24 25 26 272829303132333435 36 37383940AB C D E F G State prices q U 0.4241 <-- =1/(1+B3)-B23 qD 0.5193 <-- Determined by Solver Project state-by-state discounting 26.9797 <-- =E6*B22^2 42.4105 17.6187 <-- =E8*B22*B23 -50 17.6187 <-- =E10*B22*B23 -25.9646 -16.1798 <-- =E12*B23^2 State-by-state NPV 12.48 <-- =SUM(A27:E33) Target cell (0.00) <-- =B38-B18=C7*B22 =C11*B23 To determine the state prices, we use the Solver ( Data|Solver ): 503 Real Options One more note: You can also use Goal Seek ( Tools|Goal Seek ) to get the same result. However, Excel ’ s Goal Seek does not remember its previous set- tings, meaning that each time you repeat this calculation you will have to reset the cell references. Here ’ s what the Goal Seek dialog box looks like: 19.4 Valuing the Abandonment Option as a Series of Puts The example above shows how and why the abandonment option can have value. It also illustrates another, more troublesome, feature of the abandonment option, namely, that it may be very difficult to value. While it is difficult enough to project expected cash flows, it is even more difficult to project state-by-state cash flows and state prices for a complex project. A possible compromise in the valuation of an abandonment option is to value a project as a series of cash flows plus a series of Black-Scholes put options. Consider the following example: You are valuing a 4-year project with the expected cash flows given below and with a risk-adjusted discount rate of 12%. As you can see, the project has a negative NPV: 1 2 34 5 6 7F E D C B A Project cash flows Year 01234 0 0 4 0 0 3 0 0 2 0 0 1 0 5 7 - w o l f h s a C Risk-adjusted discount rate 12% The project's cost of capital ) 4 F : 4 C , 6 B ( V P N + 4 B = - - < 3 5 . 3 3 - s n o i t p o t u o h t i w V P NSTANDARD DCF PROJECT VALUATION 504 Chapter 19 Suppose that we can abandon the project at the end of any of the next 4 years, selling the equipment for 300. Although this abandonment option is an American option and not a Black-Scholes option, we value it as a series of Black-Scholes put options. In each case we suppose that we first get the year-end cash flow; we then value the abandonment option on the remaining project value. • End of year 1 : The asset ’ s expected value at the end of year 1 will be the discounted value of its future expected cash flows: 702 44 . = 200 11 2300 11 2400 11 223. ..+()+() . The abandonment option means that we can get $300 for the asset during the next 3 years. Suppose that the value has a volatil-ity of 50%; then valuing this option as a Black-Scholes put with 1 year to maturity gives its value as 19.53. The following spreadsheet uses the VBA function BSPut defined in Chapter 17: 1 2 345 6 789 10111213 14 1516F E D C B A Project cash flowsYear 01234 0 0 4 0 0 3 0 0 2 0 0 1 0 5 7 - w o l f h s a C Risk-adjusted discount rate 12% The project's cost of capital ) 4 F : 4 C , 6 B ( V P N + 4 B = - - < 3 5 . 3 3 - s n o i t p o t u o h t i w V P N Valuing the year-1 abandonment putValue of project, end year 1 702.44 <-- =NPV(B6,D4:F4) a l u m r o f t u p n i e c i r p e k i r t s e k i L 0 0 3 e u l a v t n e m n o d n a b A Time to option maturity (years) 3 % 6 e t a r e e r f - k s i R % 0 5 a m g i S ) 4 1 B , 3 1 B , 2 1 B , 1 1 B , 0 1 B ( t u p s b = - - < 3 5 . 9 1 e u l a v t u PABANDONMENT VALUE--DETAILS OF YEAR 1 CALCULATION • End of year 2 : We have a put option with exercise price $300 on an asset worth 586 73300 11 2400 11 22.. .=+() . Valuing the abandonment option as a Black- Scholes put with 2 years to exercise gives its value (when σ = 50%) as 17.74. • End of year 3 : We have a put option with exercise price $300 on an asset worth 357 14400 11 2..= . The option has 1 more year remaining to its life and is worth 32.47. 505 Real Options • End of year 4 : The asset is worthless in terms of future anticipated cash flows, but it can be abandoned for $300 (this is thus its scrap or salvage value). The abandonment option is worth $300. In the spreadsheet below the asset has been valued as the sum of: • The present value of the future expected cash flows. As we showed above, this is − $33.53. • The present value (at the risk-free rate) of a series of Black-Scholes puts. This value is $299.10. The total value of the project is − $33.53 + $299.10 = $265.57. 1 2 34 5 6789 1011121314 15 16 17 18 192021 22G F E D C B A Project cash flows Year 01234 0 0 4 0 0 3 0 0 2 0 0 1 0 5 7 - w o l f h s a C Risk-adjusted discount rate 12% The project's cost of capital 5 . 3 3 - s n o i t p o t u o h t i w V P N 3 <-- =NPV(B6,C4:F4)+B4 % 0 5 a m g i S % 6 e t a r e e r f - k s i R t n u o m a s i h t r o f r a e y y n a f o d n e t a d e n o d n a b a e b n a c t c e j o r P 0 0 3 e u l a v t n e m n o d n a b A NPV of cash flows at RADR -33.53 <-- =B8 Value of abandonment option 299.10 <-- =NPV(B11,C20:F20) 4 1 B + 5 1 B = - - < 7 5 . 5 6 2 e u l a v t n e s e r p d e t s u j d A End-year value of remaining ca sh flows 702.44 586.73 357.14 0.00 0 0 . 0 0 3 7 4 . 2 3 4 7 . 7 1 3 5 . 9 1 e u l a v n o i t p o t u PFunction in cell D19: =NPV($B$6,E4:$F$4) Function in cell D20: =bsput(D19,$B$12,$F$3- D3,$B$11,$B$10)PRICING AN ABANDONMENT OPTION AS A SERIES OF PUTS 19.5 Valuing a Biotechnology Project 4 One of the interesting features of the biotech industry is the existence of highly valued firms that have no revenues. It is common understanding that the value 4. A version of this example originally appeared in Benninga and Tolkowsky (2002). 506 Chapter 19 of those firms is in their future cash-flow opportunities. Therefore, understand- ing the translation of qualitative investment opportunities into quantitative valuation is of great importance when valuing those firms. In this section we use the real option method to value a biotechnology project and to illustrate the application of the real option approaches. Consider the following story. 5 A firm is considering the initiation of research into a new drug. It knows that there are three stages to the drug ’ s development: • In the discovery phase , the firm does preliminary research about the viabil- ity of the idea. This research takes 1 year and costs $1,000 at the beginning of the year. With 50% probability the results will be positive enough to proceed to the next stage of research. • If the discovery phase yields success, then the drug goes into the clinical phase , in which the drug is tested. This stage lasts 1 year and costs $2,000 at the beginning of the year, and with a probability of 30% yields enough positive results to proceed to the next stage. • If the drug passes the clinical phase successfully, then it goes into the market stage , in which it is sold. This phase costs $15,000 per year (at the beginning of each year) and on average lasts 5 years. On average, a successful drug can be expected to start the marketing phase with income of $20,000. This income grows with annual mean 10% and standard deviation σ = 100%. The expected return on a project of this type is 25%. We assume that this is the cost of capital of the project in the case of a discounted cash flow (DCF) valuation. 5. We have made the story simple enough to fit an understandable spreadsheet. For a somewhat more complicated story in the same spirit, see Kellogg and Charnes (2000). 507 Real Options Since the project ’ s net present value is negative, the DCF approach indicates that it should not be undertaken. Using a Real Options Approach An alternative method for estimating the present value of proceeds is to plot the project ’ s cash flows on a binomial tree. This is done below: 1 2 34 5 6789 101112131415AB C D E F G H Discount rate 25%Growth 10% Year Stage Cost Income Net ProbabilityExpected cash flow 0 Discovery -1,000 0 -1,000 1 -1,000 <-- =F6*E6 1 Clinical -2,000 0 -2,000 0.5 -1,000 <-- =F7*E7 2 Clinical -2,000 0 -2,000 0.5 -1,000 3 Marketing -15,000 20,000 5,000 0.15 750 4 Marketing -15,000 22,000 7,000 0.15 1,0505 Marketing -15,000 24,200 9,200 0.15 1,3806 Marketing -15,000 26,620 11,620 0.15 1,7437 Marketing -15,000 29,282 14,282 0.15 2,142 Project NPV -268 <-- =G6+NPV(B2,G7:G13)BIOTECH PROJECT EXPECTED CASH FLOWS The Expected Value of the Project Using Traditional DCF Analysis If we estimate the value of this project using traditional discounted cash flow analysis, we get a negative net present value for the project: 508 Chapter 19 1 2 3 4 5678 9 10 11 12 13 141516 17 18192021 22 23242526 27 282930 31 32333435 36 37383940 41 42434445 46 47AB C D E F G H I JK Marketing phase, Initial revenue 20,000 The expected return and variance of return : y b n e v i g s i 0 0 0 , 5 1 t s o c l a u n n a , g n i t e k r a M % 0 1 d e t c e p x E 0 0 0 , 2 t s o c l a u n n a l a c i n i l C Initial, annual cost 1,000 σ 100% ) 5 H + 4 H ( P X E = - - < % 0 0 3 p U ) 5 H - 4 H ( P X E = - - < % 1 4 n w o D State prices q u 0.2816 q d 0.6618 <-- =1/1.06-B11 Net cash flows 1,614,017 <-- =B2*B7^4-B3 527,253 3 B - 8 B * 3 ^ 7 B * 2 B = - - < 4 6 4 , 5 0 2 0 0 5 , 5 6 1 45,083 58,386 3 B - 2 ^ 8 B * 2 ^ 7 B * 2 B = - - < 6 3 8 , 4 1 8 2 4 , 9 0 0 0 , 5 -6,869 -5,068 3 B - 3 ^ 8 B * 7 B * 2 B = - - < 2 6 9 , 0 1 - 4 9 6 , 1 1 - 6 5 6 , 3 1 - 0 0 0 , 2 - -14,454 <-- =B2*B8^4-B3 -2,000 -1,000 7 6 5 4 3 2 1 e n i l e m i T State prices (to start of market phase) 0.0001 <-- =B11^J27 0.0005 ) 3 , 4 ( N I B M O C * 2 1 B * 6 ^ 1 1 B = - - < 3 1 0 0 . 0 8 1 0 0 . 0 0.0063 0.0035 ) 2 , 4 ( N I B M O C * 2 * 2 1 B * 5 ^ 1 1 B = - - < 1 4 1 0 . 0 3 8 0 0 . 0 3 2 2 0 . 0 0.0148 0.0083 ) 1 , 4 ( N I B M O C * 3 ^ 2 1 B * 4 ^ 1 1 B = - - < 3 7 0 0 . 0 8 9 0 0 . 0 5 6 0 0 . 0 6 1 3 9 7 0 . 0 0.0043 <-- =B11^3*B12^4*COMBIN(4,0) 0.2816 1 Binomial tree valuation -268 <-- =SUMPRODUCT(B14:J25,B30:J41) Target 8 6 2 - n o i t a u l a v F C D DCF valuation - binomial tree value 0 <-- Should be zero for correct state pricesBIOTECH PROJECT, BINOMIAL TREE FOR THE CASH FLOWS We use the Excel function Sumproduct to do this computation. 509 Real Options A Note About the State Prices The net present value of the proceeds from the project is the product of the net cash flows and the appropriate state prices: NPV CF q qNumber of paths to nodejt Uj Dtj jt t=∗ () ∗() ∗⎛ ⎝⎜⎞⎠⎟− = =∑ ∑ 0 07 where CF jt denotes the proceeds from the project at date t and state j , where j is the number of up moves. As explained in Chapter 16, in the standard binomial model, the state price for a node is qqt jUj Dnj() ∗()⎛ ⎝⎜⎞⎠⎟− , where n is the time at which the node occurs, j is the number of Up steps needed to get to the node, and t j⎛⎝⎜⎞⎠⎟ is the number of paths to reach the node. The latter expression is computed in Excel by using the function Combin(n,j) . However, for the real options model above, the number of paths to each node is slightly different, since the beginning of the tree (the initial and clinical states) are accessible via only one path. In the spreadsheet above, the prices q U and q D were computed (using Solver ) so that the present value of the project on the binomial tree equals that of the DCF valuation and that the equilibrium condition qqUD+=1 10 6. holds. 510 Chapter 19 The Real Options Approach The real options approach to R&D recognizes that at each stage in the project, the managers can choose whether to continue the project or not. They do this by comparing the value and costs of continuation. In option terminology, at each stage, the manager exercises her continuation option if the value from exercising the option exceeds the exercise price. In the spreadsheet below, we have eliminated obvious negative cash flows from the marketing stage, taking Here ’ s the Solver screen: 511 Real Options Another Note About State Prices When we eliminate states in the real option approach, we must also adjust the number of paths to each node to account for the fact that some states are no longer reachable. This has been done in the above spreadsheet. For example the state in cell J32 (highlighted) is now reachable by one fewer path. 19.6 Summary Recognizing that capital budgeting should include option aspects of projects is clear and obvious. Valuing these options is often difficult. In this chapter we have tried to emphasize the intuitions and—insofar as is possible—to give some implementation of the valuation. 1 2 3 4 5 67 8 9 10 11 12 13 14 15 16 17 18 19 20 2122 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 394041 42 43 44K J I H G F E D C B A Marketing phase, Initial revenue 20,000 The expected return and variance of return : y b n e v i g s i 0 0 0 , 5 1 t s o c l a u n n a , g n i t e k r a M % 0 1 d e t c e p x E 0 0 0 , 2 t s o c l a u n n a l a c i n i l C Initial, annual cost 1,000 σ 100% % 0 0 3 p U % 1 4 n w o D State prices q u 0.2816 q d 0.6618 Net cash flows 1,614,017 <-- =B2*B7^4-B3 527,253 3 B - 8 B * 3 ^ 7 B * 2 B = - - < 4 6 4 , 5 0 2 0 0 5 , 5 6 1 45,083 58,386 3 B - 2 ^ 8 B * 2 ^ 7 B * 2 B = - - < 6 3 8 , 4 1 8 2 4 , 9 0 0 0 , 5 -2,000 -2,000 -1,000 7 6 5 4 3 2 1 e n i l e m i T State prices (to start of market phase) 0.0001 <-- =B11^J27 0.0005 ) 1 - ) 3 , 4 ( N I B M O C ( * 2 1 B * 6 ^ 1 1 B = - - < 0 1 0 0 . 0 8 1 0 0 . 0 0.0063 0.0059 ) 2 - ) 1 , 4 ( N I B M O C ( * 2 * 2 1 B * 5 ^ 1 1 B = - - < 7 4 0 0 . 0 7 6 1 0 . 0 3 2 2 0 . 0 0.079316 0.2816 1 Binomial tree valuation 229 <-- =SUMPRODUCT(B14:J25,B30:J41)BIOTECH PROJECT, OPTION-ADJUSTED BINOMIAL TREE FOR THE CASH FLOWScare to also eliminate the subsequent cash flows and to make an adjustment to the state prices (more on that below): 512 Chapter 19 Exercises 1. Your company is considering purchasing 10 machines, each of which has the following expected cash flows (the entry in B3 of − $550 is the cost of the machine): 2 3F E D C B A 4 3 2 1 0 r a e Y CF of single machine -550 100 200 300 400 You estimate the appropriate discount rate for the machines as 25%. a. Would you recommend buying just one machine, if there are no options effects? b. Your purchase manager recommends buying one machine today and then—after seeing how the machine operates—reconsidering the purchase of the other 9 machines in 6 months. Assuming that the cash flows from the machines have a standard deviation of 30% and that the risk-free rate is 10%, value this strategy. 2. Your company is considering the purchase of a new piece of equipment. The equipment costs $50,000 and your analysis indicates that the PV of the future cash flows from the equipment is $45,000. Thus the NPV of the equipment is − $5,000. This estimated NPV is based on some initial numbers provided by the manufacturer plus some creative thinking on the part of your financial analyst. The seller of the new piece of equipment is offering a course on how it works. The course costs $1,500. You estimate that the σ of the equipment ’ s cash flows is 30%, the risk-free rate is 6%, and you will have another half year after the course to purchase the equipment at the price of $50,000. Is it worth taking the course? 3. Consider the project whose cash flows are given below: 1 23 4 5 6 789AB C D E F G H Project cash flows 169 State prices 130 qU 0.3000 91 qD 0.5000 -100 91 70 -90 a. Using the state prices, value the project. b. Suppose that at date 2 the project can be abandoned at no cost. What does this do to its value? c. Suppose that at any time the project can be sold for 100. Show the tree of cash flows and value the project. 513 Real Options 4. Suppose that the market portfolio has mean μ = 15% and standard deviation σ = 20%. a. If the risk-free rate of interest is 8% calculate the 1-period state prices for an “up” and a “down” state. b. Show the effect (in a data table) of the risk-free rate on the state prices. c. Show the effect of the σ on the state prices. 5. Consider the cash flows below: 6 7 8 9 10 11 1213ABCDE Project cash flows 180 130 90 -50 60 -50 -100 a. If the cost of capital is 30% and the risk-free rate is 5%, find the state prices which match the project ’ s NPV . b. If there exists an abandonment option so that we can change all negative cash flows to zero, value the project. IV V ALUING BONDS Chapters 20–23 cover topics related to bonds and term structure. Chapters 20 and 21 concentrate on the classic duration and immunization formulations. In Chapter 20 we develop the basic Macaulay duration concept. Excel ’ s Duration( ) formula is somewhat cumbersome to use; we use VBA to build a new, easier-to-use formula. Chapter 21 discusses the use of duration to immunize bond portfolios. Chapter 22 shows how to model the term structure using a variety of methods; most of the chapter concentrates on the Nelson-Siegel term structure model. Chapter 23 uses a Markov process and much information about default probabilities and bond recovery ratios to model the expected rate of return on a risky corporate bond. 2 0 Duration 20.1 Overview Duration is a measure of the sensitivity of the price of a bond to changes in the interest rate at which the bond is discounted. It is widely used as a risk measure for bonds—the higher a bond ’ s duration, the more risky it is. In this chapter we consider a basic duration measure—Macaulay duration—which is defined for the case when the term structure is flat. In Chapter 21 we examine the uses of duration in immunization strategies. Consider a bond with payments C t , where t = 1, … , N. Ordinarily, the first N − 1 payments will be interest payments, and C N will be the sum of the repayment of principal and the last interest payment. If the term structure is flat and the discount rate for all of the payments is r , then the bond ’ s market price today will be PC rt t tN = +()=∑1 1 The Macaulay duration measure (throughout this chapter and the next, when we use the word duration we shall always refer to this measure) is meant to represent the time-weighted average maturity of the payments received from the bond. It is defined as: DPtC rt t tN = +()=∑1 1 1 In section 20.3 we go deeper into the meaning of this formula. Before doing this, however, we show how to calculate the duration in Excel. 20.2 Two Examples Consider two bonds. Bond A has just been issued. Its face value is $1,000, it bears the current market interest rate of 7%, and it will mature in 10 years. Bond B was issued 5 years ago, when interest rates were higher. This bond has $1,000 face value and bears a 13% coupon rate. When issued, this bond had a 15-year maturity, so its remaining maturity is 10 years. Since the current market rate of interest is 7%, bond B ’ s market price is given by $, .$ .$, .1 421 41130 10 710 0 10 7 110 10=()+() =∑ t t 518 Chapter 20 It is worthwhile calculating the duration of each of the two bonds (just once!) the long way. We set up a table in Excel. Rows 17 through 24 show alternatives to the long computation of the duration. 1 2 3 4 5 67 8 9 1011121314 15 1617181920 21 222324G F E D C B A YTM 7% Year Ct,At*C t,A / Price A*(1+YTM)tCt,Bt*C t,B / Price B*(1+YTM)t ) 5 A $ ^ ) 2 $ B $ + 1 ( * 6 1 $ E ( / 5 E * 5 A $ = - - < 5 5 8 0 . 0 0 3 1 4 5 6 0 . 0 0 7 1 ) 6 A $ ^ ) 2 $ B $ + 1 ( * 6 1 $ E ( / 6 E * 6 A $ = - - < 8 9 5 1 . 0 0 3 1 3 2 2 1 . 0 0 7 2 0 4 2 2 . 0 0 3 1 4 1 7 1 . 0 0 7 3 1 9 7 2 . 0 0 3 1 6 3 1 2 . 0 0 7 4 0 6 2 3 . 0 0 3 1 5 9 4 2 . 0 0 7 5 7 5 6 3 . 0 0 3 1 9 9 7 2 . 0 0 7 6 7 8 9 3 . 0 0 3 1 1 5 0 3 . 0 0 7 7 8 5 2 4 . 0 0 3 1 9 5 2 3 . 0 0 7 8 7 7 4 4 . 0 0 3 1 7 2 4 3 . 0 0 7 9 3 1 4 0 . 4 0 3 1 , 1 3 9 3 4 . 5 0 7 0 , 1 0 1 Bond price 1,000.00 <-- =NPV(B2,B5:B14) 1,421.41 <-- =NPV(B2,E5:E14) Duration 7.5152 <-- =SUM(C5:C14) 6.7535 <-- =SUM(F5:F14) Using the Excel function Duration and the \"home-made\" function Dduration Bond A 7.5152 <-- =DURATION(DATE(1996,12,3),DATE(2006,12,3),7%,B2,1) 7.5152 <-- =dduration(A14,7%,B2,1) Bond B 6.7535 <-- =DURATION(DATE(1996,12,3),DATE(2006,12,3),13%,B2,1) 6.7535 <-- =dduration(A14,13%,7%,1)BASIC DURATION CALCULATION As might be expected, the duration of bond A is longer than that of bond B, since the average payoff of bond A takes longer than that of bond B. To look at this another way, the net present value of bond A ’ s first-year payoff ($70) represents 6.54% of the bond ’ s price, whereas the net present value of bond B ’ s first-year payoff ($130) is 8.55% of its price. The figures for the second-year payoffs are 6.11% and 7.99%, respectively. (For the second-year figures, you have to divide the appropriate line of the above spreadsheet by 2, since in the duration formula each payoff is weighted by the period in which it is received.) Using the Excel Duration Formula Excel has two duration formulas, Duration( ) and MDuration( ) . MDuration — somewhat inaccurately termed Macaulay duration by Excel—is defined as: 519 Duration MDurationDuration YTM Number of coupon payments per year= +⎛ ⎝⎜⎞⎠⎟ 1 Both formulas have the same syntax; for example, for Duration( ) the syntax is: Duration(settlement, maturity, coupon, yield, frequency, basis) where settlement is the settlement date (i.e., the purchase date) of the bond maturity is the bond ’ s maturity date coupon is the bond ’ s coupon yield is the bond ’ s yield to maturity frequency is the number of coupon payments per year basis is the “day count basis” (i.e., the number of days in a year). This is a code between 0 and 4: 0 or omitted US (NASD) 30/360 1 Actual/actual 2 Actual/360 3 Actual/365 4 European 30/360 The Duration formula gives the standard Macaulay duration. The MDuration formula can be used in calculating the price elasticity of the bond (see section 20.3). These two duration formulas may require a bit of trickery to implement, because they demand a date serial number for both the settlement and the maturity. In the spreadsheet above, the Excel formula is implemented in cell C21 by assuming that bond A ’ s settlement date (for our purposes: the current date) is 3 December 1996 and that the bond ’ s maturity date is 3 December 2006. The choice of dates is arbitrary. The last parameter of the Excel duration formula, which gives the basis, is optional and could be omitted. The insertion of serial date formats in the Excel Duration formula is often unhandy. Later in this chapter we use VBA to define a simpler duration formula which overcomes this problem and which also computes the duration 520 Chapter 20 of a bond when bond payments are unevenly spaced. This “homemade” dura- tion formula is called DDuration . The programming aspects of this function are discussed in section 20.6. The previous spreadsheet illustrates this function in cells B21 and B24. The dialog box for DDuration ’ s computation of the duration of bond B is given below: The parameter TimeFirst is the time from the bond purchase date until the first payment. For the examples of bond A and bond B, this parameter is 1. 20.3 What Does Duration Mean? In this section we present three different meanings of duration. Each is inter-esting and important in its own right. Duration as the Time-Weighted Average of the Bond ’ s Payments This was the original definition of Macaulay (1938). Rewrite the duration formula as follows: DPtC rCP rtt t tN t t tN = +()= +()∗ ==∑∑1 11 11 521 Duration The bracketed terms CP rt t1+()⎡ ⎣⎢⎤⎦⎥ sum to 1. This follows from the definition of the bond price; each of these terms is the proportion of the bond ’ s price rep- resented by the payment at time t . In the duration formula, each of the terms CP rt t1+()⎡ ⎣⎢⎤⎦⎥ is multiplied by its time of occurrence: Thus, the duration is the time-weighted average of the bond ’ s discounted payments as a proportion of the bond ’ s price. Duration as the Bond ’ s Price Elasticity with Respect to Its Discount Rate This way of viewing duration explains why the duration measure can be used to measure the bond ’ s price volatility; it also shows why duration is often used as a risk measure for bonds. To derive this interpretation, we take the derivative of the bond ’ s price with respect to the current interest rate: dP drtC rt t tN =− +()+ =∑11 1 A little algebra shows that: dP drtC rDP rt t tN =− +()=−++ =∑1 11 1 which transforms into two useful interpretations of duration: • First, duration can be regarded as the elasticity of the bond price with respect to the discount factor , where by “discount factor” we mean 1 + r : dP P dr rchange in bond price change in discount factorD/ /% % 1 +()== − • Second, we can use duration to measure the price volatility of a bond, by rewriting the previous equation as: dP PDdr r=−+1 To show this interpretation of duration in a spreadsheet, we go back to the examples of the previous section. Suppose that the market interest rate rises by 10%, from 7% to 7.7%. What will happen to the bond prices? The price of bond A will be 522 Chapter 20 $.$ .$, .952 3970 1 0771 000 1 077 110 10=()+() =∑ t t A similar calculation shows the price of bond B to be $, .$ .$, .1 360 50130 1 0771 000 1 077 110 10=()+() =∑ t t As predicted by the price-volatility formula, the changes in the bond prices are approximated by ΔΔPD P r r≅− + /( )1 . To see this, work out the numbers for each bond: 1 234567 8 9 1011121314 15 16 17 18 19F E D C B A % 7 e t a r t n u o c s i D Bond A Bond B % 3 1 n o p u o C % 7 e t a r n o p u o C u l a v e c a F 0 0 0 , 1 e u l a v e c a F e 1,000 0 1 y t i r u t a M 0 1 y t i r u t a M P = - - < 1 4 . 1 2 4 , 1 e c i r P 0 0 . 0 0 0 , 1 e c i r P V($B$2,E7,-E5*E6)+E6/(1+$B$2)^E7 ) 1 , 2 B , 5 E , ) 1 , 1 , 6 0 0 2 ( E T A D , ) 1 , 1 , 6 9 9 1 ( E T A D ( N O I T A R U D = - - < 5 3 5 7 . 6 n o i t a r u D 2 5 1 5 . 7 n o i t a r u D % 0 7 . 7 e t a r t n u o c s i d w e N 7 E ^ ) 2 1 $ B $ + 1 ( / 6 E + ) 6 E * 5 E - , 7 E , 2 1 $ B $ ( V P = - - < 0 5 . 0 6 3 , 1 9 3 . 2 5 9 e c i r p w e N Change in price 3 1 E - 9 E = - - < 2 9 . 0 6 1 6 . 7 4 l a u t c A Using duration as approximation DP ≈ - Duration *Price* Δr/(1+r) 49.17 62.80 <-- =-E10*E9*($B$2-$B$12)/(1+$B$2) Using MDuration 49.17 62.80<-- =-($B$2- $B$12)*E9*MDURATION(DATE(1996,1,1),DATE(2006,1,1),E5,$B$2,1)DURATION AS PRICE ELASTICITY The change in the bond price can be approximated by DP ª - Duration*Price* Dr/(1+r) Note row 19 of the above spreadsheet: Instead of using the Excel Duration function and multiplying by Δr r 1+() , we could have used the MDuration function and multiplied by Δ r . 523 Duration Babcock ’ s Formula: Duration as the Convex Combination of Bond Yields A third interpretation of duration is Babcock ’ s (1985) formula, which shows that duration is a weighted average of two factors: DNy ryrPVIF r N r yBondcoupon Bondprice=−⎛ ⎝⎜⎞⎠⎟+∗ + =11 (, ) ( ) ,where tthe current yield of the bond the present PVIF r N ri iN (, ) , = +()=∑1 1 1vvalue of an N-period annuity This formula gives two useful insights into the duration measure: • Duration is a weighted average of the maturity of the bond and of (1 + r ) times the PVIF associated with the bond. (Note that the PVIF is given by the Excel formula PV(r,N,-1) .) • In many cases the current yield of the bond, y , is not greatly different from its yield to maturity r . In these cases, duration is not very different from (1 + r ) PVIF . Unlike the two previous interpretations, Babcock ’ s formula holds only for the case of a bond with constant coupon payments and single repayment of principal at time N ; that is, the formula does not extend to the case where the payments C t differ over time. Here ’ s an implementation of Babcock ’ s formula for bond B: 1 2 3 4 5 6 7 89 10 1112C B A N, bond maturity 10 % 7 , r C, bond coupon 13% Face value 1,000 2 B ^ ) 3 B + 1 ( / 5 B + ) 5 B * 4 B - , 2 B , 3 B ( V P = - - < 1 4 . 1 2 4 , 1 e c i r P Current yield 9.15% <-- =B4*B5/B6 PVIF(r,N) 7.0236 <-- =PV(B3,B2,-1) Two duration formulasBabcock's formula 6.7535 <-- =B2*(1-B7/B3)+B7/B3*B8*(1+B3)Standard formula 6.7535 <-- =DURATION(DATE(1995,1,1),DATE(2005,1,1),B4,B3,1)BABCOCK'S FORMULA FOR DURATION Duration is convex combination of current yield and present value factor: D = N*y/r + (1 - y/r) * PV(r,N,-1)*(1+r) 524 Chapter 20 20.4 Duration Patterns Intuitively we would expect that duration is a decreasing function of a bond ’ s coupon and an increasing function of a bond ’ s maturity. The first of these intuitions is correct, but the second is not. The spreadsheet below shows the effect of increasing the coupon on a bond ’ s duration, which—as our intuition indicated—indeed declines as the coupon increases: 1 2 3 45 6 7 8 9 1011 12 13 14 1516 17 18 19 20 21 22 23 24 25 26 27 2829D C B A Current date 5/21/1996 <-- =DATE(1996,5,21) Maturity, in years 21 Maturity date 5/21/2017 <-- =DATE(1996+B3,5,21) ) e t a r t n u o c s i d , . e . i ( y t i r u t a m o t d l e i Y % 5 1 M T Y % 4 n o p u o C Face value 1,000 Duration 9.0110 <-- =DURATION(B2,B4,B6,B5,1) Data table: Effect of coupon on duration 9.0110 <-- =B9 , data table header 0% 21.0000 1% 13.1204 Bond coupon --> 2% 10.7865 3% 9.66774% 9.0110 5% 8.5792 6% 8.2736 7% 8.0459 9% 7.7294 13% 7.370715% 7.2593 17% 7.1729EFFECT OF COUPON ON DURATION Effect of Coupon on Duration Maturity = 21, YTM = 15.00% 57911131517192123 0% 5% 10% 15% Coupon rateDuration 525 Duration It is not true, however, that the duration is always an increasing function of the bond maturity: 1 23 4 56 7 89 101112 13 141516 17 1819 20 2122 23 2425 26 2728 29 3031D C B A Current date 5/21/1996 <-- =DATE(1996,5,21) Maturity, in years 21 Maturity date 5/21/2017 <-- =DATE(1996+B3,5,21) ) e t a r t n u o c s i d , . e . i ( y t i r u t a m o t d l e i Y % 5 1 M T Y % 4 n o p u o C Face value 1,000 Duration 9.0110 <-- =DURATION(B2,B4,B6,B5,1) Data table: Effect of maturity on duration 9.0110 <-- =B9 , data table header 1 1.0000 5 4.5163 Bond maturity --> 10 7.4827 15 8.8148 20 9.0398 25 8.7881 30 8.4461 40 7.9669 50 7.7668 60 7.6977 70 7.6759 80 7.6693EFFECT OF MATURITY ON DURATION Effect of Maturity on Duration Coupon rate = 4.0%, YTM = 15.00% 012345678910 0 1 02 03 04 05 06 07 08 0 MaturityDuration 20.5 The Duration of a Bond with Uneven Payments The duration formulas discussed above assume that bond payments are evenly spaced. This is almost invariably the case for bonds, except for the first payment . For example, consider a bond that pays interest on 1 May of each of the years 1997, 1998, … , 2010, with repayment of its face value on the last date. All the payments are spaced 1 year apart; however, if this bond is purchased on 1 September 1996, then the time to the first payment is 8 months (September to May), not 1 year. We shall refer to such a bond as a bond with uneven payments . In this section we discuss two aspects of this (extremely common) problem: • The calculation of the duration of such a bond, when the YTM is known. We show that the duration has a very simple formula, related to the duration 526 Chapter 20 of a bond with even payments (i.e., the standard duration formula). In the process of the discussion we develop a simpler duration formula in Excel. • The calculation of the YTM of a bond with uneven payments. This requires a bit of trickery, and ultimately leads us to another VBA function. Duration of a Bond with Uneven Payments Consider a bond with N payments, the first of which occurs at time α < 1, and the rest of which are evenly spaced. In the derivation which follows, we show that the duration of such a bond is given by the sum of two terms: • First term: The duration of a bond with N payments spaced at even intervals (i.e., the standard duration discussed above). • Second term: α − 1 It is relatively simple to show why this is so. Denote the payments on the bond by C α , C α + 1 , C α + 2 , … , C α + N − 1 , where 0 < α < 1. The price of the bond is given by: PC rrC rt t tN t t tN = +()=+() +()+− +− =− +− =∑∑α αα α 1 1 11 1 1 11 1 The duration of this bond is given by: DPtC rt t tN =+−() +()+− +− =∑11 11 1 1α α α Rewrite this last expression as follows: DPrtC rC rt t tN t t tN =+() +()+−() +()⎧ ⎨⎩⎫⎬ − +− =+− =∑∑11 11 11 1 11 1α αα α ⎭ ⎭ = +()+()+() +()+− − +− =− +− =∑∑1 1 11 1 1 1 11 1 1rC rrtC r t t tNt t tN α αα αα 1 1 1 1 111 1 1 11() +()⎧⎨⎩⎫⎬ ⎭ = + ()+()+− = +− =+−∑ ∑C r C rtC rt t tN t t tNtα αα t t tN =∑⎧ ⎨⎩⎫⎬ ⎭+− 11α 527 Duration Here is an example of the calculation of the duration of a bond with uneven periods. Recall that when there is α until the first payment, the duration formula is given by: DPtC rt t tN =+−() +()+− +− =∑11 11 1 1α α α Here is an example of the calculation of the duration of a bond with uneven periods. Each of the cells D10:D14 calculates the value of a term of this formula: 1 23456 7 8 9 10 11121314151617D C B A Alpha 0.3 Time until first coupon payment (in years) s t n e m y a p f o r e b m u N 5 NYTM 6% Coupon 100 Face 1,000 Bond price 1,217 <-- =NPV(B4,B10:B14)*(1+B4)^(1-B2) Period Payment t*C t /Price*(1+YTM)t 0.3 100 0.0242 <-- =(B10*A10)/(1+$B$4)^A10/$B$7 1.3 100 0.0990 2.3 100 0.1653 3.3 100 0.2237 4.3 1,100 3.0249 ) 4 1 C : 0 1 C ( M U S = - - < 1 7 3 5 . 3 n o i t a r u D Newly defined VBA function 3.5371 <-- =dduration(B3,B5/B6,B4,B2)DURATION OF BOND WITH UNEVEN PERIODS Brute Force Calculation and DDuration Function As noted in section 20.2, the built-in Excel formula Duration( ) is some- what difficult to use, because of the insertion of the dates. We have already 528 Chapter 20 Function DDuration(NumPayments, CouponRate, _ YTM, TimeFirst) price = 1 / (1 + YTM) ∧ NumPayments DDuration = NumPayments / (1 + YTM) ∧ _ NumPayments For Index = 1 To NumPayments price = CouponRate / (1 + YTM) ∧ _ Index + price Next Index For Index = 1 To NumPayments DDuration = CouponRate * Index / _ (1 + YTM) ∧ Index + DDuration Next Index DDuration = DDuration / price + _ TimeFirst - 1 End Function Our homemade formula DDuration requires only the number of payments on the bond, the coupon rate, and the time to the first payment α . The use of the formula is illustrated in the previous spreadsheet, in cell C17. Calculating the YTM for Uneven Periods As the discussion above shows, the calculation of duration requires us to know the bond ’ s yield to maturity (YTM); this YTM is just the internal rate of return of the bond ’ s payments and its initial price. Often the YTM is given, but when it is not, we cannot use Excel ’ s IRR function but must instead use the XIRR function. Consider a bond that currently costs $1,123 and which pays a coupon of $89 on each of the next 1 January. On 1 January 2001, the bond will pay $1,089, the sum of its annual coupon and its face value. The current date is 3 introduced a simpler duration formula using VBA; the syntax of this formula is DDuration(numPayments, couponRate, YTM, timeFirst) : 529 Duration October 1996. The problem in finding the YTM of this bond is that while most of the bond payments are spaced 1 year apart, there is only 0.2466 of a year until the first coupon payment (0.2466 = (Date(1997,1,1)-Date(1996,10,3))/ 365). Thus we wish to use Excel to solve the following equation: −+ +()+ +()=+ =∑ 1 12389 11089 100 2466 03 4 2466,..YTM YTMt t To solve this problem, we can use the Excel function XIRR : 1 23456789 101112131415161718AB C D Current date 3-Oct-96 Annual coupon 89 Paid January 1 for each of next 5 years Maturity date 1-Jan-01 Face value 1,000 Price of bond 1,123 Time to first payment 0.2466 <-- =(B12-B11)/365 Date Payment 3-Oct-96 -1,123 1-Jan-97 891-Jan-98 891-Jan-99 891-Jan-00 891-Jan-01 1,089 YTM 7.300% <-- =XIRR(C11:C16,B11:B16)USING XIRR TO CALCULATE THE IRR WITH UNEVEN PAYMENTS To use the XIRR function, you first have to make sure that the Analysis ToolPak is loaded into Excel. Go to File|Options|Add-Ins|Manage . This brings up the following menu, in which you have to make sure that Analysis ToolPak is checked: 530 Chapter 20 You can now use XIRR , which returns the internal rate of return for a schedule of cash flows that is not necessarily periodic. To use this function you have to specify the list of cash flows and the list of dates. As in the case of the Excel function IRR , You can also provide a guess for the IRR, although this may be left out. 1 Calculating the YTM for Uneven Payments Using a VBA Program If you do not know the payment dates, you can use VBA to calculate the YTM for a series of uneven payments. The program below is composed of two functions. The first function, annuityvalue , calculates the value 1 11+()=∑rt tN . The second function, unevenYTM , uses the simple bisection technique to calculate the YTM of a series of uneven payments, leaving you to choose the accuracy epsilon of the desired result: 1. There is also a function XNPV for finding the present value of a series of payments paid out at uneven dates. This function is discussed in Chapter 33. 531 Duration Function Annuityvalue(interest, numPeriods) annuityvalue = 0 For Index = 1 To numPeriods annuityvalue = annuityvalue + 1 / _ (1 + interest) ∧ Index Next Index End Function Function UnevenYTM(CouponRate, FaceValue, _ BondPrice, NumPayments, TimeFirst, epsilon) Dim YTM As Double high = 1 low = 0 While Abs(annuityvalue(YTM, _ NumPayments) * CouponRate * _ FaceValue + FaceValue / _ (1 + YTM) ∧ NumPayments - _ BondPrice / (1 + YTM) ∧ _ (1 - TimeFirst)) > = epsilon YTM = (high + low) / 2 If annuityvalue(YTM, NumPayments) * _ CouponRate * _ FaceValue + FaceValue / (1 + YTM) _ ∧ NumPayments - BondPrice / _ (1 + YTM) ∧ (1 - TimeFirst) > 0 _ Then low = YTM Else high = YTM End If Wend UnevenYTM = (high + low) / 2 End Function 532 Chapter 20 Here ’ s an illustration of the use of this function: 1 2 345678 9 10 111213141516171819202122232425262728293031C B A Coupon rate 7.90% Face value 1,000.00 Bond price 1,123.00 Number of payments 5 Time to first payment 0.25 n o i t a l u c l a c M T Y e h t f o y c a r u c c a e h t s l o r t n o C - - < 1 0 0 0 0 . 0 n o l i s p E ) 8 B , 7 B , 6 B , 5 B , 4 B , 3 B ( M T Y n e v e n u = - - < % 8 3 1 . 6 M T YThis spreadsheet illustrates the unevenYTM VBA function: the syntax of this function is unevenYTM (CouponRate,FaceValue,BondPrice,NumPayments,TimeFirst,epsilon)ILLUSTRATION OF CALCULATION OF YTM OF UNEVEN PERIODS 533 Duration We can, of course, use the DDuration function in conjunction with UnevenYTM to compute the duration: 1 2 3 456789 1011C B A Coupon rate 7.90% Face value 1,000.00 Bond price 1,123.00 Number of payments 5 Time to first payment 0.25 n o i t a l u c l a c M T Y e h t f o y c a r u c c a e h t s l o r t n o C - - < 1 0 0 0 0 . 0 n o l i s p E ) 7 B , 6 B , 5 B , 4 B , 3 B , 2 B ( M T Y n e v e n u = - - < % 8 3 1 . 6 M T Y ) 6 B , 9 B , 2 B , 5 B ( n o i t a r u d d = - - < 9 5 9 5 . 3 n o i t a r u DUSING DDURATION AND UNEVENYTM TOGETHER 20.6 Non-Flat Term Structures and Duration In a general model of the term structure, payments at time t are discounted by rate r t , so that the value of a bond is given by: PC rt tt tN = +()=∑1 1 The duration measure discussed in this chapter assumes either a flat term structure (i.e., r t = r for all t ) or a term structure which shifts in a parallel fashion. When the term structure exhibits parallel shifts, we can write the bond price as: PC rtt tt tN = ++()=∑1 1 Δ and then derive a measure of duration by taking the derivative with respect to Δ t . A general model of the term structure should explain how the discount rate r t for time- t payments comes about, and how the rates at time t change. This is a difficult problem, discussed in Chapters 22 and 23. Does this mean that the simple duration measure we present in this chapter is useless? Not necessarily. It may be that the Macaulay duration measure gives a good approximation for changes in bond value as a result of changes in the 534 Chapter 20 term structure, even for the case when the term structure itself is relatively complex and not flat. 2 In this section, we explore this possibility, using data from a file of term structures developed by Prof. J. Huston McCullogh, which is on the disk that accompanies this book. 3 The file contains monthly informa- tion on the term structure of interest rates in the United States for the period 12.1949 to 2.87 (i.e., December 1949–February 1987). A typical row of this file looks like: 0 mo 1 mo 2 mo 3 mo 4 mo 5 mo 6 mo 12.1946 0.18 0.32 0.42 0.48 0.52 0.55 0.58 9 mo 1 yr 2 yr 3 yr 4 yr 5 yr 10 yr 15 yr 20 yr 0.65 0.72 0.95 1.15 1.3 1.41 1.82 2.16 2.32 This particular row gives the term structure of interest rates in December 1946. Interest rates are given in annual percentage terms ; that is, 0.32 means 0.32% per year. Here are some pictures of term structures, taken from the file. 4 In the graphs below, each line represents the term structure in a particular month. In 1948 the term structures were very closely correlated, and all were upward sloping: 2. A paper by Gultekin and Rogalski (1984) seems to confirm this. 3. The data are from McCullogh (1990). For updated daily term structures on Treasuries, go to http://www.treasury.gov/resource-center . 4. The interest rates are pure discount rates, calculated so that the value of a bond with price P and with N payments, C 1 , C 2 , … , C N is PC rt tt tN = +()=∑1 1 . The column marked “0mo” gives the instantaneous interest rate —the shortest-term interest rate in the market. You can think of this as the rate paid by a money market fund on a 1-day deposit. 535 Duration Contrast this with the term structures in 1981: Here there were upward- and downward-sloping term structures, as well as term structures with “humps”: 0.8 1 1.2 1.4 1.6 1.8 2 2.2 2.4 2.6 Pure discount rate % MaturityTerm Structures, 1948 Term Structures, 1981 891011121314151617 0mo 1mo 2mo 3mo 4mo5mo 6mo 9mo 1yr 2 yr 3yr4yr5yr 10yr 15yr 20yr25yrmaturitypure discount rate, % Despite this great variety of term structure shapes, you will see in exercise 7 to this chapter that the Macaulay duration can give an adequate approximation to the change in bond value over short periods. 536 Chapter 20 20.7 Summary In this chapter we have summarized the basics of duration, a commonly used risk measure for bonds. The duration measure was originally developed by Macaulay (1938) to measure the time-weighted average of a bond ’ s payments. It can also represent the bond ’ s price elasticity to a change in its discount rate. This chapter has explored duration computation basics; in the next chapter we use duration to describe the immunization of a bond portfolio. Exercises 1. In the spreadsheet below, create a Data Table in which the duration is computed as a function of the coupon rate (coupon = 0%, 1%, … , 11%). Comment on the relation between the coupon rate and the duration. 1 2 3 45 6 78 9C B A Current date 21-May-07 Maturity, in years 21 Maturity date 21-May-27 % 5 1 M T Y Coupon 4% Face value 1,000 Duration 9.03982 <-- =DURATION(B2,B4,B6,B5,1)CHANGING THE COUPON RATE Effect on Duration 2. What is the effect on a bond ’ s duration of increasing the bond ’ s maturity? As in the previ- ous example, use a numerical example and plot the answer. Note that as N → ∞ , the bond becomes a consol (a bond that has no repayment of principal but an infinite stream of coupon payments). The duration of a consol is given by (1 + YTM ) / YTM . Show that your numerical answers converge to this formula. 3. “Duration can be viewed as a proxy for the riskiness of a bond. All other things being equal, the riskier of two bonds should have lower duration.” Check this claim with an example. What is its economic logic? 4. A pure discount bond with maturity N is a bond with no payments at times t = 1, … , N − 1; at time t = N , a pure discount bond has a single terminal payment of both principal and interest. What is the duration of such a bond? 537 Duration 5. Replicate the two graphs in section 20.5. 6. On 23 January 1987, the market price of a West Jefferson Development Bond was $1,122.32. The bond pays $59 in interest on 1 March and 1 September of each of the years 1987–1993. On 1 September 1993, the bond is redeemed at its face value of $1,000. Calculate the yield to maturity of the bond and then calculate its duration. 7. Rewrite the formula DDuration in section 20.5, so that if the timeToFirstPayment α is not inserted, then α automatically defaults to 1. 2 1 Immunization Strategies 21.1 Overview A bond portfolio ’ s value in the future depends on the interest-rate structure prevailing up to and including the date at which the portfolio is liquidated. If a portfolio has the same payoff at some specific future date, no matter what interest-rate structure prevails, then it is said to be immunized . This chapter discusses immunization strategies, which are closely related to the conception of duration discussed in Chapter 20. Immunization strategies have been dis-cussed for many concepts of duration, but this chapter is restricted to the simplest duration concept, that of Macaulay. 21.2 A Basic Simple Model of Immunization Consider the following situation: A firm has a known future obligation, Q (a good example would be an insurance firm, which knows that it has to make a payment in the future). The discounted value of this obligation is VQ rN 01= +() where r is the appropriate discount rate. Suppose that this future obligation is hedged by a bond held by the firm. By this we mean that the firm currently holds a bond, whose value V B is equal to the discounted value of the future obligation, V 0 . If P 1 , P 2 , … P M is the stream of anticipated payments made by the bond, then the bond ’ s present value is given by VP rBt t tM = +()=∑1 1 Now suppose that the underlying interest rate, r , changes to r + Δ r . Using a first-order linear approximation, we find that the new value of the future obli-gation is given by VV VdV drrV rNQ rN 00 00 0 11+≈ + = +− +()⎡ ⎣⎢⎤⎦⎥ +ΔΔ Δ However, the new value of the bond is given by 540 Chapter 21 VV VdV drrV rtP rBB BB Bt t tN +≈ + = +− +()+ =∑ ΔΔ Δ 11 1 If these two expressions are equal, a change in r will not affect the hedging properties of the company ’ s portfolio. Setting the expressions equal gives us the condition VrtP rVrNQ rBt t tN N+− +()=+− +()⎡ ⎣⎢⎤⎦⎥ + =+ ∑ΔΔ 111 10 1 Recalling that VVQ rB N== +()01 we can simplify this expression to get 1 1 1 VtP rN Bt t tM +()= =∑ The last equation is worth restating as a formal proposition: Suppose that the term structure of interest rates is always flat (that is, the discount rate for a cash flow occurring at all future times is the same) or that the term structure moves up or down in parallel movements. Then a necessary and sufficient condition that the market value of an asset be equal under all changes of the discount rate r to the market value of a future obligation Q is that the duration of the asset equal the duration of the obligation. Here we understand the word “equal” to mean equal in the sense of a first-order approximation. An obligation against which an asset of this type is held is said to be immunized . The above statement has two critical limitations: • The immunization discussed applies only to first-order approximations. When we get to a numerical example in the succeeding sections, we shall see that there is a big difference between first-order equality and “true” equality. In Animal Farm , George Orwell made the same observation about the barn- yard: “All animals are equal, but some animals are more equal than others.” • We have assumed either that the term structure is flat or that the term struc- ture moves up or down in parallel movements. At best, this might be consid-ered to be a poor approximation of reality (recall the term structure graphs in 541 Immunization Strategies section 20.5). Alternative theories of the term structure lead to alternative definitions of duration and immunization (for alternatives, see Bierwag et al., 1981, 1983a, 1983b; Cox, Ingersoll, and Ross, 1985; Vasicek, 1977). In an empirical investigation of these alternatives, Gultekin and Rogalski (1984) found that the simple Macaulay duration we use in this chapter works at least as well as any of the alternatives. 21.3 A Numerical Example In this section we consider a basic numerical immunization example. Suppose you are trying to immunize a year-10 obligation whose present value is $1,000 (this means that, at the current interest rate of 6%, its future value is $1,000 · (1.06) 10 = $1,790.85. You intend to immunize the obligation by pur- chasing $1,000 worth of a bond or a combination of bonds. You consider three bonds: • Bond 1 has 10 years remaining until maturity, a coupon rate of 6.7%, and a face value of $1,000. • Bond 2 has 15 years until maturity, a coupon rate of 6.988%, and a face value of $1,000. • Bond 3 has 30 years until maturity, a coupon rate of 5.9%, and a face value of $1,000. At the existing yield to maturity of 6%, the prices of the bonds differ. Bond 1, for example, is worth $, . ., .1 051 5267 10 61 000 10 610 10=()+()∑ t t ; thus, in order to purchase $1,000 worth of this bond, you have to purchase $951 = $1,000/$1,051.52 of face value of the bond. Bond 3, however, is currently worth $986.24, so that in order to buy $1,000 of market value of this bond, you will have to buy $1,013.96 of face value of the bond. If you intend to use this bond to finance a $1,790.85 obligation 10 years from now, here ’ s a schematic of the problem you face: 542 Chapter 21 As we will see below, the 30-year bond will exactly finance the future obligation of $1,790.85 only for the case in which the current market interest rate of 6% remains unchanged. Here is a summary of price and duration information for the three bonds: When the interest rate increases: When the interest rate decreases:THE IMMUNIZATION PROBLEM Illustrated here for the 30-year bond. 0 Year 10: Future obligation of $1,790.85 due. 30 Buy $1,014 face value of 30-year bond.Reinvest coupons from bond during years 1-10.Sell bond for PV of remaining coupons and redemption in year 30. Value of reinvested coupons increases .Value of bond in year 10 decreases . Value of reinvested coupons decreases .Value of bond in year 10 increases . 1 2 345678 9 10 1112E D C B A % 6 y t i r u t a m o t d l e i Y Bond 1 Bond 2 Bond 3 % 0 9 . 5 % 8 8 9 . 6 % 0 7 . 6 e t a r n o p u o C 0 3 5 1 0 1 y t i r u t a M 0 0 0 , 1 0 0 0 , 1 0 0 0 , 1 e u l a v e c a F 6 D ^ ) 2 $ B $ + 1 ( / 7 D + ) 7 D * 5 D , 6 D , 2 $ B $ ( V P - = - - < 4 2 . 6 8 9 $ 6 9 . 5 9 0 , 1 $ 2 5 . 1 5 0 , 1 $ e c i r p d n o B Face value equal to $1,000 of market value 951.00 $ 912.44 $ 1,013.96$ <-- =D7/D9*D7 ) 1 , 2 $ B $ , 5 D , 6 D ( n o i t a r u d d = - - < 1 6 3 6 . 4 1 0 0 0 0 . 0 1 5 5 6 6 . 7 n o i t a r u DBASIC IMMUNIZATION EXAMPLE WITH 3 BONDS 543 Immunization Strategies Note that to calculate the duration, we have used the “home-made” DDuration function defined in Chapter 20. If the yield to maturity doesn ’ t change , then you will be able to reinvest each coupon at 6%. Thus, bond 2, for example, will give a terminal wealth at the end of 10 years, of 69 88 1 0669 88 10 61 000 10 692 09 15 5... ., .⋅() +()+()⎡ ⎣⎢⎤⎦⎥= ==∑∑t tt t1 1 07 1 041 62 1 962 69., . , .+= The first term in this expression, 69 88 1 06 09 ..⋅() =∑t t , is the sum of the reinvested coupons. The second and third terms, 69 88 10 61 000 10 6 15 5. ., . ()+() =∑ t t , represent the market value of the bond in year 10, when the bond has 5 more years until maturity. Since we will be buying only $912.44 of face value of this bond, we have, at the end of 10 years, 0.91244*$1,962.69 = $1,790.85. This is exactly the amount we wanted to have at this date. The results of this calculation for all three bonds, provided there is no change in the yield to maturity, are given in the following table: 14 1516171819202122E D C B A % 6 y t i r u t a m o t d l e i y w e N Bond 1 Bond 2 Bond 3 ) 0 1 - 6 D ( ^ ) 4 1 $ B $ + 1 ( / 7 D + ) 7 D * 5 D , 0 1 - 6 D , 4 1 $ B $ ( V P - = - - < 3 5 . 8 8 9 $ 2 6 . 1 4 0 , 1 $ 0 0 . 0 0 0 , 1 $ e c i r p d n o B ) 7 D * 5 D , 0 1 , 4 1 $ B $ ( V F - = 7 6 . 7 7 7 $ 7 0 . 1 2 9 $ 1 1 . 3 8 8 $ s n o p u o c d e t s e v n i e R Total $1,883.11 $1,962.69 $1,766.20 <-- =D17+D18 Multiply by percent of face value bought 95.10% 91.24% 101.40% <-- =D10/1000 Product 1,790.85$ 1,790.85$ 1,790.85$ <-- =D21*D19 The upshot of this table is that purchasing $1,000 of any of the three bonds will provide—10 years from now—funding for your future obligation of $1,790.85, provided the market interest rate of 6% doesn ’ t change . Now suppose that immediately after you purchase the bonds the yield to maturity changes to some new value and stays there. This will obviously affect the calculation we did above. For example, if the yield falls to 5%, the table will now look as follows: 544 Chapter 21 Thus, if the yield falls, bond 1 will no longer fund our obligation, whereas bond 3 will overfund it. Bond 2 ’ s ability to fund the obligation—not surpris- ingly, in view of the fact that its duration is exactly 10 years—hardly changes. We can repeat this calculation for any new yield to maturity. The results are shown in the figure below, which was produced by running a Data|Table (see Chapter 31): 14 151617 18 19202122E D C B A % 5 y t i r u t a m o t d l e i y w e N Bond 1 Bond 2 Bond 3 ) 0 1 - 6 D ( ^ ) 4 1 $ B $ + 1 ( / 7 D + ) 7 D * 5 D , 0 1 - 6 D , 4 1 $ B $ ( V P - = - - < 6 1 . 2 1 1 , 1 $ 7 0 . 6 8 0 , 1 $ 0 0 . 0 0 0 , 1 $ e c i r p d n o B ) 7 D * 5 D , 0 1 , 4 1 $ B $ ( V F - = 0 1 . 2 4 7 $ 4 9 . 8 7 8 $ 2 7 . 2 4 8 $ s n o p u o c d e t s e v n i e R Total $1,842.72 $1,965.01 $1,854.26 <-- =D17+D18 Multiply by percent of face value bought 95.10% 91.24% 101.40% <-- =D10/1000 Product 1,752.43$ 1,792.97$ 1,880.14$ <-- =D21*D19 1,5001,7001,9002,1002,3002,5002,7002,900 0% 2% 4% 6% 8% 10% 12% 14% 16%Immuniza Ɵon ProperƟ es of the Three Bonds Bond 1 Bond 2 Bond 3 Clearly, if you want an immunized strategy, you should buy bond 2! 545 Immunization Strategies 21.4 Convexity: A Continuation of Our Immunization Experiment The duration of a portfolio is the weighted average duration of the assets in the portfolio. This means that there is another way to get a bond investment with a duration of 10: If we invest $665.09 in bond 1 and $344.91 in bond 3, the resulting portfolio also has a duration of 10. These weights are calculated as follows: λλ λ λ∗+ − () ∗= + − () = Duration Duration Bond Bond 13 1 7 6655 14 6361 1 1.. 0 0 Suppose we repeat our experiment with this portfolio of bonds. Starting in row 15 of the spreadsheet below, we repeat the experiment of the previous section (varying the YTM), but add in the portfolio of bond 1 and bond 3. The results below show that the future value in row 23 does not vary for the portfolio. 12 345678 9 10 111213141516 17 181920212223 24 252627G F E D C B A % 6 ) M T Y ( y t i r u t a m o t d l e i Y Bond 1 Bond 2 Bond 3 % 0 9 . 5 % 8 8 9 . 6 % 0 7 . 6 e t a r n o p u o C 0 3 5 1 0 1 y t i r u t a M 0 0 0 , 1 0 0 0 , 1 0 0 0 , 1 e u l a v e c a F 6 D ^ ) 2 $ B $ + 1 ( / 7 D + ) 7 D * 5 D , 6 D , 2 $ B $ ( V P - = - - < 4 2 . 6 8 9 $ 6 9 . 5 9 0 , 1 $ 2 5 . 1 5 0 , 1 $ e c i r p d n o B Face value equal to $1,000 of market value 951.00 $ 912.44 $ 1,013.96$ <-- =D7/D9*D7 ) 1 , 2 $ B $ , 5 D , 6 D ( n o i t a r u d d = - - < 1 6 3 6 . 4 1 0 0 0 0 . 0 1 5 5 6 6 . 7 n o i t a r u D % 7 M T Y w e N Bond 1 Bond 2 Bond 3Bond 1 & 3 portfolio 7 4 . 3 8 8 $ 1 5 . 9 9 9 $ 0 0 . 0 0 0 , 1 $ e c i r p d n o B 7 1 . 5 1 8 $ 9 4 . 5 6 9 $ 0 7 . 5 2 9 $ s n o p u o c d e t s e v n i e R Total $1,925.70 $1,965.00 $1,698.64 Multiply by percent of face value bought 95.10% 91.24% 101.40% Product 1,831.35$ 1,792.95$ 1,722.34$ 1,794.84$ <-- =B26*B23+(1-B26)*D23 Portfolio of bonds 1 and 3 ) 2 1 D - 2 1 B ( / ) 2 1 D - 0 1 ( = - - < 1 5 6 6 . 0 1 d n o b f o n o i t r o p o r P 6 2 B - 1 = - - < 9 4 3 3 . 0 3 d n o b f o n o i t r o p o r P EXPERIMENTING WITH BOND PORTFOLIOS AND CONVEXITY 546 Chapter 21 Building a data table based on this experiment and graphing the results shows that the portfolio ’ s performance is better than that of bond 2 by itself: 1,5001,6001,7001,8001,9002,0002,100 0% 2% 4% 6% 8% 10% 12% 14% 16%Performance of Bond 2 versus Bond Por ƞolio Bond 2 Bond porƞolio Convexity Look again at the graph: Notice that, while for both bond 2 and the bond portfolio, the terminal value is somewhat convex in the yield to maturity, the terminal value of the portfolio is more convex than that of the single bond. Redington (1952), one of the influential propagators of the concept of duration and immunization, thought this convexity very desirable, and we can see why: No matter what the change in the yield to maturity, the portfolio of bonds provides more overfunding of the future obligation than the single bond. This is obviously a desirable property for an immunized portfolio, and it leads us to formulate the following rule: In a comparison between two immunized portfolios, both of which are to fund a known future obligation, the portfolio whose terminal value is more convex with respect to changes in the yield to maturity is preferable. 1 1. There is another interpretation of the convexity shown in this example: It shows the impossibil- ity of parallel changes in the term structure! If such changes describe the uncertainty relating to the term structure, a bond position can be chosen which always benefits from changes in the term structure. This is an arbitrage, and therefore impossible. I thank Zvi Wiener for pointing this out to me. 547 Immunization Strategies 21.5 Building a Better Mousetrap Despite what was said in the preceding section, there is some interest in deriv- ing the characteristics of a bond portfolio whose terminal value is as insensitive to changes in the yield as possible. One way of improving the performance (when so defined) of the bond portfolio is not only to match the first deriva-tives of the change in value (which, as we saw in section 20.3, leads to the duration concept), but also to match the second derivatives. A direct extension of the analysis of section 20.3 leads us to the conclusion that matching the second derivatives requires: NNVtt P r Bt t tM +() =+() +() =∑ 111 1 1 The following example illustrates the kind of improvement that can be made in a portfolio where the second derivatives are also matched. Consider 4 bonds, one of which, bond 2, is our old friend from the previous example, whose duration is exactly 10. The bonds are described in the following table: 1 2 3456 7 89 1011 12 13F E D C B A % 6 y t i r u t a m o t d l e i Y Bond 1 Bond 2 Bond 3 Bond 4 % 0 0 . 1 1 % 0 5 . 3 % 8 8 9 . 6 % 0 5 . 4 e t a r n o p u o C 0 1 4 1 5 1 0 2 y t i r u t a M 0 0 0 , 1 0 0 0 , 1 0 0 0 , 1 0 0 0 , 1 e u l a v e c a F 6 E ^ ) 2 $ B $ + 1 ( / 7 E + ) 7 E * 5 E , 6 E , 2 $ B $ ( V P - = - - < 0 0 . 8 6 3 , 1 $ 3 6 . 7 6 7 $ 6 9 . 5 9 0 , 1 $ 5 9 . 7 2 8 $ e c i r p d n o B Face value equal to $1,000 of market value 1,207.80 $ 912.44 $ 1,302.72$ 730.99$ <-- =E7/E9*E7 ) 1 , 2 $ B $ , 5 E , 6 E ( n o i t a r u d d = - - < 9 3 5 0 . 7 4 8 4 8 . 0 1 0 0 0 0 . 0 1 4 6 9 8 . 2 1 n o i t a r u D Second derivative of duration 229.0873 136.4996 148.7023 67.5980 <-- =secondDur(E6,E5,$B$2)/bondprice(E6,E5,$B$2)BOND CONVEXITY 548 Chapter 21 Function secondDur(numberPayments, couponRate, YTM) For Index = 1 To numberPayments If Index < numberPayments Then secondDur = couponRate * Index * _ (Index + 1) / (1 + YTM) ∧ Index + _ secondDur Else secondDur = (couponRate + 1) * _ Index * (Index + 1) _ / (1 + YTM) ∧ Index + _ secondDur End If secondDur = secondDur Next Index End Function We need three bonds in order to calculate a portfolio of bonds whose dura- tion and whose second duration derivative are exactly equal to those of the liability. The proportions of a portfolio which sets both the duration and its second derivative equal to those of the liability are bond 1 = − 0.5619, bond 3 = 1.6415, bond 4 = − 0.0797. 2 As the following figure shows, this portfolio provides a better hedge against the terminal value than even bond 2: 2. See next subsection for the details of this computation. Here secondDur(numberPayments, couponRate, YTM) is a VBA function we have defined to calculate the second derivative of the duration: 549 Immunization Strategies Computing the Bond Portfolio We want to invest proportions x 1 , x 3 , x 4 in bonds 1, 3, and 4 so that: • The portfolio is totally invested: x 1 + x 3 + x 4 = 1. • The portfolio duration is matched to that of bond 2: x 1 D 1 + x 3 D 3 + x 4 D 4 = D 2 , where D i is the duration of bond i . • The second derivative of the portfolio duration is matched to that of bond 2: xD xD xD D112 332 442 22++= , where Di2 is the duration derivative. Writing this in matrix form, we get: 111 1 134 12 32 421 3 42 22DDD DDDx x xD D⎡ ⎣⎢ ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥⎡ ⎣⎢ ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥=⎡ ⎣⎢ ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥ ⎥ 1,5001,5501,6001,6501,7001,7501,8001,8501,9001,9502,000 0% 2% 4% 6% 8% 10% 12% 14% 16%Immuniza Ɵon Using Second Deriva Ɵves Bond 2 Bond porƞolio 550 Chapter 21 whose solution is given by: x x xDDD DDDD D1 3 4134 12 32 421 2 22111 1 ⎡ ⎣⎢ ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥=⎡ ⎣⎢ ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥⎡ ⎣⎢ ⎢ ⎢−⎤ ⎤ ⎦⎥ ⎥ ⎥ This can easily be set up in Excel: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 3839IJ K L M N Calculating the bond portfolio: Vector of s t n a t s n o c s t n e i c i f f e o c f o x i r t a M 111 1 12.8964 10.8484 7.0539 10.0000 229.0873 148.7023 67.5980 110.0000 Solution -0.5619 1.6415 <-- {=MMULT(MINVERSE(I18:K20),M18:M20)} -0.0797 Explanation of the above: We want to invest proportions x 1, x3, and x 4 in bonds 1, 3 and 4 respectively, in order that: a) The total investment is $1000; this means x 1+x2+x4=1 b) Portfolio duration is matched to that of bond 2; this meansthat x 1*D1+x3*D3+x4*D4 = D 2, where D i is the duration of bond I. c) The weighted average duration derivatives are equal to that of bond 2. These three conditions give us the matrix system in cells I18:K20 and the corresponding solution incells I23:I25 . 551 Immunization Strategies Given this solution, the last chart is produced by the following data table: 26 272829 30 31 32 33 34 353637 38 394041 42 43F E D C B A Data table: Sensitivity of Bond 2 and bond portfolio terminal values to interest rateBond 2Bond portfolio <-- =I23*B23+I24*D23+I25*E23 , data table header (hidden) 0% 1,868.87 $ 1,774.63$ 1% 1,844.71 $ 1,781.79$ 2% 1,825.14 $ 1,786.37$ 3% 1,810.05 $ 1,789.02$ 4% 1,799.35 $ 1,790.32$ 5% 1,792.97 $ 1,790.78$ 6% 1,790.85 $ 1,790.85$ 7% 1,792.95 $ 1,790.91$ 8% 1,799.26 $ 1,791.31$ 9% 1,809.76 $ 1,792.38$ 10% 1,824.46 $ 1,794.38$ 11% 1,843.37 $ 1,797.58$ 12% 1,866.53 $ 1,802.21$ 13% 1,893.98 $ 1,808.46$ 14% 1,925.77 $ 1,816.55$ 15% 1,961.98 $ 1,826.65$ 21.6 Summary The value of an immunized portfolio of bonds is insensitive to small changes in the underlying yield to maturity of the bonds. Immunization involves setting the bond portfolio ’ s duration equal to the duration of the underlying liability against which the portfolio is held. This chapter shows how to effect the immunization of the portfolio. Needless to say, Excel is an excellent tool for immunization calculations. Exercises 1. Prove that the duration of a portfolio is the weighted average duration of the portfolio assets. 2. Set up a spreadsheet that enables you to duplicate the calculations of section 21.5 of this chapter. 3. Using the example of section 21.5, find a combination of bonds 1 and 3 with a duration of 8. Then find a combination of bonds 1 and 2 with a duration of 8. 4. In exercise 3, which portfolio would you prefer to immunize an obligation with a duration of 8? 5. In exercise 3, recalculate the portfolio proportions assuming that you need a target duration of 12. Which portfolio would you prefer now? 2 2 Modeling the Term Structure * 22.1 Overview This chapter discusses the problem of fitting an equation to the term structure of interest rate. The main problem looks like this: We are given a set of bond prices. Can we say something intelligent about the yields on these bonds, for example, in terms of time to maturity or in terms of yields versus duration? The problem is surprisingly complicated. It is obvious that we need to take into account the riskiness of the bonds (the set of bonds should be of equal risk) and their time pattern of interest payments. There is an additional com-plicating factor: The most common interest rate measure for bonds is the yield to maturity (YTM), essentially the internal rate of return of the bond price and the future promised payments on the bond. For analytical purposes, however, it is more meaningful to attach a discount factor d t to payments made in each time period. These discount factors define the so-called pure discount yields on the bonds. 1 This chapter starts with the simplest term structure problem, where there is only one bond for each time period. We then go on to discuss more compli-cated situations. The functional form we fit to the term structure is the Nelson-Siegel model (1987). We also show a variation of this model due to Svensson (section 22.8). 22.2 Basic Example In this section we introduce two methods of pricing bonds in the case where each bond maturity is associated with a single bond. 2 The two methods are • Computing the yield to maturity of each bond. Each bond ’ s yield to maturity (YTM) is the internal rate of return of the bond price and the future payments. * This chapter was co-authored by Dr. Alexander Suhov of Tel Aviv University, a.y.suhov@gmail .com. 1. Those familiar with the Treasury bond strip market will recognize the factors d t as the discount factors associated with Treasury strips. See www.treasurydirect.gov/instit/marketables/strips/ strips.htm. 2. In the next section we discuss the case where there are multiple bonds for the same maturity with possibly inconsistent pricing. 554 Chapter 22 • Computing a set of unique, time-dependent, discount factors for the bonds. Labeling the discount factor for time t by d t , a bond ’ s price is computed by Price C d tt tN = =∑ 1 , where C t is the promised bond payment at time t . To illustrate these two methods, consider 15 bonds, each of which pays an annual coupon until maturity and each of which has a face value of 100. The bonds have a maturity of 1, 2, …, 15. In the spreadsheet clip below we show the table of bonds, their coupon rates, and their YTMs: 1 2 345678 9 10 111213141516 17ABCDEF Bond Price MaturityAnnual coupon rate YTM 1 96.60 1 2.0% 5.59% 2 93.71 2 2.5% 5.93% 3 91.56 3 3.0% 6.17% 4 90.24 4 3.5% 6.34% 5 89.74 5 4.0% 6.47% 6 90.04 6 4.5% 6.56% 7 91.09 7 5.0% 6.63% 8 92.82 8 5.5% 6.69% 9 95.19 9 6.0% 6.73% 10 98.14 10 6.5% 6.76% 11 101.60 11 7.0% 6.79% 12 105.54 12 7.5% 6.81% 13 109.90 13 8.0% 6.83% 14 114.64 14 8.5% 6.84% 15 119.73 15 9.0% 6.85%INITIAL EXAMPLE The YTMs are computed by putting the bond payments into a triangular matrix, part of which is shown below. 555 Modeling the Term Structure There is another way to interpret the data in our basic example. Suppose that each time period t has its own discount factor d t . Then the prices of the bonds could be written as the discounted prices of bond payments: Bond BondBond1 96 6 102 2 93 71 2 5 102 5 39 1 5 6 3 31 12 1:. :. . . :.= =+ =+d dd dd dd Price C d tt tN23 1103+ = =∑.... : In general Using matrices, we can solve for the discount factors d t : C CC CC Cd d d NN N N N11 21 22 121 20 000 0 000 0…… …… …/vertellipsis⎡ ⎣⎢ ⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥∗⎡ ⎣⎢ ⎢⎢⎢⎤ ⎤ ⎦⎥ ⎥⎥⎥=⎡ ⎣⎢ ⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥Price Price Price N1 2 /vertellipsis 1 2 3 4 5 6 7 8 9 1011 12 13 14 15 16 17 18 19FGH I JKLMN YTMInterest rate yt0123456 5 . 5 9 % 1 - 9 6 . 6 0 1 0 2 . 0 00 . 0 00 . 0 00 . 0 00 . 0 00 . 0 0 5.93% 2 -93.71 2.50 102.50 0.00 0.00 0.00 0.00 6.17% 3 -91.56 3.00 3.00 103.00 0.00 0.00 0.00 6 . 3 4 % 4 - 9 0 . 2 43 . 5 03 . 5 03 . 5 0 1 0 3 . 5 00 . 0 00 . 0 0 6.47% 5 -89.74 4.00 4.00 4.00 4.00 104.00 0.00 6.56% 6 -90.04 4.50 4.50 4.50 4.50 4.50 104.50 6 . 6 3 % 7 - 9 1 . 0 95 . 0 05 . 0 05 . 0 05 . 0 05 . 0 05 . 0 0 6 . 6 9 % 8 - 9 2 . 8 25 . 5 05 . 5 05 . 5 05 . 5 05 . 5 05 . 5 0 6 . 7 3 % 9 - 9 5 . 1 96 . 0 06 . 0 06 . 0 06 . 0 06 . 0 06 . 0 0 6.76% 10 -98.14 6.50 6.50 6.50 6.50 6.50 6.50 6.79% 11 -101.60 7.00 7.00 7.00 7.00 7.00 7.00 6.81% 12 -105.54 7.50 7.50 7.50 7.50 7.50 7.50 6.83% 13 -109.90 8.00 8.00 8.00 8.00 8.00 8.00 6.84% 14 -114.64 8.50 8.50 8.50 8.50 8.50 8.50 6.85% 15 -119.73 9.00 9.00 9.00 9.00 9.00 9.00 <-- =IRR(H17:W17)=IF(I$2<$C3,$D3*100,IF(I$2=$C3,(1+$D3)*100,0)) 556 Chapter 22 Solving this system of equations gives d d dC CC CC C NN N N N1 211 21 22 120 000 0 000 0 /vertellipsis… … …… …⎡ ⎣⎢ ⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥=⎡ ⎣⎢ ⎢⎢⎢⎤ ⎤ ⎦⎥ ⎥⎥⎥∗⎡ ⎣⎢ ⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥ −1 1 2Price Price Price N/vertellipsis This computation is easily done in Excel: 1 2 3 4 5 6 7 8 9 1011 12 13 14 15 16 17 18 19FGH I JKLMN Discount factors dtInterest rate yt0123456 0.9471 1 -96.60 102.00 0.00 0.00 0.00 0.00 0.00 0.8911 2 -93.71 2.50 102.50 0.00 0.00 0.00 0.00 0.8354 3 -91.56 3.00 3.00 103.00 0.00 0.00 0.00 0.7815 4 -90.24 3.50 3.50 3.50 103.50 0.00 0.00 0.7300 5 -89.74 4.00 4.00 4.00 4.00 104.00 0.00 0.6814 6 -90.04 4.50 4.50 4.50 4.50 4.50 104.50 0.6358 7 -91.09 5.00 5.00 5.00 5.00 5.00 5.00 0.5930 8 -92.82 5.50 5.50 5.50 5.50 5.50 5.50 0.5530 9 -95.19 6.00 6.00 6.00 6.00 6.00 6.00 0.5157 10 -98.14 6.50 6.50 6.50 6.50 6.50 6.50 0.4809 11 -101.60 7.00 7.00 7.00 7.00 7.00 7.00 0.4484 12 -105.54 7.50 7.50 7.50 7.50 7.50 7.50 0.4181 13 -109.90 8.00 8.00 8.00 8.00 8.00 8.00 0.3898 14 -114.64 8.50 8.50 8.50 8.50 8.50 8.50 0.3635 15 -119.73 9.00 9.00 9.00 9.00 9.00 9.00=IF(I$2<$C3,$D3*100,IF(I$2=$C3,(1+$D3)*100,0)) {=MMULT(MINVERSE(I3:W17),-H3:H17)} Pricing Advantages of the Discount Factors The advantage of the discount factors is that they allow the accurate pricing of any other bond with the same time pattern of payments. Consider, for example, a 5-period bond with a coupon of 3%. The price of this bond, using the current term structure, is 85.5549: 557 Modeling the Term Structure From Discount Factors to a Term Structure The discount factors determine a zero-coupon term structure : dy ttt=− ∗ () exp , where y t is the continuously compounded pure-discount rate for time t . Solving the discount factors for the zero-coupon interest rate gives yd ttt=()ln This means that we can write our bond pricing equation in terms of discount rates instead of discount factors: Price C d C e tt tN tyt tN t== =− =∑∑ 11 Applying this to our example: 21 22 23GH I J KLM Time --> 0 1 2 3 4 5 New bond 85.5549 3 3 3 3 103 <-- {=MMULT(I22:W22,F3:F17)} 2 3 4 56 7 8 9 1011 12 13 1415 16 17 18 19FG H I JKLMNOP Discount factors d tInterest rate y tTime--> Bond 012345 0.9471 5.44% <-- =-LN(F3)/C3 1 -96.60 102.00 0.00 0.00 0.00 0.00 0.8911 5.76% <-- =-LN(F4)/C4 2 -93.71 2.50 102.50 0.00 0.00 0.00 0.8354 6.00% <-- =-LN(F5)/C5 3 -91.56 3.00 3.00 103.00 0.00 0.00 0.7815 6.16% <-- =-LN(F6)/C6 4 -90.24 3.50 3.50 3.50 103.50 0.00 0 0 . 4 0 1 0 0 . 4 0 0 . 4 0 0 . 4 0 0 . 4 4 7 . 9 8 - 5 % 9 2 . 6 0 0 3 7 . 0 0 5 . 4 0 5 . 4 0 5 . 4 0 5 . 4 0 5 . 4 4 0 . 0 9 - 6 % 9 3 . 6 4 1 8 6 . 0 0 0 . 5 0 0 . 5 0 0 . 5 0 0 . 5 0 0 . 5 9 0 . 1 9 - 7 % 7 4 . 6 8 5 3 6 . 0 0 5 . 5 0 5 . 5 0 5 . 5 0 5 . 5 0 5 . 5 2 8 . 2 9 - 8 % 3 5 . 6 0 3 9 5 . 0 0 0 . 6 0 0 . 6 0 0 . 6 0 0 . 6 0 0 . 6 9 1 . 5 9 - 9 % 8 5 . 6 0 3 5 5 . 0 0 5 . 6 0 5 . 6 0 5 . 6 0 5 . 6 0 5 . 6 4 1 . 8 9 - 0 1 % 2 6 . 6 7 5 1 5 . 0 0 0 . 7 0 0 . 7 0 0 . 7 0 0 . 7 0 0 . 7 0 6 . 1 0 1 - 1 1 % 6 6 . 6 9 0 8 4 . 0 0 5 . 7 0 5 . 7 0 5 . 7 0 5 . 7 0 5 . 7 4 5 . 5 0 1 - 2 1 % 8 6 . 6 4 8 4 4 . 0 0 0 . 8 0 0 . 8 0 0 . 8 0 0 . 8 0 0 . 8 0 9 . 9 0 1 - 3 1 % 1 7 . 6 1 8 1 4 . 0 0 5 . 8 0 5 . 8 0 5 . 8 0 5 . 8 0 5 . 8 4 6 . 4 1 1 - 4 1 % 3 7 . 6 8 9 8 3 . 0 0 0 . 9 0 0 . 9 0 0 . 9 0 0 . 9 0 0 . 9 3 7 . 9 1 1 - 5 1 % 5 7 . 6 5 3 6 3 . 0 {=MMULT(MINVERSE(L3:Z17),-K3:K17)}5.0%5.2%5.4%5.6%5.8%6.0%6.2%6.4%6.6%6.8%7.0% 0123456789 1 0 1 1 1 2 1 3 1 4 1 5Pure Discount Term Structure 558 Chapter 22 Different prices or coupons for bonds can produce quite intricate term structures. In the example below we compute the discount factors and interest rates for different sets of annual coupon rates: 2 3 4 5 6 7 8 9 10 11 12 1314 15 16 17 1819ABCD E FG H I JKLMN Bond Price MaturityAnnual coupon rateDiscount factorsInterest rateTime--> Bond ↓0123 1 96.60 1 2.0% 0.9471 5.44% <-- =-LN(F3)/C3 1 -96.60 102.00 0.00 0.00 2 93.71 2 2.5% 0.8911 5.76% <-- =-LN(F4)/C4 2 -93.71 2.50 102.50 0.00 3 91.56 3 3.0% 0.8354 6.00% <-- =-LN(F5)/C5 3 -91.56 3.00 3.00 103.00 4 90.24 4 3.5% 0.7815 6.16% <-- =-LN(F6)/C6 4 -90.24 3.50 3.50 3.50 0 0 . 4 0 0 . 4 0 0 . 4 4 7 . 9 8 - 5 % 9 2 . 6 0 0 3 7 . 0 % 0 . 4 5 4 7 . 9 8 5 0 5 . 4 0 5 . 4 0 5 . 4 4 0 . 0 9 - 6 % 9 3 . 6 4 1 8 6 . 0 % 5 . 4 6 4 0 . 0 9 6 0 8 . 4 0 8 . 4 0 8 . 4 9 0 . 1 9 - 7 % 4 2 . 6 3 6 4 6 . 0 % 8 . 4 7 9 0 . 1 9 7 0 9 . 4 0 9 . 4 0 9 . 4 2 8 . 2 9 - 8 % 3 8 . 5 3 7 2 6 . 0 % 9 . 4 8 2 8 . 2 9 8 0 0 . 5 0 0 . 5 0 0 . 5 9 1 . 5 9 - 9 % 2 4 . 5 2 4 1 6 . 0 % 0 . 5 9 9 1 . 5 9 9 0 1 . 5 0 1 . 5 0 1 . 5 4 1 . 8 9 - 0 1 % 1 0 . 5 0 6 0 6 . 0 % 1 . 5 0 1 4 1 . 8 9 0 1 0 3 . 5 0 3 . 5 0 3 . 5 0 6 . 1 0 1 - 1 1 % 3 7 . 4 4 4 9 5 . 0 % 3 . 5 1 1 0 6 . 1 0 1 1 1 0 7 . 5 0 7 . 5 0 7 . 5 4 5 . 5 0 1 - 2 1 % 9 6 . 4 5 9 6 5 . 0 % 7 . 5 2 1 4 5 . 5 0 1 2 1 0 5 . 6 0 5 . 6 0 5 . 6 0 9 . 9 0 1 - 3 1 % 5 1 . 5 7 1 1 5 . 0 % 5 . 6 3 1 0 9 . 9 0 1 3 1 0 0 . 7 0 0 . 7 0 0 . 7 4 6 . 4 1 1 - 4 1 % 4 2 . 5 3 0 8 4 . 0 % 0 . 7 4 1 4 6 . 4 1 1 4 1 0 3 . 7 0 3 . 7 0 3 . 7 3 7 . 9 1 1 - 5 1 % 6 0 . 5 4 8 6 4 . 0 % 3 . 7 5 1 3 7 . 9 1 1 5 1 {=MMULT(MINVERSE(L3:Z17),-K3:K17)}4.0%4.5%5.0%5.5%6.0%6.5%7.0% 0123456789 1 0 1 1 1 2 1 3 1 4 1 5Pure Discount Term Structure 22.3 Several Bonds with the Same Maturity In the previous section there was only one bond for each maturity date. In real data situations, there are often a number of bonds with similar maturities and possibly inconsistent pricing. In bond markets, which are typified by thin trading and often-misreported prices, this is a common occurrence. Suppose, as in the next example, we have several bonds with similar maturities. In the example below there are two bonds for 3-, 6-, and 9-year maturities, each with a slightly different YTM. 559 Modeling the Term Structure The matrix of cash flows is no longer square, since there are now 15 bonds with 12 maturities. In section 22.2 we found the discount factors d t by inverting the matrix of payments, but in this case this matrix is not invertible, since it is not square: 1 2 34 5 6789 10111213 14 15161718 19ABCDEF Bond Price MaturityAnnual coupon rate YTM 1 91.8967 1 2.0% 10.99% 2 83.2564 2 2.5% 12.47% 3 76.0000 3 3.0% 13.20% 4 76.2347 3 3.2% 13.32% 5 71.2110 4 3.5% 13.22% 6 67.9672 5 4.0% 13.14% 7 66.0000 6 4.5% 13.01% 8 66.1625 6 4.2% 12.56% 9 65.4881 7 5.0% 12.74% 10 65.7003 8 5.5% 12.53% 11 64.0000 9 5.8% 12.75% 12 66.6158 9 6.0% 12.35% 13 68.0989 10 6.5% 12.19% 14 70.0480 12 7.0% 11.79% 15 72.3857 15 7.5% 11.43%MULTIPLE BONDS WITH SAME MATURITY =IRR(H17:W17) 2 3456789 1011121314151617FGH I JKLMNOPQRST YTMTime--> Bond ↓0123456789 1 0 1 1 1 2 1 0 . 9 9 %1 - 9 1 . 9 0 1 0 2 . 0 00 . 0 00 . 0 00 . 0 00 . 0 00 . 0 00 . 0 00 . 0 00 . 0 00 . 0 00 . 0 00 . 0 012.47% 2 -83.26 2.50 102.50 0.00 0.00 0 . 0 00 . 0 00 . 0 00 . 0 00 . 0 00 . 0 00 . 0 00 . 0 0 1 3 . 2 0 %3 - 7 6 . 0 03 . 0 03 . 0 0 1 0 3 . 0 00 . 0 00 . 0 00 . 0 00 . 0 00 . 0 00 . 0 00 . 0 00 . 0 00 . 0 01 3 . 3 2 %4 - 7 6 . 2 33 . 2 03 . 2 0 1 0 3 . 2 00 . 0 00 . 0 00 . 0 00 . 0 00 . 0 00 . 0 00 . 0 00 . 0 00 . 0 013.22% 5 -71.21 3.50 3.50 3.50 103.50 0. 00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 13.14% 6 -67.97 4.00 4.00 4.00 4.00 104. 00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 1 3 . 0 1 %7 - 6 6 . 0 04 . 5 04 . 5 04 . 5 04 . 5 04 . 5 0 1 0 4 . 5 00 . 0 00 . 0 00 . 0 00 . 0 00 . 0 00 . 0 01 2 . 5 6 %8 - 6 6 . 1 64 . 2 04 . 2 04 . 2 04 . 2 04 . 2 0 1 0 4 . 2 00 . 0 00 . 0 00 . 0 00 . 0 00 . 0 00 . 0 01 2 . 7 4 %9 - 6 5 . 4 95 . 0 05 . 0 05 . 0 05 . 0 05 . 0 05 . 0 0 1 0 5 . 0 00 . 0 00 . 0 00 . 0 00 . 0 00 . 0 012.53% 10 -65.70 5.50 5.50 5.50 5.50 5. 50 5.50 5.50 105.50 0.00 0.00 0.00 0.00 12.75% 11 -64.00 5.80 5.80 5.80 5.80 5. 80 5.80 5.80 5.80 105.80 0.00 0.00 0.00 12.35% 12 -66.62 6.00 6.00 6.00 6.00 6. 00 6.00 6.00 6.00 106.00 0.00 0.00 0.00 12.19% 13 -68.10 6.50 6.50 6.50 6.50 6. 50 6.50 6.50 6.50 6.50 106.50 0.00 0.00 12.06% 14 -70.05 7.00 7.00 7.00 7.00 7. 00 7.00 7.00 7.00 7.00 7.00 107.00 0.00 11.95% 15 -72.39 7.50 7.50 7.50 7.50 7. 50 7.50 7.50 7.50 7.50 7.50 7.50 107.50 We can find the discount factors by using a least squares approximation: For each maturity t , we find a factor d t so that the square of the pricing errors for the set of bonds is minimized. The least squares approximation is usually employed to determine the approximate solution of overdetermined systems, 560 Chapter 22 that is, sets of equations in which the equations outnumber the unknowns. “Least squares” means that the overall solution minimizes the sum of the squares of the errors made in the results of every equation. We want to solve for a vector of discount factors d that best approximates the pricing of the bonds. CashflowsDiscount factorsBond Prices[] ∗⎡ ⎣⎢⎤⎦⎥=⎡⎣⎢⎤⎦⎥ 102 25 1 0.2 25 3 3 103 58 58 58 1 0 58 6 6 6 106 65 65 65 66 1 0 65 7 7 7 7 7 107 75. .. . . ... . . ./vertellipsis 775 75 75 75 75 1 0 751 2 12 .. . .. .⎡ ⎣⎢ ⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎡d d d/vertellipsis ⎣ ⎣⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥=91 8967 83 2564 76 0000 72 3857. . . ./vertellipsis⎡ ⎡ ⎣⎢ ⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥ The formula for the least squares approximation is d Cashflows Cashflows Cashflows Prices TT=∗() ∗∗()−1 In Excel this formula becomes d = MMultMinverse MMult Transpose Cashflows , Cashflows , MMul() () ( tt Transpose Cashflow s , Prices () ()⎛ ⎝⎜⎞⎠⎟ Implementing this on our example: 561 Modeling the Term Structure 1 2 3 45 6 789 10 11 12131415 16 17181920 21 22232425 26 27282930 31ABCDEFGH I Bond # PriceMaturity (years)Annual coupon rateMaturity d(t) y(t) 1 91.8967 1 2.0% 1 0.9009 10.43% <-- =-LN(G4)/F4 2 83.2564 2 2.5% 2 0.7903 11.77% 3 76.0000 3 3.0% 3 0.6874 12.49% 4 76.2347 3 3.2% 4 0.6076 12.46% 5 71.2110 4 3.5% 5 0.5387 12.37% 6 67.9672 5 4.0% 6 0.4863 12.01% 7 66.0000 6 4.5% 7 0.4327 11.97% 8 66.1625 6 4.2% 8 0.3911 11.74% 9 65.4881 7 5.0% 9 0.3473 11.75% 10 65.7003 8 5.5% 10 0.3231 11.30% 11 64.0000 9 5.8% 11 0.2945 11.11% 12 66.6158 9 6.0% 12 0.2687 10.95% 13 68.0989 10 6.5% 14 70.0480 11 7.0%15 72.3857 12 7.5%LEAST SQUARES SOLUTION TO TERM STRUCTURE Least squares and term structure 10.0%10.5%11.0%11.5%12.0%12.5%13.0% 123456789 1 0 1 1 1 2 MaturityLeast Squares Term Structure 562 Chapter 22 The fit of discount factors to bond prices will no longer (as in the previous section) be precise. Below we compare the actual bond prices to the fitted prices: 1 2 3 456789 10111213141516171819202122232425262728293031323334ABCD E FGH I J K Bond #Actual priceMaturity (years)Annual coupon rateMaturity d(t) y(t) Fitted price 1 91.8967 1 2.0% 1 0.9009 10.43% <-- =-LN(G4)/F4 91.8959 <-- {=MMULT(O4:Z4,$G$4:$G$15)}2 83.2564 2 2.5% 2 0.7903 11.77% 83.2556 <-- {=MMULT(O5:Z5,$G$4:$G$15)} 3 76.0000 3 3.0% 3 0.6874 12.49% 75.8791 <-- {=MMULT(O6:Z6,$G$4:$G$15)} 4 76.2347 3 3.2% 4 0.6076 12.46% 76.3548 5 71.2110 4 3.5% 5 0.5387 12.37% 71.2104 6 67.9672 5 4.0% 6 0.4863 12.01% 67.9665 7 66.0000 6 4.5% 7 0.4327 11.97% 66.6826 8 66.1625 6 4.2% 8 0.3911 11.74% 65.4793 9 65.4881 7 5.0% 9 0.3473 11.75% 65.4895 10 65.7003 8 5.5% 10 0.3231 11.30% 65.7017 11 64.0000 9 5.8% 11 0.2945 11.11% 64.7904 12 66.6158 9 6.0% 12 0.2687 10.95% 65.8269 13 68.0989 10 6.5% 68.0989 14 70.0480 11 7.0% 70.0480 15 72.3857 12 7.5% 72.3857Least squares and term structureCOMPARING FITTED TO ACTUAL PRICES -1.0-0.8-0.6-0.4-0.20.00.20.40.60.81.0 123456789 1 0 1 1 1 2 1 3 1 4 1 5 BondActual price minus ﬁ/g425ed price 22.4 Fitting a Functional Form to the Term Structure The term structure determined in the previous section may suit our purposes. We may, however, want to fit a functional form to the term structure. The advantage of a functional form is that it allows us to interpolate interest rates for time periods and coupons that are not in our data set. It also allows us to determine the sensitivity of the term structure to structural factors. One popular fitted form for the term structure is the Nelson-Siegel (NS) term structure, which postulates that 563 Modeling the Term Structure yte te tett t()=+−⎛ ⎝⎜⎞⎠⎟⎛⎝⎜⎞⎠⎟+−⎛⎝⎜⎞⎠⎟−⎛⎝⎜⎞⎠⎟ −− −αα β α βββ β 12 311 This model can also be written as: yte tet t()=+ + ()−⎛ ⎝⎜⎞⎠⎟− − −αα α β αβ β 12 3 31 In the next section we analyze the NS term structure model and discuss the meaning and the plausible values of its parameters ( α 1 , α 2 , α 3 , β ). In this section we skip these analytics of the model and show how to fit NS term structure to the discount factors of the example of the previous section. 3 Our end result is given below (explanations to follow): 1 2 3 45 6 7 8 9 10 11 12 13 1415 16 17 18 19ABCDEFGH I JKL M Bond # PriceMaturity (years)Annual coupon rateMaturity dLS(t) yLS(t) NS rate Error 1 91.8967 1 2.0% 1 0.90094 11.00% 10.99% 5.0E-09 α1 0.09622 2 83.2564 2 2.5% 2 0.79028 12.49% 12.56% 4.4E-07 α2 -0.0198 3 76.0000 3 3.0% 3 0.68743 13.31% 13.17% 1.9E-06 α3 0.15235 4 76.2347 3 3.2% 4 0.60759 13.27% 13.29% 7.4E-08 β 1.84868 5 71.2110 4 3.5% 5 0.53867 13.17% 13.18% 1.6E-09 Error 1.4E-05 <-- =SUM(I3:I14) 6 67.9672 5 4.0% 6 0.48632 12.77% 12.95% 3.5E-06 α1+α2 0.0764 7 66.0000 6 4.5% 7 0.4327 12.71% 12.70% 2.5E-08 8 66.1625 6 4.2% 8 0.39109 12.45% 12.44% 7.5E-09 9 65.4881 7 5.0% 9 0.34733 12.47% 12.21% 6.9E-06 10 65.7003 8 5.5% 10 0.32313 11.96% 11.99% 1.1E-0711 64.0000 9 5.8% 11 0.29448 11.76% 11.80% 2.4E-07 12 66.6158 9 6.0% 12 0.26871 11.57% 11.64% 4.1E-07 <-- =(G14-H14)^213 68.0989 10 6.5% 14 70.0480 11 7.0% 15 72.3857 12 7.5%FITTING NELSON-SIEGEL {=LS(C21:N35,B3:B17)}=F14^(-1/G14)-1=NSrate($L$3,$L$4,$L$5,$L$6,G14) 3. Charles R. Nelson and Andrew F. Siegel, “Parsimonious Modeling of Yield Curves,” Journal of Business , 1987. Fitting the NS term structure to a set of bond data is an art! Subsequent sec- tions of this chapter discuss alternative methods to the one described in this section. 564 Chapter 22 The graph below shows the discount factors and the fitted NS term structure: 10.5%11.0%11.5%12.0%12.5%13.0%13.5% 123456789 1 0 1 1 1 2Least squares rate Nelson-Siegel rate Computational Procedure Here ’ s how we computed the NS term structure above: Step 1: We start by computing the discount factors d t and the corresponding yields y ( t ) for the data in a method similar to that discussed in sections 22.2 and 22.3. In the example above we label these d LS ( t ) and y LS ( t ). Step 2: We now assume arbitrary but reasonable values for α 1 , α 2 , α 3 , and β . In the next section we discuss what these values might be. Step 3: Given the arbitrary starting values for α 1 , α 2 , α 3 , and β , we have the NS discount zero coupon yields yte te teNStt t()=+−⎛ ⎝⎜⎞⎠⎟⎛⎝⎜⎞⎠⎟+−⎛⎝⎜⎞⎠⎟−⎛⎝⎜⎞ −− −αα β α βββ β 12 311 ⎠ ⎠⎟ Step 4: We now optimize α 1 , α 2 , α 3 , and β to minimize the sum of the squares between the NS and the LS: ytytLS NS tN ()− () [] =∑2 1 , where N is the number of bonds in our sample. 565 Modeling the Term Structure Here is an example: Suppose that in our example we initially set ( α 1 , α 2 , α 3 , β ) = (0.1, − 0.05, 0.13, 2). This gives the calculations below: 1 2 34 5 678 9 10 1112 13 14 15 16 17 18 19 20 21 22232425 26 27 2829 30 31 32 3334ABCDEFGH I JKL M Bond # PriceMaturity (years)Annual coupon rateMaturity dLS(t) yLS(t) NS rate Error 1 91.8967 1 2.0% 1 0.90094 11.00% 8.41% 6.7E-04 α1 0.1 2 83.2564 2 2.5% 2 0.79028 12.49% 10.27% 4.9E-04 α2 -0.05 3 76.0000 3 3.0% 3 0.68743 13.31% 11.24% 4.3E-04 α3 0.13 4 76.2347 3 3.2% 4 0.60759 13.27% 11.70% 2.5E-04 β 2 5 71.2110 4 3.5% 5 0.53867 13.17% 11.87% 1.7E-04 Error 0.00232 <-- =SUM(I3:I14) 6 67.9672 5 4.0% 6 0.48632 12.77% 11.89% 7.7E-05 α1+α2 0.05 <-- =L3+L4 7 66.0000 6 4.5% 7 0.4327 12.71% 11.82% 7.9E-05 8 66.1625 6 4.2% 8 0.39109 12.45% 11.73% 5.3E-05 9 65.4881 7 5.0% 9 0.34733 12.47% 11.61% 7.3E-05 10 65.7003 8 5.5% 10 0.32313 11.96% 11.50% 2.1E-0511 64.0000 9 5.8% 11 0.29448 11.76% 11.40% 1.3E-05 12 66.6158 9 6.0% 12 0.26871 11.57% 11.30% 7.6E-06 <-- =(G14-H14)^2 13 68.0989 10 6.5% 14 70.0480 11 7.0%15 72.3857 12 7.5%FITTING NELSON-SIEGEL =F14^(-1/E14)-1 =NSrate($L$3,$L$4,$L$5,$L$ 6,E14) {=LS(C37:N51,B3:B17)} 8%9%10%11%12%13% 123456789 1 0 1 1 1 2Least squares rate Nelson-Siegel rate Here are some explanations: • Columns A–D are the data. • Column F gives the least squares fit of the discount factors for each maturity. • Column G translates this LS fit to a pure-discount interest rate. • Column H gives the Nelson-Siegel rate corresponding to our current factors ( α 1 , α 2 , α 3 , β ) = (0.1, − 0.05, 0.13, 2). • Column I squares the difference between the LS rate and the NS rate. The summed squared difference is in cell L7. 566 Chapter 22 We now use Excel ’ s Solver to find ( α 1 , α 2 , α 3 , β ) that minimizes this summed squared difference. Here ’ s the dialog box: The value in cell L6 is for β . As we will see in the next section, beta controls the “hump” in the term structure and must be positive. Here ’ s the solution produced by Solver : 2 3 456 7 89 10 11 121314 15EFGHI JKL M Maturity dLS(t) yLS(t) NS rate Error 1 0.90094 11.00% 10.99% 5.0E-09 α1 0.09622 2 0.79028 12.49% 12.56% 4.4E-07 α2 -0.0198 3 0.68743 13.31% 13.17% 1.9E-06 α3 0.15235 4 0.60759 13.27% 13.29% 7.4E-08 β 1.84868 5 0.53867 13.17% 13.18% 1.6E-09 Error 1.4E-05 <-- =SUM(I3:I14) 6 0.48632 12.77% 12.95% 3.5E-06 α1+α2 0.0764 <-- =L3+L4 7 0.4327 12.71% 12.70% 2.5E-088 0.39109 12.45% 12.44% 7.5E-09 9 0.34733 12.47% 12.21% 6.9E-06 10 0.32313 11.96% 11.99% 1.1E-07 11 0.29448 11.76% 11.80% 2.4E-0712 0.26871 11.57% 11.64% 4.1E-07 <-- =(G14-H14)^2 10.5%11.0%11.5%12.0%12.5%13.0%13.5% 123456789 1 0 1 1 1 2Least squares rate Nelson-Siegel rate 22.5 The Properties of the Nelson-Siegel Term Structure Fitting the Nelson-Siegel (NS) term structure to data requires that we deter- mine reasonable initial values for the parameters ( α 1 , α 2 , α 3 , β ). In this section we examine the NS to explain what these values might be. 567 Modeling the Term Structure The NS zero coupon yield is yte te tett t()=+−⎛ ⎝⎜⎞⎠⎟⎛⎝⎜⎞⎠⎟+−⎛⎝⎜⎞⎠⎟−⎛⎝⎜⎞⎠⎟ −− −αα β α βββ β 12 311 ==+ + ()−⎛ ⎝⎜⎞⎠⎟⎛⎝⎜⎞⎠⎟− − −αα α β αβ β 12 3 31e tet t NS Property 1: The Shortest-Term Rate y (0) Setting t = 0 gives y (0) = α 1 + α 2 . This is the NS shortest-term rate. It follows that for most term structures α 1 + α 2 > 0. NS Property 2: The Longest-Term Rate y ( ∞ ) Setting t = ∞ gives y ( ∞ ) = α 1 . This is the asymptotic long-term interest rate in the NS model. NS Property 3: β Controls the Location of the Term Structure Hump The NS term structure is defined only if β > 0. If the term structure has a “hump,” this can be controlled by the β . In the graph below, we illustrate this. Large betas (e.g., β = 12, below) produce upward-sloping term structures, whereas lower β ’ s produce humpy term structures. Increasing the beta pushes the hump out. Roughly speaking, β is the location of the hump. 0.00%1.00%2.00%3.00%4.00%5.00%6.00% 02468 1 0 1 2 1 4Eﬀect of bon NS Term Structure beta = 0.3 beta = 0.7 beta = 1.0 beta = 1.3 beta = 4.0 beta = 12.0 568 Chapter 22 NS Property 4: α 3 Affects the Hump The factor α 3 has no influence at either very short or very long yields and contributes to the term structure at medium-term yields only. Very roughly speaking, α 3 > 0 produces a concave term structure, α 3 < 0 produces a convex term structure, and α 3 = 0 produces a flat term structure: -15.00%-10.00%-5.00%0.00%5.00%10.00%15.00%20.00%25.00%30.00% 02468 1 0 1 2 1 4Nelson-Siegel Term Structure for Diﬀerent Alpha3 Beta = 1.5 alpha3=-0.4 alpha3=0.0 alpha3=0.8 Nelson-Siegel: Summing Up Fitting a term structure to the NS model involves setting initial values for ( α 1 , α 2 , α 3 , β ). Plausible initial values can be set by “eyeballing” the empirical term structure and setting: • α 1 + α 2 = approximate zero-term interest rate. • α 1 = approximate long-term rate. • β = approximate location of the hump. • α 3 affects the concavity/convexity of the term structure. 569 Modeling the Term Structure 22.6 Term Structure for Treasury Notes In this section we fit the Nelson-Siegel (NS) model to the prices of Treasury notes. This is a much larger data set than the one discussed in the previous section, and it allows us to illustrate a different optimizing technique. We start with the data set of prices for Treasury notes (i.e., bonds with maturities of less than 10 years). The date of the data is 31 March 1989. 1 2 3 4 5 6 7 8 9 1011 12 13 14 15 16 17 18 19 20 21AB C D EF G H I J K 31-Mar-89 Cusip # Clean price Maturity Coupon rateAccrued interestInvoice price 912827UU 99.8438 30-Apr-89 7.125 2.972 102.8158 912827TP 99.7188 15-May-89 6.875 2.583 102.3016 912827JQ 99.9688 15-May-89 9.250 3.475 103.4439 912827QN 100.2500 15-May-89 11.750 4.414 104.6644 912827UX 99.7813 31-May-89 8.000 2.659 102.4406 912827UZ 99.5313 30-Jun-89 7.375 1.834 101.3648 912827SK 100.0625 30-Jun-89 9.625 2.393 102.4555 912827NK 101.3438 15-Jul-89 14.500 3.004 104.3479 912827VC 99.4063 31-Jul-89 7.625 1.243 100.6490 912827TX 98.9688 15-Aug-89 6.625 0.805 99.7740 912827QW 101.5313 15-Aug-89 13.875 1.686 103.2177 912827VF 99.3125 31-Aug-89 7.750 0.653 99.9654 912827VH 99.4375 30-Sep-89 8.500 - 99.4375 912827SU 99.8125 30-Sep-89 9.375 - 99.8125 912827NS 101.0313 15-Oct-89 11.875 5.448 106.4794 912827VL 98.9688 31-Oct-89 7.875 3.285 102.2536 912827UE 98.0313 15-Nov-89 6.375 2.395 100.4263 Current date The accrued interest formula in cell E5 is =COUPDAYBS($C$2,C5,2,1)/COUPDA YS($C$2,C5,2,1)/2*D5127 Treasury Notes on 31 March 1989 The “clean price” of column B above is the quoted price of the bond. In U.S. markets the actual price paid by the purchaser of the bond, the so-called invoice price, is the sum of the clean price plus the relative portion of the current coupon payment. 4 This latter term, the “accrued interest,” is computed by: Accrued interestCurrent date Last interest date Next interest da=− tte Last interest datePeriodic int erest−∗ 4. In most European bond markets, the quoted bond price is the actual price paid for the bond and there is no separate accrued interest calculation. 570 Chapter 22 The Excel file computes the accrued interest using the formulas Coupdaybs and Coupdays . Computing the NS Term Structure To compute the Nelson-Siegel term structure for these data, we define a VBA function NSprice that accepts ( α 1 , α 2 , α 3 , β ) as input and computes the Nelson-Siegel price of a bond. We now optimize using Solver to minimize the sum of the absolute differences between the NSprice and the bond ’ s invoice price. Here is the relevant optimization: 1 2 3 4 5 6 7 8 9 10 11121314 15 16 17 18 19 20J I H G F E D C B A s r e t e m a r a p l e g e i S - n o s l e N 9 8 - r a M - 1 3 α1 0.8000 α2 0.0000 α3 0.0300 β 1.5000 Error 8,479.57 <-- {=SUM(ABS(F16:F142-H16:H142))} Cusip # Clean price MaturityCoupon rateAccrued interest Invoice priceTerm to maturityNSprice NSrate 912827UU 99.8438 30-Apr-89 7.125 2.9720 102.8158 0.0822 96.9656 0.80079 <-- =NSrate($H$3,$H$4,$H$5,$H$6,G16) 912827TP 99.7188 15-May-89 6.875 2.5829 102.3016 0.1233 93.7089 0.80117 912827JQ 99.9688 15-May-89 9.250 3.4751 103.4439 0.1233 94.7847 0.80117 912827QN 100.2500 15-May-89 11.750 4.4144 104.6644 0.1233 95.9172 0.80117 912827UX 99.7813 31-May-89 8.000 2.6593 102.4406 0.1671 90.9612 0.80155COMPUTING THE NELSON-SIEGEL TERM STRUCTURE FOR TREASURY NOTES 127 Treasury Notes on 31 March 1989 Settlement date 80.0%80.1%80.2%80.3%80.4%80.5%80.6%80.7%80.8%80.9%81.0% 02468 1 0 1 2 We ask Solver to minimize the error term in cell H8. The result is: 571 Modeling the Term Structure 22.7 An Additional Computational Improvement In this section we present another method of computing the Nelson-Siegel term structure. The method has the advantages of better convergence for short-term securities. In addition the method in the previous section optimizes four nonlinear parameters, whereas the method in this section optimizes three linear parameters and one nonlinear parameter; this minimizes the problem of non-uniqueness of the parameters. Here are the steps in this method: • We compute the discount factors using the NS method as illustrated in section 22.6. • We use these discount factors to discount the bond ’ s payments, but not the final return of face value. • We compute a rate r T for each bond ’ s face value so that the model price of the bond (using the combination of the NS discount factors and r T ) equals the bond ’ s invoice price. • We now optimize Nelson-Siegel to minimize the differences between the r T and the corresponding Nelson-Siegel rate. Below we give the definitions:1 2 3 4 5 6 789 1011121314 15 161718 19 20J I H G F E D C B A s r e t e m a r a p l e g e i S - n o s l e N 9 8 - r a M - 1 3 α1 0.0861 α2 0.0085 α3 0.0169 β 1.6258 Error 56.96 <-- {=SUM(ABS(F16:F142-H16:H142))} Cusip # Clean price MaturityCoupon rateAccrued interest Invoice priceTerm to maturityNSprice NSrate 912827UU 99.8438 30-Apr-89 7.125 2.9720 102.8158 0.0822 102.7587 9.48% <-- =NSrate($H$3,$H$4,$H$5,$H$6,G16) 912827TP 99.7188 15-May-89 6.875 2.5829 102.3016 0.1233 102.2344 9.49% 912827JQ 99.9688 15-May-89 9.250 3.4751 103.4439 0.1233 103.4081 9.49% 912827QN 100.2500 15-May-89 11.750 4.4144 104.6644 0.1233 104.6436 9.49% 912827UX 99.7813 31-May-89 8.000 2.6593 102.4406 0.1671 102.3621 9.50%COMPUTING THE NELSON-SIEGEL TERM STRUCTURE FOR TREASURY NOTES 127 Treasury Notes on 31 March 1989 Settlement date 8.9%9.0%9.1%9.2%9.3%9.4%9.5%9.6%9.7% 02468 1 0 1 2Maturity 572 Chapter 22 P C d t Frequenc y FaceValue e PC d tnrt nN nN 111 1 1 2221111 =∗ () +∗ =∗ (− =∑ ) ) +∗ =∗ ()− =∑ Frequency FaceValue e P C d t Frequencrt nN KK nKN 2 12222 /vertellipsis yy FaceValue e Krt nN KNKKK +∗− =∑ 1 Solving these equations for the rates r T : rl nP C d t Frequency FaceValuet rnnN N 1111 1 11 21 1=−− () ()⎛ ⎝⎜ ⎜⎞ ⎠⎟ ⎟=∑ ==−− () ()⎛ ⎝⎜ ⎜⎞ ⎠⎟ ⎟=∑lnP C d t Frequency FaceValuet rnnN N K222 1 222 2 /vertellipsis ==−− () ()⎛ ⎝⎜ ⎜⎞ ⎠⎟ ⎟=∑lnP C d t Frequency FaceValuetKK nK nN KNKK K1 The implied rates could be also used for visualization of the term structure. In the following figure we minimize the difference between the implied rates and the corresponding NS rates: 1 2 3 4 5 6 7 8 9 1011 12 13 14 15 16 17ABCD E F G H I J K s r e t e m a r a p l e g e i S - n o s l e N 9 8 / r a M / 1 3 α1 0.0886 α2 0.0008 α3 0.0252 β 0.8269 Error 0.0703 <-- {=SUM(ABS(F15:F141-G15:G141))} {=NSImpliedRate(B17,$C$2,C17,100,D17,2,$H$3,$H$4,$H$5,$H$6,1)} Cusip # MaturityCoupon ratePriceTerm to maturity Implied rate NSrate 912827UU 30/Apr/89 7.125 102.81578 0.0822 0.087203 0.090596 <-- =NSrate($H$3,$H$4,$H$5,$H$6,E15) 912827TP 15/May/89 6.875 102.30162 0.1233 0.088748 0.091106 912827JQ 15/May/89 9.250 103.44389 0.1233 0.091340 0.091106COMPUTING THE NELSON-SIEGEL TERM STRUCTURE FOR TREASURY NOTES 127 Treasury Notes on 31 March 1989 Settlement date 0.086000 0.088000 0.090000 0.092000 0.094000 0.096000 0.098000 0.0000 2.0000 4.0000 6.0000 8.0000 10.0000Implied rates NSrate 573 Modeling the Term Structure 22.8 Nelson-Siegel-Svensson Model The NS model utilizes four parameters to characterize the term structure. It was suggested by Svensson that the NS model can be significantly improved by introducing two additional parameters. 5 The Nelson-Siegel-Svensson model has the following algebraic form: yte tee tet tt t()=+ + ()− ⎛ ⎝⎜⎞⎠⎟−+−− − −− −αα α β α α ββ ββ β 12 3 1 3 4 2111 12 2 ⎛ ⎛⎝⎜⎞⎠⎟ We use the Solver parameters: 5. Lars E. O. Svensson, Estimating and Interpreting Forward Interest Rates: Sweden 1992–1994. IMF Working Paper 94/114, 1994. 574 Chapter 22 Below we show the results: 1 2 3 45 6 7 8 9 10 11 12 13 14 15 16 17ABCD E F G H I J K s r e t e m a r a p l e g e i S - n o s l e N 9 8 / r a M / 1 3 α1 0.0817 α2 0.0033 α3 0.0307 α4 0.02897 β1 0.4397 β2 2.528022 Error 0.0512 <-- {=SUM(ABS(F15:F141-G15:G141))} {=NSSImpliedRate(B17,$C$2,C17,100,D17,2,$H$3,$H$4,$H$5,$H$6,$H$7,$H$8,1)} Cusip # MaturityCoupon ratePriceTerm to maturityImplied rate NSSrate 912827UU 30/Apr/89 7.125 102.81578 0.0822 0.087305812 0.087692799 <-- =NSSrate($H$3,$H$4,$H$5,$H$6,$H$7,$H$8,E15) 912827TP 15/May/89 6.875 102.30162 0.1233 0.088826102 0.088826115 912827JQ 15/May/89 9.250 103.44389 0.1233 0.091444851 0.088826115COMPUTING THE NELSON-SIEGEL-SVENSSON TERM STRUCTURE FOR TREASURY NOTES 127 Treasury Notes on 31 March 1989 Settlement date 0.0860.0880.090.0920.0940.0960.098 0.0000 2.0000 4.0000 6.0000 8.0000 10.0000 22.9 Summary In this chapter we presented several simple and powerful mathematical tech- niques for term structure calculation. The Nelson-Siegel approximation was introduced in detail and its applications were discussed, along with (in section 22.8) the Nelson-Siegel-Svensson variation. We began with the simplest case, in which there is only one bond for each maturity, so that the term structure can be found uniquely. Next, we extended the method to a set in which several bonds can have the same maturity. Then, we discussed a real-life case of Treasury notes, which can have any maturity date. Finally, the Svensson exten-sion of the NS methods was presented. 575 Modeling the Term Structure Function NSrate(alpha1, alpha2, alpha3, beta, t) If t = 0 Then NSrate = alpha1 + alpha2 Else NSrate = alpha1 + (alpha2 + alpha3) * _ (beta / t) * (1 - Exp(-t / beta)) - _ alpha3 * Exp(-t / beta) End If End Function The function NSdiscount computes the NS discount factors: Function NSdiscount(alpha1, alpha2, alpha3, _ beta, t) If t = 0 Then NSdiscount = 1 Else NSdiscount = Exp(-t * (alpha1 + _ (alpha2 + alpha3) * (beta / t) * _ (1 - Exp(-t / beta)) - alpha3 * _ Exp(-t / beta))) End If End Function Appendix: VBA Functions Used in This Chapter The function NSrate computes the Nelson-Siegel rate for time t based on specific values of the four NS parameters α 1 , α 2 , α 3 , β : 576 Chapter 22 Function NSprice(alpha1, alpha2, alpha3, _ beta, j, no_payments, rate, frequency) temp = 0 rrate = rate / frequency For i = 0 To no_payments - 1 temp = temp + rrate * 100 * _ NSdiscount(alpha1, alpha2, alpha3, beta, _ j + i / frequency) Next i NSprice = temp + 100 * NSdiscount(alpha1, _ alpha2, alpha3, beta, j + (no_payments - 1) _ / frequency) End Function The function NSImpliedRate uses Excel functions to compute the implied rates: The function NSprice computes the price of a standard coupon bond using the Nelson-Siegel term structure: 577 Modeling the Term Structure Private Function LS(XMatrix, YVector) Dim X, Y, A, B As Variant X = XMatrix Y = YVector n = UBound(X, 1) l = UBound(Y) If n < > l Then GoTo FEnd With WorksheetFunction A = .MMult(.Transpose(X), X) LS = .MMult(.MInverse(A), _ .MMult(.Transpose(X), Y)) End With FEnd: End Function 2 3 Calculating Default-Adjusted Expected Bond Returns 23.1 Overview In this chapter we discuss the effects of default risk on the returns from holding bonds to maturity. The expected return on a bond that may possibly default is different from the bond ’ s promised return . The latter is defined as the bond ’ s yield to maturity , the internal rate of return calculated from the bond ’ s current market price and its promised coupon payments and promised eventual return of principal in the future. The bond ’ s expected return is less easily calculated: We need to take into account both the bond ’ s probability of future default and the recovery rate , the percentage of its principal which holders can expect to recover in the case of default. To complicate matters still further, default can happen in stages, through the gradual degradation of the issuing company ’ s creditworthiness. 1 In this chapter we use a Markov model to solve for the expected return on a risky bond. Our adjustment procedure takes into account all three of the factors mentioned: the probability of default, the transition of the issuer from one state of creditworthiness to another, and the percentage recovery of face value when the bond defaults. In sections 23.2–23.4 we first use Excel to solve a relatively small-scale problem. We then use some publicly available statistics to program a fuller spreadsheet model. Finally, we show that this model can be used to derive bond betas, the CAPM ’ s risk measure for securities (dis-cussed previously in Chapters 8–11). Some Preliminaries Before proceeding, we define a number of terms: • A bond is issued with a given amount of principal or face value . When the bond matures, the bondholder is promised the return of this principal. If the bond is issued at par , then it is sold for the principal amount. • A bond bears an interest rate called the coupon rate . The periodic payment promised to the bondholders is the product of the coupon rate times the bond ’ s face value. 1. Besides default risk, bonds are also subject to term structure risk: The prices of bonds may show significant variations over time as a result of changing term structure. This statement will be especially true for long-term bonds. In this chapter we abstract from term structure risk, confin-ing ourselves only to a discussion of the effects of default risk on bond expected returns. 580 Chapter 23 • At any given moment, a bond will be sold in the market for a market price . This price may differ from the bond ’ s coupon rate. 2 • The bond ’ s yield to maturity (YTM) is the internal rate of return of the bond, assuming that it is held to maturity and that it does not default. American corporate bonds are rated by various agencies on the basis of the bond issuer ’ s ability to make repayment on the bonds. The classification scheme for two of the major rating agencies, Standard & Poor ’ s (S&P) and Moody ’ s, is given below: Long-Term Senior Debt Ratings Investment-Grade Ratings Speculative-Grade Ratings S&P Moody ’ s Interpretation S&P Moody ’ s Interpretation AAA Aaa Highest qualityBB + Ba1 Likely to fulfill obligations; ongoing uncertaintyBB Ba2 BB − Ba3 AA + Aa1 High quality B + B1 High-risk obligations AA Aa2 B B2AA − Aa3 B − B3 A + A1 Strong payment capacityCCC + Caa Current vulnerability to defaultA A2 CCC A − A3 CCC − BBB + Baa1 Adequate payment capacityC Ca In bankruptcy or default, or other marked shortcomingsBBB Baa2 D D BBB − Baa3 2. Just to complicate matters, in the United States the convention is to add to a bond ’ s listed price the prorated coupon (the accrued interest) between the time of the last coupon payment and the purchase date. The sum of these two is termed the invoice price of the bond; the invoice price is the actual cost at any moment to a purchaser of buying the bond. In our discussion in this chapter we use the term market price to denote the invoice price. The computation of the accrued interest is illustrated in section 23.5. 581 Calculating Default-Adjusted Expected Bond Returns When a bond defaults, its holders will typically receive some payoff, though less than the promised bond coupon rate and return of principal. We refer to the percentage of face value paid off in default as the recovery percentage . 3 23.2 Calculating the Expected Return in a One-Period Framework The bond ’ s yield to maturity is not its expected return: It is clear that both a bond ’ s rating and the anticipated payoff to bond holders in the case of bond default should affect its expected return. All other things being equal, we would expect that if two newly issued bonds have the same term to maturity, then the lower-rated bond (having the higher default probability) should have a higher coupon rate. Similarly, we would expect that an issued and traded bond whose rating has been lowered would experience a decrease in price. We might also expect that the lower the anticipated payoff in the case of default, the lower will be the bond ’ s expected return. As a simple illustration, we calculate the expected return of a one-year bond which can default at maturity. We use the following symbols: F = face value of the bond P = price of bond Q = annual coupon rate of the bond π = probability that the bond will not default at end of year λ = fraction of bond ’ s value bondholders collect upon default The bond ’ s expected end-of-year cash flow is π · (1 + Q ) · F + (1 − π ) · λ · F , and its expected return is given by One year bond exp ected returnExpected year end cash flow Initial--=bbond price P QF F P,− =⋅+() ⋅+−() ⋅⋅−1 111ππ λ 3. The bond ’ s recovery percentage is not, as you might think, the payoff to the bondholders in the final settlement of a bankruptcy. Instead it is usually computed as the price of the bond in the period immediately following a financial distress event. 582 Chapter 23 This calculation is illustrated in the following spreadsheet: 1 234 5 6789AB C 0 0 1 F , e u l a v e c a F 0 9 P , e c i r P Annual coupon rate, Q 8% Default probability 20% Recovery percentage 40% Expected period 1 cash flow 94.4 <-- =B2*(1+B4)*(1-B5)+B2*B6*B5Expected return 4.89% <-- =B8/B3-1EXPECTED RETURN ON A ONE-YEAR BOND WITH AN ADJUSTMENT FOR DEFAULT PROBABILITY 23.3 Calculating the Bond Expected Return in a Multi-Period Framework We now introduce multiple periods into the above problem. In this section we define a basic Markov model which uses a ratings transition matrix to compute a bond ’ s expected return. The model is illustrated using a very simple set of ratings, much simpler than the complex rating system illustrated in section 23.1. Section 23.5 uses more realistic data. We suppose that at any date there are four possible bond “ratings”: A, B, C Bond ratings of solvent bonds in decreasing order of credit worthiness. D The bond is in default for the first time and pays off recovery rate λ of the face value. E The bond was in default in the previous period; it therefore pays off 0 in the current period and in any future periods. The transition probability matrix Π is given by 583 Calculating Default-Adjusted Expected Bond Returns Π=⎡ ⎣⎢ ⎢⎢⎢⎢ππππ ππππ ππππAA AB AC AD BA BB BC BD CA CB CC CD0 00 0000 10000 1⎢ ⎢⎤ ⎦⎥ ⎥⎥⎥⎥⎥ The probabilities in each row of the matrix Π indicate the probability that in one period the bond will go from a rating of i to a rating of j . In the numerical examples in this and the following two sections, we use the following Π : 2 34567ABC D E F A BC D E A 0.9700 0.0200 0.0100 0.0000 0.0000 B 0.0500 0.8000 0.1500 0.0000 0.0000 C 0.0100 0.0200 0.7500 0.2200 0.0000 D 0.0000 0.0000 0.0000 0.0000 1.0000 E 0.0000 0.0000 0.0000 0.0000 1.0000 What does this matrix Π mean? • If a bond is rated A in the current period, there is a probability of 0.97 that it will still be rated A in the next period. There is a probability 0.02 that it will be rated B in the next period and a probability of 0.01 that it will be rated C. It is impossible for the bond to be rated A today and D or E in the subsequent period. • A bond that starts off with a rating of B can—in a subsequent period—be rated A (with a probability of 0.05), be rated B (with a probability of 0.8), or be rated C (probability 0.15). Bonds rated B in the current period do not default (rating D) in the next period. The transition probabilities from state C to states A, B, C, and D are 0.01, 0.02, 0.75, and 0.22, respectively. • While it is possible to go from ratings A, B, or C to any of ratings A, B, C, or D, it is not possible to go from A, B, or C to E. This is so, since E denotes that default took place in the previous period . • A bond that is currently in state D (i.e., first-time default) will necessarily be in E in the next period. Thus the fourth row of our matrix Π will always be [0 0 0 0 1]. • Once the rating is in E, it remains there permanently. This means that the fifth row of the matrix Π will also always be [0 0 0 0 1]. 584 Chapter 23 The Multi-Period Transition Matrix The matrix Π defines the transition probabilities over one period. The two- period transition probabilities are given by the matrix product Π * Π . The spreadsheet below uses the array function MMULT . 4 It shows that the product Π * Π is: Two period transition probability -* 0.9420 0.0356 0.0202 0.00= =ΠΠ 2 22 0.0000 0.0900 0.6440 0.2330 0.0330 0.0000 0.0182 0.0312 0.5656 0. .1650 0.2200 0.0000 0.0000 0.0000 0.0000 1.0000 0.0000 0.0000 0.000 00 0.0000 1.0000⎡ ⎣⎢ ⎢⎢⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥⎥⎥ Thus if a bond is rated “B” today, there is a probability of 9% that in two periods it will be rated “A,” a probability of 64.4% that in two periods it will be rated B, a probability of 23.3% that in two periods it will be rated C, and a probability of 3.3% that in two periods it will default (and hence be rated D). Here is the spreadsheet: 4. See discussion of matrix products and array functions in Chapter 34. 585 Calculating Default-Adjusted Expected Bond Returns In general, the year t transition matrix is given by the matrix power Π t . Calculating these matrix powers by the procedure illustrated above is cumber- some, so we define a VBA function Matrixpower to compute powers of matrices: 1 2 3 45678 9 10 11 1213 14 1516171819 20 2122232425 26ABCDEF One-period transition matrix A BCDE A 0.9700 0.0200 0.0100 0.0000 0.0000 B 0.0500 0.8000 0.1500 0.0000 0.0000 C 0.0100 0.0200 0.7500 0.2200 0.0000 D 0.0000 0.0000 0.0000 0.0000 1.0000 E 0.0000 0.0000 0.0000 0.0000 1.0000 Two-period transition matrix A BCDE A 0.9420 0.0356 0.0202 0.0022 0.0000 B 0.0900 0.6440 0.2330 0.0330 0.0000 C 0.0182 0.0312 0.5656 0.1650 0.2200 D 0.0000 0.0000 0.0000 0.0000 1.0000 E 0.0000 0.0000 0.0000 0.0000 1.0000 Cells B12:F16 contain the array formula =MMULT(B4:F8,B4:F8) Three-period transition matrix A BCDE A 0.9157 0.0477 0.0299 0.0044 0.0022 B 0.1218 0.5217 0.2723 0.0513 0.0330 C 0.0249 0.0366 0.4291 0.1244 0.3850 D 0.0000 0.0000 0.0000 0.0000 1.0000 E 0.0000 0.0000 0.0000 0.0000 1.0000 Cells B21:F25 contain the array formula =MMULT(B4:F8,B12:F16)USING THE MMULT FUNCTION To compute multi-period transition matrices Function Matrixpower(matrix, n) If n = 1 Then Matrixpower = matrix Else: Matrixpower = Application.MMult (Matrixpower(matrix, n - 1), matrix) End If End Function 586 Chapter 23 The use of this function is illustrated below. The function Matrixpower allows a one-step computation of the power of any transition matrix: 1 23456789 10111213141516171819ABCDEF One-period transition matrix A BCDE A 0.9700 0.0200 0.0100 0.0000 0.0000 B 0.0500 0.8000 0.1500 0.0000 0.0000 C 0.0100 0.0200 0.7500 0.2200 0.0000 D 0.0000 0.0000 0.0000 0.0000 1.0000 E 0.0000 0.0000 0.0000 0.0000 1.0000 t1 0 t-period transition matrix A BCDE A 0.7648 0.0799 0.0699 0.0148 0.0706 B 0.2123 0.1429 0.1747 0.0432 0.4269 C 0.0450 0.0250 0.0755 0.0208 0.8338 D 0.0000 0.0000 0.0000 0.0000 1.0000 E 0.0000 0.0000 0.0000 0.0000 1.0000 Cells B14:F18 contain the array formula =matrixpower(B4:F8,B10)USING THE FUNCTION MATRIXPOWER To compute multi-period transition matrices From the above example it follows that if a bond started out with an A rating, there is a probability of 1.48% that the bond will be in default at the end of 10 periods and a 7.06% probability that it will have defaulted in a previous period (rating E). The Bond Payoff Vector Recall that Q denotes the bond ’ s coupon rate and λ denotes the recovery per- centage payoff of face value if the bond defaults. The payoff vector of the bond depends on whether the bond is currently in its last period N or whether t < N : Payoff t t NQ QQ Payoff t t NQQQ ,,< () =⎧ ⎨⎪ ⎪⎪ ⎩⎪ ⎪ ⎪=() =+ ++⎧ ⎨⎪ ⎪⎪ λλ 01 11 0⎩ ⎩⎪ ⎪ ⎪ 587 Calculating Default-Adjusted Expected Bond Returns The first three elements of each vector denote the payoff in non-defaulted states, the fourth element λ is the payoff if the rating is D, and the fifth element 0 is the payoff if the bond rating is E. (Recall that E is the rating for the period after the bond defaults—in our model the payoff in rating E is always zero.) The distinction between the two vectors depends, of course, on the repayment of principal in the terminal period. Before we can define the expected payoffs, we need to define one further vector, which will denote the initial state of the bond . This current state vector is a vector with a 1 for the current rating of the bond and zeros elsewhere. Thus, for example, if the bond has rating A at date 0, then initial = [1 0 0 0 0]; if it has date 0 rating of B, then initial = [0 1 0 0 0]. We can now define the expected bond payoff in period t : E Payoff t Initial Payoff t t() [] =⋅ ⋅ Π () 23.4 A Numerical Example We continue using the numerical Π from the previous section to price a bond with the following characteristics: • The bond is currently rated B. • Its coupon rate Q = 7%. • The bond has 5 more years to maturity. • The bond ’ s current market price is 100% of its face value. • The bond ’ s recovery percentage λ = 50%. The following spreadsheet shows the facts listed above as well as the payoff vectors of the bond at dates before maturity (in cells F3:F7) and on the maturity date (cells I3:I7). The transition matrix is given in cells C10:G14, and the initial vector is given in C16:G16. The expected bond payoffs are given in row 20. Before we explain how they were calculated, we note the important economic fact that—if the expected payoffs are as given—then the bond ’ s expected return is calculated by the Excel IRR function. As cell B21 shows, this expected return is 4.61%. The actual formula in cell B21 is IRR(B20:AN20) . This allows the calculation of the IRR of bonds of maturity up to 40 years. 588 Chapter 23 Note the use of the IF statement in translating the bond ’ s initial rating (cell B6) to the initial vector given in row 16. To avoid confusion, we write this as IF(Upper(B6) = “A”,1,0) , etc. This guarantees that even if the bond ’ s rating is entered as a lowercase letter, the initial vector will come out correctly. How to Calculate the Expected Bond Payoffs As indicated in the previous section, the period t expected bond payoff is given by the following formula: E [ payoff ( t )] = initial · Π t · payoff ( t ). The formula in row 21 uses two IF statements to implement this formula: = IF(year > bondterm, 0, IF(year = bondterm, MMULT(initial, MMULT(ma atrixpower (transition, year), payoff2)), MMULT(initial, MMULT ((matrixpower(transition, year), payoff1)))) Here ’ s what this means:1 2 34 5 6789 101112131415 16 17181920212223242526AB C D E F G H I Bond price 100.00% ) N ( f f o y a P ) N < t ( f f o y a P % 7 0 1 t h g i r o t s l l e C % 7 t h g i r o t s l l e C % 7 Q , e t a r n o p u o C Recovery rate, λ % 7 0 1 d e l l a c e r a % 7 d e l l a c e r a % 0 5 5 N , m r e t d n o B % 7 0 1 \" 2 f f o y a p \" % 7 \" 1 f f o y a p \" % 0 5 0 2 w o r n i % 0 5 0 2 w o r n i B g n i t a r l a i t i n I % 0 % 0 A BC D E Transition matrix → A 0.9700 0.0200 0.0100 0.0000 0.0000 B 0.0500 0.8000 0.1500 0.0000 0.0000 C 0.0100 0.0200 0.7500 0.2200 0.0000 D 0.0000 0.0000 0.0000 0.0000 1.0000 E 0.0000 0.0000 0.0000 0.0000 1.0000 Initial vecto r 01 0 00 Formula in cell C16: =IF(UPPER(B6)=\"A\",1,0) Y 7 6 5 4 3 2 1 0 r a e Expected payoffs -1.0000 0.0700 0.0842 0.0897 0.0899 0.8802 0.0000 0.0000 Expected yield 4.61% <-- =IRR(B20:AN20,0)CALCULATING THE EXPECTED BOND RETURN =IF(year>bondterm,0,IF(year=bondterm,MMULT(initial,MMULT(matrixpower(transition,year),payoff2)),MMULT(initial,MMULT(matrixpower(transition,year),payoff1))))IRR of expected payoffs 589 Calculating Default-Adjusted Expected Bond Returns • First IF : If the current year is greater than the bond term N (in our example N = 5 ), then the payoff on the bond is 0. • Second IF : If the current year is equal to the bond term N , then the expected payoff on the bond is MMULT(initial,MMULT(matrixpower(transition, year),payoff2)). Here transition is the name for the transition matrix in cells C10:G14 and payoff2 is the name for the cells I3:I7. • If the current year n is less than the bond term, then the expected payoff on the bond is MMULT(initial,MMULT(matrixpower(transition,C18), payoff1) , where payoff1 is the name for the cells F3:F7. Copying this formula gives the whole vector of expected bond payoffs. 23.5 Experimenting with the Example We can gain some insight into the relation between a bond ’ s expected return, its coupon rate, and its yield to maturity (YTM) by constructing some data tables. In the data table below we compute the bond ’ s expected return as a function of its recovery percentage λ : 28 29 303132333435 36 3738 39 404142 43 4445AB C D E F G H I Recovery percentage, l 4.61% <-- =B21 , Tableheader 0% 2.43% 7% 10% 2.87% 7% 20% 3.31% 7% 30% 3.74% 7% 40% 4.18% 7% 50% 4.61% 7% 60% 5.03% 7% 70% 5.46% 7% 80% 5.88% 7% 90% 6.30% 7% 100% 6.71% 7% Note: The data table has a series with the coupon rate appended so that in the graph we can see the convergence of the bond expectedreturn to the coupon rate (cells C30:C40)Data table: Recovery percentage and expected yield 0%1%2%3%4%5%6%7%8% 0% 10% 20% 30% 40% 50% 60% 70% 80% 90% 100%Bond Expected Return and Recovery Rate Bond price = 100%, Bond Rating = B, Coupon = 7.00% 590 Chapter 23 We conclude that a bond selling at par will, for every recovery percentage λ , have expected return less than the coupon rate. If the bond ’ s initial rating is lower, then the expected return is less for every λ : 28 29 303132333435 36 373839404142 43 44 45AB C D E F G H I Recovery percentage, l -4.69% <-- =B21 , Tableheader 0% -14.72% 7% 10% -12.73% 7% 20% -10.74% 7% 30% -8.73% 7% 40% -6.71% 7% 50% -4.69% 7% 60% -2.66% 7% 70% -0.62% 7% 80% 1.43% 7% 90% 3.49% 7% 100% 5.55% 7% Note: The data table has a series with the coupon rate appended so that in the graph we can see the convergence of the bond expected return to the coupon rate (cells C30:C40)Data table: Recovery percentage and expected yield -20%-15%-10%-5%0%5%10% 0% 10% 20% 30% 40% 50% 60% 70% 80% 90% 100%Bond Expected Return and Recovery Rate Bond price = 100%, Bond Rating = C, Coupon = 7.00% As shown in the example below, when the bond price is below par (meaning that the bond is sold at less than 100% of its face value), the bond ’ s expected return can be both below and above its coupon rate. 591 Calculating Default-Adjusted Expected Bond Returns 23.6 Computing the Bond Expected Return for an Actual Bond In this section we illustrate the computation of a bond expected return for an actual bond. Although the principles used are the same as those discussed above, we introduce three innovations:1 2 345 6 789 101112131415161718 19 2021222324252627 28 29303132333435363738 39 4041424344AB C D E F G H I J Bond price 88.00% ) N ( f f o y a P ) N < t ( f f o y a P % 7 0 1 6 I : 3 I s l l e C % 7 6 F : 6 F s l l e C % 7 Q , e t a r n o p u o C Recovery rate, λ % 7 0 1 d e l l a c e r a % 7 d e l l a c e r a % 0 5 Bond term, N 8 % 7 0 1 \" 2 f f o y a p \" % 7 \" 1 f f o y a p \" % 0 5 9 1 w o r n i % 0 5 9 1 w o r n i B g n i t a r l a i t i n I % 0 % 0 A BC D E Transition matrix → A 0.9700 0.0200 0.0100 0.0000 0.0000 B 0.0500 0.8000 0.1500 0.0000 0.0000 C 0.0100 0.0200 0.7500 0.2200 0.0000 D 0.0000 0.0000 0.0000 0.0000 1.0000 E 0.0000 0.0000 0.0000 0.0000 1.0000 Initial vector 0 1 0 0 0.0000 Formula in cell C16: =IF(UPPER(B6)=\"A\",1,0) 8 7 6 5 4 3 2 1 0 r a e Y Expected payoffs -0.8800 0.0700 0.0842 0.0897 0.0899 0.0867 0.0818 0.0761 0.6914 Expected yield 6.30% Recovery percentage, λ 6.30% <-- Table header 0% 3.33% 7% 10% 3.94% 7% 20% 4.54% 7% 30% 5.13% 7% 40% 5.72% 7% 50% 6.30% 7% 60% 6.87% 7% 70% 7.43% 7% 80% 8.00% 7% 90% 8.55% 7% 100% 9.10% 7% Note: The data table has a series with thecoupon rate appended so that in the graph wecan see the convergence of the bond expectedData table: Recovery percentage and expected yieldCALCULATING THE EXPECTED BOND RETURN =IF(year>bondterm,0, IF(year=bondterm,MMULT(initial,MMULT(matrixpower(transition,year),payoff2)), MMULT(initial,MMULT(matrixpower(transition,year),payoff1))))IRR of expected payoffs 2.5%3.5%4.5%5.5%6.5%7.5%8.5%9.5% 0% 10% 20% 30% 40% 50% 60% 70% 80% 90% 100%Bond Expected Return and Recovery Rate Bond price = 88%, Bond Rating = B, Coupon = 7.00% , YTM = 9.183% 592 Chapter 23 • We compute the bond ’ s actual price using its quoted price and the accrued interest. The accrued interest is jargon for the unpaid part of the bond coupon since the last interest payment. In U.S. bond markets, the accrued interest is added to the quoted bond price to compute the amount actually paid for the bond. In most European bond markets, the quoted bond price is the actual price paid for the bond and there is no separate accrued interest calculation. The accrued interest is defined as: Accrued interest =Current date Last interest date Next interest da− tte Last interest datePeriodic int erest−∗ • We use actual payment dates for the bond and use the XIRR function to compute the bond ’ s expected yield. • We use an actual transition matrix for bond ratings. The bond we analyze is a CCC-rated bond issued by AMR (the parent company of American Airlines). Originally issued on 15 May 1991 and matur- ing on 12 March 2021, the AMR bond has a coupon of 10.55% payable semiannually on 15 May and 15 November. When we looked up the bond on Yahoo on 20 July 2005, its price was 76.75% of par: 593 Calculating Default-Adjusted Expected Bond Returns To the quoted price of 76.75% we must add the bond ’ s accrued interest: 3 45678MN Accrued interest calculation Last payment date 15-Mar-05 Next payment date 15-Sep-05Current date 20-Jul-05 Percentage of period 0.69Accrued interest 0.0364 It follows that the actual price paid for the bond is 76.75% + 3.64% = 80.39%. In the spreadsheet below we compute the AMR expected return: 1 2 3 4567 8 9 1011 12 13 14 15 16 17 1819 20 21222324 25 26 27 28 29 30 3132 33 343536 37 38AB C D E F G H I J K % 5 7 . 6 7 e c i r p d n o B ) N ( f f o y a P ) N < t ( f f o y a P o t r o t c e V % 5 5 . 0 1 Q , e t a r n o p u o C AAA 5.28% Vector to 105.28% Actual price (includes accrued) 80.39% <-- =B2+N8 right AA 5.28% right 105.28% Recovery rate, λ d e l l a c % 0 0 . 0 5 A 5.28% called 105.28% \" 1 f f o y a p \" 1 2 - r a M - 2 1 e t a d y t i r u t a M BBB 5.28% \"payoff2\" 105.28% 5 0 - l u J - 0 2 e t a d t n e r r u C BB % 8 2 . 5 0 1 % 8 2 . 5 C C C g n i t a r l a i t i n I B % 8 2 . 5 0 1 % 8 2 . 5 % 1 8 . 4 1 M T Y d n o B CCC % 8 2 . 5 0 1 % 8 2 . 5 Default % 0 0 . 0 5 % 0 0 . 0 5 E % 0 % 0 Transition matrix → AAA AA A BBB BB B CCC Default E AAA 0.9366 0.0583 0.0040 0.0008 0.0003 0.0000 0.0000 0.0000 0.0000 AA 0.0066 0.9172 0.0694 0.0049 0.0006 0.0009 0.0002 0.0001 0.0000 A 0.0007 0.0225 0.9176 0.0519 0.0049 0.0020 0.0001 0.0004 0.0000 BBB 0.0003 0.0025 0.0483 0.8926 0.0444 0.0081 0.0016 0.0022 0.0000 BB 0.0003 0.0007 0.0044 0.0667 0.8331 0.0747 0.0105 0.0098 0.0000 B 0.0000 0.0010 0.0033 0.0046 0.0577 0.8419 0.0387 0.0530 0.0000 CCC 0.0016 0.0000 0.0031 0.0093 0.0200 0.1074 0.6396 0.2194 0.0000 Default 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 E 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 AAA AA A BBB BB B CCC Default E Initial vector 000 0 0 0 100 Computing the AMR bond expected return 0 1 2 3 4 5 6 7 8 9 9 0 - p e S - 5 1 9 0 - r a M - 5 1 8 0 - p e S - 5 1 8 0 - r a M - 5 1 7 0 - p e S - 5 1 7 0 - r a M - 5 1 6 0 - p e S - 5 1 6 0 - r a M - 5 1 5 0 - p e S - 5 1 5 0 - l u J - 0 2 e t a D Expected payoffs -0.8039 0.1509 0.1066 0.0781 0.0594 0.0471 0.0387 0.0329 0.0287 0.0257 Expected bond return 2.49% <-- =XIRR(B32:AP32,B31:AP31)CALCULATING THE EXPECTED BOND RETURN This version computes the expected bond return for AMR taking into account actual dates Uses annual transition matrix original ratingprobability of migrating to rating by year end (%) =IF(E31>$B$6,0, IF(E31=$B$6,MMULT(initial,MMULT(matrixpower(transition,E30),payoff2)), MMULT(initial,MMULT(matrixpower(transition,E30),payoff1))))Annualized IRR of expected payoffs computed using actual dates with XIRR .Coupon paid semiannually 594 Chapter 23 Assuming a recovery rate of 50%, the bond has an expected return of 2.49%. What Are the Recovery Rates? The recovery rate is obviously a critical factor in computing the bond ’ s expected return. There are considerable data on the recovery rates in bank-ruptcy from various industries. A table from an article by Edward Altman and Velore M. Kishore is given below; from this table we can see that the average recovery rate from a variety of industries was 41%. Recovery Rates by Industry: Defaulted Bonds by Three-Digit SIC Code, 1971–1995 Industry SIC CodeNumber of ObservationsRecovery Rate AverageWeighted ObservationsMedian AverageStandard Deviation Weighted Public utilities 490 56 70.47 65.48 79.07 19.46 Chemicals, petroleum, rubber and plastic products 280,290,300 35 62.73 80.39 71.88 27.10 Machinery, instruments, and related products 350,360,380 36 48.74 44.75 47.50 20.13 Services—business and personal 470,632,720,730 14 46.23 50.01 41.50 25.03 Food and kindred products 200 18 45.28 37.40 41.50 21.67 Wholesale and retail trade 500,510,520 12 44.00 48.90 37.32 22.14Diversified manufacturing 390,998 20 42.29 29.49 33.88 24.98Casino, hotel, and recreation 770,790 21 40.15 39.74 28.00 25.66Building materials, metals, and fabricated products 320,330,340 68 38.76 29.64 37.75 22.86 Transportation and transportation equipment 370,410,420,450 52 38.42 41.12 37.13 27.98 Communication, broadcasting, movies, printing, publishing 270,480,780 65 37.08 39.34 34.50 20.79 Financial institutions600,610,620,630, 670 66 35.69 35.44 32.15 25.72 Construction and real estate 150,650 35 35.27 28.58 24.00 28.69 General merchandise stores530,540,560,570, 580,000 89 33.16 29.35 30.00 20.47 Mining and petroleum drilling 100,103 45 33.02 31.83 32.00 18.01 Textile and apparel products 220,230 31 31.66 33.72 31.13 15.24 Wood, paper, and leather products 240,250,260,310 11 29.77 24.30 18.25 24.38 Lodging, hospitals, and nursing facilities 700 through 890 22 26.49 19.61 16.00 22.65 Total 696 41.00 39.11 36.25 25.56 Source: Altman & Kishore, “Almost Everything You Wanted to Know about Recoveries on Defaulted Bonds,” Table 3, Financial Analysis Journal , November/December 1996. 595 Calculating Default-Adjusted Expected Bond Returns Using the Altman and Kishore numbers, the average recovery percentage for transportation companies is 38.42%, with a standard deviation of 27.98%. Taking one standard deviation on either side of the average, we can conclude that the recovery percentage for a transportation company is somewhere between (38.42% – 27.98%, 38.42% + 27.98%) = ( ∼ 10%, ∼ 66%). In the spreadsheet below we have “backward engineered” a plausible set of recovery ratios, from 55% to 65%, for the AMR bond. These “guesstimates” for the AMR recovery is based on two assumptions: • The AMR bond should not have an expected return significantly more than the riskless rate of return, which at the time of our calculations was around 4%. • The AMR bond expected return should be significantly less than its YTM of ∼ 15%. The YTM is based on promised payments, and we find it implausible that these should correspond to the expected returns. This gives (highlighted area below) an expected bond yield of between 3.85% and 6.86% for the AMR bond: 40 41 42 434445 46 47 48 49 50 51 52 53 54AB C D E F G H I Recovery percentage, λ YTM 0.0% -7.93% 14.78% 10.0% -6.22% 14.78% 20.0% -4.36% 14.78% 30.0% -2.32% 14.78% 40.0% -0.05% 14.78% 55.0% 3.85% 14.78% 60.0% 5.31% 14.78% 65.0% 6.86% 14.78% 80.0% 12.15% 14.78% 90.0% 16.27% 14.78% 100.0% 20.93% 14.78% Cell B41 contains the data table header =B33Data table: Recovery percentage and expected AMR bond return -10%-5%0%5%10%15%20%25% 0.0% 20.0% 40.0% 60.0% 80.0% 100.0% Recovery percentage l 596 Chapter 23 23.7 Semiannual Transition Matrices The analysis of the AMR bond in the previous section assumes that the annual transition probabilities are also valid for bonds paying semiannual coupons. We could refine this assumption by computing a semiannual transition matrix from the S&P data. Such a matrix would be the square root of the Π matrix. This is not a calculation which can be easily done in Excel. In the spreadsheet below we have used a computation from Mathematica to find the semiannual transition matrix. 5 5 . Mathematica is a high-powered computational program. See www.wolfram.com . 597 Calculating Default-Adjusted Expected Bond Returns AAA AA A BBB BB B CCC Default E AAA 0.9366 0.0583 0.0040 0.0008 0.0003 0.0000 0.0000 0.0000 0.0000 AA 0.0066 0.9172 0.0694 0.0049 0.0006 0.0009 0.0002 0.0001 0.0000 A 0.0007 0.0225 0.9176 0.0519 0.0049 0.0020 0.0001 0.0004 0.0000 BBB 0.0003 0.0025 0.0483 0.8926 0.0444 0.0081 0.0016 0.0022 0.0000 BB 0.0003 0.0007 0.0044 0.0667 0.8331 0.0747 0.0105 0.0098 0.0000 B 0.0000 0.0010 0.0033 0.0046 0.0577 0.8419 0.0387 0.0530 0.0000 CCC 0.0016 0.0000 0.0031 0.0093 0.0200 0.1074 0.6396 0.2194 0.0000 Default 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 E 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 AAA AA A BBB BB B CCC Default E AAA 0.9677 0.0303 0.0015 0.0004 0.0001 0.0000 0.0000 0.0000 0.0000 AA 0.0034 0.9574 0.0362 0.0021 0.0002 0.0004 0.0001 0.0000 0.0000 A 0.0003 0.0117 0.9573 0.0272 0.0023 0.0010 0.0000 0.0003 -0.0001 BBB 0.0001 0.0012 0.0254 0.9439 0.0238 0.0038 0.0008 0.0017 -0.0007 BB 0.0002 0.0003 0.0018 0.0359 0.9115 0.0406 0.0056 0.0068 -0.0026 B 0.0000 0.0005 0.0017 0.0018 0.0314 0.9161 0.0225 0.0510 -0.0248 CCC 0.0009 -0.0001 0.0016 0.0050 0.0105 0.0624 0.7988 0.2706 -0.1495 Default 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 E 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 AAA AA A BBB BB B CCC Default E AAA 0.9677 0.0303 0.0015 0.0004 0.0001 0.0000 0.0000 0.0000 0.0000 AA 0.0034 0.9574 0.0362 0.0021 0.0002 0.0004 0.0001 0.0001 0.0000 A 0.0003 0.0117 0.9573 0.0272 0.0023 0.0010 0.0000 0.0001 0.0000 BBB 0.0001 0.0012 0.0254 0.9439 0.0238 0.0038 0.0008 0.0010 0.0000 BB 0.0002 0.0003 0.0018 0.0359 0.9115 0.0406 0.0056 0.0041 0.0000 B 0.0000 0.0005 0.0017 0.0018 0.0314 0.9161 0.0225 0.0261 0.0000 CCC 0.0009 0.0000 0.0016 0.0050 0.0105 0.0624 0.7988 0.1208 0.0000 Default 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 E 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000COMPUTING THE SQUARE ROOT OF THE TRANSITION MATRIX The square root of the one-year transition matrix as computed by Mathematica Note the negative entriesThe one-year transition matrix original ratin gprobability of migrating to rating by year end (%)The semi-annual transition matrix. To eliminate the negative entries in the Mathematica matrix above: a. We assume that a transition from AAA, ... , CCC --> E is impossible (i.e.: last column is zero except for last two entries).b. We set all other negative entries to zero. c. We set default probability so that each row sums to 1.original ratin gprobability of migrating to rating by year end (%) original ratin gprobability of migrating to rating by year end (%) 598 Chapter 23 If we use the semiannual transition matrix to compute the expected bond returns we get: 1 234 5 678 9 10 1112 13 14 15 16 17 1819 20 212223 24 25 26 27 28 293031 32AB C D E F G H I J K % 5 7 . 6 7 e c i r p d n o B ) N ( f f o y a P ) N < t ( f f o y a P o t r o t c e V % 5 5 . 0 1 Q , e t a r n o p u o C AAA 5.28% Vector to 105.28% Actual price (includes accrued) 80.39% <-- =B2+N8 right AA 5.28% right 105.28% Recovery rate, λ d e l l a c % 0 0 . 0 5 A 5.28% called 105.28% \" 1 f f o y a p \" 1 2 - r a M - 2 1 e t a d y t i r u t a M BBB 5.28% \"payoff2\" 105.28% 5 0 - l u J - 0 2 e t a d t n e r r u C BB % 8 2 . 5 0 1 % 8 2 . 5 5 6 . 5 1 ) s r a e y ( y t i r u t a M B % 8 2 . 5 0 1 % 8 2 . 5 Number of semiannual payments 30.00 CCC % 8 2 . 5 0 1 % 8 2 . 5 C C C g n i t a r l a i t i n I Default % 0 0 . 0 5 % 0 0 . 0 5 % 1 8 . 4 1 M T Y d n o B E % 0 % 0 Transition matrix Æ AAA AA A BBB BB B CCC Default E AAA 0.9677 0.0303 0.0015 0.0004 0.0001 0.0000 0.0000 0.0000 0.0000 AA 0.0034 0.9574 0.0362 0.0021 0.0002 0.0004 0.0001 0.0001 0.0000 A 0.0003 0.0117 0.9573 0.0272 0.0023 0.0010 0.0000 0.0001 0.0000 BBB 0.0001 0.0012 0.0254 0.9439 0.0238 0.0038 0.0008 0.0010 0.0000 BB 0.0002 0.0003 0.0018 0.0359 0.9115 0.0406 0.0056 0.0041 0.0000 B 0.0000 0.0005 0.0017 0.0018 0.0314 0.9161 0.0225 0.0261 0.0000 CCC 0.0009 -0.0001 0.0016 0.0050 0.0105 0.0624 0.7988 0.1208 0.0000 Default 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 E 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 AAA A A A BBB BB B CCC Default E Initial vector 000 0 0 0 100 9 8 7 6 5 4 3 2 1 0 d o i r e P 6 0 - r a M - 5 1 5 0 - p e S - 5 1 5 0 - l u J - 0 2 e t a D 15-Sep-06 15-Mar-07 15-Sep-07 15-Mar-08 15-Sep-08 15-Mar-09 15-Sep-09 Expected payoffs -0.8039 0.1068 0.0903 0.0771 0.0664 0.0578 0.0508 0.0451 0.0405 0.0367 ) 0 3 P A : 0 3 B , 1 3 P A : 1 3 B ( R R I X = - - < % 7 0 . 8 d l e i y d e t c e p x ECALCULATING THE EXPECTED BOND RETURN This version computes the expected bond return for AMR taking into account actual dates Uses semi-annual transition matrix original ratin gprobability of migrating to rating by year end (%)Coupon paid semiannually The semiannual transition matrix gives expected bond returns which are, in general, higher than those given by the annual transition matrix: 599 Calculating Default-Adjusted Expected Bond Returns 23.8 Computing Bond Beta A vexatious problem in corporate finance is the computation of bond betas. The model presented in this chapter can be easily used to compute the beta of a bond. Recall from Chapter 2 that the capital asset pricing model ’ s security market line (SML) is given by: Er r Er r E r Expected return on debt rR e tdf d m f d f()=+ ()− [] ()= =β where uurn on riskless debt E r Return on equity market portfolio m()= If we know the expected return on debt, we can calculate the debt β , pro- vided we know the risk-free rate r f and the expected rate of return on the market E ( r m ). Suppose, for example, that the market risk premium E ( r m ) – r f = 8.4%, and that r f = 7%. Then a bond having an expected return of 8% will have a β of 0.119: Recovery percentage, lAnnual transition matrixSemiannual transition matrix 0% -3.05% 0.93% 10% -1.75% 2.14% 20% -0.30% 3.45% 30% 1.32% 4.86% 40% 3.15% 6.40% 55% 5.25% 8.07% 60% 7.68% 9.90% 65% 10.51% 11.89% 80% 13.83% 14.07% 90% 17.73% 16.45% 100% 22.33% 19.04%Expected bond returnCOMPARING THE EXPECTED RETURNS WITH SEMIANNUAL VS. ANNUAL TRANSITION MATRICES Using actual dates and XIRR Expected Bond Returns with Annual and Semiannual Transition Matrices -5%0%5%10%15%20%25% 0% 10% 20% 30% 40% 55% 60% 65% 80% 90% 100% Recovery percentage lAnnual transition matrix Semiannual transition matrix 600 Chapter 23 If we use the tax-adjusted version of the SML (see section 3.10), then the bond SML becomes r D = Cost of debt = r f + β Debt [ E ( r M ) − r f (1 − T C )]. This gives the bond beta as: 1 2 3 4 5C B A Market risk premium, E(r m) - r f 8.40% rf 7% % 0 0 . 8 n r u t e r d n o b d e t c e p x E 2 B / ) 3 B - 4 B ( = - - < 9 1 1 . 0 a t e b d n o b d e i l p m ICALCULATING A BOND'S BETA 7 89 10 11 12AB C Tax-adjusted SML: r D = r f + βDebt*[E(r M) - r f*(1-T C)] Market risk premium, E(r m) - r f 8.40% rf 7% Corporate tax rate, T C 40% Expected bond return 8.00% Implied bond beta 0.089 <-- =(B11-B9)/(B8+B9*B10) Using our data for AMR, we get, for the classical SML model: E(rM) 8% rf 3.90% Recovery percentage, lAnnual transition matrixSemiannual transition matrix 0% -1.84 -0.79 10% -1.49 -0.47 20% -1.11 -0.12 30% -0.68 0.25 40% -0.20 0.66 55% 0.36 1.10 60% 1.00 1.59 65% 1.75 2.11 80% 2.63 2.69 90% 3.66 3.32 100% 4.88 4.01COMPARING AMR BOND BETAS SEMIANNUAL VS. ANNUAL TRANSITION MATRICES Using actual dates and XIRR BOND BETAAMR BOND BETAS -3.00-2.00-1.000.001.002.003.004.005.006.00 0% 10% 20% 30% 40% 55% 60% 65% 80% 90% 100% Recovery percentage lAnnual transition matrix Semiannual transition matrix 601 Calculating Default-Adjusted Expected Bond Returns If we assume that the corporate tax rate is T C = 40%, then the tax-adjusted CAPM gives the following betas: E(rM) 8% rf 3.90% Corp. tax rate, T C 40.00% Recovery percentage, λAnnual transition matrixSemiannual transition matrix 0% -1.30 -0.56 10% -1.06 -0.33 20% -0.79 -0.08 30% -0.48 0.18 40% -0.14 0.47 55% 0.25 0.78 60% 0.71 1.12 65% 1.24 1.50 80% 1.86 1.90 90% 2.59 2.35 100% 3.45 2.84COMPARING AMR BOND BETAS Using the tax-adjusted CAPM BOND BETA -1.50-1.00-0.500.000.501.001.502.002.503.003.50 0% 20% 40% 60% 80% 100% Recovery percentage λAMR BOND BETAS Tax-adjusted CAPM Annual transition matrix Semiannualtransition matrix If these bond betas seem large, note that the AMR bond has a maturity comparable to these long-term Treasury bonds and has in addition consider- able default risk. Another fact which helps place the AMR bond beta into context is AMR ’ s stock beta. According to Yahoo this beta is 3.617: 602 Chapter 23 23.9 Summary In this chapter we have shown how to compute the expected return on a risky bond using a simple technique involving rating transitions. Computing a bond ’ s expected returns puts the bond analysis on the same footing as the analysis of stocks. Expected returns—common in the analysis of stocks—are rarely computed for bonds, where the common analysis is in terms of yields to maturity. But the yield to maturity of a bond, essentially the bond ’ s IRR based on its promised future payments, includes an ill-defined premium for the bond ’ s default. Having computed a bond ’ s expected return, we can then compute its beta using the security market line (SML). Compared to the vast efforts to compute and calibrate stock betas, relatively little research energy has been expended on bond betas. The technique illustrated in this chapter, based on the transition matrix of the bond ratings, is relatively new. This technique still has to be refined and thoroughly tested by academic research. Several refinements to the rating-based technique for computing expected bond returns still need to be explored. These include: 603 Calculating Default-Adjusted Expected Bond Returns • Better transition matrices . Transition matrices need to be refined, and perhaps made industry specific. (The problem with industry-specific data is that the number of observations drops dramatically. Nevertheless, there are examples of such data [for example, a Standard & Poor ’ s 2004 study on real estate–backed loans cited in the Selected References). • Time-dependent transition matrices . Our technique assumes that transition matrices are stationary—constant through time. Perhaps better techniques can be developed that allow for matrices to change with time. For example, we would expect that in difficult economic conditions, the ratings transition matrix would “shift to the right”—that the probabilities of a given rating getting worse over any period would increase. • More data on recovery ratios . Exercises 1. A newly issued bond with 1 year to maturity has a price of 100, which equals its face value. The coupon rate on the bond is 15%; the probability of default in 1 year is 35%; and the bond ’ s payoff in default will be 65% of its face value. a. Calculate the bond ’ s expected return. b. Create a data table showing the expected return as a function of the recovery percentage and the price of the bond. 2. Consider the case of five possible rating states, A, B, C, D, and E. A, B, and C are initial bond ratings, D symbolizes first-time default, and E indicates default in the previous period. Assume that the transition matrix Π is: Π=⎡ ⎣⎢ ⎢⎢⎢⎢1000 0 0 06 0 90 0 03 0 01 0 0 02 0 05 0 88 0 05 0 0000 10000 1........ ⎢ ⎢⎤ ⎦⎥ ⎥⎥⎥⎥⎥ A 10-year bond issued today at par with an A rating is assumed to bear a coupon rate of 7%. • If a bond is issued today at par with a B rating and with a recovery percentage of 50%, what should be its coupon rate so that its expected return will also be 7%? • If a bond is issued today at par with a C rating and with a recovery percentage of 50%, what should be its coupon rate so that its expected return will be 7%? 3. Using the transition matrix of the previous problem: A C-rated bond is selling at par on 18 July 2007. The bond ’ s maturity is 17 July 2017, it has a coupon (paid annually on 17 July) of 11%, and it has a recovery percentage of λ = 67%. What is the bond ’ s expected return? 604 Chapter 23 4. An underwriter issues a new 7-year B-rated bond with a coupon rate 9%. If the expected rate of return on the bond is 8%, what is the bond ’ s implied recovery percentage λ ? Assume the transition matrix given in section 23.5. 5. An underwriter issues a new 7-year C-rated bond at par. The anticipated recovery rate in default of the bond is expected to be 55%. What should be the coupon rate on the bond so that its expected return is 9%? Assume the transition matrix of exercise 2. V MONTE CARLO METHODS Section V of Financial Modeling shows how to simulate financial problems in Excel. Traditional finance theory concentrates on the solution of financial problems: What is the optimal portfolio? What is the price of an option? Simu-lation is no substitution for solution of problems, but it often gives new insights into the nature of the uncertainty underlying the problem. In some cases—for example the path-dependent options discussed in Chapter 30—there is no concise pricing solution, and simulation methods are the best way to arrive at an acceptable price. Our aim in this section is to show the reader how to conceive of financial simulation and how to build simulations using Excel without additional add-ins. Chapter 24 is the basis of this discussion, showing how Excel ’ s random-number generator can be used to generate various distributions. We include in this chapter two methods for producing correlated random numbers. “Monte Carlo” refers to various simulation techniques that can be used to compute values of complicated functions that often have no analytical solution. Chapter 25 discusses the basics of Monte Carlo valuation. Its basic example shows how to compute the value of π using a simulation. Most financial pricing models assume that asset returns are lognormally distributed. In Chapter 26 we discuss this assumption and show how it can be simulated. Chapter 27 extends the simulations to discuss outcomes of investing in portfolios, and Chapter 28 discusses value at risk (VaR) in the context of simulation models. Finally Chapters 29 and 30 examine simulation methods as applied to options. In Chapter 29 we discuss the simulation of portfolio insurance, and in Chapter 30 we discuss Monte Carlo methods for pricing path-dependent options. 2 4 Generating and Using Random Numbers 24.1 Overview In this chapter we discuss techniques for computing random numbers. We use random numbers extensively in Chapters 25–30 to simulate stock prices, investment strategies, and option strategies. In this chapter we show how to produce both uniformly distributed and normally distributed random numbers. A random-number generator on a computer is a function that produces a seemingly unrelated set of numbers. The question of what is a random number is a philosophical one. 1 In this chapter we will ignore philosophy and con- centrate on some simple random-number generators—primarily the Excel random-number generator Rand( ) and the VBA random-number generator Rnd . 2 We will show how to use these generators to produce uniform random numbers and subsequently random numbers that are normally distributed. At the end of the chapter we use the Cholesky decomposition to produce corre-lated random numbers. To imagine a set of uniformly distributed random numbers think of an urn filled with 1,000 little balls, numbered 000, 001, 002, … , 999. Suppose we perform the following experiment: Having shaken the urn to mix up the balls, we draw one ball out of the urn and record the ball ’ s number. Next we put the ball back into the urn, shake the urn thoroughly so that the balls are mixed up again, and then draw out a new ball. The series of numbers produced by repeat-ing this procedure many times should be uniformly distributed between 000 and 999. A random-number generator on a computer is a function that imitates this procedure. The random-number generators considered in this chapter are sometimes termed pseudo-random-number generators , since they are actually deterministic functions whose values are indistinguishable from random numbers. All pseudo-random-number generators have cycles (i.e., they eventu-ally start to repeat themselves). The trick is to find a random-number generator 1. Philosophical? Perhaps theological. Knuth (1981, p. 142) gives the following quote: “A random sequence is a vague notion embodying the idea of a sequence in which each term is unpredictable to the uninitiated and whose digits pass a certain number of tests, traditional with statisticians and depending somewhat on the uses to which the sequence is to be put” (attributed to D. H. Lehmer, 1951). 2. In this book we usually write Excel functions in boldface without the parentheses. In this chapter we generally write Rand( ) with the parentheses to emphasize that (1) the parentheses are necessary, and (2) that they are empty. 608 Chapter 24 with a long cycle. The Excel Rand( ) function has very long cycles and is a respectable random-number generator. If you ’ ve never used a random-number generator, open an Excel spreadsheet and type = Rand( ) in any cell. You will see a 15-digit number between 0.000000000000000 and 0.999999999999999. Every time you recalculate the spreadsheet (e.g., by pressing the F9 key), the number changes. We leave the technical details of how Rand( ) works for the exercises to this chapter, where we show you how to design your own random-number generator. Suffice it to say, however, that the series of numbers produced by the function should be (to use Lehmer ’ s terminology from footnote 1) “unpredictable to the uninitiated.” In this chapter we shall deal with several kinds of random-number genera- tors: We first examine the uniform random-number generators which come with Excel and VBA. Subsequently we generate normally distributed random numbers. 3 Finally we generate correlated random numbers using the Cholesky decomposition. 24.2 Rand( ) and Rnd: The Excel and VBA Random-Number Generators Suppose you simply wanted to generate a list of random numbers. One way to do this would be to copy the Excel function Rand( ) to a range of cells. 1 2 3456789 1011 12ABCD E 0.6230 0.9983 0.2132 0.3381 <-- =RAND() 0.3836 0.7527 0.9139 0.36350.5948 0.7089 0.9563 0.13330.4543 0.7327 0.1095 0.97020.0250 0.1392 0.9793 0.50490.5001 0.3219 0.1293 0.22550.8931 0.4278 0.8038 0.22390.5847 0.9270 0.6634 0.54490.4985 0.2468 0.8391 0.5452 Each cell contains the function Rand( ) . Each time you update the spreadsheet or press F9 the block of cells will produce a new set of random numbers.USING EXCEL'S RAND( ) FUNCTION 3. A common nomenclature speaks of “random deviates.” Only in financial engineering can one find “normal deviates”! 609 Generating and Using Random Numbers In section 24.3 we will develop a crude test of how well Rand( ) works. Using VBA ’ s Rnd Function VBA contains its own function Rnd , which is equivalent to the Excel Rand function. 4 Here ’ s a small VBA program which illustrates a basic use of the Rnd function: Sub RandomList() ‘Produces a simple list of random numbers For Index = 1 To 10 Range(“A4”).Cells(Index, 1) = Rnd Next Index End Sub In the spreadsheet below, the VBA program has been assigned to a button, so that each time we click on the button, it runs a VBA program that produces 10 random numbers: 1 2 3456789 101112ABCDE List 0.045350.414030.862620.790480.373540.961950.871450.056240.949560.36402USING VBA'S RND FUNCTION TO PRODUCE A LIST OF RANDOM NUMBERS RandomList Macro 4. Confusing, no? Two different functions in the same computer package which do the same thing … 610 Chapter 24 Assigning a Macro to a Button or to a Control Sequence In the spreadsheet pictured on page 609, we have assigned the macro RandomList to the button marked “RandomList Macro.” Any drawing shape in Excel can be assigned a VBA program. In this case we have created a rectangle; right-clicking on this rectangle, we have assigned it a macro: 611 Generating and Using Random Numbers 24.3 Testing Random-Number Generators Producing lists of random numbers is interesting, though a bit uninformative. Is the list of numbers thus produced really uniformly distributed? A simple test is to generate each number and determine whether it falls into the interval [0,0.1), [0.1,0.2), … , [0.9,1). The notation [a,b) denotes the half-open interval between a and b ; a number x is in this interval if a ≤ x < b . If the list of numbers is really uniformly distributed, we would expect roughly an even number of the “random” numbers to be in each of the 10 intervals. One way to test this is to generate a list of random numbers on the spread- sheet by copying Rand( ) to many cells and then using the Excel array function Frequency(data_array,bins_array) . 5 This is illustrated in the following spreadsheet picture: 1 2 3456789 10111213 14F E D C B A Random numbers Bin Frequency 0.8978 <-- =RAND() 0.1 0 1 2 . 0 4 5 3 8 . 0 1 3 . 0 8 8 1 5 . 0 0 4 . 0 7 1 3 7 . 0 ) 2 1 D : 3 D , 2 1 A : 3 A ( Y C N E U Q E R F = - - < 0 5 . 0 7 6 0 5 . 0 4 6 . 0 8 1 4 2 . 0 1 7 . 0 6 0 4 6 . 0 1 8 . 0 8 2 2 1 . 0 2 9 . 0 1 1 6 5 . 0 0 1 3 4 5 5 . 0USING EXCEL'S FREQUENCY FUNCTION TO TEST THE DISTRIBUTION OF RAND() Each cell in the range A3:A12 contains the formula Rand() . Pressing F9 will produce a new set of random numbers and frequencies. 5. Array functions are explained in Chapter 34. 612 Chapter 24 This method is obviously not efficient (or even feasible) when we want to test the random-number generator for large numbers of random draws. The following program uses VBA to generate many random numbers and puts them into the bins in range A3:A12: 1 234 5 6789 10111213141516 17 18 19F E D C B A 0.724913 <-- =RAND() Bin Frequency 5 5 1 1 . 0 4 3 8 4 2 6 . 0 0 5 1 2 . 0 1 0 7 3 9 0 . 0 4 5 1 3 . 0 5 6 5 9 1 0 . 0 8 4 1 4 . 0 8 1 5 5 3 1 . 0 ) 2 1 D : 3 D , A : A ( Y C N E U Q E R F = - - < 5 5 1 5 . 0 4 4 5 8 4 2 . 0 2 4 1 6 . 0 3 4 8 5 9 1 . 0 9 5 1 7 . 0 5 7 9 2 3 5 . 0 8 4 1 8 . 0 9 5 0 1 3 2 . 0 9 3 1 9 . 0 7 4 7 5 9 4 . 0 5 4 1 1 2 7 5 6 1 0 . 0 0.526736 ) 2 1 E : 3 E ( M U S = - - < 5 9 4 1 l a t o T 9 1 7 1 1 2 . 0 0.214072 0.287068 0.877499 0.058629 0.154429USING EXCEL'S FREQUENCY FUNCTION TO TEST THE DISTRIBUTION OF RAND() Writing Frequency(A:A,D3:D12) refers to all non-empty cells in column A: 613 Generating and Using Random Numbers Sub UniformRandom() ‘Puts random numbers into bins Range(“E3”) = Time ’ the number of random draws N = Range(“B2”).Value Dim distribution(10) As Long ‘bins For k = 1 To N draw = Rnd distribution(Int(draw * 10) + 1) = _ distribution(Int(draw * 10) + 1) + 1 Next k For Index = 1 To 10 Range(“B5”).Cells(Index, 1) = distribution(Index) Next Index Range(“E4”) = Time End Sub 614 Chapter 24 In the spreadsheet below we have generated 100 million random numbers in 25 seconds: 1 2 3456789 1011 12 1314151617181920212223ABC D E F G H I J Runs 100,000,000 Starttime 8:55:57 Bin Output Stoptime 8:56:28 1 10,000,082 Elapsed 0:00:31 2 10,000,0793 9,999,875 4 9,999,979 5 10,000,2566 9,999,942 7 10,000,105 8 9,999,955 9 10,000,225 10 9,999,502UNIFORMLY-DISTRIBUTED RANDOM NUMBERS 9,999,0009,999,2009,999,4009,999,6009,999,80010,000,00010,000,20010,000,400 123456789 1 0Frequency Distribution of 100,000,000 Runs of VBA's Rnd FunctionUniformRandom Macro Here are some things to note about UniformRandom : • The program has a “clock” to measure the amount of time it takes to run. At the start of the program, we use Range(“E3”) = Time to put the current time into cell E3. At the end of the program, Range(“E4”) = Time puts in the ending time. The cell elapsed contains the formula = stoptime-starttime . Note that in order for the cells to read correctly, you have to use the command Format|Cells|Number|Time on the relevant cells. • The heart of the program uses the function Int(draw * 10) + 1 . Multiplying the random draw by 10 produces a number whose first digit is 0, 1, … , or 9. The VBA function Int gives this integer. Distribution is a VBA array numbered 1 to 10, with Distribution(1) being the number of random numbers in [0,0.1), Distribution(2) the number of random numbers in [0.1,0.2), etc. Thus Int(draw * 10) + 1 is the proper place in Distribution to which the current random draw belongs. 615 Generating and Using Random Numbers Using Randomize to Produce the Same List (or Not) of Random Numbers Most random-number generators use the last generated “random” number to produce the next. 6 The first number used in a particular sequence is controlled by the “seed,” which is typically taken from the computer ’ s clock. VBA ’ s Rnd is no exception, but it allows you to control the seed by using the command Randomize . The two small programs below illustrate two uses of this command. • Using Randomize without any numeric argument resets the seed (meaning— it breaks the connection between the next random number and the current random number). This is illustrated in the macro Random_EachDifferent , though it is difficult to see the effect. Sub Random_EachDifferent() ‘Produces a list of random numbers Randomize ‘Initializes the VBA random number generator For Index = 1 To 10 Range(“A5”).Cells(Index, 1) = Rnd() Next Index End Sub • Using Randomize(seed) uses a particular number as the seed. • Using the sequence of commands Rnd(negative number) and Randomize(seed) guarantees the same sequence of random numbers. This is illustrated in the macro Random_Same . 6. There are more examples of this in the exercises at the end of the chapter. 616 Chapter 24 Sub Random_Same() ‘Produces the same list of random numbers ‘which is always the same Rnd (-4) ‘Initializes the VBA random number generator Randomize (Range(“seed”)) For Index = 1 To 10 Range(“B5”).Cells(Index, 1) = Rnd() Next Index End Sub In the spreadsheet below, pushing the top button produces a random set of random numbers. Pushing the bottom button activates the macro Random_ Same and produces the same set of random numbers each time—provided the Seed (cell B2) isn ’ t changed. 1 2 3 4 56789 101112131415 16AB C Seed 334 Output: Each run differentOutput: Each run same 0.54165 0.29708 0.50241 0.706530.99067 0.654630.85176 0.968480.97838 0.489990.40634 0.723730.88656 0.065180.59110 0.600340.72938 0.253820.49635 0.70398 Note : to see the effect of the \"Run Random_Same\" button, erase the cells B5:B14. Changing the seed in cell B2 changes the output in column B.PRODUCING LISTS OF RANDOM NUMBERS Run Random_EachDifferent Run Random_Same 617 Generating and Using Random Numbers 24.4 Generating Normally Distributed Random Numbers In the sections above we have generated numbers which are uniformly distrib- uted. In this section we explore four ways to produce normally distributed random numbers using Excel. Method 1: Normally Distributed Numbers Using Data|Data Analysis|Random Number Generation One way to do this is to use the Excel command Data|Data Analysis|Random Number Generation . Here ’ s how we get Excel to produce 1,000 random numbers which are normally distributed (with μ = 0 and σ = 1) in column A of the spreadsheet: 618 Chapter 24 If we want to see whether the output is distributed normally we can have Excel do a frequency distribution (either by using the array function Frequency or by using Data|Data Analysis|Histogram ). As the graph above shows, the output appears to be normally distributed. Method 2: Normally Distributed Numbers Using Norm.S.Inv(Rand( )) The Excel function Norm.S.Inv(Rand( )) can be used to generate normally distributed random numbers. To understand the use of this function, we start with an explanation of the function Norm.S.Dist . The Excel function Norm.S.Dist computes values of the standard normal distribution. In the 2 3456789 101112131415161718192021222324ABCDEFGH I JKLM 0.0642650.284026 Bin Frequency 0.844066 -3 0 -0.29599 -2.9 1 -0.80368 -2.8 2 -0.18515 -2.7 1 1.351168 -2.6 0 1.209719 -2.5 0 0.487371 -2.4 3 0.147061 -2.3 4 -0.57748 -2.2 3 -1.09433 -2.1 3 1.176213 -2 5 -1.46378 -1.9 4 0.501113 -1.8 6 -0.32546 -1.7 7 0.968419 -1.6 10 -1.53634 -1.5 13 0.462621 -1.4 17 -2.32598 -1.3 19 0.580555 -1.2 25 -0.68623 -1.1 17 1.24697 -1 210102030405060 -3 -2 -1 0 1 2 3 619 Generating and Using Random Numbers Excel ’ s Norm.S.Inv( ) function inverts the function Norm.S.Dist . Given a number x between 0 and 1, Norm.S.Inv(x) produces number y such that Norm.S.Dist(y,1) = x . The function Norm.S.Dist(Rand( )) should produce a set of random numbers which is distributed standard normal: 1 2 3 4 5 67C B A x 0.500 Norm.S.Dist 0.6915 <-- =NORM.S.DIST(B2,1) x1 1 x2 -1 N(x 2)-N(x 1) 0.68269 <-- =NORM.S.DIST(B5,1)-NORM.S.DIST(B6,1)USING NORM.S.DIST 1 2 34 5 6C B A Any number between 0 and 1 0.6000 ) 2 B ( V N I . S . M R O N = - - < 3 3 5 2 . 0 r e b m u n l a m r o N ) 1 , 3 B ( T S I D . S . M R O N = - - < 0 0 0 6 . 0 : k c e h C Random normal number 0.8281 <-- =NORM.S.DIST(RAND(),1)NORMALLY DISTRIBUTED RANDOM NUMBERS USING NORM.S.INV( )spreadsheet below, for example, we use Norm.S.Dist(0.5,1) to compute N(0.5)—the probability that a random variable that is standard normally dis- tributed will be < 0.5. We also use Norm.S.Dist(1,1) – Norm.S.Dist(1, − 1) to compute the percentage of the standard normal distribution that is between − 1 and + 1: 620 Chapter 24 Method 3: Incorporating Norm.S.Inv( ) into VBA The VBA program NormStandardRandom uses Norm.S.Inv to produce random deviates. Here is the program and below is the output it produces. Note that in VBA we replace the periods in the function with underscores, writing Norm_S_Inv . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 2425F E D C B A Random numbers produced with Rand() y c n e u q e r F n i B v n I S m r o N 0.4308 -0.1744 <-- =NORM.S.INV(A3) -4 0 0.4311 -0.1736 <-- =NORM.S.INV(A4) -3.8 0 0.6535 0.3949 <-- =NORM.S.INV(A5) -3.6 0 <-- {=FREQUENCY(B:B,D3:D43)} 0.2190 -0.7755 <-- =NORM.S.INV(A6) -3.4 1 0 2 . 3 - 6 2 6 2 . 0 - 4 6 9 3 . 0 0 3 - 8 6 6 6 . 0 6 7 4 7 . 0 2 8 . 2 - 8 7 6 1 . 1 6 8 7 8 . 0 3 6 . 2 - 5 0 5 4 . 1 5 6 2 9 . 0 4 4 . 2 - 4 3 6 5 . 2 - 2 5 0 0 . 0 3 2 . 2 - 1 5 7 7 . 0 - 1 9 1 2 . 0 8 2 - 5 4 8 5 . 1 5 3 4 9 . 0 4 1 8 . 1 - 6 0 2 8 . 0 - 9 5 0 2 . 0 8 1 6 . 1 - 8 8 2 8 . 0 - 6 3 0 2 . 0 8 2 4 . 1 - 7 5 6 2 . 0 8 4 0 6 . 0 8 3 2 . 1 - 8 1 8 0 . 0 6 2 3 5 . 0 8 4 1 - 5 4 2 6 . 0 - 1 6 6 2 . 0 0 5 8 . 0 - 7 3 5 1 . 1 - 3 4 2 1 . 0 8 5 6 . 0 - 7 8 7 5 . 0 - 4 1 8 2 . 0 2 8 4 . 0 - 8 7 8 8 . 0 7 2 1 8 . 0 4 7 2 . 0 - 1 1 6 0 . 0 3 4 2 5 . 0 9 7 0 6 3 4 0 . 0 - 6 2 8 4 . 0 2 7 2 . 0 6 1 5 1 . 0 2 0 6 5 . 0 0 7 4 . 0 6 5 2 3 . 1 5 7 0 9 . 0NORMALLY DISTRIBUTED RANDOM NUMBERS USING NORM.S.INV( ) 0102030405060708090 -4 -3.5 -3 -2.5 -2 -1.5 -1 -0.5 0 0.5 1 1.5 2 2.5 3 3.5 4 FrequencyPlo/g427ng 1000 Numbers Created with Norm.S.Inv In the spreadsheet below we produce 1,000 iterations of Norm.S.Inv (Rand( )) and graph the resulting frequencies. They look normally distributed: 621 Generating and Using Random Numbers The program NormStandardRandom includes two lines which measure the time taken for the whole simulation to run. The program is very slow, largely because of repeated calls on the spreadsheet function. As you can see below, 10,000 runs of the program take about 45 seconds on the author ’ s Lenovo T420s. Here ’ s a sample screen (the button operates the macro): Sub NormStandardRandom() ‘Produces a list of normally-distributed ‘random numbers ‘Randomize initializes the ‘VBA random number generator Randomize Application.ScreenUpdating = False Range(“E2”) = Time Range(“A8”).Range(Cells(1, 1), _ Cells(64000, 1)).Clear N = Range(“B2”).Value For Index = 1 To N Range(“A8”).Cells(Index, 1) = _ Application.WorksheetFunction.NormSInv(Rnd) Next Index Range(“E3”) = Time End Sub 622 Chapter 24 A Faster Version of Method 3 We can make method 3 much faster by storing all the data in VBA and only writing the final frequency distribution on the screen: 1 234567 8 9 10111213141516171819 20 212223242526AB C D EFG H IJ K L Runs 10,000 Starttime 19:43:33 Stoptime 19:44:17Elapsed 0:00:44 <-- =E3-E2 Frequency Distribution Output Bin Frequency -0.07925 -4 1 0.695962 -3.9 0 0.314898 -3.8 0 -0.62788 -3.7 0 -0.5172 -3.6 0 -0.69972 -3.5 1 -0.11278 -3.4 0 -1.00098 -3.3 0 0.549194 -3.2 2 -2.16114 -3.1 11 -0.22532 -3 3 0.565778 -2.9 6 -2.01698 -2.8 8 -0.2967 -2.7 4 0.340505 -2.6 8 -0.4739 -2.5 12 0.382405 -2.4 27 -0.15375 -2.3 22 1.318265 -2.2 21Normally Distributed Random Numbers using VBA and Excel's Norm.S.Inv() function 0100200300400500 -5 -4 -3 -2 -1 0 1 2 3 4 5Frequency of 10,000 Normally Distributed Random NumbersNormStandardRandom uses Norm.S.Inv() 623 Generating and Using Random Numbers Sub NormStandardRandom2() ‘Randomize Initializes the VBA ‘random number generator Randomize Dim distribution(-40 To 40) As Double Application.ScreenUpdating = False Range(“E2”) = Time N = Range(“B2”).Value For Index = 1 To N X = Application.Norm_S_Inv(Rnd()) If X < -4 Then distribution(-40) = distribution(-40) + 1 ElseIf X > 4 Then distribution(40) = distribution(40) + 1 Else: distribution(Int(X / 0.1)) = _ distribution(Int(X / 0.1)) + 1 End If Next Index For Index = -40 To 40 Range(“B7”).Cells(Index + 41, 1) = _ distribution(Index) / (2 * N) Next Index Range(“E3”) = Time End Sub 624 Chapter 24 Here ’ s the output for 100,000 iterations. Note the time in cell E4: 1 23 4 56 7 89 10111213 14 1516 17 1819 20 2122 23 24AB C D E F G H I J K Runs 1,000,000 Starttime 19:47:53 Stoptime 19:47:59 Elapsed 0:00:06 <-- =E3-E2 Bin Output -4 0.0000245 -3.9 0.0000140 -3.8 0.0000165 -3.7 0.0000250 -3.6 0.0000310-3.5 0.0000460-3.4 0.0000645 -3.3 0.0001030 -3.2 0.0001430-3.1 0.0001755 -3 0.0002550 -2.9 0.0003460-2.8 0.0004600 -2.7 0.0006005 -2.6 0.0008165-2.5 0.0009685 -2.4 0.0012905 -2.3 0.0015430Normally Distributed Random Numbers This sheet saves time by not recording the random numbers on the screen 0.00000.00500.01000.01500.02000.0250 -4 -3.5 -3 -2.5 -2 -1.5 -1 -0.5 0 0.5 1 1.5 2 2.5 3 3.5 4Frequency Distribution of 1,000,000 Normally Distributed Random NumbersNormStandardRandom2 There are a few things to note about this program: • Most of the results of the normal distribution are between − 4 and + 4. When, in NormStandardRandom2 , we classify the output into bins, we want these bins to be ( − ∞ , − 3.9], ( − 2.9, − 2.8], … , ( − 3.9, ∞ ). To do this we first define an array distribution( − 40 To 40) ; this array has 81 indices. To clas- sify a particular random number (say, X ) into the bins of this array, we use the function: 625 Generating and Using Random Numbers If X < -4 Then distribution(-40) = distribution(-40) + 1 ElseIf X > 4 Then distribution(40) = distribution(40) + 1 Else: distribution(Int(X / 0.1)) = _ distribution(Int(X / 0.1)) + 1 End If • NormStandardRandom2 produces not a histogram (which is a count of how many times a number falls into a particular bin), but a frequency distribu- tion . We do this by dividing by twice the number of runs (remember that each successful run produces two random numbers), 2 N , before we output the data to the spreadsheet: For Index = -40 To 40 Range(“output”).Cells(Index + 41, 1) = _ distribution(Index) / (2 * N) Next Index • Finally, note that the command Application.ScreenUpdating = False makes a big difference! This command prevents both the updating of the output in the cells and the Excel chart. Try running the program with and without this command to see the effect. Method 4: The Box-Muller Method The Box-Muller method for creating randomly distributed normal deviates is the fastest method of the four. 7 The eight lines which follow Start in the 7. See Box-Muller (1958) or Knuth (1981). 626 Chapter 24 VBA program below define a routine which in each successful iteration creates two numbers which are drawn from a standard normal distribution. The routine creates two random numbers, rand 1 and rand 2 , between − 1 and + 1. If the sum of the squares of these numbers is within the unit circle, then the two normal deviates are defined by X X randS SrandS S Sr a n12 11 121 1 122,ln,ln{} =∗− ()∗− () ⎧ ⎨⎩⎫⎬ ⎭ =where d d rand 12 22+ Here ’ s the VBA program: Sub NormStandardRandom3() ‘Box-Muller for producing ‘standard normal deviates Dim distribution(-40 To 40) As Long Range(“E2”) = Time N = Range(“B2”).Value Application.ScreenUpdating = False For Index = 1 To N start: Static rand1, rand2, S1, S2, X1, X2 rand1 = 2 * Rnd - 1 rand2 = 2 * Rnd - 1 S1 = rand1 ∧ 2 + rand2 ∧ 2 If S1 > 1 Then GoTo start S2 = Sqr(-2 * Log(S1) / S1) X1 = rand1 * S2 X2 = rand2 * S2 627 Generating and Using Random Numbers If X1 < -4 Then distribution(-40) = distribution(-40) + 1 ElseIf X1 > 4 Then distribution(40) = distribution(40) + 1 Else: distribution(Int(X1 / 0.1)) = _ distribution(Int(X1 / 0.1)) + 1 End If If X2 < -4 Then distribution(-40) = distribution(-40) + 1 ElseIf X2 > 4 Then distribution(40) = distribution(40) + 1 Else: distribution(Int(X2 / 0.1)) = _ distribution(Int(X2 / 0.1)) + 1 End If Next Index For Index = -40 To 40 Range(“B7”).Cells(Index + 41, 1) = _ distribution(Index) / (2 * N) Next Index Range(“E3”) = Time End Sub 628 Chapter 24 This routine is very fast; in the spreadsheet below we produce 10 million normal variates in 18 seconds: 1 23456789 10111213141516171819202122AB C D E F G H I J K Runs 10,000,000 Starttime 10:54:28 Stoptime 10:54:46Elapsed 0:00:18 <-- =E3-E2 Bin Output -4 0.0000 -3.9 0.0000-3.8 0.0000-3.7 0.0001-3.6 0.0001-3.5 0.0001-3.4 0.0001-3.3 0.0002-3.2 0.0003-3.1 0.0004 -3 0.0005 -2.9 0.0007-2.8 0.0009-2.7 0.0012-2.6 0.0015-2.5 0.0020BOX-MULLER ROUTINE FOR STANDARD NORMAL 0.00000.00500.01000.01500.02000.02500.03000.03500.04000.0450 -4 -2 0 2 4 NormStandardRandom3 Uses Box-Muller routine 24.5 Norm.Inv: Another Way to Generate Normal Deviates The Excel function Norm.Inv(rand( ),mean,sigma) can also generate normal deviates. Whereas Norm.S.Inv(rand( )) generates only standard normal devi- ates, we can use Norm.Inv to change the mean and standard deviation of our deviates. In Chapter 26, we will sometimes use this function to generate nor- mally distributed stock returns. 629 Generating and Using Random Numbers Norm.Inv as Alternative to Norm.S.Inv Norm.S.Inv(Rand( )) inverts the standard normal distribution and can be used to create standard normal deviates. The Excel function Norm.Inv(Rand ( )),mean,sigma) can be used to create normal deviates that are normally distributed with any normal distribution. The example below illustrates this: 1 23456789 1011121314151617181920212223AB C D EF G H I J Mean 2 Sigma 3 Norm.Inv(rand(),mean,sigma) Bin Frequency -0.0771 -10.0 0 <-- {=FR EQUENCY(A:A,D6:D46)} -3.1876 -9.4 0 0.7521 -8.8 0 2.0116 -8.2 0 1.8121 -7.6 0 2.5113 -7.0 0 8.1300 -6.4 1 2.6463 -5.8 1 5.2369 -5.2 4 4.8960 -4.6 4 2.3377 -4.0 14 4.4869 -3.4 9 3.3379 -2.8 10 0.4816 -2.2 20 2.9400 -1.6 44 -2.4114 -1.0 45 3.3061 -0.4 42 1.3751 0.2 61NORMALLY DISTRIBUTED RANDOM NUMBERS USING NORM.INV(rand(),mean,sigma ) <-- =NORM.INV(RAND(),$B$2,$B$3) 0102030405060708090100-10.0-8.8-7.6-6.4-5.2-4.0-2.8-1.6-0.40.82.03.24.45.66.88.09.210.411.612.814.01,000 normal deviates created with norm.inv(rand(),mean,sigma) 1 2 3456789 1011121314151617181920212223AB C D E F GH I JKLM Mean 3.00 Sigma 5.00 Bin Frequency Norm.Inv -12.00 1 <-- =FREQUENCY(A6:A1005,E5:E45) 1.1512 <-- =NORM.INV(RAND(),$B$2,$B$3) -11.25 1 -1.7767 <-- =NORM.INV(RAND(),$B$2,$B$3) -10.50 3 8.8680 <-- =NORM.INV(RAND(),$B$2,$B$3) -9.75 3 6.9032 -9.00 4 4.4525 -8.25 1 5.2241 -7.50 4 -1.9517 -6.75 11 -2.7898 -6.00 7 1.6515 -5.25 14 -0.4800 -4.50 11 3.5602 -3.75 19 10.7653 -3.00 21 1.6006 -2.25 32 2.0960 -1.50 58 8.3773 -0.75 43 2.5934 0.00 34 5.7685 0.75 51 1.3261 1.50 67CREATING NORMAL DEVIATES WITH NORM.INV(RAND()) 01020304050607080 -15.00 -10.00 -5.00 0.00 5.00 10.00 15.00 20.001,000 Normal Deviates with Mean = 3, Sigma = 5 Created with Norm.Inv(Rand()) 630 Chapter 24 Getting Ahead of Ourselves: Do We Prefer Norm.S.Inv or Norm.Inv? Ultimately our goal is to simulate stock returns; these (as we discuss in Chapter 26) are generally assumed to be normally distributed. If we are simulating the returns of a stock based on annual mean μ and standard deviation σ , then it is obviously more convenient to use Norm.S.Inv(rand( ), μ , σ ) . As we discuss in Chapter 26, if ( μ , σ ) are the annual statistics of the stock return, and if we divide the year into n subperiods, then the periodic stock returns can be simulated with Norm.Inv(Rand(), , ) msDDtt , where Δ t = 1/ n . On the other hand, much financial theory is phrased in terms of lognormal price processes. These are generally written as rt t Z=+μσΔΔ where Z is a standard normal deviate. To conform to this writing, it is often more convenient (and theoretically equivalent) to simulate returns by: rt t=+μσΔΔ Norm.S.Inv(Rand( )) In this book we interchangeably use both writings. 24.6 Generating Correlated Random Numbers In this section we show how to produce correlated pseudo-random numbers. We start by showing how to generate two correlated normal and uniform random numbers and then go on to the multivariate case. 631 Generating and Using Random Numbers 1 2 3 4 567 8 9 1011 12 13 14 1516 17 181920E D C B A ρ 0.6 ) 1 1 0 1 D : 2 1 D ( E G A R E V A = - - < 6 2 0 0 . 0 5 1 5 0 . 0 - 1 3 7 0 . 0 n a e M ) 1 1 0 1 D : 2 1 D ( S . V E D T S = - - < 6 2 0 0 . 1 2 2 3 0 . 1 0 1 9 9 . 0 a m g i S Skewness 0.0572 0.1225 0.0376 <-- =SKEW(D12:D1011) ) 1 1 0 1 D : 2 1 D ( T R U K = - - < 3 2 9 0 . 0 - 9 9 5 0 . 0 - 2 6 9 0 . 0 - s i s o t r u K ) 1 1 0 1 D : 2 1 D ( T N U O C = - - < 0 0 0 1 0 0 0 1 0 0 0 1 t n u o C Corr(z 1,z3) 0.5676 <-- =CORREL(B12:B1011,D12:D1011) Z1 Z2 Z3 =NORM.S.INV(RAND()) --> -0.9108 -0.2754 -0.7668 <-- =$B$2*B12+SQRT(1-$B$2^2)*C12 =NORM.S.INV(RAND()) --> 0.8994 0.2471 0.7373 <-- =$B$2*B13+SQRT(1-$B$2^2)*C13 =NORM.S.INV(RAND()) --> 0.3730 -0.7499 -0.3762 <-- =$B$2*B14+SQRT(1-$B$2^2)*C14 -0.7975 -0.3404 -0.7508 0.4534 -0.1954 0.1157 -0.5444 -0.4955 -0.7230 1.1833 -1.1735 -0.2288 -1.5330 0.7085 -0.3530 -0.0806 -1.8064 -1.49341,000 CORRELATED STANDARD NORMAL DEVIATES Example 1: Two Correlated Standard Normal Variables Suppose that Z 1 and Z 2 are standard normal deviates (created in the spreadsheet below with Norm.S.Inv(Rand( )) . Defining zz z31 221 =+ −ρρ , we create a set of simulates that has the desired correlation with Z 1 : 632 Chapter 24 On the next page we give the scatter plots for a number of simulations with different correlation coefficients ρ . Example 2: Two Correlated Uniform Variables To create uniform variables that are correlated, we first produce correlated standard normal variables, and then use Norm.S.Dist to produce the uniform variables. Here ’ s the procedure: • Use Norm.S.Inv(Rand( )) to produce two random numbers that are nor- mally distributed. Call these numbers z 1 and z 2 . • Let zz z31 221 =+ −ρρ . As we showed above z 3 and z 1 are correlated with correlation ρ . 11 12 13 14 15 1617 18 1920 21 222324 25 2627 28 2930 31 3233 34 3536 37 383940 41 4243 44GH I J K LMNOPQR Z1 Z2 Z3 - 4 000 -3.8 0 0 0 -3.6 0 0 0 -3.4 0 1 1 -3.2 0 1 0 - 3 002 -2.8 1 0 1 -2.6 3 3 3 -2.4 4 1 1 -2.2 3 4 5 - 2 876 - 1 . 8 1 21 41 4 - 1 . 6 1 82 11 6- 1 . 4 2 61 62 6 - 1 . 2 4 63 72 3 -1 39 57 43 - 0 . 8 5 16 55 1- 0 . 6 4 86 26 6 - 0 . 4 6 55 27 4- 0 . 2 7 47 89 7 08 1 8 1 7 4 0 . 2 8 28 28 00 . 4 8 07 37 9 0 . 6 7 18 46 6 0 . 8 7 65 94 6 15 3 5 2 6 0 1 . 2 4 23 64 4 1 . 4 3 53 44 1 1 . 6 2 72 22 51 . 8 2 02 42 6 2 8 12 9Frequency distribution, Z 1, Z2, Z3 -4.0000-3.0000-2.0000-1.00000.00001.00002.00003.00004.00005.0000 -4.0000 -3.0000 -2.0000 -1.0000 0.0000 1.0000 2.0000 3.0000 4.0000Sca/g425er Plot of Z1 vs Z3, rho = 0.6 0102030405060708090100 -4 -3 -2 -1 0 1 2 3 4Frequencies: Z1, Z2, Z3 Z1 Z2 Z3 The frequencies and distributions are shown below: 633 Generating and Using Random Numbers We show this routine twice. The first time we show it in an extensive spread- sheet below. Note the “diagonal aspect” of the scatter diagram of u 2 versus u 1 (this shows the correlation). -4.0-3.0-2.0-1.00.01.02.03.04.0 -4.0 -3.0 -2.0 -1.0 0.0 1.0 2.0 3.0 4.0Sca/g425er plot of Z1 vs Z3, rho = 0.00 -4.0-3.0-2.0-1.00.01.02.03.04.0 -4.0 -3.0 -2.0 -1.0 0.0 1.0 2.0 3.0 4.0Sca/g425er plot of Z1 vs Z3, rho = 1.00 -4.0-3.0-2.0-1.00.01.02.03.04.0 -4.0 -3.0 -2.0 -1.0 0.0 1.0 2.0 3.0Sca/g425er plot of Z1 vs Z3, rho = -0.50 -4.0-3.0-2.0-1.00.01.02.03.04.0 -4.0 -3.0 -2.0 -1.0 0.0 1.0 2.0 3.0Sca/g425er plot of Z1 vs Z3, rho = 0.30 Figure 24.1 Scatter plots of random standard normal simulates with different correlations. • Now define u 1 = Norm.S.Dist(z 1 ,1) and u 2 = Norm.S.Dist(z 3 ,1) . Then u 1 and u 2 are uniformly distributed and correlated with correlation ρ . 634 Chapter 24 We can make this process more efficient (and also more obscure) by com- bining functions as in the following spreadsheet. Column A cells are defined with Rand( ) . Column B contains the formula = NORM.S.DIST(Rho* NORM.S.INV(A7) + SQRT(1-Rho ∧ 2)*NORM.S.INV(RAND( )),1) . 1 2 34 5 67 8 9 1011 1213 14 1516 17 181920 21 2223 24 2526 27J I H G F E D C B A Rho, ρ 0 ) 8 9 9 9 I : 1 1 I ( E G A R E V A = - - < 5 7 9 4 . 0 6 6 9 4 . 0 n a e M ) 0 0 0 0 1 D : 1 1 D ( E G A R E V A = - - < 6 5 0 0 . 0 - 6 5 0 0 . 0 - 6 6 1 0 . 0 - n a e M ) 8 9 9 9 I : 1 1 I ( P V E D T S = - - < 9 3 8 2 . 0 4 0 9 2 . 0 a m g i S ) 0 0 0 0 1 D : 1 1 D ( P V E D T S = - - < 8 5 7 9 . 0 8 5 7 9 . 0 3 1 1 0 . 1 a m g i S ) 8 9 9 9 I : 1 1 I ( X A M = - - < 6 9 9 9 . 0 9 9 9 9 . 0 x a M ) 0 0 0 0 1 D : 1 1 D ( W E K S = - - < 1 8 6 0 . 0 1 8 6 0 . 0 6 5 5 0 . 0 - s s e n w e k S ) 8 9 9 9 I : 1 1 I ( N I M = - - < 5 0 0 0 . 0 4 0 0 0 . 0 n i M ) 0 0 0 0 1 D : 1 1 D ( T R U K = - - < 3 8 3 1 . 0 3 8 3 1 . 0 7 6 0 2 . 0 s i s o t r u K ) 0 0 0 0 1 D : 1 1 D ( T N U O C = - - < 0 0 0 , 1 0 0 0 , 1 0 0 0 , 1 t n u o C Corr(z1,z3) 0.0184 <-- =CORREL(B11:B10000,D11:D10000) Corr(u1,u2) 0.0221 <-- =CORREL(H11:H1010,I11:I1010) Z1 Z2 Z3 U1 U2 =NORMSINV(RAND())--> -1.1794 0.4929 0.4929 <-- =rho*B11+SQRT(1-rho^ 2)*C11 =NORM.S.DIST(B11,1)--> 0.1191 0.6890 <-- =NORM.S.DIST(D11,1 ) -0.6960 -0.7892 -0.7892 0.2432 0.2150 0.7384 0.8904 0.8904 0.7699 0.8134 -0.6938 -1.6462 -1.6462 0.2439 0.0499 0.1559 -0.1719 -0.1719 0.5619 0.4318 0.1059 0.9392 0.9392 0.5422 0.8262 0.4912 -0.7760 -0.7760 0.6883 0.2189 -0.9220 -0.7613 -0.7613 0.1783 0.2232 -0.7405 0.4353 0.4353 0.2295 0.6683 -0.2325 -0.9728 -0.9728 0.4081 0.1653 -0.4111 2.5493 2.5493 0.3405 0.9946 -0.9892 -1.9558 -1.9558 0.1613 0.0252 1.0221 -0.0712 -0.0712 0.8466 0.4716 -1.7364 0.8363 0.8363 0.0413 0.7985 0.3628 -0.4396 -0.4396 0.6416 0.3301 -0.7760 -0.3599 -0.3599 0.2189 0.3595 0.4689 0.4987 0.4987 0.6804 0.69101,000 CORRELATED UNIFORM SIMULATED RANDOM NUMBERS Starting with Normal, then going to Uniform 0.000.100.200.300.400.500.600.700.800.901.00 0.00 0.20 0.40 0.60 0.80 1.00 1 2 3 4 5 6 7 8 9 1011 12 13 14 15 1617 18 19 20 21 22 23 24 25 26 27 28 2930 31 32 33 34J I H G F E D C B A Rho -0.9 Corr(u1,u2)-0.89293 U1 U2 0.81343 0.49546 <-- =NORM.S.DIST(Rho*NORM.S.INV(A7)+SQRT(1-Rho^2)*NORM.S.INV(RAND()),1) Bins U1 U2 0.38688 0.46179 0.1 55 54 0.53905 0.52559 0.2 40 50 0.21526 0.57302 0.3 43 60 0.35648 0.46330 0.4 40 52 0.88493 0.18691 0.5 46 51 0.82588 0.33920 0.6 55 40 0.04539 0.84384 0.7 53 50 0.13171 0.82252 0.8 55 64 0.19458 0.82780 0.9 62 42 0.82913 0.18255 1.0 54 40 0.66841 0.305850.06410 0.91164 0.14516 0.93130 0.28277 0.75389 0.80075 0.13454 0.78034 0.42222 0.66430 0.30995 0.60427 0.67723 0.49552 0.47382 0.43436 0.67985 0.49882 0.38023 0.38614 0.490120.53584 0.68470 0.06236 0.96573 0.51508 0.35964 0.96866 0.06450 0.39951 0.800451,000 CORRELATED UNIFORM SIMULATED RANDOM NUMBERS More Efficient Procedure Frequency Distribution 0.000000.200000.400000.600000.800001.000001.20000 0.00000 0.20000 0.40000 0.60000 0.80000 1.00000 1.20000 010203040506070 123456789 1 0 635 Generating and Using Random Numbers 24.7 What ’ s Our Interest in Correlation? A Small Case 8 Jacob has just retired at age 65 with savings of $1 million. He intends to invest 60% of this in a market index fund and the remaining 40% in a risk-free asset. He estimates the return on the risk-free asset as r f = 3% annually, and he estimates that the market portfolio will have normally distributed returns with mean return μ = 11% and σ = 20%. Jacob intends to withdraw $50,000 from his account at the beginning of this year. He thinks that this amount will, on average grow at 3% per year, with a standard deviation of 10%. Furthermore, he thinks that the growth rate of his annual spending will be correlated ρ = 0.5 with the stock market. 9 Our question: If Jacob ’ s life expectancy is age 90, how much will he leave to his beloved son, Simon? Here ’ s a simulation that answers this question (some rows are hidden): 8. This section uses some materials from Chapter 26 and may be skipped on first reading. 9. His theory: When the market goes up, everyone spends more! 636 Chapter 24 Some details of the simulation: • Whatever savings are left at the end of a particular year constitute the initial savings for the next year. • Z 1 and Z 2 are correlated standard normal variables. Note the formulas: Z ZZ1 21= =∗ + − ∗Norm.S.Inv Rand Sqrt 1 Norm.S.Inv Rand2( ( )), () ( ( ρ r )) In this particular simulation, Jacob leaves $906,029 for his heirs. Using the technique of running a data table on a blank cell (see Chapter 31), we can run many simulations of this same problem: 1 234567 8 9 10111213 14 15 16 17 1819202122 23 242526274142AB C D E F G H I J Savings at 65 1,000,000 Annual expenses 0 0 0 , 0 5 5 6 r a e Y % 3 h t w o r g n a e M Sigma of growth 10% Correlation with market Stock market % 1 1 n a e M % 0 2 a m g i S % 4 e e r f - k s i R Invested in stock market 60% Left for heirs 906,029 <-- =B42 =EXP($B$5+$B$6*J18) AgeSavings at beg periodGrowth over previous year SpendingStock market Risk-freeSavings at end of period Z1 Z2 65 1,000,000 50,000 1.0682 1.0408 1,004,359 -0.2203 -0.9133 66 1,004,359 0.9521 47,604 0.8125 1.0408 864,729 -1.5883 -0.7911 67 864,729 0.9953 47,381 1.0835 1.0408 871,664 -0.1488 -0.3470 68 871,664 1.0895 51,621 1.0418 1.0408 853,985 -0.3454 0.5573 69 853,985 1.1228 57,961 1.1690 1.0408 889,751 0.2309 0.8584 70 889,751 0.9806 56,836 0.7173 1.0408 705,228 -2.2114 -0.4961 71 705,228 1.1715 66,581 1.4352 1.0408 815,828 1.2564 1.2825 72 815,828 1.0569 70,371 1.2569 1.0408 872,528 0.5932 0.2537 73 872,528 0.9371 65,947 0.9205 1.0408 781,255 -0.9644 -0.9493 74 781,255 1.0533 69,463 1.1433 1.0408 784,598 0.1195 0.2194 75 784,598 0.9870 68,558 1.1017 1.0408 771,425 -0.0657 -0.4312 89 929,695 0.9389 65,230 1.0529 1.0408 906,029 -0.2921 -0.9299 90 906,029Returns SpendingTwo correlated standard normalsRETIREMENT PROBLEM Spending and Market are Correlated =$B$7*I17+(1- $B$7^2)^(0.5)*NORM.S.INV(RAND()) =EXP($B$9+$B$10*I17)0.50 637 Generating and Using Random Numbers On average, Jacob ’ s heirs should do pretty well. But in 2 out of the 20 simu- lations, his heirs will be left intestate. They might also use Data Table to check whether the correlation affects their inheritance. 17 18 19 2021 22 23 24 25 26 2728 29 30 31 32 33 34 35 3637 38 39 40 41 42 43MN O Simulation 906,029 <-- =B13, data table header 1 -356,743 2 351,558 3 1,886,1494 387,357 5 1,683,477 6 390,121 7 281,914 8 576,245 9 7,151,210 10 1,251,162 11 845,362 12 3,731,611 13 -461,524 14 4,928,934 15 2,700,700 16 368,321 17 3,127,197 18 3,417,390 19 2,707,63520 421,627 Average 1,769,485 <-- =AVERAGE(N18:N37) Sigma 1,959,905 <-- =STDEV(N18:N37) Min -461,524 <-- =MIN(N18:N37) Max 7,151,210 <-- =MAX(N18:N37)Negative 2 <-- =COUNTIF(N18:N37,\"<0\") 638 Chapter 24 As might be expected, in general the higher the negative correlation between the stock market and Jacob ’ s expenses, the lower will be the inheritance. This makes sense: With negative correlation, when the stock market goes down, expenses go up (and vice versa). 24.8 Multiple Random Variables with Correlation: The Cholesky Decomposition We can also create multiple correlated random simulates by using the Cholesky decomposition. A bit of background: A square matrix is called 15 16 17 1819202122 23 242526272829303132333435 36 37383940414243MNO P Q R -0.80 -0.4 0.00 0.4 0.80 1 -9,208,659 3,170,554 3,203,382 3,785,735 2,667,9052 1,282,980 2,430,952 -353,824 2,204,197 2,726,4653 7,963,118 -1,818,111 3,361,649 1,680,969 6,282,2484 276,651 -2,947,014 14,337,774 1,784,993 6,879,2055 -1,780,692 2,250,315 4,456,252 2,403,919 -913,402 6 3,067,479 -630,263 10,037,217 1,280,899 1,664,357 7 1,435,592 718,311 1,827,268 2,261,576 1,863,2338 3,627,215 6,871,791 13,387,080 373,271 3,786,0649 5,751,766 -1,122,584 1,320,789 498,684 619,038 10 4,014,473 8,050,127 2,878,871 1,748,100 5,051,89611 439,089 4,053,251 2,173,128 7,381,844 13,445,26912 2,562,847 -1,177,750 -1,562,287 5,884,251 2,545,43413 5,725,661 -700,188 4,704,009 -1,681,796 3,438,36914 -1,376,916 2,494,968 -3,210,949 2,090,863 1,769,92615 2,557,209 802,532 3,262,467 5,176,845 646,51616 -1,891,881 1,662,779 1,818,090 5,548,178 -260,28017 3,120,033 5,377,046 2,878,251 4,211,705 9,040,05918 -1,214,800 7,598,180 8,244,721 2,016,503 1,607,321 19 395,636 6,807,371 -272,614 4,129,666 4,852,653 20 14,077,754 3,165,395 12,316 3,868,468 1,012,387 Average 2,041,228 2,352,883 3,625,180 2,832,444 3,436,233Sigma 4,615,229 3,304,220 4,631,098 2,157,577 3,434,172Min -9,208,659 -2,947,014 -3,210,949 -1,681,796 -913,402Max 14,077,754 8,050,127 14,337,774 7,381,844 13,445,269Negative 5 6 4 1 2Correlation ↓=B13 data table header 639 Generating and Using Random Numbers positive definite if, for any row vector x , the product xSx T > 0. The variance- covariance matrix for security returns discussed in Chapters 8–12, SN N NN N N=⎡ ⎣⎢ ⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥σσ σ σσ σ σσ σ11 12 1 21 22 2 12/vertellipsis , is positive definite and symmetric (since σ ij = σ ji ). A square matrix is called upper triangular if it has non-zero entries only on the diagonal and elements above the diagonal. A square matrix is called lower triangular if (you can fill in the blanks). The French mathematician André-Louis Cholesky (1875–1918) proved that any symmetric positive-definite matrix S can be written as the product of a lower-triangular matrix L and its transpose L T . This is the Cholesky decomposition . Example In the example below cells B2:B5 contain a 4x4 variance-covariance matrix. Cells B8:D11 contain the Cholesky decomposition of this matrix—a lower-triangular matrix L . Cells B14:D17 multiply L times its transpose: As you can see, the result is to give back the original variance-covariance matrix. 1 234 5 6789 101112 13 1415 16 17E D C B A 0.400 0.030 0.020 0.0000.030 0.200 0.000 -0.0600.020 0.000 0.300 0.030 0.000 -0.060 0.030 0.100 0.632 0.000 0.000 0.000 <-- {=cholesky(A2:D5)} 0.047 0.445 0.000 0.0000.032 -0.003 0.547 0.0000.000 -0.135 0.054 0.281 0.400 0.030 0.020 0.000 <-- {=MMULT(A8:D11,TRANSPOSE(A8:D11))} 0.030 0.200 0.000 -0.060 0.020 0.000 0.300 0.030 0.000 -0.060 0.030 0.100Check: Mul/g415ply above matrix by its transposeCholesky decomposi/g415on, LVariance-covariance matrix, S 640 Chapter 24 The function Cholesky can be found on the disk that accompanies Financial Modeling . 10 Using the Cholesky Decomposition to Produce Correlated Normal Simulates We start off with a varcov matrix S=⎡ ⎣⎢ ⎢⎢⎢⎤ ⎦σσσσ σσσσ σσσσ σσσσ11 12 13 14 21 22 23 24 31 32 33 3441 42 43 44⎥ ⎥ ⎥⎥⎥ . We want to run a simulation which in each iteration produces a vector x x x xt t t t1 2 3 4⎧ ⎨⎪⎪ ⎩⎪ ⎪⎫ ⎬⎪⎪ ⎭⎪ ⎪ of four random numbers, so that these numbers have the following properties: • The mean of each of the numbers is zero: 10 1 nxit tn =∑ ≈ . (Because of randomness, we can never demand exact equality to zero, only an approximation.) • The variance of each series of numbers matches the varcov matrix: Var x x x Var x x x11 12 13 11 21 22 23 22,,, ,,,… … …{} ≈ {} ≈σ σ • The covariance of any two of the series of numbers matches the covariance in the varcov matrix: Cov x x x x x x 11 12 13 21 22 23 21 12 ,,,, ,,, .…… () () {} ≈=σσ etc The way to do this is in two steps: 1. Produce a set of normally distributed numbers between 0 and 1. 2. Pre-multiply each vector of such numbers by the Cholesky decomposition L . 10. My thanks to Antoine Jacquier, who posted this on Wilmott.com and has allowed me to use it in this book. 641 Generating and Using Random Numbers In cells A15:A18 we use NormSInv and Rand to produce four random numbers, each of which is normally distributed with mean zero and standard deviation 1. 11 In cells B21:B24 we pre-multiply this random vector by the Cholesky matrix in cells A9:D12. The claim is that the numbers in A21:A24 are normally distributed with mean zero and the variance-covariance structure given by the varcov matrix. We cannot, of course, prove this claim from a single simulation. In the following spreadsheet we replicate the above proce-dure 220 times: 1 2 34567 8 9 1011 121314 15 16 17 1819202122 23 24AB C D E 0.40 0.03 0.02 0.01 0.03 0.30 0.00 -0.06 0.02 0.00 0.20 0.03 0.01 -0.06 0.03 0.10 Cholesky decomposition 0.6325 0.0000 0.0000 0.0000 <-- {=cholesky(varcov)} 0.0474 0.5457 0.0000 0.00000.0316 -0.0027 0.4461 0.00000.0158 -0.1113 0.0654 0.2882 Generating four random normals -1.3212 <-- =NORMSINV(RAND())-1.1972 <-- =NORMSINV(RAND()) 0.9280 <-- =NORMSINV(RAND())2.2751 <-- =NORMSINV(RAND()) Generating multinomial normal output -0.83560 <-- {=MMULT($A$9:$D$12,A15:A18)}-0.71594 0.375470.82886Variance-covariance matrix BASIC MULTIVARIATE NORMAL SIMULATION 11. For details of why this works, see Chapter 31. In the illustration below we show one step of this simulation: 642 Chapter 24 1 2 3456 7 89 101112131415 16 171819 2021 2223 24 25 26 27 28 2930 31 32 33 34 3536 37 38 3940 414243 44 4546 47AB C D E F 0.40 0.03 0.02 0.01 0.03 0.30 0.00 -0.06 0.02 0.00 0.30 0.03 0.01 -0.06 0.03 0.10 Cholesky decomposition 0.6325 0.0000 0.0000 0.0000 <-- {=cholesky(varcov)} 0.0474 0.5457 0.0000 0.0000 0.0316 -0.0027 0.5468 0.0000 0.0158 -0.1113 0.0534 0.2907 Generating four random normals -1.1066 0.0427 0.5522 -0.1607 1.1747 -0.6570 1.3488 0.0973 -0.1789 -0.1380 -0.6901 -0.7721 0.6291 -0.6040 -0.1421 -0.7268 -1.6977 0.7685 0.6768 -2.2200 -0.7643 0.4689 -0.7651 -0.5160 Generating multinomial normal output -0.69990 0.02701 0.34925 -0.10164 0.74294 -0.41553 0.68351 0.05513 -0.07144 -0.08293 -0.32083 -0.45250 0.30529 -0.32919 -0.05973 -0.40212 -0.88924 0.40158 0.06268 -0.68775 -0.20112 0.11033 -0.21766 -0.03338 Checking Number of simulations 220 <-- =COUNT(15:15) Mean1 0.05502 <-- =AVERAGE(21:21) Mean2 0.02662 <-- =AVERAGE(22:22) Mean3 0.07392 <-- =AVERAGE(23:23) Mean4 -0.02130 <-- =AVERAGE(24:24) From varcov matrixFrom simulation Var1 0.40 0.3658 <-- =VAR.P(21:21,21:21) Var2 0.30 0.2508 <-- =VAR.P(22:22,22:22) Var3 0.30 0.2997 <-- =VAR.P(23:23,23:23) Var4 0.10 0.0824 <-- =VAR.P(24:24,24:24) Covar(1,2) 0.03 0.0318 <-- =COVARIANCE.P($21:$21,22:22) Covar(1,3) 0.02 0.0198 <-- =COVARIANCE.P($21:$21,23:23) Covar(1,4) 0.01 0.0158 <-- =COVARIANCE.P($21:$21,24:24) Covar(2,3) 0.00 0.0095 <-- =COVARIANCE.P($22:$22,23:23) Covar(2,4) -0.06 -0.0419 <-- =COVARIANCE.P($22:$22,24:24) Covar(3,4) 0.03 0.0268 <-- =COVARIANCE.P(23:23,24:24)Variance-covariance matrixBASIC MULTIVARIATE NORMAL SIMULATION 643 Generating and Using Random Numbers In rows 29– 47 we check the mean, variance, and covariance of each of the variables, comparing them to zero (in the case of the means) and to the data in the varcov matrix. By pressing F9 , you can repeat the simulations and convince yourself that we have indeed produced a set of multivariate normal simulations corresponding to the target variance-covariance structure. Here, for example, is the result of another press of F9 : 26 27 2829303132 33 34 353637383940414243 44 454647AB C D E F Number of simulations 220 <-- =COUNT(15:15) Mean1 0.05387 <-- =AVERAGE(21:21) Mean2 0.02040 <-- =AVERAGE(22:22) Mean3 -0.05087 <-- =AVERAGE(23:23) Mean4 -0.03520 <-- =AVERAGE(24:24) From varcov matrixFrom simulation Variable1 0.40 0.3767 <-- =VAR.P(21:21,21:21) Variable2 0.30 0.2587 <-- =VAR.P(22:22,22:22) Variable3 0.30 0.2655 <-- =VAR.P(23:23,23:23) Variable4 0.10 0.1131 <-- =VAR.P(24:24,24:24) Covar(1,2) 0.03 0.0107 <-- =COVARIANCE.P($21:$21,22:22) Covar(1,3) 0.02 0.0016 <-- =COVARIANCE.P($21:$21,23:23) Covar(1,4) 0.01 -0.0106 <-- =COVARIANCE.P($21:$21,24:24) Covar(2,3) 0.00 0.0029 <-- =COVARIANCE.P($22:$22,23:23) Covar(2,4) -0.06 -0.0692 <-- =COVARIANCE.P($22:$22,24:24) Covar(3,4) 0.03 0.0391 <-- =COVARIANCE.P(23:23,24:24)Checking 644 Chapter 24 Note : Simulations are tricky! Press F9 multiple times to get different fre- quencies and statistics (see Figure 24.2 ). 50 5152535455565758596061626364656667686970717273747576777879 8081 82AB C D E F G H Variable1 Variable2 Variable3 Variable4 -3.0 0 0 0 0 <-- {=FREQUENCY(24:24,$A$52:$A$82)} -2.8 0 0 0 0 -2.6 0 0 0 0 -2.4 0 0 0 0 -2.2 0 0 0 0 -2.0 0 0 0 0 -1.8 0 1 0 0 -1.6 0 0 1 0 -1.4 1 1 1 0 -1.2 3 3 3 0 -1.0 8 8 5 0 -0.8 8 8 6 1 -0.6 16 12 13 4 -0.4 18 20 26 22 -0.2 31 31 14 40 0.0 24 31 46 47 0.2 21 28 24 45 0.4 31 28 23 36 0.6 21 20 27 18 0.8 19 11 12 5 1.0 7 10 11 1 1.2 6 5 5 1 1.4 3 3 1 0 1.6 3 0 1 0 1.800 1 0 2.0 0 0 0 0 2.2 0 0 0 0 2.400 0 0 2.6 0 0 0 0 2.8 0 0 0 0 3.0 0 0 0 0Frequency distributions -1001020304050 -4.0 -3.0 -2.0 -1.0 0.0 1.0 2.0 3.0 4.0 Do You Need Further Convincing? Another way to convince yourself that we have done something sensible is to plot the frequency distribution of each of the variables, using the Excel Fre- quency function: 645 Generating and Using Random Numbers Figure 24.2 Four frequency distributions of random normals using the Cholesky decomposition. They all look “approximately” normal, but they don ’ t correspond to the “textbook” shapes that we ’ re used to seeing. That ’ s life in the (simulated) real world! Frequency Distribu/g415onFrequency Distribu/g415on Frequency Distribu/g415onFrequency Distribu/g415on 646 Chapter 24 1 2 3 4 5678 9 10 111213 14 15161718 19 2021222324AB C D E F G H I Mean returns % 5 1 0 . 0 2 0 . 0 3 0 . 0 0 4 . 0 % 6 6 0 . 0 - 0 0 . 0 0 3 . 0 3 0 . 0 % 7 3 0 . 0 0 2 . 0 0 0 . 0 2 0 . 0 % 8 0 1 . 0 3 0 . 0 6 0 . 0 - 1 0 . 0 Cholesky decomposition 0.6325 0.0000 0.0000 0.0000 <-- {=cholesky(varcov)} 0.0474 0.5457 0.0000 0.0000 0.0316 -0.0027 0.4461 0.0000 0.0158 -0.1113 0.0654 0.2882 Generating four standard random normals 0.5556 1.1031 0.3987 -0.3293 1.6139 0.2647 -0.2145 -0.5983 -0.2059 -0.7991 0.3031 0.2735 -1.1220 0.7048 1.2862 0.7759 0.0811 -0.5260 0.1769 0.4273 -1.5465 0.9186 -0.3287 -1.0359 0.0249 1.3598 0.2827 -0.0305 -0.7747 0.5205 -0.8122 -1.1149 -0.9038 -0.7232 -1.7548 -0.1096 Generating multinomial normal output with desired means 0.40140 0.74765 0.30216 -0.15825 1.07073 0.21740 -0.08569 -0.32840 -0.08025 -0.34970 0.27770 0.22813 -0.56783 0.52115 0.77440 0.47319 0.07586 -0.23677 0.16867 0.29466 -0.60802 0.47245 -0.02755 -0.38728 0.07221 0.65745 0.191030.18055 -0.13162 0.10467 0.02572 -0.31581 -0.38731 -0.21659 -0.35528 0.12222MULTIVARIATE SIMULATION WITH NON-ZERO MEANS Variance-covariance matrix Cells B21:B25 contain the formula =NORMSINV(RAND()) Cells B21:B25 contain the formula {=MMULT($A$9:$D$12,B15:B18)+$F$3:$ F$6} 24.9 Multivariate Normal with Non-Zero Means Below we illustrate the case where the asset returns (given in F3:F6) are non- zero. To create multivariate simulations with the desired returns, we simply add the target means to the multivariate simulations in rows 21–24: 647 Generating and Using Random Numbers To confirm that this works, we compute the statistics of the simulation: The average (cells C31:C34) can be depressingly far from the desired targets! It takes a lot of simulated data to get close to the targets. 12 26 27 28 29 30 31 3233 34 35 36 3738 39 40 41 42 43 4445 46 47 48 49AB C D E Checking Number of simulations 220 <-- =COUNT(15:15) Target meanAverage of simulation Mean1 0.05 0.0093 <-- =AVERAGE(21:21) Mean2 0.06 0.0512 <-- =AVERAGE(22:22) Mean3 0.07 0.0618 <-- =AVERAGE(23:23) Mean4 0.08 0.0884 <-- =AVERAGE(24:24) From varcov matrixFrom simulation Var1 0.40 0.3502 <-- =VARP(21:21,21:21) Var2 0.30 0.2641 <-- =VARP(22:22,22:22) Var3 0.20 0.2205 <-- =VARP(23:23,23:23) Var4 0.10 0.0897 <-- =VARP(24:24,24:24) Covar(1,2) 0.03 0.0096 <-- =COVAR(21:21,22:22) Covar(1,3) 0.02 0.0076 <-- =COVAR(21:21,23:23) Covar(1,4) 0.01 -0.0002 <-- =COVAR(21:21,24:24) Covar(2,3) 0.00 0.0151 <-- =COVAR(22:22,23:23) Covar(2,4) -0.06 -0.0502 <-- =COVAR(22:22,24:24) Covar(3,4) 0.03 0.0332 <-- =COVAR(23:23,24:24) 12. In the sense of “hitting” targets—it is much more difficult to hit the means than to hit the variances. This sentence has an almost metaphysical meaning: When we compute asset means from historical returns—even if all the returns are drawn from a stationary distribution (i.e., with unchanging means, variances, and covariances), we are very unlikely in a small sample to get close to the actual mean of the distribution. On the other hand, we are much more likely to be close to the variances. The covariances are also very difficult to hit. 648 Chapter 24 24.10 Multivariate Uniform Simulations Once we have simulated correlated normal distributions, we can easily simu- late uniform distributions by using Norm.S.Dist . In the example below, we first create (in rows 15–18) four series of correlated standard normal deviates. 1 2 345 6 789 10 11 12 131415 16 171819 20 212223242526AB CD E F G H 1.00 0.03 0.02 0.01 0.03 1.00 0.00 -0.06 0.02 0.00 1.00 0.03 0.01 -0.06 0.03 1.00 Cholesky decomposition 1.0000 0.0000 0.0000 0.0000 <-- {=cholesky(varcov)} 0.0300 0.9995 0.0000 0.0000 0.0200 -0.0006 0.9998 0.0000 0.0100 -0.0603 0.0298 0.9977 Generating multinomial normal output -0.95450 0.52393 -0.01498 0.45889 0.47207 -0.78706 0.81113 1.13469 0.08893 -2.06744 -0.36949 -0.33538 -1.35352 -0.12097 1.10413 1.46068 0.15682 1.89231 -1.66563 0.28293 -0.72093 -0.21203 1.04269 0.00869 -0.06897 1.13988 0.16480 -0.21954 -0.95462 1.18325 0.61655 -1.82526 How many? 390 <-- =COUNT(15:15) Mean Variance Theoretical Skewness Kurtosis -0.1087 0.9225 1.0000 0.3156 0.0319 <-- =KURT(15:15) -0.0892 0.9923 1.0000 0.1090 0.2091 <-- =KURT(16:16) -0.0217 1.0732 1.0000 0.0607 0.7864 0.0015 0.9684 1.0000 -0.0014 -0.4970Variance-covariance matrix <-- =AVERAGE(15:1 5)BASIC MULTIVARIATE UNIFORM SIMULATION 649 Generating and Using Random Numbers The statistics for the simulated uniform variates are given below. 13 We now generate uniform variates by applying Norm.S.Dist to the normal variates as shown below: 14 151617181920212223242526272829 30 3132AB CD E F G H Generating multinomial normal output 1.60155 0.35557 1.03640 0.00638 0.26480 -0.87386 0.07279 0.68435 -0.60257 1.26064 0.66585 -0.75586 -1.16279 -0.38719 0.75299 -1.76904 -0.41759 -2.21796 0.16184 0.02274 0.57614 -0.67249 -0.05777 0.35109 0.14609 -0.29084 -1.33622 0.69459 1.61119 0.83252 -0.05966 1.73705 How many? 390 <-- =COUNT(15:15) t r u K w e k S l a c i t e r o e h T e c n a i r a V n a e M ) 5 1 : 5 1 ( T R U K = - - < 7 1 1 0 . 0 - 5 6 6 1 . 0 0 0 0 0 . 1 2 2 8 0 . 1 9 3 2 0 . 0 ) 6 1 : 6 1 ( T R U K = - - < 4 2 5 1 . 0 - 7 5 2 0 . 0 - 0 0 0 0 . 1 6 8 9 9 . 0 2 8 7 0 . 0 - 1 6 3 0 . 0 7 5 2 1 . 0 - 0 0 0 0 . 1 3 1 5 8 . 0 5 7 0 0 . 0 - 8 9 8 1 . 0 8 0 4 0 . 0 - 0 0 0 0 . 1 8 1 4 9 . 0 5 9 1 0 . 0 Generating multinomial uniform output =NORM.S.DIST(D15,1) 0.9454 0.6389 0.8500 0.5025 0.6044 0.1911 0.5290 0.7531 0.2734 0.8963 0.7472 0.2249 0.1225 0.3493 0.7743 0.0384 0.3381 0.0133 0.5643 0.5091 0.7177 0.2506 0.4770 0.6372 0.5581 0.3856 0.0907 0.7563 0.9464 0.7974 0.4762 0.9588<-- =AVERAGE(15:1 5) 13. Recall that the theoretical variance of a (0,1) uniform variable is 1/12 = 0.0833. 650 Chapter 24 28 29 30 31 32 33 34 35 36 37 38 3940 41 42 43 44 45 4647 48 49 50 51AB CD E Generating multinomial uniform output =NORM.S.DIST(D15,1) 0.0977 0.7258 0.2044 0.2876 0.8485 0.7253 0.5784 0.6019 0.8022 0.3373 0.0684 0.1728 0.1179 0.9484 0.2947 0.7104 0.3940 0.8212 0.8544 0.6659 Sample stats rows 29-32 Theoretical Mean 0.4992 0.5000 Variance 0.0830 0.0833 Sigma 0.2880 0.2887 8 9 9 9 . 0 x a M 0 0 0 0 . 0 n i M Corr(1,2) 0.0650 0.0300 Corr(1,3) 0.0908 0.0200 Corr(1,4) -0.0015 0.0100 Corr(2,3) -0.0593 0.0000 Corr(2,4) -0.0656 -0.0600 Corr(3,4) -0.0151 0.0300 Sample covariance matrix 0.0766 0.0053 0.0073 -0.0001 0.0053 0.0857 -0.0051 -0.0056 0.0073 -0.0051 0.0848 -0.0013 -0.0001 -0.0056 -0.0013 0.0842 Note that without very large samples it is extremely difficult to match covariances. But a number of hits on F9 might convince you that we have indeed matched the desired correlation structure. Finally, a very simple test: what ’ s the frequency distribution of rows 29–32? 651 Generating and Using Random Numbers 24.11 Summary Random numbers are widely used in financial engineering, especially in option pricing. This chapter has introduced you to the Excel and VBA random-number generators and has shown a number of techniques for producing normally distributed random numbers. Exercises 1. Here is a random-number generator you can make yourself: • Start with some number, Seed . • Let X 1 = Seed + π . Let XeX 25 1=+ln( ) . • The first random number is Random = X 2 − Integer ( X 2 ), where Integer ( X 2 ) is the integer part of X 2 . • Repeat the process, letting Seed = Random . Run 1,000 of these random numbers and use Frequency to produce a frequency distribu- tion in the intervals 0, 0.1, 0.2, … , 1 . 35 3637383940414243444546 47 48 49 50 51 52 53 54 55 56FGHIJK L M Bin 0.05 80 0.10 79 0.15 79 0.20 75 0.25 64 0.30 88 0.35 78 0.40 78 0.45 85 0.50 80 0.55 75 0.60 76 0.65 75 0.70 70 0.75 89 0.80 84 0.85 68 0.90 81 0.95 90 1.00 66Frequency 0102030405060708090100 0.00 0.10 0.20 0.30 0.40 0.50 0.60 0.70 0.80 0.90 1.00 652 Chapter 24 2. Write a VBA Exercise1(seed) that produces a random number based on a Seed and the rule of the previous exercise. 3. Define AmodB as the remainder when A is divided by B . For example 36mod25 = 11. Excel has this function; it is written Mod(A,B) . Now here is another random-number generator: • Let X 0 = seed . • Let X n + 1 = ( 7*X n )mod10 8 . • Let U n + 1 = X n + 1 /10 8 . The list of numbers U 1 , U 2 , … are the pseudo-random numbers generated by this random- number generator. (This is one of the many uniform random-number generators given in Abramowitz and Stegun, 1972). 4. Many states have daily lotteries, which are played as follows: Sometime during the day, you buy a lottery ticket, on which the seller inscribes a number you choose, between 000 and 999. That night there is a drawing on television in which a three-digit number is drawn. If the number on your ticket matches the number drawn, you win and collect $500. If you lose, you get nothing. a. Write an Excel function which produces a random number between 000 and 999. (Hint: Use Rand( ) and Int( ) .) b. Assume that you bet $1 every day of the year on the same number. Show your cumula- tive winnings throughout the year. 5. Tareq and Jamillah are playing with a single die for money. According to the rules of their game, Tareq pays Jamillah $0.50 at the start of every round, before they throw a die. They then throw the die; if it falls on an even number, Jamillah pays that amount in dollars to Tareq, and if it falls on an odd number, Tareq pays that amount to Jamillah. • Simulate Jamillah ’ s cumulative winnings after 25 rounds of the game. • Simulate 50 games, and graph the results 6. Stock price simulation: A stock ’ s price is lognormally distributed with mean μ = 15%. The current stock price is S 0 = 35. Following the template on the spreadsheet, create 60 static standard normal deviates using Data|Data Analysis|Random Number Generation . Use these random numbers to simulate the stock price path over 60 months. Create price paths for σ = 15%, 30%, and 60% and graph these three paths on the same axes. 653 Generating and Using Random Numbers 7. Stock price simulation: A stock ’ s price is lognormally distributed with mean μ = 15% and σ = 50%. The current stock price is S 0 = 35. Following the template on the spreadsheet, create 60 dynamic standard normal deviates using Norm.S.Inv(Rand( )) . Use these random numbers to simulate the stock price path over 60 months and graph. 8. Marcus is 25 years old. He has a new job and intends to save $10,000 today and in each of the next 34 years (35 deposits altogether). He has decided on an investment policy in which he invests 30% of his assets in a risk-free bond with 3% continuously compounded annual interest and the remainder in the market portfolio that has lognormal returns μ = 12% and σ = 35%. Write a spreadsheet showing Marcus ’ s accumulation by the time he is 60. A sample output is given below: 1 2 3 45 6 78 9 10 11 12 13 14E D C B A 0 0 0 , 0 1 t i s o p e d l a u n n A % 3 e t a r e e r f - k s i R Market portfolio mean 12% Market portfolio sigma 35% Proportion in market portfolio 70% Accumulation at age 60 12,048,869 <-- =B45 AgeTotal investment at beginning of periodNew investmentTotal investment at end of period 4 4 . 5 6 0 , 3 1 0 0 0 , 0 1 0 5 2 26 13,065.44 10,000 27,795.31 27 27,795.31 10,000 52,906.64 28 52,906.64 10,000 58,590.40 29 58,590.40 10,000 99,352.45MARCUS'S INVESTMENT/SAVINGS DECISION <-- =(B10+C10)*($B$6*EXP($B$4+ $B$5*NORM.S.INV(RAND()))+(1 - $B$6)*EXP($B$3)) 654 Chapter 24 9. Marcus decides that he needs at least $2 million by the time he hits 60. • Run 100 simulations in order to determine the approximate probability of achieving this goal. • Compute the average and standard deviation of the terminal wealth. • Create a Data Table to determine the relation between the proportion invested in the risky asset and the probability of achieving the minimum at 60. Set the proportions in the risky asset to 0%, 10%, … , 100%. 10. Martha is playing a coin-toss game in which she tosses two coins. The probability of heads on the second coin is correlated with correlation ρ = 0.6 with the probability of heads on the first coin. In this particular game, Martha wins $1 for each heads that she tosses. • Model one round of 2 coin tosses. • If she plays 10 rounds of 2 coin tosses each, how much will she win? • Use Data Table on a blank cell to model 25 cycles of this 10-round game. 2 5 An Introduction to Monte Carlo Methods 25.1 Overview “Monte Carlo” (MC) methods refer to a variety of random simulations used to determine the values of parameters. In this introductory chapter to MC methods, we use MC to determine the value of π . In subsequent chapters we use MC to gain insight into investment and option strategies. The Monte Carlo method has its source in physics, where it is often used to determine model values for which there is no analytical solution. 1 One use of Monte Carlo in finance is similar: Monte Carlo methods use simulation to price assets whose prices are not readily determined by analytical means. In short: If there isn ’ t a formula for computing the value of an asset, maybe we can determine its value with a simulation. In Chapters 27–30 we also use Monte Carlo methods to give a feel for the uncertainty surrounding various investment and option strategies. When we do this, we are not necessarily interested in the pricing implications of uncer-tainty—we want to illustrate what kinds of results can occur from a given investment strategy in assets whose returns are uncertain. In this chapter we give a layperson ’ s introduction to Monte Carlo pricing. 2 We assume that you have read Chapter 24, which gives an introduction to random numbers. 25.2 Computing π Using Monte Carlo All Monte Carlo methods involve random simulation. We illustrate how to use Monte Carlo to calculate the value of π , a number with which you are presum- ably familiar. Here ’ s our method: We know that the area of the unit circle (circle with radius 1) is π . It follows that the area of a quarter circle is π /4. We inscribe a quarter circle into a unit square, as illustrated below. We then proceed to “shoot” random points at the unit square. Each random point has an x com- ponent and a y component. We generate such points by using the Excel func- tion Rand . 1. Two good websites with introductions to Monte Carlo methods are www.ornl.gov/ ∼ pk7/thesis/ pkthnode19.html and www.puc-rio.br/marco.ind/monte-carlo.html . 2. An excellent nonintroductory text is Glasserman (2005). 656 Chapter 25 The picture below shows the quarter circle inscribed in the unit square and a single random point, which happened to land inside the circle. Quarter Unit Circle Showing single random point {rand(),rand()} 00.10.20.30.40.50.60.70.80.91 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 By pressing F9 in the spreadsheet that accompanies this chapter, you can generate different values of the random point. In some cases, the point will be outside the unit circle: 657 An Introduction to Monte Carlo Methods We can easily do a calculation of the probability that the point will be inside the circle: • The area of the whole unit circle is π * r 2 = π . Thus the area of the quarter unit circle is π /4. • The random point—generated by {Rand( ), Rand( )} —is always inside the unit square, whose area is 1. • Thus the probability of the random point being inside the unit circle is Area unit circle Area unit square==ππ//4 14 Quarter Unit Circle Showing single random point {rand(),rand()} 00.10.20.30.40.50.60.70.80.91 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 658 Chapter 25 Monte Carlo approximation of Relative number points inside uniπ =∗4 tt circle Number points inside uni t circle Total number of points=∗4 In the spreadsheet below we generate a list of random numbers (columns B and C) and then use a Boolean function to test whether the numbers are in or out of the unit circle. In row 8 below, for example, the function = (B8 ∧ 2 + C8 ∧ 2 < = 1) returns TRUE if the sum of the squares of B8 and C8 are less than or equal to 1 and 0 otherwise. In cell B2 we use Count to count the number of total points generated, and CountIf to determine the number of data points which fall inside the unit circle. 3 3. All of the functions in this paragraph—Boolean functions, Count, and CountIf —are discussed in Chapter 33. Monte Carlo Computation of π If we count the relative number of points which fall inside the unit circle, we should approximate π /4. Thus 659 An Introduction to Monte Carlo Methods Each time we press F9 to recalculate the spreadsheet, we get different values for the = Rand , and hence a different Monte Carlo value for π . Here are some examples: 1 2 345 6 7 89 10111213141516171819 20 2122232425262728293031323334353637AB C D E Number of data points 30 <-- =COUNT(A:A) ) E U R T , D : D ( F I T N U O C = - - < 2 2 e l c r i c e d i s n I 4 * 2 B / 3 B = - - < 3 3 3 3 3 3 3 3 9 . 2 ? i P Experiment Random1 Random2In unit circle? 1 0.93377 0.14390 TRUE <-- =(B8^2+C8^2<=1) 2 0.28866 0.68112 TRUE 3 0.53592 0.60165 TRUE 4 0.38665 0.27952 TRUE 5 0.02396 0.62680 TRUE 6 0.98093 0.02753 TRUE 7 0.57770 0.34427 TRUE 8 0.58922 0.26317 TRUE 9 0.34752 0.77355 TRUE 10 0.96858 0.08618 TRUE 11 0.32394 0.66268 TRUE 12 0.04574 0.69957 TRUE 13 0.53216 0.99862 FALSE 14 0.88861 0.60825 FALSE 15 0.65561 0.39199 TRUE 16 0.79978 0.21315 TRUE 17 0.65605 0.99905 FALSE 18 0.23636 0.95164 TRUE 19 0.75541 0.17700 TRUE 20 0.29197 0.01494 TRUE 21 0.56781 0.40796 TRUE 22 0.25891 0.04545 TRUE 23 0.61585 0.88576 FALSE 24 0.32830 0.43645 TRUE 25 0.52969 0.47640 TRUE 26 0.60362 0.85435 FALSE 27 0.97880 0.20737 FALSE 28 0.62883 0.84034 FALSE 29 0.13787 0.66466 TRUE 30 0.98497 0.36433 FALSEEach cell in these columns contains the Excel function =Rand()COMPUTING PI USING MONTE CARLO METHODS INITIAL EXPERIMENT 660 Chapter 25 Pressing F9 again: 1 2 345 6 7 89 10 11 121314AB C D E Number of data points 30 <-- =COUNT(A:A) ) E U R T , D : D ( F I T N U O C = - - < 4 2 e l c r i c e d i s n I 4 * 2 B / 3 B = - - < 2 . 3 ? i P Experiment Random1 Random2In unit circle? 1 0.19891 0.21584 TRUE <-- =(B8^2+C8^2<=1) 2 0.60485 0.39918 TRUE 3 0.54090 0.50887 TRUE 4 0.01367 0.82935 TRUE 5 0.29872 0.02460 TRUE 6 0.98014 0.75186 FALSE 7 0.01627 0.34278 TRUEEach cell in these columns contains the Excel function =Rand()COMPUTING PI USING MONTE CARLO METHODS INITIAL EXPERIMENT 1 2 345 6 7 89 10 11 121314AB C D E Number of data points 30 <-- =COUNT(A:A) ) E U R T , D : D ( F I T N U O C = - - < 5 2 e l c r i c e d i s n I 4 * 2 B / 3 B = - - < 3 3 3 3 3 3 3 3 3 . 3 ? i P Experiment Random1 Random2In unit circle? 1 0.95610 0.35792 FALSE <-- =(B8^2+C8^2<=1) 2 0.65874 0.62250 TRUE 3 0.67164 0.23791 TRUE 4 0.81134 0.46254 TRUE 5 0.06633 0.01178 TRUE 6 0.70038 0.91783 FALSE 7 0.22334 0.19309 TRUEEach cell in these columns contains the Excel function =Rand()COMPUTING PI USING MONTE CARLO METHODS INITIAL EXPERIMENT 661 An Introduction to Monte Carlo Methods Now it ’ s clear that the values we get for π are experimental, but if we did this for a lot of points we would get closer to the actual value of π . In the example below we run our experiment 65,000 times: 1 2 3 4 5 6 789 10AB C D E Number of data points 65,000 <-- =COUNT(A:A) ) E U R T , D : D ( F I T N U O C = - - < 1 7 0 , 1 5 e l c r i c e d i s n I 4 * 2 B / 3 B = - - < 9 6 7 0 3 8 2 4 1 . 3 ? i P Experiment Random1 Random2In unit circle? 1 0.03174 0.88023 TRUE <-- =(B7^2+C7^2<=1) 2 0.87070 0.97223 FALSE 3 0.14515 0.65038 TRUE 4 0.39535 0.31017 TRUECOMPUTING PI USING MONTE CARLO METHODS 65000 Iterations Pressing F9 still gives much more accurate values for π . A few more presses of F9 produced the following Monte Carlo values for π : 3 150544034 3 144256741 3 139556532 3 149872576 3 13821361., ., ., ., . 5 5 3 132780906,. Using more data points makes our MC value for π more accurate, though none of these values is that close to the actual value of π . 4 25.3 Writing a VBA Program This Monte Carlo business requires some VBA. Here ’ s a program: 4. The actual value of π , correct to 50 digits, is 3.1415926535897932384626433832795028841 971693993751. One of the end-of-chapter problems shows you a quick way of computing this value using several remarkable functions due to the Indian mathematician Srinivasa Ramanujan (1887–1920). 662 Chapter 25 Sub MonteCarlo() n = Range(“Number”) Hits = 0 For Index = 1 To n If Rnd ∧ 2 + Rnd ∧ 2 < 1 _ Then Hits = Hits + 1 Next Index Range(“Estimate”) = 4 * Hits / n End Sub The spreadsheet below shows this program and two other VBA programs. The program MonteCarloTimer computes both the StartTime and the StopTime , so that we can compute the elapsed time for the computations. Below, you can see that 10 million iterations of the program took 4 seconds on the author ’ s Lenovo T420s laptop. The program MonteCarloTimeRecord records each iteration of the program on the screen. This VBA routine allows you to see how the values of π in cell B3 develop. You can stop this or any VBA routine in midstream by pressing [Ctrl] + [Break]. This macro is incredibly time wasteful. It took us 103 seconds to run 5,000 iterations of the routine (compare this to running the 20 million iterations without the screen updating). 663 An Introduction to Monte Carlo Methods 25.4 Another Monte Carlo Problem: Investment and Retirement 5 The problem: You are 65 years old and you have $1,000,000. You are trying to decide on a mix of investments: There is a riskless bond with an annual return of 6% and a risky stock portfolio with an expected log return of 12% and a standard deviation of return of 30%. Your limitations: You want to take $150,000 out of the account every year and have something left over at age 75. To get a better handle on this situation, you plot out a spreadsheet: 1 2 34 5 678 9 10 1112 13 14 15 161718 19 202122 23 2425 26 272829 30 3132 33 343536 37E D C B A Number of data points 10,000,000 <-- This cell called \"Number\" Sub MonteCarlo() ) \" r e b m u N \" ( e g n a R = n \" e t a m i t s E \" d e l l a c l l e c s i h T - - < 8 0 5 4 1 4 1 . 3 ? i P Hits = 0 For Index = 1 To n 1 + s t i H = s t i H n e h T 1 < 2 ^ d n R + 2 ^ d n R f I \" e m i T t r a t S \" d e l l a c l l e c s i h T - - < 9 4 : 9 5 : 0 1 e m i T t r a t S x e d n I t x e N \" e m i T p o t S \" d e l l a c l l e c s i h T - - < 3 5 : 9 5 : 0 1 e m i T p o t S n / s t i H * 4 = ) \" e t a m i t s E \" ( e g n a R e m i T t r a t S - e m i t p o t S = - - < 4 0 : 0 0 : 0 d e s p a l E End Sub Note Sub MonteCarloTime() r e m i t s e d u l c n I ' \" o l r a C e t n o M \" o r c a m e h t s n u r a + ] l r t C [ [Ctrl]+e runs the macro \"MonteCarloTime\" which also records the time n = Range(\"Number\") Range(\"StartTime\") = Time n = Range(\"Number\") Hits = 0 For Index = 1 To n If Rnd ^ 2 + Rnd ^ 2 < 1 Then Hits = Hits + 1 Next Index Range(\"Estimate\") = 4 * Hits / n Range(\"StopTime\") = Time End Sub Sub MonteCarloTimeRecord() 'Records everything (takes a long time) n = Range(\"Number\") Range(\"StartTime\") = Time n = Range(\"Number\") Hits = 0 For Index = 1 To n Range(\"Number\") = Index If Rnd ^ 2 + Rnd ^ 2 < 1 Then Hits = Hits + 1 Range(\"Estimate\") = 4 * Hits / Index Range(\"StopTime\") = Time Next Index End SubCOMPUTING PI USING VBA [Ctrl]+f runs the macro \"MonteCarloTimeRecord\" which records the results as they are generated. For large number of points, this takes a very long time! Press [Ctrl]+[Break] to stop the macro. 5. The material in the remainder of the chapter anticipates some results of the next several chap- ters and can be skipped on first reading. 664 Chapter 25 In this spreadsheet column B shows the wealth at the beginning of every year. The wealth is divided between risky and riskless investments according to the proportions in cell B7. The riskless investment earns a continuously compounded return of 6% (meaning: $100 invested in the riskless grows to 100* e 6% at the end of the year). The risky part of the investment grows by a factor of e μ + σ * Z = e 8% + 20%* Z , where Z is a random number which is normally distributed with mean 0 and standard deviation 1. As explained in Chapter 24, one way of generating these numbers is to use the Excel function Norm.S.Inv(Rand( )) . With each press of F9 , this function recomputes and produces another normally distributed random number. In the above simulation the investor has money left at the end of the 10-year period. But it is clear that not every simulation will leave the investor with spare cash at the end of year 10. A few presses of F9 to recalculate the spread- sheet will produce something like this: 1 2 34 5 67 8 9 1011 12 1314 15 16 17181920 21 22 23 24 25 26 27AB C D E F G H I Current wealth 1,000,000 % 6 e t a r e e r f - k s i R Parameters of risky investment Expected annual return 8% Standard deviation of return 20% Proportion invested in risky 70% Annual drawdown 150,000 YearWealth at beginning of yearInvested in riskyInvested in bondsRandom number, normally distributed1+return on risky investmentWealth at end of yearDrawdownLeft at end of 10 years 1 1,000,000 700,000 300,000 -0.6530 0.9507 984,011 150,000 2 834,011 583,808 250,203 1.9864 1.6117 1,206,595 150,000 3 1,056,595 739,616 316,978 -0.4627 0.9875 1,066,981 150,000 4 916,981 641,887 275,094 0.3292 1.1570 1,034,774 150,000 5 884,774 619,342 265,432 -0.1634 1.0485 931,203 150,000 6 781,203 546,842 234,361 -0.0306 1.0767 837,625 150,000 7 687,625 481,338 206,288 -1.7297 0.7665 587,982 150,000 8 437,982 306,587 131,395 0.8048 1.2725 529,639 150,000 9 379,639 265,748 113,892 0.5611 1.2119 443,005 150,000 10 293,005 205,104 87,902 -0.0473 1.0731 313,431 150,000 163,431 Investment in risky asset =B20*$B$7PLANNING YOUR RETIREMENT =C20*F20+D20*EXP($B$3)Normally distributed random numbers generated by =NORM.S.INV(RAND()) 1+return on risky investment =EXP ($B$5+$B$6*E20 )Wealth at beginning of year =G19-H19 665 An Introduction to Monte Carlo Methods What interests us is what percentage of the investment-consumption paths will end with a positive remainder ? We will use Monte Carlo techniques to answer this question. But before we do, we consider an economic question. Should We Apply the 70% Rule Blindly? In the above simulations we have split our investment between the risky and the riskless investments mechanically. We have also continued to draw down funds irrespective of whether there are funds in the account. In the spreadsheet below we correct this. We assume that the investor defines a “safety cushion.” The cushion in cell B8 below is 3, which is taken to mean that the annual drawdown is $150,000 if the investor ’ s portfolio is worth at least 3*$150,000 at the end of the year. If this is not true, then the investor takes 1/3 of her portfolio value as a drawdown: 1 2 34 5 6789 1011121314 15 1617 18 1920 21 22 23 24 25 2627AB C D E F G H I Current wealth 1,000,000 % 6 e t a r e e r f k s i R Parameters of risky investment Expected annual return 8% Standard deviation of return 20% Proportion invested in risky 70% Annual drawdown 150,000 YearWealth at beginning of yearInvested in riskyInvested in bondsRandom number, normally distributed1+return on risky investmentWealth at end of yearDrawdownLeft at end of 10 years 1 1,000,000 700,000 300,000 0.4850 1.1936 1,154,087 150,000 2 1,004,087 702,861 301,226 1.2441 1.3893 1,296,359 150,000 3 1,146,359 802,451 343,908 1.9765 1.6085 1,655,924 150,000 4 1,505,924 1,054,147 451,777 -0.1250 1.0565 1,593,464 150,000 5 1,443,464 1,010,425 433,039 -0.5280 0.9747 1,444,709 150,000 6 1,294,709 906,296 388,413 -0.2036 1.0401 1,355,033 150,000 7 1,205,033 843,523 361,510 -1.6497 0.7788 1,040,840 150,000 8 890,840 623,588 267,252 0.3517 1.1622 1,008,528 150,000 9 858,528 600,970 257,559 -0.7976 0.9236 828,516 150,000 10 678,516 474,961 203,555 -0.7732 0.9281 656,939 150,000 506,939 Investment in risky asset =B20*$B$7PLANNING YOUR RETIREMENT =C20*F20+D20*EXP($B$3)Normally-distributed random numbers generated by =NORM.S.INV(RAND()) 1+return on risky investment =EXP ($B$5+$B$6*E20 )Wealth at beginning of year =G19-H19 666 Chapter 25 Many rules like this can be devised. The problem here—phrased as invest- ment and payouts over retirement—is substantially the same as that faced by any endowment manager struggling with the problem of how to determine simultaneously the investment and the drawdown policy of the endowment. As far as we know there is no analytical solution to this problem, though as can be seen, it is not difficult to simulate the problem. 1 2 345 6 78 9 10 11 12 13 141516 17 1819 20 2122 23 24 25 26 27 28AB C D E F G H I Current wealth 1,000,000 % 6 e t a r e e r f k s i R Parameters of risky investment Expected annual return 8% Standard deviation of return 20% Proportion invested in risky 70% 3 n o i h s u c y t e f a S Annual drawdown 150,000 YearWealth at beginning of yearInvested in riskyInvested in bondsRandom number, normally distributed1+return on risky investmentWealth at end of yearDrawdownLeft at end of 10 years 1 1,000,000 700,000 300,000 -0.5471 0.9710 998,253 150,000 2 848,253 593,777 254,476 0.4716 1.1904 977,072 150,000 3 827,072 578,950 248,121 -0.8906 0.9065 788,306 150,000 4 638,306 446,814 191,492 0.4212 1.1785 729,907 150,000 5 579,907 405,935 173,972 0.9129 1.3003 712,560 150,000 6 562,560 393,792 168,768 0.0895 1.1029 613,500 150,000 7 463,500 324,450 139,050 -0.3590 1.0082 474,770 150,000 8 324,770 227,339 97,431 -0.9809 0.8903 305,860 101,953 9 203,906 142,734 61,172 -1.1469 0.8612 187,882 62,627 10 125,255 87,678 37,576 -0.2989 1.0204 129,369 43,123 86,246 Investment in risky asset =B21*$B$7PLANNING YOUR RETIREMENT Using a safety cushion of 3 Investor takes 150,000 if end-year wealth > 3*150,000, else takes end-year wealth/3 =C21*F21+D21*EXP($B$3)Normally-distributed random numbers generated by =NORMSINV(RAND()) 1+return on risky investment =EXP($B$5+$B$6*E21)Wealth at beginning of year =G20-H20 Drawdown calculated as =IF(G21>$B$8*$B$9,$B$9,G21/$B$8) 667 An Introduction to Monte Carlo Methods There are 20 rows in the Data Table , though only 12 are shown. When we select OK , we run the simulation 20 times. Here is one run and some statistics. Pressing F9 will run the simulation again: 25.5 A Monte Carlo Simulation of the Investment Problem In this section we run multiple simulations of the investment problem. The first set of simulations is run in the Excel spreadsheet itself, using the technique of “Data table on a blank cell” explained in section 31.7. The second set of simulations is run in VBA. Data Table on a Blank Cell We set up a Data Table on the investment simulation spreadsheet. Note that the data table header refers to the bequest in cell I20 and that the Column input cell in the Data Table dialog box refers to an empty cell. This is the technique explained in section 31.7: 668 Chapter 25 Running the Simulation in VBA We write a VBA function SuccessfulRuns , which simulates the above problem. Given an investment policy, the function SuccessfulRuns determines the per- centage of investment/drawdown trajectories which will leave the retiree with positive wealth at the end of his investment horizon. 5 6 7 89 101112131415161718192021 22 23 24 25 2627 28 29 30 31KLM NOPQ Average 227,828 <-- =AVERAGE(L12:L30) Sigma 401,551 <-- =STDEV.S(L12:L31) Negative bequest 30% <-- =COUNTIF(L12:L31,\"<0\")/COUNT(L12:L31) Simulation 220,554 <-- =I20, data table header 1 -77,4382 372,0053 242,1344 -94,0785 754,7226 145,9137 -447,9538 211,7919 808,196 10 724,259 11 -352,192 12 -136,035 13 263,919 14 106,654 15 809,09416 378,955 17 -193,356 18 699,718 19 112,415 20 753,354Below: Data table 669 An Introduction to Monte Carlo Methods The function result in cell B13 considers a retiree starting with $1 million, making an investment decision between a risk-free asset with return 7% and a risky asset with stochastic returns μ = 10% and σ = 40%, and desiring to draw down $100,000 per year. Simulating 1,000 returns, we determine that in 87.6% of the cases the investor will finish with positive wealth at the end of 10 years. Running the function again will, of course, produce different results. The VBA Code for SuccessfulRuns We almost forgot! Here it is: 1 23456789 10111213E D C B A 0 0 0 , 0 0 0 , 1 h t l a e w t n e r r u C % 8 e t a r e e r f k s i R Parameters of risky investment Expected annual return 10% Standard deviation of return 40% Proportion invested in risky 40% 0 0 0 , 0 0 1 n w o d w a r d l a u n n A 0 1 t n e m t s e v n i f o s r a e Y 0 0 0 , 1 s n u R ) 1 1 B , 9 B , 7 B , 6 B , 5 B , 3 B , 8 B , 2 B ( s n u r l u f s s e c c u s = - - < % 0 6 . 7 8 s n u r l u f s s e c c u SHOW WELL DO WE DO? PERCENTAGE OF POSITIVE OUTCOMES Here is some output from this function: 670 Chapter 25 Function SuccessfulRuns(Initial, _ Drawdown, Interest, Mean, Sigma, _ PercentRisky, Years, Runs) Dim PortfolioValue() As Double ReDim PortfolioValue(Years + 1) Dim Success As Integer Up = Exp(Mean + Sigma) Down = Exp(Mean - Sigma) PiUp = (Exp(Interest) - Down) / (Up - Down) PiDown = 1 - PiUp For Index = 1 To Runs For j = 1 To Years Randomize PortfolioValue(0) = Initial If Rnd > PiDown Then PortfolioValue(j) = _ PortfolioValue(j - 1) * _ PercentRisky * Up + PortfolioValue(j - 1) _ * (1 - PercentRisky) * _ Exp(Interest) - Drawdown Else PortfolioValue(j) = PortfolioValue(j - 1) * _ PercentRisky * Down + PortfolioValue(j - 1) _ * (1 - PercentRisky) * Exp(Interest) _ - Drawdown End If 671 An Introduction to Monte Carlo Methods 25.6 Summary Monte Carlo methods are experimental techniques for determining the numeri- cal value of a function or a procedure. In this chapter we have used the example of π to illustrate how Monte Carlo might be applied. As a valuation tool, MC methods are to be avoided when there is another, closed-form, way of deter-mining the value. As we illustrate in exercises to this chapter, MC is not a good way to compute the value of π , given that many excellent formulas exist that approximate π with great accuracy. In cases where this is not true, however, you can use Monte Carlo to approximate the value. Monte Carlo methods can also be used to simulate investment problems in order to gain insight into the meaning of asset return uncertainty. In this chapter we illustrated this with some investment examples. Exercises 1. In section 25.2 we designed a macro which calculates the value of π using Monte Carlo and which updates the screen every iteration. Modify the macro so that it updates the screen only every 1,000 iterations. Hints: • Use the VBA function Mod . From the VBA help menu, note that this function has syntax a Mod b. (A similar Excel function has syntax Mod(a,b) , but cannot be used in VBA.) • Use the VBA commands Application.ScreenUpdating = True and Application. ScreenUpdating = False to control the updating of the screen. 2. In the previous exercise, put a “switch” on the spreadsheet itself, which controls the updat- ing of the macro (whether to update, yes or no, and how often to update). 3. Use Monte Carlo to calculate the integral of the function Exp( x ) for 0 < x < 3. Here ’ s the graph of this function: Next j If PortfolioValue(Years) > 0 _ Then Success = Success + 1 Next Index SuccessfulRuns = Success / Runs End Function 672 Chapter 25 4. One of the messages of this chapter is that while Monte Carlo is a clever method of cal- culation, it shouldn ’ t be used when some better method exists. The MC valuation of π in section 25.2, for example, converges very slowly. It ’ s a crummy way to compute π , since there are well-known methods for doing this. To see this, answer the following questions: • Approximately how many runs does it require until you get 4-decimal accuracy for π using our MC simulation? • Approximately how many runs does it require until you get 8-decimal accuracy for π using our MC simulation? • Approximately how many runs does it require until you get 16-decimal accuracy for π using our MC simulation? Note on exercises 5 and 6: We show you two alternative ways to compute the value of π . Both are substantially better than Monte Carlo! 5. The first method for computing π is: π2 22611 21 3=+ + + … Use this formula to approximate π . 6. The great Indian mathematical genius Ramanujan showed that 18 98014 1103 26390 3964 4 0 π=() ()+ () =∞ ∑n nn n n! ! Graph of Exp(x), 0< x < 3 036912151821 0 0.5 1 1.5 2 2.5 3xExp(x) 673 An Introduction to Monte Carlo Methods The n ! indicates the factorial: nn n n! !=∗ − () ∗−() ∗∗ ∗ =12 2 1 01… Excel ’ s function Fact computes the factorial. Use this series to construct a VBA function to value π , where n is the number of terms in the series. Show that two iterations give you over 15 digits of accuracy. Some Comments on the Value of π Exercise 6 is based on an article by D. H. Bailey, J. M. Borwein, and P. B. Borwein: “Ramanujan, Modular Equations, and Approximations to π Or How to Compute One Billion Digits of Pi.” The article originally appeared in the American Mathematical Monthly , 1987, volume 96, number 3, pages 201–219. It can be downloaded at http://www.cecm.sfu.ca/organics/papers/borwein/index.html . Ramanujan ’ s method in exercise 6 adds roughly 8 digits with each iteration. Ramanujan developed an even faster method, where only 13 iterations provide more than 1 billion digits of π . (Excel ’ s maximal accu- racy is only 15 digits, but there is a nice Excel add-in which extends the precision to 32,767 digits: http://precisioncalc.com/ ). Srinivasan Ramanujan (1887–1920) was one of the great mathematical geniuses of all time. Read a biography of this unique individual: The Man Who Knew Infinity: A Life of the Genius Ramanujan by Robert Kanigel. Published by Charles Scribner, 1991 (paper-back edition—Washington Square Press, 1992). Finally: So what ’ s the value of π ? Mathematica —a very sophisticated mathematical programming language ( http://www.wolfram.com )—gives the following values for π . The values are computed using one of Ramanujan ’ s formulas. Number of Significant DigitsValue of πimulating Stock Prices 26.1 Overview The Monte Carlo approach to asset pricing is based on the simulation of asset prices. By simulating asset prices, we hope to answer questions relating to the investment outcomes such as: • What is the probability that a given savings/spending pattern over time will enable a positive pension bequest? • What is the likelihood that a discretely updated portfolio approach to option replication will successfully duplicate the option outcome? • How can we price options whose terminal prices depend on the price path of an asset? In order to simulate prices, we must have some assumptions about the dis- tributional properties of stock prices. The standard finance assumption is that stock prices are lognormally distributed or, equivalently, that stock returns are normally distributed. In this chapter we give meaning to these two statements and show how they can be simulated in Excel. Subsequent chapters of Section V apply these concepts to the modeling of investments and options. We have touched on this topic in our discussion of option pricing. In Chapter 16 we discussed the assumption that the development of a stock price over time follows a binomial model. We return to the binomial model in Chapter 30, where we use it to show Monte Carlo price-path-dependent options. In Chapter 17, we showed that the Black-Scholes model uses the assumption that stock prices are lognormally distributed. On a deeper level, we showed numeri-cally in section 16.7 that the binomial model is in the limit equivalent to the assumption of lognormality. We did this by showing that the limiting price of a binomial option pricing model is the Black-Scholes price. This chapter focuses on the lognormality of prices and shows how this assumption can be simulated. The structure of the chapter is as follows: • We start with a discussion of what constitutes “reasonable” assumptions about stock prices. • We then discuss why the lognormal distribution is a reasonable distribution for stock prices. • Next, we show how to simulate lognormal price paths. • Finally, we show you how to derive the parameters of the lognormal distribution—the mean and standard deviation of the stock returns—from historical stock price data. 676 Chapter 26 26.2 What Do Stock Prices Look Like? What are reasonable assumptions about the way stock prices behave over time? Clearly the price of a stock (or any other risky financial asset) is uncertain. What is its distribution? This is a perplexing question. One way to answer this question is to ask what are reasonable statistical properties of a stock price. Here are five reasonable properties: 1. The stock price is uncertain. Given the price today, we do not know the price tomorrow. 2. Changes in the stock ’ s price are continuous. Over short periods of time, changes in a stock ’ s price are very small, and the change goes to zero as the time span goes to zero. 1 3. The stock price is never zero. This property means that we exclude the stocks of “dead” companies. 4. The average return from holding a stock tends to increase over time. Notice the word “tends”: We do not know that holding a stock for a longer time will lead to a higher return; however, we expect that holding a risky asset over a longer term will lead to a higher average return. 5. The uncertainty associated with the return from holding a stock also tends to increase the longer the stock is held. Thus, given the stock ’ s price today, the variance of the stock price tomorrow is small; however, the price variance in 1 month is larger, and the variance in 1 year is larger still. Reasonable Stock Properties and Stock Price Paths One way of viewing these five “reasonable properties” of stock prices is to think about price paths . A stock price path is a graph of a stock price over a period of time. Here, for example, are the price paths of several stocks: 1. If you have watched stock prices, you know that continuity is usually not a bad assumption. Sometimes, however, it can be disastrous (look at the way stock market prices behaved in October 1987, for a dramatic example of price discontinuities ). It is possible to build a stock price model that assumes that prices are usually continuous but have occasional (and random) jumps. See Cox and Ross (1976), Merton (1976), and Jarrow and Rudd (1983). 677 Simulating Stock Prices If we simulated stock price paths (something we will do using the lognormal model later in this chapter), how would we expect them to look? Our five properties imply that we would expect: 1. Wiggly lines. 2. Lines that are continuous (solid), with no jumps. 3. Lines that are always positive and never cross zero, no matter how low they get. 4. That at a given point in time, the average over all plausible lines is greater than the initial price of the stock. The farther out we go, the higher this average becomes. 5. That the standard deviation over all plausible lines is greater the farther out we go. Here ’ s another way of thinking about stock prices. Suppose we take the daily returns on the Standard & Poor ’ s 500 index (we only show the start of the data): 0102030405060Jan-02Jan-03Jan-04Jan-05Jan-06Jan-07Jan-08Jan-09Jan-10Jan-11Jan-12Daily Prices for 3 Stocks January 2002- December 2011 Kellogg GE HPQ 678 Chapter 26 If we graph these returns over any given period, we get a mess of dots which is difficult to interpret: 1 2345 6 789 1011 12 131415ABC D Date Price Return 03-01-50 16.6604-01-50 16.85 1.13% <-- =LN(B4/B3)05-01-50 16.93 0.47% 06-01-50 16.98 0.29% 09-01-50 17.08 0.59%10-01-50 17.03 -0.29%11-01-50 17.09 0.35%12-01-50 16.76 -1.95%13-01-50 16.67 -0.54% 16-01-50 16.72 0.30% 17-01-50 16.86 0.83%18-01-50 16.85 -0.06%19-01-50 16.87 0.12%SP500 DAILY PRICES 1950-2011 -25%-20%-15%-10%-5%0%5%10%15%Standard & Poors 500 Daily Returns, 1950-2011 679 Simulating Stock Prices We have marked the largest daily increase and decline with circles: –22.9% on 19 October 1987 and + 10.96% on 13 October 2008. This smear of dots on a graph is difficult to interpret. Excel can help us make some sense of the data: 1 23 4 5 6 7 8 9 1011 12 13 14I H G F E D C A Date Return 1 0 6 , 5 1 s n r u t e r y l i a d f o r e b m u N 0 5 - n a J - 3 4-Jan-50 1.13% <-- =LN(B4/B3) Number of days per year 251.629 <-- =G3/62 5-Jan-50 0.47% <-- =LN(B5/B4) 8 0 - t c O - 3 1 % 6 9 . 0 1 x a M ) 5 B / 6 B ( N L = - - < % 9 2 . 0 0 5 - n a J - 6 7 8 - t c O - 9 1 % 0 9 . 2 2 - n i M % 9 5 . 0 0 5 - n a J - 9 10-Jan-50 -0.29% 11-Jan-50 0.35% Number of returns between -1% and +1% 12,425 <-- =COUNTIFS(C:C,\"<=1%\",C:C,\">=-1%\") ) C : C ( E G A R E V A = - - < % 8 7 2 0 . 0 n r u t e r y l i a d e g a r e v A % 5 9 . 1 - 0 5 - n a J - 2 1 13-Jan-50 -0.54% Standard deviation of daily return 0.9822% <-- =STDEV.S(C:C) 16-Jan-50 0.30% 0 1 G * 4 G = - - < % 0 0 . 7 n r u t e r l a u n n a e g a r e v A % 3 8 . 0 0 5 - n a J - 7 1 18-Jan-50 -0.06% Standard deviation of annual return 15.58% <-- =SQRT(G4)*G11S&P 500 DAILY PRICES 1950-2011 Another way to look at the data is to plot the frequency of the returns, using Excel ’ s Frequency function. The details are on the disk with the book. The plot looks approximately normally distributed, though perhaps with some left skewness: 02004006008001,0001,2001,4001,6001,8002,000 -7% -6% -5% -4% -3% -2% -1% 0% 1% 2% 3% 4% 5% 6%Frequencies of S&P 500 Daily Returns 1950-2011 680 Chapter 26 An Excel Note In the computations above: • We have used CountIfs to count the number of daily returns between –1% and + 1%. • We have used the shortcut C:C to indicate all the data in column C. • For the 62 years of data there are 251.629 average business days per year. This number is used to convert the average daily return and stan-dard deviation of daily return to annual statistics: Ⴜ Average annual return = (days per year) * (average daily return) Ⴜ Standard deviation of annual return = Sqrt(days per year) * stan- dard deviation of daily return • To compute the date on which the max and min returns occur, we use the Excel functions Match and Ⴜ MATCH(G6,$C$3:$C$15604,0) finds the row in the range C3:C15604 in which the value in G6 (the max return) occurs. Ⴜ INDEX($A$3:$A$15604,MATCH(G6,$C$3:$C$15604,0)) finds the value in row MATCH(G6,$C$3:$C$15604,0) in A3:A15604 . This is the date of the occurrence. Computing Returns and Their Distribution for a Continuous Return-Generating Process 2 We can compute the stock return over a period by taking the natural logarithm of the price relatives, defined as lnPrice Pricet t−⎛ ⎝⎜⎞⎠⎟ 1 . Furthermore, if { r 1 , r 2 , … , r M } is a series of periodic returns, we can compute the mean, variance, and standard deviation of the returns as: 2. This subsection anticipates Section 26.7. 681 Simulating Stock Prices Periodic meanMr Periodic t tM == = ↑∑ μ1 1 Use Excel functionAverage/dncurlybracketleft/dncurlybracketmid /dncurlybracketmid/horizcurlybracketext/dncurlybracketright/horizcurlybracketext, Periodic varianceMr Periodic t Periodic tM ==−−() =∑ σμ2 2 11 1 ↑ ↑ Use Excel function Stdev.s/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext Assuming that there are n periods per year, we can compute the annualized returns by Annualized mean n Annualized variance n APeriodic Periodic=∗ =∗μ σ2 nnnualized standard deviation n =σ 26.3 Lognormal Price Distributions and Geometric Diffusions In this section we get a bit more formal and describe what we mean by a lognormal price distribution. We then relate the lognormal price process to a geometric diffusion. Suppose we denote by S t the price at time t of a share of stock. The lognor- mal distribution assumes that the natural logarithm of one-plus-the-return from holding a share of stock between time t and time t + Δ t is normally distributed with mean μ and standard deviation σ . Denote the (uncertain) rate of return over an interval Δ t by /tildenosprtΔ . Then we can write SSr ttt t t+= [] ΔΔ Δ exp /tildenosp . In the lognormal distribution, we assume that the rate of return /tildenosprtΔ over a short period Δ t is normally distributed with mean μ Δ t and variance σ 2 Δ t . Another way of writing this relation is to write the stock price S t + Δ t at time t + Δ t in the following way: 682 Chapter 26 S StZ ttt t+=+ ⎡⎣⎤⎦ΔΔΔ exp μσ where Z is a standard normal variable (mean = 0, standard deviation = 1). 3 To see what this assumption means, suppose first that σ = 0. In this case we have SS ttt t+= [] Δ Δ exp μ which simply says that the stock price grows at an exponential rate with cer- tainty. In this case the stock is like a riskless bond that bears interest rate μ , continuously compounded. Now suppose that σ > 0. In this case, the lognormal assumption says that, although the tendency is for the stock price to increase, there is an uncertain element (normally distributed) that must be taken into account. The best way to think about this is in terms of a simulation. Suppose, for example, that we ’ re trying to simulate a lognormal price process in which μ = 15%, σ = 30%, and Δ t = 0.004. Suppose the price at time 0 is S 0 = 35. To simulate the possible stock prices at time Δ t we first have to pick (at random) a number Z from a standard normal distribution. 4 Suppose that this number is 0.1165. Then the stock price S Δ t at time Δ t will be SS t Z t tΔ ΔΔ =∗ + ⎡⎣⎤⎦ =∗ + ∗ ∗ ⎡⎣0 35 0 15 0 004 0 3 0 1165 0 004exp exp . * . . . .μσ ⎤ ⎤⎦=35 0985 . Of course we could have drawn a different random number. If, for example, our random number Z had been –0.9102, then we would have SS t Z t tΔ ΔΔ =∗ + ⎡⎣⎤⎦ =∗ ∗ − ∗ −() ∗0 35 0 15 0 004 0 3 0 9102 0 00exp exp . . . . .μσ 4 4 34 4214 ⎡⎣⎤⎦= . 4. See Chapter 24 for techniques (using both Excel and VBA) for generating random numbers. 3. If you know about diffusion processes, then the lognormal price process is a geometric diffusion : dS Sdt dB =+⎛ ⎝⎜⎞⎠⎟+ μσσ2 2 , where dB is a Wiener process (“white noise”): dB Z dt= , where Z is a standard random variable. 683 Simulating Stock Prices The spreadsheet uses Data|Data Analysis|Random Number Generation to generate a list of 250 standard-normal deviates. The command looks like this: 1 2 34 5 6789 1011121314151617181920AB C D E F G H I TimeNormal deviatesStock price Mean 15% 0 35.0000 <-- =B6 Sigma 30% 1 -1.697499 33.9110 <-- =F3*EXP( Mean*deltat+Sigma*SQRT(deltat)*E4) Δt 0.004 2 -1.503086 32.9774 Initial stock price 35 3 0.2900038 33.1792 4 0.7383846 33.6675 5 -0.006387 33.68366 -0.110343 33.63347 -0.055375 33.61828 -0.661842 33.21869 -0.534442 32.9032 10 1.1193083 33.629611 -1.182809 32.903012 0.7687686 33.406513 -1.071367 32.754014 0.813543 33.283415 0.8621168 33.852716 0.9543328 34.491917 -0.872592 33.9459CONCEPTUALIZING THE LOGNORMAL DISTRIBUTION 20222426283032343638 0 25 50 75 100 125 150 175 200 225 250Simulated Stock Price Path This process is illustrated in the spreadsheet picture below, where we generated a list of 250 numbers picked from a standard-normal distribution (the technical nomenclature is “standard-normal deviates”). 5 Each is an equally likely poten- tial candidate to be Z . Having picked Z for a particular time interval Δ t , the price S t + Δ t follows. 5. The number of business days in a year is approximately 250. Thus when we define Δ t = 1/250 = 0.004, we are simulating the stock price on a daily basis over the course of a year. 684 Chapter 26 To summarize: In order to simulate the growth of the stock price , when the price follows a lognormal price distribution: • Multiply Δ t (the elapsed time interval) by μ (the average rate of growth). This gives the certain portion of the return. • Take a draw Z from a random variable which is standard normal, and then multiply this draw by σΔt . This gives the uncertain portion of the return. (The square root implies that the variance of the stock ’ s return is linear in time. See below.) • Add the two results and exponentiate. The daily return is exp μσΔΔtZ t+ ⎡⎣⎤⎦ . If the price on date t is S t , then the price on date t + 1 is SS t Z ttt+=+ ⎡⎣⎤⎦ 1 exp μσΔΔ . 26.4 What Does the Lognormal Distribution Look Like? We know that the normal distribution produces a “bell curve.” What about the lognormal distribution? In the following experiment we simulate 1,000 random end-of-year stock prices. The experiment is a continuation of the experiment performed in the previous section; since we are simulating end-of-year prices, we set Δ t = 1. To perform this experiment: 685 Simulating Stock Prices Having produced 1,000 lognormal price relatives exp μσΔΔtZ t+ ⎡⎣⎤⎦ , we can use the array function Frequency( ) (this function is discussed in Chapter 33) to put them into bins. 1 2 3 4 56789 101112131415161718192021222324ABC D E FGH I Mean 22%1000 normally distributed numbersLognormal =exp(mu+sigma*Z) Bins Frequency Sigma 30% Δt 1 -0.723596258 1.0029 0.00 0 -0.447857929 1.0894 0.15 0 -0.695454219 1.0114 0.30 0 1.558892109 1.9891 0.45 0 1.484181666 1.9450 0.60 4 1.698790584 2.0743 0.75 40 0.438406005 1.4212 0.90 89 -0.406621439 1.1030 1.05 155 1.048028935 1.7064 1.20 164 -0.487628995 1.0765 1.35 155 0.594645826 1.4894 1.50 133 -0.483584017 1.0778 1.65 89 1.984662958 2.2601 1.80 51 -0.052540372 1.2266 1.95 40 0.355370275 1.3863 2.10 29 -0.6636526 1.0211 2.25 21 -0.422878657 1.0976 2.40 10 -0.905299657 0.9497 -0.720319804 1.0039-0.954453299 0.9358 1.969010555 2.2495THE LOGNORMAL HISTOGRAM Table above created with the array formula {=FREQUENCY(E:E,G4:G20)}020406080100120140160180 0.0 0.2 0.3 0.5 0.6 0.8 0.9 1.1 1.2 1.4 1.5 1.7 1.8 2.0 2.1 2.3 2.4Lognormal Frequency Distribu Ɵon • We produce a list of 1,000 normal deviates. • We use each normal deviate to produce an end-of-period stock price SS t Zt S Z t10 0 1 =∗ + ⎡⎣⎤⎦=∗ +[] = exp exp , μσ μ σ ΔΔ Δ since • We put the stock prices into bins and produce a histogram. Here ’ s what the spreadsheet for this experiment looks like: 686 Chapter 26 The VBA program that produced this output is shown below: 1 2 3456789 1011121314151617ABC D E F Runs 1,000,000 Output Mean 12% 0 Sigma 30% 0 0 Starttime 10:04:31 PM 0 Stoptime 10:04:35 PM 0 Elapsed 00:00:04 0 0 00000000SIMULATION OF LOGNORMAL RETURNS 0.000.010.010.020.020.030.03 0 50 100 150 200 250 300 350 400 450SimulaƟon of Lognormal Frequency ‘Simulating the lognormal distribution ‘Note that I take delta = 1! Sub RandomNumberSimulation() Application.ScreenUpdating = False Range(“starttime”) = Time N = Range(“runs”).Value mean = Range(“mean”) sigma = Range(“sigma”) ReDim Frequency(0 To 1000) As Integer When we do this simulation for a large number of points, the resulting density curve becomes smooth. Here, for example, is the frequency distribu-tion of 1,000,000 trials with μ = 12%, σ = 30%, and Δ t = 1: 687 Simulating Stock Prices For Index = 1 To N start: Static rand1, rand2, S1, S2, X1, X2 rand1 = 2 * Rnd - 1 rand2 = 2 * Rnd - 1 S1 = rand1 ∧ 2 + rand2 ∧ 2 If S1 > 1 Then GoTo start S2 = Sqr(-2 * Log(S1) / S1) X1 = rand1 * S2 X2 = rand2 * S2 Return1 = Exp(mean + sigma * X1) Return2 = Exp(mean + sigma * X2) Frequency(Int(Return1 / 0.01)) = _ Frequency(Int(Return1 / 0.01)) + 1 Frequency(Int(Return2 / 0.01)) = _ Frequency(Int(Return2 / 0.01)) + 1 Next Index For Index = 0 To 400 Range(“simuloutput”).Cells(Index + 1, 1) = _ Frequency(Index) / N Next Index Range(“stoptime”) = Time Range(“elapsed”) = Range(“stoptime”) - Range(“starttime”) Range(“elapsed”).NumberFormat = “hh:mm:ss” End Sub 688 Chapter 26 The routine which produces randomly distributed standard-normal deviates is contained in the eight lines following the word start ; this routine is further explained in Chapter 31. 26.5 Simulating Lognormal Price Paths We now return to the problem of simulating lognormal price paths that we started to discuss in section 26.3. We shall try to understand, through a simula-tion written in VBA, the meaning of the following sentences: “The price of a stock today is $25. The price of the stock is distributed lognormally, with an annual log mean return of 10% and an annual log standard deviation of 20%.” We want to know how the price of the stock might behave on a daily basis throughout the next year. There are an infinite number of price paths for the stock. What we will do is simulate (randomly) one of these paths. If we want another price path, we can merely rerun the simulation. There are about 250 business days in a year. Therefore the daily price move- ment of the stock between day t and day t + 1 can be simulation by setting Δ t = 1/250 = 0.004, μ = 10%, and σ = 20%. If the initial price of the stock S 0 = $25, then the price after one day will be SS t Z t Z tΔ ΔΔ =∗ + ⎡⎣⎤⎦=∗ ⋅ + ⋅ ⎡⎣⎤⎦ 0 25 0 15 0 004 0 20 0 004 exp exp . . . . μσ and the price after 2 days will be SS Z 0 008 0 004 0 15 0 004 0 20 0 004 .. exp . . . . =∗ ⋅ + ⋅ ⎡⎣⎤⎦ and so on. At each step the random normal deviate Z is the uncertain factor in the price return. Because of this uncertainty, all paths produced will be different. Here is a VBA program PricePathSimulation that reproduces a typical price path: Sub PricePathSimulation() Range(“starttime”) = Time N = Range(“runs”).Value mean = Range(“mean”) sigma = Range(“sigma”) delta_t = 1 / (2 * N) 689 Simulating Stock Prices ReDim price(0 To 2 * N) As Double price(0) = Range(“initial_price”) For Index = 1 To N start: Static rand1, rand2, S1, S2, X1, X2 rand1 = 2 * Rnd - 1 rand2 = 2 * Rnd - 1 S1 = rand1 ∧ 2 + rand2 ∧ 2 If S1 > 1 Then GoTo start S2 = Sqr(-2 * Log(S1) / S1) X1 = rand1 * S2 X2 = rand2 * S2 price(2 * Index - 1) = price(2 * Index - 2) * Exp(mean * delta_t + _ sigma * Sqr(delta_t) * X1) price(2 * Index) = price(2 * Index - 1) * Exp(mean * delta_t + _ sigma * Sqr(delta_t) * X2) Next Index For Index = 0 To 2 * N Range(“output”).Cells(Index + 1, 1) = Index Range(“output”).Cells(Index + 1, 2) = price(Index) Next Index Range(“stoptime”) = Time Range(“elapsed”) = Range(“stoptime”) - Range(“starttime”) Range(“elapsed”).NumberFormat = “hh:mm:ss” End Sub 690 Chapter 26 The output from this program looks like this on the spreadsheet: 1 2 3 456789 1011121314151617181920212223ABCDEFGH I J DayStock price 0 30.00 Runs 125 1 30.33 Initial price 30 2 31.49 Mean 20% 3 31.32 Sigma 30% 43 1.41 53 1.87 63 1.72 73 1.16 83 1.07 93 1.84 10 31.47 11 31.1812 32.1113 31.8414 32.9115 32.9516 32.1717 32.0518 31.8119 32.4020 31.50SIMULATING LOGNORMAL PRICE PATHS WITH VBA Press [Ctrl]+R to operate macro 20253035404550 0 25 50 75 100 125 150 175 200 225 250Lognormal Price Simula Ɵon Parameters: Mean = 20%, Sigma = 30% Simulating Price Paths with Norm.Inv In the spreadsheet below we do a similar simulation, using Norm.Inv to simulate the returns (see Chapter 31 for more details). Norm.Inv Rand , t, t () ( ) mD s D produces normally distributed returns with annual mean μ and annual standard deviation σ . Exp Norm.Inv Rand , t, t () ( ) ( ) mD s D is the lognormally distributed price increase: 691 Simulating Stock Prices Ten Lognormal Price Paths In the spreadsheet below we use a slightly different technique to simulate 10 lognormal price paths with the same statistical parameters. In each cell we use Norm.S.Inv(Rand( )) to draw a number from the standard normal distribution. 1 2 3 456789 101112131415161718192021222324AB C D EFG DayStock price 03 0.00 Initial price 30 1 31.18 <-- =B3*EXP(NORM.INV(RAND(),M ean*$F$6,SQRT($F$6)*Sigma)) Mean 15% 2 31.27 <-- =B4*EXP(NORM.INV(RAND(),M ean*$F$6,SQRT($F$6)*Sigma)) Sigma 40% 33 1.09 Delta_t 0.004 <-- =1/250 43 1.29 53 1.98 63 1.25 72 9.86 82 9.65 93 0.22 10 30.05 11 30.8712 30.3413 31.0714 31.1415 32.3316 32.9717 32.6518 34.3419 35.0520 34.5321 33.83SIMULATING LOGNORMAL PR ICE PATHS WITH NORM.INV Uses Exp(Norm.Inv(rand(),Mean* Δt,Sqrt( Δt)*Sigma) to simulate returns Press F9 to produce new simulation 20304050607080 0 25 50 75 100 125 150 175 200 225 250Lognormal Price Simula Ɵon Parameters: Mean = 15%, Sigma = 40% 692 Chapter 26 As you can see, on average the price of the asset increases over time, as does the variance of the returns. This accords with properties 4 and 5 of stock prices in section 26.3—we expect both the return on an asset and the uncer-tainty associated with this return to increase over time. 26.6 Technical Analysis Security analysts are divided into “fundamentalists” and “technicians.” This division has nothing to do with their outlook on the Creator of the Universe, but rather with the way they regard stock prices. Fundamentalists believe that the value of a stock is ultimately determined by underlying economic vari-ables. Thus, when a fundamentalist analyzes a company, she will look at its earnings, its debt/equity ratio, its markets, and so forth. 1 2 3456789 10111213141516171819202122232425ABCDEFGH I JK Initial pric e 30 Mu 11% Sigma 30%Delta_t 0.004 <-- =1/250 10 price paths Day Path1 Path2 Path3 Path4 Path5 Path6 Path7 Path8 Path9 Path10 0 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00 1 29.57 30.08 29.53 30.44 31.15 30.02 29.15 30.62 30.45 29.87 2 28.75 30.73 29.68 30.56 32.71 30.44 28.36 31.25 30.39 29.73 3 28.48 30.83 29.25 32.02 33.54 30.97 28.69 30.47 30.83 29.11 4 27.67 31.86 28.67 32.88 33.92 31.23 28.33 30.12 30.31 30.05 5 27.62 31.27 28.02 31.97 33.35 31.15 29.03 29.65 29.92 29.69 6 27.80 31.81 27.90 32.10 34.63 31.69 28.61 30.14 29.55 29.32 7 27.84 31.45 28.40 31.37 34.50 32.29 29.10 31.26 29.81 30.53 8 28.60 31.93 28.50 31.82 34.35 31.60 29.11 30.68 30.44 31.13 9 29.54 32.18 28.89 31.61 34.70 30.89 28.80 30.79 29.82 30.89 10 29.54 32.31 28.99 32.59 35.41 30.33 28.81 30.72 29.20 31.91 11 29.34 33.47 29.18 32.49 36.12 30.41 29.29 31.12 28.83 31.37 12 28.72 32.26 28.35 32.31 36.99 30.26 29.16 30.18 29.40 30.37 13 28.17 32.57 28.25 31.60 37.23 29.40 28.81 29.66 28.91 30.02 14 28.36 31.59 29.61 31.49 38.44 29.33 28.19 29.12 28.62 30.44 15 28.08 31.69 29.74 32.58 38.04 29.75 27.52 28.43 29.17 29.24 16 27.94 31.73 30.60 32.29 38.22 29.55 27.90 28.29 29.30 30.45SIMULATING 10 LOGNORMAL PRICE PATHS =J9*EXP(Mu*Delta_t+Sigma*SQRT(Delta_ t)*NORM.S.INV(RAND())) 1020304050607080 0 25 50 75 100 125 150 175 200 225 250SimulaƟng 10 Lognormal Price PathsThis normal deviate is then used to simulate the stock price, as illustrated below: 693 Simulating Stock Prices Technicians, in contrast, think that stock prices are determined by patterns. They believe that, by examining the pattern of past prices of a stock, they can predict (or at least make sensible statements about) the stock ’ s future prices. A technician may tell you that “we ’ re currently in a head-and-shoulders pattern,” by which he means that a graph of the stock price looks like the figure below: Lognormal Price Simulation Technical Analysis 202224262830323436 0 50 100 150 200 250 300 DayStock price ($)Head Shoulders Floor Other terms used by technicians include “floors” (there ’ s one in the graph), “rebound levels,” and “pennants.” The academic (some would say ivory tower) view of technical analysis is that it is worthless. A basic theory of financial theory says that markets effi-ciently incorporate the information known about the securities traded on them. There are several versions of this theory; one of them, the weak efficient markets hypothesis , says that at the very least all information about past prices is incorporated into the current price. The weak efficient markets hypothesis 694 Chapter 26 means that technical analysis cannot make predictions about futures prices, since technical analysis is based solely on past price information. 6 Nevertheless, a lot of people believe in technical analysis (this in itself may give technical analysis some validity). The simulations we are running in this chapter will allow us to generate a myriad of patterns which, when analyzed, will yield “good” predictions of future prices. For example, in the figure above it appears that $24 is a floor for the stock price, since it never goes any lower. A perspicacious analyst can detect a clear head-and-shoulders pattern between days 40 and 100. There appears to be a ceiling of $35. Thus a technician might predict that the stock price will stay below $37 unless it rises above that level. (If you are going to be a technician, you have to learn to say these things with a straight face.) 26.7 Calculating the Parameters of the Lognormal Distribution from Stock Prices The main purpose of this section is to show you how stock price data can be used to compute the annual mean return μ and the standard deviation of the annual return σ needed in the lognormal simulations (and—in Chapter 17—the σ needed as an input to the Black-Scholes formula). Before doing this, note that the mean and variance of the logarithm of the stock return over an interval Δ t are ES SEt Z t t S Stt t tt tln var ln+ +⎛ ⎝⎜⎞⎠⎟⎡ ⎣⎢⎤⎦⎥=+⎡⎣⎤⎦= ⎛ ⎝⎜⎞⎠⎟ Δ ΔΔΔ Δμσ μ ⎡ ⎡ ⎣⎢⎤⎦⎥=+ ⎡⎣⎤⎦= var μσ σΔΔ ΔtZ t t2 This means that both the expected log return and the variance of the log return are linear in time. Now suppose we want to estimate the lognormal μ and σ from data on historical prices. It follows that μσ=()⎡ ⎣⎤⎦= ()⎡⎣⎤⎦ ++ mean ln ,var lnS S tS S ttt ttt tΔΔ ΔΔ2 6. For a discussion of this point, see Chapter 13 of Brealey, Myers, and Allen (2005); for a more advanced treatment, see Chapters 10–11 of Copeland, Weston, and Shastri (2003). 695 Simulating Stock Prices To make things specific, the following spreadsheet gives monthly prices for a particular stock. From these prices we calculate the log returns and the annualized mean and standard deviation. Note that we have used the function Stdevp to calculate σ ; this assumes that the data represent the actual distribution. 1 2 345 6 7 8 9 10 1112 13 141516 17 1819AB C D Monthly average 1.23% <-- =AVERAGE(C10:C33) Monthly standard deviation 6.74% <-- =STDEV.S(C10:C33) Annual average, μ 14.76% <-- =12*C2 Annual standard deviation, σ 23.36% <-- =SQRT(12)*C3 DateClosing priceMonthly return 3-Oct-11 36.54 1-Nov-11 36.08 -1.27% <-- =LN(B10/B9) 1-Dec-11 33.84 -6.41% <-- =LN(B11/B10) 3-Jan-12 36.07 6.38% <-- =LN(B12/B11) 1-Feb-12 35.88 -0.53% <-- =LN(B13/B12) 1-Mar-12 32.63 -9.49% <-- =LN(B14/B13) 2-Apr-12 33.64 3.05% <-- =LN(B15/B14) 1-May-12 29.55 -12.96% 1-Jun-12 27.99 -5.42% 2-Jul-12 32.67 15.46% 1-Aug-12 32.39 -0.86%CALCULATING THE ANNUAL MEAN AND SIGMA OF RETURNS FROM MONTHLY PRICE DATA FOR HALLIBURTON CORPORATION Oct. 2011—Oct. 2013 Note that the annual average log return is 12 times the monthly average log return, whereas the annual standard deviation is 12 the monthly standard deviation. In general if the return data are generated for n periods per year, then mean n mean n annual return periodic return annual return per =⋅ = ⋅ ,σσ iiodic return Of course, this is not the only way to calculate the parameters of the log- normal distribution. We should mention at least two other methods: • We can use some other procedure to extrapolate the mean and standard deviation of future returns from the past history of returns. One example of this would be to use a moving average. 696 Chapter 26 • We can use the Black-Scholes formula to find the implied volatility : The σ of the stock ’ s log returns which fits the price of an option on the stock. This is illustrated in section 17.4. 26.8 Summary The lognormal distribution is one of the foundations of the Black-Scholes formula for option pricing discussed in the next chapter. In this chapter we have explored the meaning of lognormality for stock prices. We have shown how lognormality—the assumption that the returns on an asset are normally distributed—can be justified visually for the S&P 500 portfolio. We have also shown how to simulate price paths which are lognormally distributed. Finally, we have shown how to compute the mean and the standard deviation of a lognormal distribution from the historic returns of an asset. Exercises 1. Use Norm.S.Inv(Rand( )) to produce a simulation of monthly stock prices, as illustrated below. 7 7. The use of Norm.S.Inv for this purpose is discussed in section 24.4. 697 Simulating Stock Prices 1 2 3456 7 89 10 11 12131415 16 17181920 21 22232425E D C B A Initial stock price 12 Mean return, m 12% Return sigma, s 35% 2 1 / 1 = - - < % 8 t a t l e D MonthRandom numberStock price 2 1 01 0.3021 12.4963 <-- =C8*EXP($B$3*$B$5+$B$4*SQRT($B$5)*B9) 2 0.9810 13.9371 3 0.1774 14.3318 4- 1.142012.8982 5 0.5932 13.8325 6 0.7335 15.0463 7- 1.761512.7198 8 0.6826 13.7649 9 0.4070 14.4869 10 -0.7262 13.5974 11 -0.5846 12.9464 12 0.9055 14.3293SIMULATING A LOGNORMAL PRICE PROCESS Cell B20 contains formula =NORMSINV(RAND())8910111213141516 0123456789 1 0 1 1 1 2 2. Expand the previous exercise and use Norm.S.Inv(Rand( )) to produce a simulation of daily stock prices for 250 days (approximately 1 year of trading days). 3. Re-create the spreadsheet below. Play with the spreadsheet (each press of F9 will recom- pute the numbers) to convince yourself that higher σ means a more volatile price path for the stock. 4. Write a VBA program which reproduces the lognormal frequency distribution for an arbitrary number of runs. That is, this program should • Produce N normal random deviates. • For each deviate produce a lognormal price relative exp μσΔΔtZ t+ ⎡⎣⎤⎦ . • Classify each price relative into a set of bins running from 0, 0.1, … , 3. • Put the frequencies on the spreadsheet and produce a frequency graph such as the one in section 26.5. 5. Run a few of the lognormal price path simulations. Examine the price pattern for trends. Find one or more of the following technical patterns: support area resistance area uptrend/downtrend head and shoulders 698 Chapter 26 inverted head and shoulders double top/bottom rounded top/bottom triangle (ascending, symmetrical, descending) flag 6. The exercise file for this chapter contains daily price data for the S&P 500 index and for Abbott Laboratories for the 3 months April–June 2007. Use these data to compute the annual average, variance, and standard deviation of the logarithmic returns for the S&P and for Abbott. What is the correlation between the returns of the S&P 500 and Abbott? 7. The exercise file for this chapter gives daily returns from 1987–2012 for the Vanguard Index 500 fund (VFINX). This is a fund that tracks the S&P 500, but the returns include dividends (as opposed to ∧ GSPC, the index tracker). • Compute the overall daily return statistics: average and standard deviation. • Annualize these statistics, assuming that there are 250 days per year. • Compute the daily and annualized return statistics by year. Hint: Take a look at the functions DAverage and DStdev discussed in Chapter 33. 1 2 345 6 7 89 10 11 12131415161718 19 2021G F E D C B A Initial stock price 20Mean return, m 12%Delta t 0.0833 <-- =1/12 MonthRandom numbe 20% 40% 80% r 0 20.0000 20.0000 20.0000 1 -1.10554 18.9519 17.7800 15.6492 <-- =E8*EXP($B$3*$B$4+$E$7*SQRT($B$4)*$B9)2 -0.82712 18.2497 16.3229 13.0580 <-- =E9*EXP($B$3*$B$4+$E$7*SQRT($B$4)*$B10) 3 -1.43142 16.9710 13.9752 9.4766 <-- =E10*EXP($B$3*$B$4+$E$7*SQRT($B$4)*$B11) 4 -1.02984 16.1521 12.5330 7.54595 0.966426 17.2506 14.1534 9.52756 -1.10249 16.3494 12.5869 7.46017 -0.41797 16.1200 12.1144 6.84188 0.707861 16.9612 13.2783 8.13789 -0.70316 16.4501 12.3658 6.9876 10 0.266112 16.8727 12.8798 7.5052 11 -1.04668 16.0429 11.5283 5.9528 12 -0.87832 15.4029 10.5211 4.9088Stock price with sigma =SIMULATING A LOGNORMAL PRICE PROCESS 0510152025 0123456789 1 0 1 1 1 2Monthly prices for 3 sigmas 20% 40% 80% 2 7 Monte Carlo Simulations for Investments 27.1 Overview In this chapter we simulate the performance of portfolio investments of one or more stocks. We start with simulations of a single stock (a slight repetition of materials covered in the previous chapter). We then deal with correlation, first discussing the case of two correlated stock returns, and then generalizing to portfolios of multiple stocks, using the Cholesky decomposition (Chapter 24). We go on to discuss simulations of pension problems, where portfolio investment is used to finance future withdrawals. Finally we discuss the simu-lation of β , showing that low β stocks have higher α . Throughout this chapter we use the technique of running a Data Table on a blank cell to do sensitivity analysis. This technique, which enables us to run multiple random simulations, is described in Chapter 31. A Computational Note The spreadsheets for this chapter are very computationally intensive. We have dealt with this problem by splitting them up into separate Excel notebooks dealing with the various issues. We also advise turning off the automatic com-putation of Data Tables ( File|Options|Calculation options|Automatic except for data tables) . 27.2 Simulating Price and Returns for a Single Stock In this section we simulate portfolio investments. We start with an exercise we have already done in Chapter 26, namely, simulating stock returns over time. Suppose we start with one stock, and consider a possible future price path for 700 Chapter 27 this stock. In the spreadsheet below we simulate such a price path: At each point t , we generate a random return for the stock: rt t Zt=+μσΔΔ where Z is a standard normal deviate generated by Norm.S.Inv(rand( )) . 1 The stock price at time t is given by SS t t Ztt=+ ⎡⎣⎤⎦ −1exp μσΔΔ Below is a simulation example for monthly stock prices: 1 2 3456789 1011121314151617181920212223242526ABCDEFGH I Mean 12%Sigma 30%Delta_t 0.0833 <-- =1/12Initial pric e 12.00 Month Price 0 12.001 11.69 <-- =B8*EXP(Mean*Delta_t+Sigma *SQRT(Delta_t)*NORM.S.INV(RAND())) 2 10.51 <-- =B9*EXP(Mean*Delta_t+Sig ma*SQRT(Delta_t)*NORM.S.INV(RAND())) 39 . 9 74 11.825 14.056 14.427 13.408 11.509 10.27 10 11.5211 12.5912 15.46SIMULATING MONTHLY STOCK PRICE 678910111213141516 0123456789 1 0 1 1 1 2SimulaƟng One Year of Stock Prices (Mean,Sigma) = (12.00%,30.00%) 1. In Excel 2003 and 2007, replace this function with NormSInv(Rand( )) . 701 Monte Carlo Simulations for Investments Working with Returns Instead of Prices If we do this simulation with stock returns, we get the following: 1 2 3456789 10111213141516171819202122232425AB C D E F G H IJ K Mean 12% Sigma 30% Delta_t 0.0833 <-- =1/12Initial price 12.00 Month Price 1 -18.47% <-- =Mean*Delta_t+Sigma*SQRT(Delta_t)*NORM.S.INV(RAND()) 2 -4.28% <-- =Mean*Delta_t+Sigma*SQRT(Delta_t)*NORM.S.INV(RAND())3 -0.97% <-- =Mean*Delta_t+Sigma*SQRT(Delta_t)*NORM.S.INV(RAND())4 10.12%54 . 7 0 %6 10.59%7 12.59%85 . 9 7 %9 -3.98% 10 4.77%11 -3.81%12 -13.55% Total return 3.69% <-- =SUM(B8:B19)SIMULATING MONTHLY STOCK RETURN -20%-16%-12%-8%-4%0%4%8%12%16%20% 123456789 1 0 1 1 1 2SimulaƟng One Year of Stock Returns (Mean,Sigma) = (12.00 %,30.00%) Some Return/Price Mathematics The cumulative return for n months is nt t Z Z Z n μσΔΔ() ++ + + () 12… . This means that the expected price at the end of n months is P n = P n exp[ μ ( n Δ t ) + σ 2 ( n Δ t )/2]. For 12 months (1 year), the expected price is P n = P n exp[ μ + σ 2 /2]. Of course you will never see exactly this expected price, but if you run the simulation many times, the average ending price will be approximately P n = P n exp[ μ + σ 2 /2]. We show this in the Data Table below: 702 Chapter 27 1 2 3456789 1011121314151617181920212223242526ABCDEFGH I J K L M Mean 12% Mean price 13.7851 <-- =AVERAGE(L10:L209) Sigma 30% Max 26.3859 <-- =MAX(L10:L34) Delta_t 0.0833 <-- =1/12 Min 5.5119 <-- =MIN(L10:L34) Initial pric e 12.00 Expected ending 14.1527 <-- =B5*EXP(Mean+Sigma^2/2) Month Price 0 12.001 12.11 <-- =B8*EXP(Mean*Delta_t+Sigma*SQRT(Delta_t)*NORM.S.INV(RAND())) 10.4890 <-- =B20, data table header 2 11.92 <-- =B9*EXP(Mean*Delta_t+Sigma*SQRT(Delta_t)*NORM.S.INV(RAND())) 1 15.8501 3 10.79 29 .6356 4 10.37 3 14.8198 5 11.20 49 .1409 6 11.45 5 11.1895 79 . 7 5 6 11.5435 89 . 7 1 7 14.1382 9 10.65 8 14.5613 10 9.82 91 3 . 7 2 5 7 11 9.38 10 16.7483 12 10.49 11 26.385912 16.814113 18.583714 8.6738 15 5.5119 16 16.523717 8.9945SIMULATING A SINGLE STOCK: PRICES 200 simulations of ending price 678910111213 0123456789 1 0 1 1 1 2SimulaƟng One Year of Stock Prices (Mean,Sigma) = (12.00%,30.00%) 2. Were we to increase the number of simulations to 200, the average (cell L2) would be closer to the expected (cell L5). A statistician would refer to this as a “small sample problem.” We prefer to note that 25 simulations of a series of annual returns is—in plain English—the simulation of 25 years of annual returns. This is a lot! Our interpretation: Finance is full of small sample prob-lems, despite the large amount of data available. We return to this topic in section 27.7, where we simulate stock betas. In the above example the Data Table simulates the ending price (cell B20). The average ending price for 25 simulations is close to the expected ending price (cell L5). 2 27.3 Portfolio of Two Stocks We extend the exercise of the previous section to two stocks with correlation ρ . To simplify matters we will work only in returns, not in prices. Theory We recall from Chapter 24 that two standard normal deviates Z 1 and Z 2 are correlated with correlation ρ if ZZ Z 212 3 1 =+ −ρρ 703 Monte Carlo Simulations for Investments where Z 1 and Z 3 are both standard normal deviates (produced with the Excel function Norm.S.Inv(Rand( )) . We simulate this below: 1 2 3 4 5 6789 101112131415161718192021222324AB C D E F G HI Correlation -0.4 Z1 Z2 -0.4937 -2.0283 <-- =$B$2*A5+S QRT(1-$B$2)*NORM.S.INV(RAND()) -0.8308 2.3217-0.6305 1.3517-0.6152 0.7190-0.0759 0.6951 0.4551 1.37960.1376 0.1976 -1.4275 -0.0342 0.5033 0.0785 -1.8080 1.6569-0.2900 1.0408-0.2760 0.7029 2.1168 -0.1379 -0.9016 2.0010-0.3151 0.7570 0.2530 -1.31381.4080 -2.9850 -0.7758 -0.4706 2.1012 -0.80901.4077 -1.8207SIMULATING TWO CORRELATED NORMAL DEVIATES y = -0.7141x + 0.1631 R² = 0.3007 -4.00-3.00-2.00-1.000.001.002.003.00 -2.50 -2.00 -1.50 -1.00 -0.50 0.00 0.50 1.00 1.50 2.00 2.50Correlated Standard Normal Deviates CorrelaƟon = -0.40 The simulation shows the regression of Z 2 on Z 1 . The anticipated regression intercept should be 0, the anticipated regression slope should be the correlation ρ , and the R 2 should be ρ 2 . But because we are simulating random numbers, this will never exactly happen. However, if we run this experiment many times (using Data Table on blank cell, section 31.7), we see that we get the approxi- mate result: 704 Chapter 27 2 3 4 5 67 8 9 101112 13 14 15 1617 18 19 20 2122 23 2425 26 27 28 2930 31O N M L K J Correlation Intercept Slope R-squared Average -0.304 0.017 -0.397 0.128 <-- =AVERAGE(N12:N31) Anticipated -0.400 0.000 -0.400 0.160 <-- =B2^2 Max 0.091 0.518 0.102 0.450 <-- =MAX(N12:N31) Min -0.670 -0.397 -0.847 0.006 <-- =MIN(N12:N31) Simulation Correlation Intercept Slope R-squared -0.5773 0.2955 -0.6293 0.3333 <-- =RSQ(B5:B24,A5:A24), data table header 1 -0.2596 0.2801 -0.3636 0.0674 2 -0.2471 -0.1470 -0.3136 0.0610 3 -0.4407 0.0193 -0.4452 0.1942 4 -0.5177 0.1862 -0.4032 0.2681 5 -0.3139 0.2211 -0.7097 0.09866 -0.1501 -0.2452 -0.1400 0.0225 7 -0.3100 -0.2214 -0.3576 0.0961 8 -0.2983 0.2574 -0.2799 0.0890 9 -0.3279 0.5184 -0.3672 0.1075 10 -0.3348 -0.2343 -0.7448 0.1121 11 -0.6705 -0.3920 -0.8469 0.4496 12 -0.4252 -0.1556 -0.5615 0.1808 13 -0.3421 0.2272 -0.3944 0.117114 -0.1578 0.0280 -0.2270 0.0249 15 -0.2170 0.0656 -0.2197 0.0471 16 0.0796 0.0408 0.1024 0.0063 17 -0.5528 0.3799 -0.8223 0.3055 18 -0.5310 0.0705 -0.6794 0.282019 0.0912 -0.3967 0.0966 0.0083 20 -0.1468 -0.1720 -0.2556 0.0215Data table statistics Data table: 20 simulations 2 3 4 5 6 7O N M L K J Correlation Intercept Slope R-squared Average -0.322 0.034 -0.417 0.146 <-- =AVERAGE(N12:N211) Anticipated -0.400 0.000 -0.400 0.160 <-- =B2^2 Max 0.270 0.681 0.446 0.561 <-- =MAX(N12:N211) Min -0.749 -0.782 -1.076 0.000 <-- =MIN(N12:N211)Data table statistics, 200 simulations If we run many more iterations of this simulation, we get results closer to the anticipated: 705 Monte Carlo Simulations for Investments Simulating Correlated Stock Returns Below we simulate two correlated normal standard deviates Z 1 and Z 2 . We then use these deviates to compute the returns of the two stocks in months 1, 2, … , 12. 1 2 345678 9 10 111213141516171819202122232425262728293031323334353637AB C D E F G Stock1 Stock2 Mean 12% 15% Sigma 22% 30% Correlation 0.5 Delta_t 0.0833 <-- =1/12 Month Return1 Return2 Z1 Z2 1 -10.34% -0.36% -1.3095 -0.1863 2 -1.65% 6.79% -0.3064 0.6393 3 5.54% 0.00% 0.5239 -0.1443 4 3.66% -2.97% 0.3073 -0.4876 5 5.21% 9.83% 0.4866 0.9904 6 10.50% 6.25% 1.0965 0.5768 7 4.44% 2.52% 0.3975 0.1464 8 -5.20% 2.57% -0.7160 0.1524 9 -2.23% 2.80% -0.3734 0.1792 10 5.29% -5.05% 0.4955 -0.7274 11 8.38% 4.18% 0.8522 0.3386 12 -1.22% 3.93% -0.2560 0.3100Simulating portfolio returns <-- =mean2*Delta_t+sigma2*SQRT(Delta_t)*F10=corr*E10+SQRT(1- corr^2)*NORM.S.INV(RAND())PORTFOLIO OF 2 STOCKS: RETURNS -15%-10%-5%0%5%10%15% 123456789 1 0 1 1 1 2Monthly Returns of Two Correlated Stocks Correla/g415on = 0.50 Return1 Return2 706 Chapter 27 In a portfolio context: 42 43 44 45 46 47 48 49 50 51 52 53D C B A Initial wealth 1,000 Proportion of stock1 25% Initial investment Stock1 250.00 <-- =B44*B43 Stock2 750.00 <-- =(1-B44)*B43 Simulated ending value 892.69 <-- =B46*EXP(SUM(B10:B21))+B47*EXP(SUM(C10:C21)) Expected return 14.25% <-- =B44*mean1+(1-B44)*mean2 Actual return -11.35% <-- =LN(B48/B43) Sigma of return 25.70% <-- =SQRT(B44^2*sigma1^2+(1-B44)^2*sigma2^2+2*B44*(1- B44)*corr*sigma1*sigma2)Portfolio Computations 27.4 Adding a Risk-Free Asset We add a risk-free asset to the exercise of the previous section, simulating the performance of an investment in a portfolio of the two risky stocks and the risk free. Cells B13 and B14 below give the risky portfolio expected annual return and annual sigma. Cells B19 and B20 show the expected return and sigma for a portfolio invested 40% in the risky and 60% in the risk-free asset: 707 Monte Carlo Simulations for Investments 1 2 34567 8 9 10 1112131415161718192021 22 23 2425262728293031323334353637383940414243444546AB C D E F G Stock1 Stock2 Mean 12% 22% <-- cell names: mean1, mean2 Sigma 10% 15% <-- cell names: sigma1, sigma1 Correlation 0.2 <-- cell name: corr Delta_t 0.0833 <-- =1/12, cell name: delta_t Risk free rate, r f 3% <-- cell name: rf Risky portfolio Stock1 30% <-- cell name: prop1 Stock2 70% <-- =1-prop1 Expected annual return 19.00% <-- =prop1*mean1+(1-prop1)*mean2 Sigma annual return 11.48% Investment In risky portfolio 40% <-- cell name: prop In risk free 60% <-- =1-prop Expected return 9.40% <-- =prop*B13+(1-prop)*rf Sigma return 4.59% <-- =prop*B14 MonthPortfolio return Z1 Z2 1 1.72% -0.403 0.884169 2 1.35% 0.335756 0.367992 3 1.73% -0.733 0.991814 4 -1.41% 1.297981 -2.18324 5 -0.12% -0.51652 -0.59738 6 0.30% -1.49158 0.031419 7 2.69% 0.787621 1.349174 8 0.00% -1.33656 -0.26242 9 2.72% 0.954727 1.325199 10 0.43% -0.04545 -0.27502 11 -0.37% -0.14668 -0.9101 12 1.96% 1.653972 0.501086 Annual return Simulated 11.01% <-- =SUM(B23:B34) Expected 9.40% <-- =prop*(prop1*me an1+(1-prop1)*mean2)+(1-prop)*rf Sigma of annualized return Simulated 4.50% <-- =SQRT(12)*STDEV.S(B23:B34) Expected 4.59% <-- =B20 FormulasCell B23PORTFOLIO OF 2 STOCKS AND RISK-FREE =prop*(prop1*(mean1*delta_t+sigma1*SQRT(delta_t)*D23)+(1-prop1)*(mean2*delta_t+sigma2*SQRT( delta_t)*E23))+(1-prop)*rf*delta_t<-- =SQRT(prop1^2*sigma1^2+(1- prop1)^2*sigma2^2+2*prop1*(1-prop1)*corr*sigma1*sigma2) 708 Chapter 27 27.5 Multiple Stock Portfolios So far we ’ ve simulated the performance of a two-stock portfolio. When we turn to multiple stocks, we need to make use of the Cholesky decomposition (see section 24.7). We remind you how the Cholesky decomposition works: We want to create a set of normal deviates that has variance-covariance struc-ture S : S N N NN N N=⎡ ⎣⎢ ⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥σσ σ σσ σ σσ σ11 12 1 21 22 2 12 As explained in Chapter 24, the steps in doing this are as follows: 1. Create a lower-triangular Cholesky decomposition of S . We denote this matrix by L and use the VBA function Cholesky on the disk with this book to compute the matrix. 2. Create a column vector of N standard normal deviates. We use the Excel function Norm.S.Inv(Rand( )) . 3. Multiply L times the column vector of standard normal deviates. 4. The result is a set of correlated standard normal variates. Example: Standard Normal Deviates with Given Correlation Structure Here ’ s an example. We define a VBA function CorrNormal that takes as its argument the desired variance-covariance matrix. Below we use this function to simulate 3 years of monthly returns with means specified in cells B3:D3 and variance-covariance in the cells below the means. 709 Monte Carlo Simulations for Investments 1 2 3 4 5678 9 10 11 12 13 1415 16 17 18 19 20 2122 23 24 2526 27 28AB C D E FG H I J K Month % 5 6 . 9 3 1 % 0 0 . 1 % 0 0 . 2 % 0 0 . 3 % 0 0 . 4 -14.76% 7.37% -31.14% 2 35.08% 24.91% 48.30% 5.50% 3 59.32% -21.07% 55.70% 49.49% % 2 6 . 8 1 % 2 4 . 2 2 % 0 5 . 1 2 % 8 9 . 2 3 4 0 0 0 . 0 0 2 0 . 0 0 3 0 . 0 0 0 4 . 0 0.030 0.300 0.000 - % 1 8 . 1 6 % 6 6 . 1 2 % 8 4 . 8 0 1 5 0 6 0 . 0 -18.11% % 1 5 . 9 6 0 3 0 . 0 0 0 2 . 0 0 0 0 . 0 0 0 2 . 0 -61.34% -30.38% -8.12% 0.000 - % 9 9 . 8 1 % 4 9 . 7 2 7 0 0 1 . 0 0 3 0 . 0 0 6 0 . 0 -14.77% -7.86% 8 -111.90% 4.41% -45.30% 28.64%9 23.50% -23.32% 30.42% 16.33% Count 36 <-- 01 ) G : G ( T N U O C = -34.89% -19.63% 10.32% 33.48% 11 -6.82% 64.53% -103.76% -23.03%12 -85.11% -19.16% -84.99% -3.20% 0.0683 0.0089 0.0092 -0.0410 <-- =AVERAGE(J:J) 13 15.16% -4.81% -1.82% -9.40% 0.0400 0.0300 0.0200 0.0100 <-- Theore/g415cal mean 14 -106.19% 14.36% -84.03% -65.22% 15 82.83% 37.21% 31.91% -14.62% 16 26.93% -108.92% 18.73% 37.40% 0.3293 0.2128 0.1769 0.0643 <-- =VAR.S(J:J) 17 45.52% -22.53% 14.80% -8.79% 0.4000 0.3000 0.2000 0.1000 <-- Theore/g415cal variance 18 - 35.01% 78.25% -51.82% -42.48% 19 45.79% -34.86% 29.89% 22.20% 20 56.55% -6.03% -35.33% -29.66% 21 57.91% -40.91% 11.52% 26.60% 0.0799 0.0861 -0.1291 -0.0332 <-- {=A6:D9-varcovar(G:J)} 22 -9.86% 33.99% 0.02% -43.59% 3 2 5 4 0 0 . 0 5 0 6 0 . 0 1 3 9 0 . 0 1 6 8 0 . 0 -20.68% -13.32% 0.28% -10.90% 0.0509 0.0605 0.0280 - 42 4 5 1 0 . 0 -54.97% 58.29% 5.19% -42.82% -0.0332 0.0045 - %2 8 . 6 6 5 2 5 7 3 0 . 0 4 5 1 0 . 0 -5.66% 75.10% -2.78% 26 -107.69% 21.00% -11.28% -23.31%Sta/g415s/g415cs Data average vs theore/g415cal mean Data variance vs theore/g415cal variance Sample variance-covariance minus the variance-covariance matrixMonthly means <-- {=corrnormal($A$6:$D$9)+ $A$3:$D$3}NORMAL DEVIATES WITH DESIRED MEANS USING THE CHOLESKY DECOMPOSITION 3 years of simulated monthly data Variance-covariance matrix3 years of simulated monthly returns 1 2 3 4 5 6 789 10 1112 13 14 15 16 17 18 19 20 2122 23 24 25 26 27AB C D E FG H I J K Month % 6 4 . 4 3 % 2 9 . 4 5 % 7 3 . 0 3 1 % 0 0 . 1 % 0 0 . 2 % 0 0 . 3 % 0 0 . 4 -31.99% 2 -39.31% -55.10% -19.66% 42.11% 3 -12.04% -106.92% 38.44% 33.99% 4 0 0 0 . 0 0 2 0 . 0 0 3 0 . 0 0 0 4 . 0 -26.48% -45.08% -23.79% 56.90% 0.030 0.300 0.000 - 5 0 6 0 . 0 -4.61% 14.74% 3.30% 23.00% % 7 9 . 3 7 6 0 3 0 . 0 0 0 2 . 0 0 0 0 . 0 0 0 2 . 0 -30.09% 50.34% -3.26% 0.000 - 7 0 0 1 . 0 0 3 0 . 0 0 6 0 . 0 -118.50% -97.71% -20.31% 7.28% 8- 1 8 . 9 6 % - 4 . 7 5 % - 3 9 . 3 5 % - 9 . 6 5 %9 -44.79% 195.97% 7.85% 13.42% Count 500 <-- %3 9 . 3 5 0 1 ) G : G ( T N U O C = -37.18% 12.84% -4.62% 11 -73.29% -7.69% -28.67% -40.54% 12 159.96% -23.86% 103.38% 50.33% 0.0261 -0.0077 0.0318 0.0138 <-- =AVERAGE(J:J) 13 111.39% -27.33% 64.59% 1.55% 0.0400 0.0300 0.0200 0.0100 <-- Theore/g415cal mean 14 21.98% 29.09% 38.99% 28.19% 15 -31.05% 14.37% 27.04% 22.06% 16 -30.86% 28.08% -8.95% 54.89% 0.3189 0.3375 0.1912 0.1034 <-- =VAR.S(J:J) 17 -43.76% 68.92% -7.72% -31.58% 0.4000 0.3000 0.2000 0.1000 <-- Theore/g415cal variance 18 -130.46% 60.87% -79.26% -58.12% 19 -46.48% 75.66% 25.41% 26.95%20 59.00% 42.60% -3.99% -0.27% 21 -6.62% 101.89% -36.76% -25.29% 0.0817 0.0379 -0.1485 -0.0129 <-- {=A6:D9-varcovar(G:J)} 22 23.67% 26.17% -1.09% -21.08% 0.0379 - 32 9 6 1 0 . 0 0 6 2 0 . 0 8 6 3 0 . 0 -23.83% -30.14% 42.18% 44.61% 0.0315 0.0260 0.0092 - 42 7 5 0 0 . 0 -53.00% 24.61% 9.55% 15.60% -0.0129 0.0169 -0.0057 - %2 4 . 5 5 2 2 3 0 0 . 0 -48.75% 7.17% 46.58%Data average vs theore/g415cal mean Data variance vs theore/g415cal variance Sample variance-covariance minus the variance-covariance matrixNORMAL DEVIATES WITH DESIRED MEANS USING THE CHOLESKY DECOMPOSITION 500 months of simulated monthly data Monthly 0 0 5 s n a e m months of simulated monthly returns <-- {=corrnormal($A$6:$D$9)+ $A$3:$D$3} Variance-covariance matrix Sta/g415s/g415cs If we rerun this simulation for 500 months, the simulation more closely corresponds to the priors: 710 Chapter 27 The VBA Function CorrNormal The VBA function that creates the correlated normal deviates is a combination of two functions. The second of these functions URandomlist creates a column vector of standard normal deviates. These deviates are then multiplied times the Cholesky matrix. Function CorrNormal(mat As Range) As Variant CorrNormal = Application.Transpose(Application. MMult(Cholesky(mat), _ urandomlist(mat))) End Function Function urandomlist(mat As Range) As Variant Application.Volatile Dim vector() As Double numCols = mat.Columns.Count ReDim vector(numCols - 1, 1) For i = 1 To numCols vector(i - 1, 0) = Application.Norm_S_ Inv(Rnd) Next i urandomlist = vector End Function 27.6 Simulating Savings for Pensions We return to a problem that we discussed in Chapter 1. There we discussed the case of a potential pensioner who wants to save for 5 years in order to enable eight subsequent withdrawals of 30,000. The question we discussed in section 1.6 is the calibration of the annual deposit so that the pension fund (with accumulated 8% annual interest) would be completely depleted after 8 years. 711 Monte Carlo Simulations for Investments 1 2 3 4 5 6 7 89 101112 13 1415 16 1718 19 20 21AB C D E F % 8 t s e r e t n I Annual deposit 29,386.55 Annual retirement withdrawal 30,000.00 =$B$2*(C7+B7) YearAccount balance, beginning of yearDeposit at beginning of yearInterest earned during yearTotal in account, end year 7 B + 7 C + 7 D = - - < 8 4 . 7 3 7 , 1 3 2 9 . 0 5 3 , 2 5 5 . 6 8 3 , 9 2 0 0 . 0 1 2 31,737.48 29,386.55 4,889.92 66,013.95 3 66,013.95 29,386.55 7,632.04 103,032.54 4 103,032.54 29,386.55 10,593.53 143,012.62 5 143,012.62 29,386.55 13,791.93 186,191.10 6 186,191.10 -30,000.00 12,495.29 168,686.39 7 168,686.39 -30,000.00 11,094.91 149,781.30 8 149,781.30 -30,000.00 9,582.50 129,363.81 9 129,363.81 -30,000.00 7,949.10 107,312.91 10 107,312.91 -30,000.00 6,185.03 83,497.94 11 83,497.94 -30,000.00 4,279.84 57,777.78 12 57,777.78 -30,000.00 2,222.22 30,000.00 13 30,000.00 -30,000.00 0.00 0.00A RETIREMENT PROBLEM, Section 1.6 Note : This problem has 5 deposits and 8 annual withdrawals, all made at the beginning of the year. The beginning of year 13 is the last year of the retirement plan; if the annual deposit is correctly computed, the balance at the beginning of year 13 after the withdrawal should be zero. Here ’ s the answer to this problem: In this section we discuss a Monte Carlo variation of this problem. As in Chapter 1, the future pensioner discovers that she has no pension savings and desires to make deposits to fund eight subsequent withdrawals. In this version, however, the savings are invested in a risky portfolio having mean return of 12% and return sigma of 18%. We are curious to see whether a specific level of annual deposits can fund the future planned withdrawals of 30,000 per year. To do this, we examine the bequest—the amount left in the pension plan at the end of year 13. Several things are clear: • Except for the case where 100% of the savings are invested in the risk-free asset, there is no longer any certainty about the savings or the bequest. • On average, the larger the proportion in the risky asset, the greater will be the average bequest. 712 Chapter 27 Here ’ s one simulation: 1 2 3456789 1011 12 13141516171819202122232425E D C B A f r : e m a n l l e C - - < % 8 e t a r e e r f - k s i R Risky asset n a e m : e m a n l l e C - - < % 2 1 n a e M a m g i s : e m a n l l e C - - < % 8 1 a m g i S Annual deposit 30,000 <-- Years 1-5 Investment policy p o r p : e m a n l l e C - - < % 0 3 e e r f - k s i R p o r p - 1 = - - < % 0 7 t e s s a y k s i R Annual retirement withdrawal 30,000 <-- Years 6-13 YearAccount balance, beginning of yearDeposit at beginning of yearIn account at end of year 9 4 6 , 1 3 0 0 0 , 0 3 0 1 2 31,649 30,000 69,767 3 69,767 30,000 97,717 4 97,717 30,000 139,754 5 139,754 30,000 158,609 6 158,609 -30,000 149,860 7 149,860 -30,000 131,279 8 131,279 -30,000 109,145 9 109,145 -30,000 94,169 10 94,169 -30,000 74,561 11 74,561 -30,000 57,691 12 57,691 -30,000 30,722 13 30,722 -30,000 692A RETIREMENT PROBLEM <-- =(B13+C13)*(prop*EXP(rf)+(1- prop)*EXP((mean+sigma*NORM.S.INV(RAND()) ))) 713 Monte Carlo Simulations for Investments 3 4567 8 9 1011 12 13 141516 17 18192021 22 23 24GH I Average 130,469 <-- =AVERAGE(H15:H24) Max 613,335 <-- =MAX(H15:H24) Min -36,264 <-- =MIN(H15:H24) Sigma 193,818 <-- =STDEV.S(H15:H24) % positive bequests 90% <-- =COUNTIF(H15:H24,\">0\")/10 Simulation Bequest 387,776 <-- =D25, data table header 1 613,335 2 79,823 3 41,689 4 3,386 5 67,000 6 319,044 7 94,766 8 59,295 9 -36,264 10 62,616Statistics for data table Data table: Simulating the bequest To get a feel for the uncertainty, we run our standard Data Table on a blank cell: The average bequest for this specific series of 10 simulations is 130,469 but with considerable variation. Since the simulation is stochastic, each time you open the spreadsheet, you will see different numbers. In 90% of the cases we can count on full funding of the pension (in the sense that the bequest is posi-tive). If we simulate the results varying the percentage invested in the risk-free asset, we get the following: 714 Chapter 27 2 3 456789 1011 12 13 1415161718 19 2021222324GH I J K L M 100% 80% 60% 40% 20% 0% Average 14,147 31,980 82,341 93,310 126,400 160,835 Max 14,147 67,016 269,055 165,297 334,284 890,635 Min 14,147 -12,565 -64,989 -37,721 -48,516 -189,115 5 8 8 , 8 0 3 8 5 5 , 1 2 1 7 1 6 , 2 7 6 8 5 , 4 9 2 3 6 , 5 2 0 a m g i S % positive bequests 100% 90% 70% 90% 90% 70% Simulation -88,472 100% 80% 60% 40% 20% 0% 1 14,147 47,839 53,527 165,297 249,223 -56,263 2 14,147 17,554 130,848 132,197 15,894 216,808 3 14,147 -12,565 141,673 160,402 138,809 -189,115 4 14,147 51,438 -64,989 154,817 71,843 23,543 5 14,147 12,938 93,901 10,521 248,790 196,818 6 14,147 67,016 -8,049 14,001 334,284 403,491 7 14,147 47,580 92,645 98,430 -48,516 890,635 8 14,147 8,801 119,013 -37,721 116,709 172,262 9 14,147 56,973 -4,217 95,632 9,463 26,016 10 14,147 22,223 269,055 139,523 127,503 -75,851Percentage in risk-freeData table: Bequest as function of % in risk-free (columns)Percentage in risk-freeData table statistics The chart below summarizes these simulations: -200,000-100,0000100,000200,000300,000400,000500,000600,000700,000 0% 20% 40% 60% 80% 100%Bequest Sta/g415s/g415cs Varying the Percentage in Risk-Free (x-axis) Average Max Min Sigma 715 Monte Carlo Simulations for Investments 2 3456AB C D E Mean Sigma Stock i 6% 22% Market 10% 15% Correlation(i,M) 0.3000Beta i 0.4400 <-- =rho*sigma/sigma_market 27.7 Beta and Return In this section we simulate a typical beta calculation. We assume that we know the “actual” beta, in the sense that we know the σ M , σ i , and the correlation ρ between stock i and the market. We then simulate this beta by creating returns drawn from an appropriate distribution. We use this example to illustrate how far the actual beta, derived from data, can be from the theoretical beta. Recall from Chapter 11 that for an asset i , β ι is defined as follows: βiiM MCov r r Var r=() (), In the simulations below, we use two equivalent expressions for β ι . First, using the correlation ρ between i and M , we can write β ι as: βρσ σ σρσ σiiM MiM Mi MCov r r Var r=() ()==, 2 Second, if we have time-series data { r it , r Mt } for the returns on the stock and the market, then we can estimate β ι by running the regression: rrit i i Mt=+αβ If the data is correlated with correlation ρ , then we expect α ββρσ σρ iM i i ii MEr Er R=()− () ==,,22 In capital market calculations β ι is typically calculated for monthly returns over a period of 3 to 5 years. Below replicate this procedure by simulating the 60 correlated returns of two assets. We will call the first asset “ i ” and the second asset “ M .” We start with some basic data for i and M : 716 Chapter 27 1 2 345 6 7 8 9 10 11 12 13 14 151617 18 19 20 21 72 737475 76 777879 80 8182 83 8485AB C D E F Mean Sigma Stock i 6% 22% Market 10% 15% Correlation(i,M) 0.3000 Anticipated αi 0.0160 <-- =mu_i-B8*mu_m Anticipated βi 0.4400 <-- =rho*sigma_i/sigma_m Anticipated R20.0900 <-- =rho^2 Alpha 0.0086 <-- =INTERCEPT(E20:E79,F20:F79) Slope 0.4390 <-- =SLOPE(E20:E79,F20:F79) R-squared 0.0827 <-- =RSQ(E20:E79,F20:F79) Simulation s n r u t e R l a m r o N h t n o M Z1 Z2 Stock Market 1 0.6168 -1.4645 9.92% 3.66% 2 0.9019 1.1497 11.73% 14.98% 53 1.1386 -2.1888 13.23% 0.52% 54 -0.4403 1.0415 3.20% 14.51% 55 -1.5644 -1.4113 -3.94% 3.89% 56 1.2524 0.6107 13.95% 12.64% 57 1.3170 0.7016 14.36% 13.04% 58 -1.3743 -1.3212 -2.73% 4.28% 59 -2.2023 0.2114 -7.99% 10.92% 60 -0.1458 -1.1017 5.07% 5.23% Formulas Cell B20:=NORM.S.INV(RAND()) Cell C20:=rho*B20+SQRT(1-rho^2)*NORM.S.INV(RAND()) Cell E20:=mu_i+sigma_i*SQRT(1/12)*B20Cell F20:=mu_m+sigma_m*SQRT(1/12)*C20Regress r i on r MSIMULATING BETA AND ALPHA We now simulate our data: The formulas used in the spreadsheet: • Z 1 = Norm.S.Inv(Rand( )) . As discussed in Chapter 24 this creates a stan- dard normal deviate. • ZZ2121 =∗ + () () ∗− ρρ norm s inv rand .. . As discussed in Chapter 24 the standard normal deviate Z 2 has correlation ρ with Z 1 . • The column for the stock returns is created by rstock= Z stock stock+∗ μσ 11 2 1 / . 717 Monte Carlo Simulations for Investments 7 8 9 10 11 12 13 1415AB C D E F Anticipated αi 0.0160 <-- =mu_i-B8*mu_m Anticipated βi 0.4400 <-- =rho*sigma_i/sigma_m Anticipated R20.0900 <-- =rho^2 Alpha -0.0037 <-- =INTERCEPT(E20:E79,F20:F79) Slope 0.5942 <-- =SLOPE(E20:E79,F20:F79) R-squared 0.1499 <-- =RSQ(E20:E79,F20:F79)Regress r i on r M7 8 9 10 11 12 13 14 15AB C D E F Anticipated αi 0.0160 <-- =mu_i-B8*mu_m Anticipated βi 0.4400 <-- =rho*sigma_i/sigma_m Anticipated R20.0900 <-- =rho^2 Alpha 0.0086 <-- =INTERCEPT(E20:E79,F20:F79) Slope 0.4390 <-- =SLOPE(E20:E79,F20:F79) R-squared 0.0827 <-- =RSQ(E20:E79,F20:F79)Regress r i on r M Rerunning the simulation shows that not all results will be close to the desired. Below, for example, is another set of simulations in which the Monte Carlo β ι is quite distant from the anticipated β ι : • The column for the market returns is created by rmarket = Z market market +∗ μσ 11 2 2 / . The result is that the market and stock returns are correlated with correlation ρ . We now run a standard first-pass regress of r i on r M . For the simulations discussed above, the results of the Monte Carlo simulation are not far from the theoretical results: 718 Chapter 27 If we repeat our experiment 50 times, we see that the computed β ι exhibits considerable variability: 0.000.100.200.300.400.500.600.700.800.901.00 1 3 5 7 9 1 11 31 51 71 92 12 32 52 72 93 13 33 53 73 94 14 34 54 74 950 Simulated Betas Simulated beta Theore/g415cal beta Are Beta and Alpha Related? There is a growing literature showing that low beta stocks have high alphas and vice versa. 3 We show that this is true in our Monte Carlo simulation. In the spreadsheet below we run a Data Table showing beta and alpha as func- tions of σ i . 4 3. For references, see Frazzini-Pedersen (2011), Cremers-Petajisto-Zitzewitz (2010), Hong-Sraer (2012), and Nardin-Haugen (2012). 4. Of course, the higher the σ I , the higher will be β ι . 719 Monte Carlo Simulations for Investments Here are two more variations. In the first variation we have assumed a much higher σ for the market portfolio: y = -0.0997x + 0.0638 R² = 0.5348 -0.14-0.12-0.10-0.08-0.06-0.04-0.020.000.020.040.060.08 0.0 0.2 0.4 0.6 0.8 1.0 1.2 1.4AlphaBetaAlpha versus Beta: Parameters: (sigma_M,rho): (40%, 0.4)4 56 7 8 9 10 11 12 13 1415161718 19 20 2122232425HIJ K L M N O Intercept 0.0647 <-- =INTE RCEPT(J10:J20,I10:I20) Slope -0.0978 <-- =SLO PE(J10:J20, I10:I20) Rsq 0.9826 <-- =RSQ(J10:J20,I10:I20) Sigma_i Beta_i Alpha_i 0.5706 0.0106 <-- =B13, data table header 0% 0.000 0.060 20% 0.584 -0.004 30% 1.068 -0.033 40% 0.944 -0.029 50% 1.354 -0.070 60% 1.841 -0.086 70% 2.487 -0.200 80% 2.813 -0.230 90% 2.359 -0.168 100% 1.722 -0.083 110% 4.252 -0.345y = -0.0978x + 0.0647 R² = 0.9826 -0.40-0.35-0.30-0.25-0.20-0.15-0.10-0.050.000.050.10 0.0 0.5 1.0 1.5 2.0 2.5 3.0 3.5AlphaBetaAlpha versus Beta: Parameters: (sigma_M,rho): (15%, 0.4) 720 Chapter 27 In the second variation, we change the correlation between the market portfolio and stock i : y = -0.101x + 0.0673 R² = 0.9349 -0.10-0.08-0.06-0.04-0.020.000.020.040.060.080.10 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0AlphaBetaAlpha versus Beta: Parameters: (sigma_M,rho): (15%, 0.2) 27.8 Summary Monte Carlo techniques give insight into investment problems that goes beyond the standard calculations of mean and standard deviation of returns. In this chapter we examine some common cases of asset management: the return on a single stock, on a portfolio of risky assets with a given correlations structure, a standard savings/pension problem with an uncertain investment component, and the computation of asset betas. Exercises 1. Consider a portfolio of two stocks whose statistical parameters are given below. • Stock A: Annual mean return = 15%, annual standard deviation of return = 30%. • Stock B: μ = 8%, σ = 15%. • Correlation(A,B) = ρ = 0.3 721 Monte Carlo Simulations for Investments 2. Reconsider the problem above. Assume that the risk-free rate is 4% and that the investor (still buy-and-hold) invests in a portfolio composed of 50% risk-free and 50% invested in the 60/40 portfolio of A and B. Compare the theoretical to the simulated returns. 3. The previous example assumes that the risk-free rate is constant. An alternative, perhaps more plausible, model might be to assume that the risk-free rate is mean reverting, with a long-run mean. Under this assumption, if the current rate is above the long-run mean, the next period rate will tend downward, and vice versa. One such model is the Ornstein-Uhlenbeck process: rr r t t Ztt t =+ − () + −− ↑11ϕμ σ ΔΔ Innovation in the rate/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext Simulate this process over 12 months: An investor with a buy-and-hold strategy buys a portfolio composed of 60% A and 40% B and holds it for 20 years. Simulate the annual returns on the portfolio. A suggested template is given below. 1 2 3 4 56789 1011 12 13141516AB C D E F G H StockA StockB Mean 15% 8% Sigma 30% 15% Correlation 0.3 Proportion of A 60% Theoretical Actual MeanSigma Year A B 12INVESTING IN A PORTFOLIO OF TWO STOCKS Summary of portfolio returns Simulated returns Normal deviates 722 Chapter 27 2 345AB C D E F JCP AAPL C F K Historical mean -1.08% 1.46% -2.02% 2.02% 0.75% Anticipated future mean 2.00% 1.50% 1.00% 2.00% 0.60%Monthly mean and sigma 4. The disk that accompanies this book gives 5 years of monthly price data for five U.S. stocks. • Compute the monthly returns for the stocks. • Compute the stocks’ average monthly returns and standard deviations. • Compute the variance-covariance matrix for the stock returns. • Compute the correlation matrix of returns for the stocks. • Compute the lower-Cholesky matrix for the variance-covariance structure. 5. Using the data from the previous example, simulate 36 months of stock returns assuming the same variance-covariance structure as the historical returns. Notice that it doesn ’ t make sense to assume that the forward-looking expected monthly returns are the same as the historical returns. Instead, use the following values: 1 23 4 56 7 89 10 11 1213 14 1516 17 181920 21 2223 24 2526C B A Current rate 4% Mean, μ 3% \"Pressure\", ϕ 0.10 Sigma, σ 2% Δt 0.0833 <-- =1/12 Month Rate 04 . 0 0 % 1 3.72% <-- =B9+$B$4*($B$3-B9)*$B$6 +$B$5*SQRT($B$6)*NORM.S.INV(RAND()) 23 . 1 8 %33 . 5 0 %42 . 3 1 % 52 . 4 3 % 61 . 7 6 %72 . 6 5 % 82 . 3 3 % 93 . 2 7 % 10 3.51%11 3.47% 12 5.21%ORNSTEIN-UHLENBECK PROCESS FOR INTEREST RATES 1 – Innovation in the ratett t–1 rr=+ ϕ (m – r ) Δt + σ Δt ↑Z 0.00%1.00%2.00%3.00%4.00%5.00%6.00% 02468 1 0 1 2MEAN-REVERTING INTEREST RATES OVER ONE YEAR 2 8 Value at Risk (VaR) * 28.1 Overview Value at risk (VaR) measures the worst expected loss under normal market conditions over a specific time interval at a given confidence level. As one of our references states: “VaR answers the question: how much can I lose with x % probability over a pre-set horizon?” (J. P. Morgan, RiskMetrics—Technical Document 1 ). Another way of expressing this is that VaR is the lowest quantile of the potential losses that can occur within a given portfolio during a specified time period. The basic time period T and the confidence level (the quantile) q are the two major parameters that should be chosen in a way appropriate to the overall goal of risk measurement. The time horizon can differ from a few hours for an active trading desk to a year for a pension fund. When the primary goal is to satisfy external regulatory requirements, such as bank capital require-ments, the quantile is typically very small (e.g., 1% of worst outcomes). However, for an internal risk management model used by a company to control the risk exposure, the typical number is around 5% (visit the Internet sites in Selected References for more details). A general introduction to VaR can be found in Linsmeier and Pearson (1996) and in Jorion (1997). In the jargon of VaR, suppose that a portfolio manager has a daily VaR equal to $1 million at 1%. This statement means that there is only one chance in 100 that a daily loss bigger than $1 million occurs under normal market conditions. 28.2 A Really Simple Example Suppose a manager has a portfolio that consists of a single asset. The return of the asset is normally distributed with mean return 20% and standard devia-tion 30%. The value of the portfolio today is $100 million. We want to answer various simple questions about the end-of-year distribution of portfolio value: 1. What is the distribution of the end-of-year portfolio value? 2. What is the probability of a loss of more than $20 million by year-end (i.e., what is the probability that the end-of-year value is less than $80 million)? * This chapter is based on an article written with Zvi Wiener, “Value-at-Risk (VaR),” which first appeared in Mathematica in Education and Research 7 (1998). 1. This and other valuable documents produced by J. P. Morgan can be found on the disk that accompanies this book. 724 Chapter 28 3. With 1% probability, what is the maximum loss at the end of the year? This is the VaR at 1%. The probability that the end-of-year portfolio value is less than $80 million is about 9%: 1 2 34 5 6 7 8 9 1011 12 13 14 1516 17 18 19 20 21 22 23 24 25 26 27D C B A % 0 2 n a e M % 0 3 a m g i S Initial investment 100 0 8 f f o t u C Probability that portfolio worth less than cutoff 9.12% <-- =NORMDIST(B5,(1+B2)*B4,B4*B3,TRUE) Portfolio value 0.0055 0 0.0000 10 0.0000 20 0.0001 30 0.0001 40 0.0004 50 0.0009 60 0.0018 70 0.0033 80 0.0055 90 0.0081 100 0.0106 110 0.0126 120 0.0133 130 0.0126 140 0.0106 150 0.0081 160 0.0055Data table header: =NORMDIST(B5,(1+B2)*B4,B4*B3,FALSE)PROBABILITY OF YEAR-END PORTFOLIO VALUE 0.0000.0020.0040.0060.0080.0100.0120.014 0 2 55 07 5 1 0 0 1 2 5 1 5 0 1 7 5 2 0 0 2 2 5 2 5 0End-of-Year Portfolio Value Excel ’ s Norm.Dist function can return both the cumulative distribution and the probability mass function. 2 Here ’ s the way the screen looks when we apply the Norm.Dist function in cell B6: 2. In some versions of Excel this function appears without the dot as NormDist . 725 Value at Risk (VaR) The spreadsheet uses two versions of Norm.Dist : First we use the function in cell B6 to determine the probability that the year-end value of the portfolio is less than 80. In this version of the function, we use the value TRUE for the last entry in Norm.Dist ; when we write = NORMDIST(B5,(1 + B2)*B4,B4*B 3,TRUE), Norm.Dist returns values of the cumulative normal distribution. In the data table we set this value to FALSE to plot the probability mass function of the year-end portfolio value. 28.3 Defining Quantiles in Excel By using Excel ’ s Solver , we can determine that with a probability of 1%, the end-of-year portfolio value will be less than 50.209. Recall that the value at risk is the worst expected loss under normal market conditions over a specific time interval at a given confidence level. Therefore, the value 50.210 means that the VaR of the portfolio at the 1% level is 100 − 50.210 = 49.790. 726 Chapter 28 1 2 345 6 789 10111213141516171819AB C D E F G Mean 20% Sigma 30% Initial investment 100 Cutoff 50.210 Probability that portfolio worth less than cutoff 1.00% <-- =NORMDIST(B5 ,(1+B2)*B4,B4*B3,TRUE)PROBABILITY OF END-YEAR PORTFOLIO VALUE The cutoff is known as the quantile of the distribution. In Excel it can be determined by using Solver , as illustrated above. For two distributions we use—the normal and the lognormal distributions—Excel has built-in functions which find the quintile. These functions— Norm.Inv , Norm.S.Inv , and Loginv —find the inverse for the normal, standard normal, and lognormal distributions. Here ’ s an example for the numbers given above; this time we have written the function = NORM.INV(0.01,(1 + B3)*B5,B5*B4) in cell B6. This function finds the cutoff point for which the normal distribution with mean = 120 and standard deviation = 30 has probability of 1%. You can see this point on the graph below, which shows part of the cumulative distribution: 727 Value at Risk (VaR) The Lognormal Distribution The lognormal distribution is a more reasonable distribution for many asset prices (which cannot become negative) than the normal distribution. Suppose that the return [return = Log(price relative)] on the portfolio is normally dis- tributed with annual mean μ and annual standard deviation σ . Furthermore, suppose that the current value of the portfolio is given by V 0 . Then it follows (see Hull, 2011) that the logarithm of the portfolio value at time T , V T , is normally distributed. 3 This means: ln ~ ln , VN o r m a lV TTT() () +−⎛ ⎝⎜⎞⎠⎟⎡ ⎣⎢⎤⎦⎥ 02 2μσσ 1 2 3456789 10111213141516171819202122232425AB C Mean 20% Sigma 30% Initial investment 100 Cutoff 50.210 <-- =NORMINV(0.01,(1+B2)*B4,B4*B3) 1.00% <-- =NORMDIST(B5 ,(1+B2)*B4,B4*B3,TRUE) VaR at 1.00% level 49.790 <-- =B5-B6CALCULATING THE QUANTILES 0.0%0.5%1.0%1.5%2.0%2.5%3.0% - 2 0 - 1 5 - 1 0- 5 0 5 1 01 52 02 53 03 54 04 55 05 56 06 5 Probability Portfolio value (million $)Cumulative Normal Distribution (only part--so we can see the 1% quantile) 1% quantile point 3. John C. Hull, Options, Futures, and Other Derivatives (Prentice-Hall, 8th edition, 2011). 728 Chapter 28 Suppose, for example, that V 0 = 100, μ = 10%, σ = 30%. Thus the end-of-year log of the portfolio value is distributed normally: ln ~ ln ..,. . V Normal Normal 12 100 0 1003 203 46 6 () ( ) +−⎛ ⎝⎜⎞⎠⎟⎡ ⎣⎢⎤⎦⎥= 6 6017 0 3 ,. [] Thus a portfolio whose initial value is $100 million and whose annual returns are lognormally distributed with parameters μ = 10% and σ = 30%, has an annual VaR equal to $47.42 million at 1%: 1 2 3 456 78 9 1011 12AB C Initial value, V 0 100 Mean, 10% Sigma, 30% Time period, T 1 <-- in years Parameters of normal distribution of ln(VT) Mean 4.6602 <-- =LN(B2)+(B3-B4^2/2)*B5 Sigma 0.3000 <-- =B4*B5 Cutoff 52.576 <-- =LOGINV(0.01,B8,B9) VaR at 1% level 47.424 <-- =B2-B11QUANTILES FOR LOGNORMAL DISTRIBUTION sm Most VaR calculations are not concerned with annual value at risk. The main regulatory and management concern is with loss of portfolio value over a much shorter time period (typically several days or perhaps weeks). It is clear that the distribution formula ln ~ ln , VN o r m a lV TTT() () +−⎛ ⎝⎜⎞⎠⎟⎡ ⎣⎢⎤⎦⎥ 02 2μσσ can be used to calculate the VaR over any horizon. Recall that T is measured in annual terms; if there are 250 business days in a year, then the daily VaR cor- responds to T = 1/250 (for many fixed income instruments, one should use 1/360, 1/365, or 1/365.25, depending on the market convention): 28.4 A Three-Asset Problem: The Importance of the Variance-Covariance Matrix As can be seen from the preceding examples, VaR is not—in principle, at least—a very complicated concept. In the implementation of VaR, however, there are two big practical problems (both problems are discussed in much 729 Value at Risk (VaR) greater detail in the material available on the RiskMetrics website, www.msci. com/resources/ ): 1. The first problem is the estimation of the parameters of asset return distri- butions. In “real world” applications of VaR, it is necessary to estimate means, variances, and correlations of returns. This is a not-inconsiderable problem! In this section we illustrate the importance of the correlations between asset returns. In the following section we give a highly simplified example of the estimation of return distributions from market data. For example, you can imagine that a long position in euros and a short position in U.S. dollars are less risky than a position in only one of the currencies, because of a high probability that profits of one position will be mainly offset by losses of another. 2. The second problem is the actual calculation of position sizes. A large financial institution may have thousands of loans outstanding. The database of these loans may not classify them by their riskiness, nor even by their term to maturity. Or—to give a second example—a bank may have offsetting posi-tions in foreign currencies at different branches in different locations. A long position in euros in New York may be offset by a short position in euros in Geneva; the bank ’ s risk—which we intend to measure by VaR—is based on the net position. We start with the problem of correlations between asset returns. We continue the previous example, but assume that there are three risky assets. As before, the parameters of the distributions of the asset returns are known: all the means, μ 1 , μ 2 , μ 3 , as well as the variance-covariance matrix of the returns: S=⎛ ⎝⎜ ⎜⎞ ⎠⎟ ⎟σσσ σσσ σσσ11 12 13 21 22 23 31 32 33 The matrix S is of course symmetric; σ ii is the variance of the i th asset ’ s return, and σ ij is the covariance of the returns of assets i and j (if i = j , σ ij is the vari- ance of asset i ’ s return). Suppose that the total portfolio value today is $100 million, with $30 million invested in asset 1, $25 million in asset 2, and $45 million in asset 3. Then the return distribution of the portfolio is given by: Mean return x x x Variance of return x x x S x=++ ={}11 22 33 123 1μμμ ,, . . , xxxT 23, {} 730 Chapter 28 where x = { x 1 , x 2 , x 3 } = {0.3, 0.25, 0.45} is the vector of proportions invested in each of the three assets. Assuming that the returns are normally distributed (meaning that prices are lognormally distributed), we may calculate the VaR as in the following spreadsheet: 1 2 3456789 1011121314151617 18AB C D E F G H Mean returnsPortfolio proportions Asset 1 10% 0.10 0.04 0.03 0.30 Asset 2 12% 0.04 0.20 -0.04 0.25 Asset 3 13% 0.03 -0.04 0.60 0.45 Initial investment 100 Mean return 0.1185 <-- {=MMULT(TRANSPOSE(B3:B5),H3:H5)} Portfolio sigma 0.3848 <-- {=SQRT(MMULT (MMULT(TRANSPOSE(H3:H5),D3:F5),H3:H5))} Mean investment value 111.8500 Sigma of investment value 38.4838 Cutoff 22.3234 <-- =NORMINV(0.01,(1+B8)*B7,B9*B7) Cumulative PDF 0.01 <-- =NORMDIST(B14,B11,B12,TRUE) VaR at 1.00% level 77.6766 <-- =B7-B14VaR FOR 3 ASSET PROBLEM Variance-covariance matrix Note that the functions in cells B8 and B9 are array functions: You must press [Ctrl]+[Shift]+[Enter] after you write the function in the cell. The curly brackets {} are not written--they appear automatically. 28.5 Simulating Data: Bootstrapping Sometimes it helps to simulate data. In this section we give an example. We suppose that the current date is 10 February 1997, and we consider a firm which has an investment in two assets: • It is long two units of an index fund. The fund ’ s current market price is 293, so that the investment in the index fund is worth 2 * 293 = 586. • It is short a foreign bond denominated in rubles. The bond is a zero-coupon bond (i.e., pays no interest), has face value of 100 rubles and maturity of 8 May 2000. If the current ruble interest rate is 5.30%, then the 10 February 1997 ruble value of the bond is −∗ − ∗ − () [] =− 100 5 30 8 2000 10 1997 365 84 2166 exp . % , . , . May Feb 731 Value at Risk (VaR) 1 2 34 5 6789 10434445AB C D E F Units of Index held 2 Bond maturity 8-May-00 Day IndexForeign interest rateExchange ratePortfolio value 02-01-97 462.71 5.28% 3.50 632.13 03-01-97 514.71 5.26% 3.47 738.41 04-01-97 456.5 5.23% 3.46 622.49 05-01-97 487.39 5.24% 3.45 685.17 06-01-97 470.42 5.25% 3.45 651.28 08-02-97 467.14 5.31% 3.44 644.75 09-02-97 562.06 5.32% 3.41 837.17 10-02-97 481.61 5.30% 3.40 676.88EXCHANGE RATE AND INDEX DATA 1 2 3 4 5 6789 1011AB C D E F G H I Units of Index held 2 Bond maturity 8-May-00 DateIndex valueRuble interest rateRuble exchange rateTotal index valueRuble bond valueDollar bond valuePortfolio value 10-02-97 293 5.30% 3.40 586.00 -84.2166 -286.336 299.66 =B2*B6 =G6*D6 =F6+H6 =-100*EXP(-(B3-A6)/365*C6)BOOTSTRAPPING DATA—INITIAL POSITIONIn dollars, the value of the bond is − 84.2166*3.40 = − 286.3365, so that the net portfolio value is 586 − 286.3365 = 299.66. This is illustrated below: Now suppose we have exchange rate and index data. We illustrate data for 40 days (the middle of the data has been hidden, but you will see that the rows go from 6 to 45): 732 Chapter 28 1 23 4 5 6 789 10 11 12 131415161718 19 20212223242526 27 28293031323334 35 363738394041 42 43 444546AB C D E F G H 0 5 : 5 4 : 1 1 e m i t t r a t S 0 0 0 , 5 s n o i t a r e t I 2 d l e h x e d n I f o s t i n U 1 4 : 6 1 : 0 d e s p a l E 5 1 . 0 n r u t e R 0 0 - y a M - 8 y t i r u t a m d n o B Number of data points 40 =H46/H7-1 Day IndexIndex randForeign interest rateInterest randExchange rateExchange randPortfolio value 02-01-97 615.93 0.0029 5.31% 0.0148 3.40 0.0202 947.24 03-01-97 757.02 0.0447 5.24% 0.0179 3.41 0.0456 1,227.87 04-01-97 581.50 0.0452 5.32% 0.0377 3.44 0.0620 875.04 05-01-97 651.99 0.0742 5.28% 0.0383 3.42 0.0846 1,017.27 06-01-97 605.37 0.1027 5.28% 0.0634 3.50 0.1070 917.28 07-01-97 514.71 0.1455 5.28% 0.0640 3.43 0.1321 741.79 08-01-97 640.43 0.1574 5.28% 0.0652 3.48 0.1522 988.99 09-01-97 645.50 0.2020 5.25% 0.0789 3.43 0.1532 1,003.00 10-01-97 450.91 0.2049 5.34% 0.0884 3.46 0.1994 612.12 11-01-97 475.49 0.2075 5.26% 0.1111 3.46 0.2074 660.47 12-01-97 654.17 0.3184 5.36% 0.3611 3.42 0.2156 1,022.10 13-01-97 445.77 0.3308 5.31% 0.3662 3.37 0.2309 608.98 14-01-97 669.12 0.3799 5.28% 0.4016 3.44 0.2428 1,049.48 15-01-97 500.71 0.3878 5.31% 0.4112 3.44 0.2469 712.65 16-01-97 705.27 0.3951 5.35% 0.4387 3.46 0.2963 1,120.69 17-01-97 533.40 0.4201 5.28% 0.4603 3.46 0.3266 776.23 18-01-97 639.95 0.4465 5.32% 0.4751 3.42 0.3454 993.03 19-01-97 444.27 0.4551 5.30% 0.4763 3.39 0.4183 603.96 20-01-97 670.63 0.4654 5.25% 0.4797 3.45 0.5154 1,051.12 21-01-97 470.42 0.4655 5.25% 0.4952 3.42 0.5357 653.18 22-01-97 458.26 0.5114 5.26% 0.5059 3.45 0.5883 626.39 23-01-97 466.45 0.5386 5.27% 0.5217 3.47 0.6197 641.14 24-01-97 462.71 0.5456 5.27% 0.5596 3.48 0.6813 632.78 25-01-97 459.27 0.5682 5.24% 0.5798 3.42 0.7240 630.62 26-01-97 740.74 0.6100 5.23% 0.6026 3.41 0.7321 1,194.27 27-01-97 790.82 0.6245 5.28% 0.6068 3.41 0.7507 1,294.86 28-01-97 487.39 0.6405 5.34% 0.6384 3.44 0.7987 686.00 29-01-97 456.50 0.6795 5.29% 0.6583 3.52 0.8033 616.98 30-01-97 467.14 0.6922 5.24% 0.6601 3.40 0.8047 647.84 31-01-97 481.61 0.7349 5.27% 0.6699 3.41 0.8337 676.18 01-02-97 544.75 0.7357 5.26% 0.6836 3.42 0.8501 801.48 02-02-97 453.69 0.7423 5.24% 0.7388 3.68 0.8512 597.22 03-02-97 786.16 0.7436 5.27% 0.7867 3.49 0.8553 1,278.42 04-02-97 561.88 0.7944 5.29% 0.8107 3.41 0.8797 836.74 05-02-97 562.06 0.9345 5.32% 0.8328 3.45 0.8811 833.97 06-02-97 472.35 0.9353 5.23% 0.8759 3.42 0.9045 656.19 07-02-97 636.02 0.9406 5.35% 0.8899 3.42 0.9336 984.61 08-02-97 461.79 0.9630 5.30% 0.9238 3.49 0.9662 629.75 09-02-97 584.41 0.9688 5.26% 0.9403 3.47 0.9878 876.25 10-02-97 687.33 0.9713 5.25% 0.9585 3.41 0.9990 1,087.02BOOTSTRAPPING RETURN DISTRIBUTIONS We want to use these data as a basis for generating “random” return data. We illustrate one technique for doing this which is called “bootstrapping”: This refers to random reshufflings of the data. For each iteration, we reorder the series of index prices, interest rates, and exchange rates and calculate the return on the portfolio. 4 4. The bootstrapping technique is illustrated in the appendix to this chapter. 733 Value at Risk (VaR) The distribution of the bootstrapped return data looks like this: 1 23 4 5 6 789 101112131415 16 171819202122232425262728 29 30313233JK L M NO P Q R S Max return 1.16080 <-- =MAX(J:J) =K3 Min return -0.53821 <-- =MIN(J:J) =($K$2-$K$3)/50+L7 Output BinsCumulative percent 0.2859 -0.5382 1 0.0% -0.1820 -0.5042 57 1.1% 0.0954 -0.4703 76 1.5% 0.4311 -0.4363 95 1.9% -0.0504 -0.4023 133 2.7% 0.1755 -0.3683 217 4.3% 0.0008 -0.3343 218 4.4% -0.2790 -0.3004 150 3.0% -0.3847 -0.2664 138 2.8% -0.3961 -0.2324 165 3.3% -0.1576 -0.1984 155 3.1% 0.0378 -0.1644 158 3.2% 0.5969 -0.1305 158 3.2% 0.2791 -0.0965 142 2.8% -0.3907 -0.0625 181 3.6% 0.5339 -0.0285 259 5.2% -0.0546 0.0055 239 4.8% -0.3956 0.0395 291 5.8% -0.4083 0.0734 216 4.3% 0.0810 0.1074 133 2.7% 0.2932 0.1414 139 2.8% 0.1866 0.1754 97 1.9% -0.0121 0.2094 117 2.3% -0.3674 0.2433 99 2.0% -0.2599 0.2773 100 2.0% -0.4493 0.3113 103 2.1% 0.1674 0.3453 85 1.7%Bootstrapped Return Frequency Distribution 5,000 Iterations 050100150200250300350 -1.0000 -0.5000 0.0000 0.5000 1.0000 1.5000Frequency ReturnBootstrapped Return Frequency Distribution 5,000 Iterations The graph indicates the return distribution, which is far from normal. From columns L, M, and N, you can tell that the 1% VaR is about − 50%, meaning, with a probability of 1%, the firm could lose 50% of its investment. How Did We Produce the Bootstrapped Data? Bootstrapping basically consists of reshuffling the data randomly, and then viewing each reshuffle as a point in a distribution. In the spreadsheet on 734 Chapter 28 page 732, the columns C, E, and G contain random numbers. The VBA program below contains three For loops which insert three columns of random numbers into the spreadsheet. On the spreadsheet for this chapter, this program can be run through the shortcut [Ctrl] + a. Having inserted the random numbers, the spreadsheet then uses Excel ’ s Sort function to sort the index prices (column B), the foreign interest rates (column D), and the exchange rate (column F). This produces random combinations of the three portfolio pricing factors, which give the resulting portfolio values in column H and the portfolio return in cell F3. ‘My thanks to Marek Jochec for cleaning ‘up this code! Sub randomizeit() Range(“starttime”) = Time Range(“J7:J15000”).ClearContents Application.ScreenUpdating = False For Iteration = 1 To Range(“iterations”) For Row = 1 To 40 Range(“IndexRand”).Cells(Row, 1) = Rnd Next Row For Row = 1 To 40 Range(“InterestRand”).Cells(Row, 1) = Rnd Next Row For Row = 1 To 40 Range(“ExchangeRand”).Cells(Row, 1) = Rnd Next Row 735 Value at Risk (VaR) Range(“B7:C46”).Sort Key1: = Range(“C6”), _ Order1: = xlAscending, Header: = xlNo Range(“D7:E46”).Sort Key1: = Range(“E6”), _ Order1: = xlAscending, Header: = xlNo Range(“F7:G46”).Sort Key1: = Range(“G6”), _ Order1: = xlAscending, Header: = xlNo Range(“returndata”).Cells(Iteration, 1) = _ Range(“meanreturn”) Next Iteration Range(“elapsed”) = Time - Range(“starttime”) End Sub Having produced the bootstrapped data, we use the array function Fre- quency (see Chapter 34) to produce a distribution of the simulated data. Notice that this simulation takes a very long time! On the author ’ s laptop 5,000 simu-lations took almost 17 minutes. Monte Carlo Simulations In this section we return to the three-asset problem discussed in section 28.5. Instead of doing statistical analysis, we run a simulated set of returns. In the spreadsheet below, we simulate (columns G–J) 30 days of daily returns on a portfolio of three assets. The annual mean returns of the assets are very pes-simistic (A3:C3). For the portfolio (25%, 50%, 25%) the cumulative 30-day simulated return for the specific simulation is − 5.40% (cells B19 and J34). When we run 1,000 simulations for these 30 days in a data table, we find that in 16 cases (cell B24) the cumulative return is beyond − 10%. This is the VaR at a 10% level: 736 Chapter 28 1 2 3 4 5 6 789 10 11 12131415 16 17181920 21 22 23 24 25 26 272829 30 3132333435 36AB C D E F G H I J -20% -11% -13% Asset1 Asset2 Asset3 1 0.60% 0.63% -0.16% 0.34% -0.08% -0.04% -0.05% <-- =C3/250 2 0.53% 0.40% -0.08% 0.57% 3 -0.73% -0.60% -0.05% 0.00% 4 0.07% 0.35% -0.08% 0.09% 7.170E-05 5.075E-05 -9.038E- 5 60 -0.51% -0.33% -0.03% -0.29% 5.075E-05 4.070E-05 -5.990E- 6 60 -0.02% -0.02% 0.02% -0.38% -9.038E-06 -5.990E-06 2.800E- 7 60 -1.55% -0.67% 0.23% -1.12% 8 0.11% 0.42% 0.17% -0.92% 9 0.96% 0.57% -0.07% -0.49% 0 1 % 5 2 % 0 5 % 52 -1.21% -1.03% 0.16% -1.35% 11 -0.67% - 0.53% -0.21% -1.91% 12 -1.38% -1.39% 0.18% -2.99% Mean -2.76% <-- =AVERAGE(J:J) 13 -0.09% -0.12% -0.06% -3.17% Sigma 1.95% <-- 41 ) J : J ( S . V E D T S = -0.13% -0.14% -0.09% -3.37% CumulaƟve -5.40% <-- 51 4 3 J= -0.33% 0.17% 0.00% -3.45% 16 0.90% 0.65% -0.17% -3.02% 17 0.20% 0.57% -0.11% -2.80% 18 -0.10% 0.16% -0.07% -2.84% Min -12.12% <-- =MIN(B29:B1028) 19 -0.97% -0.67% 0.08% -3.48% Risk 16 <-- =COUNTIF(B29:B1028,\"<-10%\") 20 -0.13% -0.34% -0.07% -3.78% Probability 1.60% <-- 12 0 0 0 1 / 4 2 B = -0.79% -0.47% 0.24% -4.23% 22 -0.15% -0.49% - 0.06% -4.61% 23 -0.10% 0.00% -0.25% -4.78% -5.40% <-- =J34, data table header 24 -0.27% -0.04% 0.16% -4.91% 1- %5 5 . 0 % 9 8 . 0 5 2 % 7 0 . 5 -0.24% -4.55% 2- 62 % 4 6 . 0 -0.21% -0.45% -0.10% -4.94% 3- %6 0 . 0 % 6 0 . 0 7 2 % 5 1 . 3 -0.15% -5.01% 4- 82 % 4 0 . 1 -0.03% -0.01% -0.08% -5.12% 5- % 9 2 . 0 % 2 1 . 0 % 7 0 . 0 9 2 % 6 6 . 5 -5.05% 6- 03 % 5 2 . 3 -0.48% -0.31% 0.01% -5.40% 7 -6.55% 8 -4.17%Daily asset returns CumulaƟve porƞolio Data table: 1000 simula ƟonsAnnual meansVaR: SIMULATING PORTFOLIO PERFORMANCE Variance-covariance matrixDaily means Simulated por ƞolio returnsPorƞolio30 days of simulated returns Data table results Appendix: How to Bootstrap: Making a Bingo Card in Excel Bootstrapping refers to a technique of random shuffling of data to create more “data.” This appendix gives a simple illustration of bootstrapping. It is based on the “birthday bingo” game created for Helen Benninga ’ s 85th birthday. The game goes like this: 737 Value at Risk (VaR) • Everyone gets a “Helen Bingo Card,” which has five columns of five numbers each. The first column has five numbers from 1 to 17, the second column has five numbers between 18 and 34, and so on. So a typical card looks like this: HELEN 3 2 35 15 27 5 15 26 40 57 70 9 2 15 06 88 2 7 2 24 95 67 18 2 04 55 56 9Helen's bingo game!!!85th Birthday • We made up 85 questions with answers from 1 to 85. When a card with a question was drawn, someone had to give the correct answer, and then every-one who had the number on his or her card could cross it out. For example, if we asked, “How many grandchildren does Helen have?” and someone answered “13,” then everyone with a 13 in the first column could cross it out. • The first person with five numbers in a line (a column, a row, or a diagonal) won the prize. (Note that it didn ’ t take any talent to win—all you had to do was hear the right answers.) We wanted to use Excel to create the cards, but it wasn ’ t initially clear how to go about this. Finally, the requisite trick, which is that we want to model the selection of balls from an urn without replacement, was discovered. (We will discuss this topic in greater detail later.) The Trick The trick is very simple. As an illustration, suppose we want to make a random draw of five numbers between 1 and 17 (these will be the five numbers that will appear in the first column of a particular Helen Bingo card). Here ’ s how we go about this: • First create a list of numbers from 1 to 17 and an adjoining column of random numbers. This will give something that looks like the following: 738 Chapter 28 1 2345678 9 10 1112131415 16 1718AB 1 0.6531522 0.4258763 0.7431734 0.9117095 0.1043566 0.092287 0.49608 8 0.210725 9 0.740506 10 0.72437611 0.31017512 0.43722513 0.19722414 0.145462 15 0.797405 16 0.5216617 0.438188 EXPLAINING THE TRICK The list of numbers was itself created in two stages: In the first stage = Rand( ) was entered into each of the cells B2:B18. In the second stage B2:B18 were copied and were then pasted special back into their locations using Edit|Paste Special|Values . This procedure gets rid of the formulas behind the numbers (else Rand( ) will change its values every time we hit [Enter]). • Next, sort both columns using the second column as a sorting key. To do this, first mark off the relevant data, and then use the Excel command Data|Sort . This will bring up the following screen, in which I ’ ve chosen to sort the data by Column C. 739 Value at Risk (VaR) 1 2345678 9 10 1112131415 16 1718AB 1 0.041996 16 0.057147 7 0.089137 17 0.18458 9 0.1858164 0.2019753 0.231535 11 0.49365810 0.58846 6 0.609492 0.638563 14 0.667014 5 0.678208 13 0.683465 8 0.762878 15 0.81515812 0.924981EXPLAINING THE TRICK • In this case, the Sort command will give: 740 Chapter 28 • Finally, pick the first five numbers from the first column (in this example: 1, 16, 7, 17, 9). You could, of course, equally well pick the last five, the middle five, or any other five numbers from the column. The Probabilistic Model What we ’ re doing here is just like picking random numbers out of an urn without replacement . This model, standard in all introductory probability books, imagines an urn filled with balls. Each ball has a different number—in our case, there are 17 balls with numbers between 1 and 17. The urn is shaken to mix up the balls, and then five balls are drawn out. Each ball, once drawn, is not placed back in the urn. This is somewhat different from the standard random number generators, which pick random numbers with replacement (i.e., once the ball ’ s number is recorded, it is placed back in the urn, so that it could possibly be drawn again). 5 Writing a VBA Program The next obvious step was to write a program in VBA to automate the proce-dure. The spreadsheet is given below. 5. Excel has a function Randbetween(low,high) which lets you create random integers between low and high . Thus, to create five numbers between 1 and 17, you just copy = Randbetween(1,17) into five adjacent cells. However, this is like drawing numbers from the urn with replacement, and hence can give you multiple draws of the same number—and this is a bingo no-no! 741 Value at Risk (VaR) 1 2 3 4 5 6 7 8 9 10 11BC D E F G H I HELEN 2 2 04 76 37 3 15 18 39 68 78 5 3 14 35 88 0 11 19 44 65 69 17 26 51 64 76Helen's 85th Birthday bingo game!!!Ctrl + b runs the macro The code which produced this spreadsheet is given below. 6 6. I thank Paul Legerer for vastly improving the code for this program from the previous edition of Financial Modeling . An astute reader will note that Paul ’ s program internalizes the sorting of the random numbers in the VBA code, so that only the printing of the card is done in the spreadsheet. Public Const NperR = 17 Public Const BingoRows = 5 Public Const BingoColumns = 5 Public Const BingoCard = “C6:G10” Option Base 1 742 Chapter 28 Sub DoIt() ‘loop 5 time (1 loop for each ‘column on the bingo card) For iii = 1 To BingoColumns Dim ArraySort(NperR, 2) For i = 1 To NperR ‘ﬁ rst dimension of the array: ‘random number between 0 and 1 ArraySort(i, 1) = Rnd ‘second dimension of the array: ‘position in the array (1-17 in the ﬁ rst loop, ‘18 to 34 in the second loop, etc…) ArraySort(i, 2) = i + (iii - 1) * NperR Next i For ii = 1 To NperR ‘look for the minimum value in the array ‘and keep also the value of the position ‘(1 to 17) MinNum = ArraySort(ii, 1) MinIndex = ArraySort(ii, 2) RealIndex = ii For i = ii To NperR If ArraySort(i, 1) < MinNum Then MinNum = ArraySort(i, 1) MinIndex = ArraySort(i, 2) RealIndex = i End If Next i 743 Value at Risk (VaR) ‘Replace the ﬁ rst number in the array by the ‘minimum value and… TempNum = ArraySort(ii, 1) TempIndex = ArraySort(ii, 2) ArraySort(ii, 1) = MinNum ArraySort(ii, 2) = MinIndex ArraySort(RealIndex, 1) = TempNum ArraySort(RealIndex, 2) = TempIndex ‘start again with the remaining numbers: once ‘the last loop is completed, all numbers are sorted Next ii ‘write the ﬁ rst 5 numbers (number of rows on the ‘bingo card) of the results into the spreadsheet With ActiveSheet.Range(BingoCard) For ii = 1 To BingoRows .Cells(ii, iii) = ArraySort(ii, 2) Next ii End With Next iii End Sub Another Way to Do the Bingo Cards 7 There ’ s another way to design the bingo cards, using the Excel Rank function: 7. I thank A. C. M. de Bakker for the suggestion in this subsection. 744 Chapter 28 1 2 3 4567 8 9 10 11 12 13 14 15 16 17 1819 20 2122 23 24 25 26G F E D C B A HELEN 1 3 13 66 38 3<-- =(F$9-1)*17+RANK(F10,F$10:F$26) 3 2 73 85 88 4<-- =(F$9-1)*17+RANK(F11,F$10:F$26) 11 32 44 55 78 2 2 33 56 87 5 6 1 94 56 17 6 12345 0.9562 0.2730 0.8788 0.2574 0.0735 <-- =RAND() 0.8333 0.5145 0.7366 0.5556 0.0702 <-- =RAND() 0.4827 0.2727 0.4318 0.8825 0.5355 <-- =RAND()0.8475 0.6533 0.9783 0.0103 0.6092 0.7706 0.9582 0.3832 0.3485 0.6019 0.4284 0.6652 0.2587 0.6039 0.9998 0.2066 0.3386 0.0672 0.0924 0.5632 0.6735 0.1244 0.3091 0.8998 0.8532 0.2589 0.6032 0.0847 0.4665 0.4054 0.6858 0.9602 0.4834 0.6650 0.8638 0.3187 0.6513 0.2867 0.8896 0.0098 0.3953 0.1872 0.3402 0.1919 0.75630.8029 0.3386 0.5020 0.2635 0.8696 0.8241 0.5994 0.7240 0.0538 0.9613 0.5427 0.9184 0.7793 0.4888 0.21800.7136 0.4916 0.4389 0.9486 0.1391 0.0453 0.8367 0.5422 0.2381 0.5272 The entries in rows 10–26 are created with Rand( ) . The entries of the bingo card are computed with the formula: =∗ ↑($ )F- Guarantees that all numbers in column F are more91 1 7 than and likewise for other columnsRANK F F 6810 10 ( )(, $/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/dncurlybracketright/horizcurlybracketext+ :: $ ) :?F What is the rank of F among F F When copied d26 10 10 26↑ oown one cell What is the rank of F among F F etc: :? .11 10 26/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext /horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext The only disadvantage of this very clever implementation of bootstrapping is that the entries on the card change with each recomputation of the spreadsheet. 2 9 Simulating Options and Option Strategies 29.1 Overview In this chapter we simulate options and option strategies. We start by showing how an option on a stock can be replicated by a dynamic portfolio of the stock and a bond. We go on to apply this approach to portfolio insurance (a combi-nation of a put and stock) and to a butterfly. Our approach has its roots in the Black-Scholes formula. This formula can be interpreted as showing that an option is a portfolio of a position in the underlying asset and a position in the risk-free asset, where both positions are adjusted dynamically over time. Remarkably, the Black-Scholes formula shows that if the adjustment process is continuous, then the dynamic strategy is self-financing: It requires no addi-tional cash flows after the establishment of the initial portfolio. In a more realistic situation it is of course impossible to replicate the option strategy portfolio continuously. We have to compromise by making only peri-odic adjustments, and this forces us to consider first how to define the strategy over time, and second how well the compromise strategy performs in replicat-ing the option strategy. We will show several approaches to this problem. Background: Price Simulations and the Black-Scholes Formula Recall from Chapter 26 that the way to simulate a stock price is to simulate SS t t Ztt=∗ + ⎡⎣⎤⎦ −1exp μσΔΔ , where Z is a draw from a standard normal distribution. In Excel this formula becomes: 1 SS t ttt=∗ + ∗ () () ⎡⎣⎤⎦ −1exp . . μσΔΔ Norm S Inv Rand We will use this formula throughout the chapter to simulate stock prices. Recall also that the Black-Scholes formula, explained in Chapter 17, states that the prices of a European call and put are given by: Call SN d Xe N d P u t S Nd X eNd dSXrrT rT= ()− () =− − () +− () =()++− −12 12 1ln σ σ σσ2 212 ()=−T Tdd T, 1. The Excel function Norm.S.Inv is equivalent to the older version, Normsinv . Both functions are part of the newer Excel editions. 746 Chapter 29 In this chapter our interpretation of this formula is that an option can be replicated by a long or short position in the underlying stock and a long or short position in the risk-free asset (jargon: “the bond”): Stock position Bond position Call SN d Xe N drT= () − ()−1 2 SN dt 1() Long position in stock − ()−−()Xe N dtTt* 2 Short position in bond Put SN d Xe N drT=− − () +− ()−1 2 −− () SN dt 1 Short position in stock Xe N dtTt−−()−()* 2 Long position in bond It follows that if we replicate an option with a portfolio of stocks and bonds, this portfolio needs to be rebalanced often. A remarkable fact, proved by Black and Scholes in their pathbreaking 1973 paper, is that if the rebalancing is continuous, then the changes in the stock and bond positions exactly offset each other. This zero-investment property is also termed “self-financing” and is a hallmark of the Black-Scholes replicating portfolio. While we cannot prove this fact, we can give some intuition. In the spread- sheet below, we look at two very close times. At time t = 0, we price a call option on a stock whose current price is S 0 = 50. The option has exercise price X = 50, and expires at T = 0.5. The replicating portfolio for the option is 28.9698 in the stock and –24.2745 in the bond, giving a call option value of 4.6952 (cell B19). At time Δ t = 1/250 (roughly 1 day later), a randomly generated stock price is 49.8708. The replicating portfolio is now 28.6400 in the stock and –24.0399 in the bond. To compute the investment required to reach this portfolio, we have to revalue the previous investments in the stock and the bond. The previous stock position has grown in value to 28 969849 8708 5028 8949 ... ∗= and the previous bond position now has value of −∗ = −24 2745 24 2784.. ert*Δ (1 day ’ s interest has been added). This means that we must sell off some of the stock: (28.6400 − 28.8949) = 0.2548. Thus the cash flow from the change in the stock position is positive. In the bond position we want to change the debt from − 24.2784 to − 24.0399; this means that we require cash of 0.2385 to pay off some of the debt. The net cash flow from these changes is + 0.2549 − 0.2386 = 0.0163. In a spreadsheet: 747 Simulating Options and Option Strategies The Excel notebook with this chapter gives a dynamic spreadsheet for the above example that changes values with each press of F9 . Using this spread- sheet you can confirm: • The position changes rarely completely net out. • The smaller the Δ t , the smaller the net cash flow will be from the position change. Black-Scholes proved that in the limit, this net cash flow is always zero, and that the strategy is thus completely self-financing. 29.2 Imperfect but Cashless Replication of a Call Option To perfectly replicate a call option using the Black-Scholes formula will require continuous trading. Suppose we compromise a bit on strictly following the BS formula. In what follows we use the strategy of replication, but force it to be self-financing. We do this as follows: • At time 0, we set the initial portfolio equal to that prescribed by the BS formula: Stock = S 0 N ( d 1 ), Bond = − Xe − rT N ( d 2 ) 1 2 345 6 78 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24AB CDE F G t 0.0040 <-- =1/250 Time = 0 Time = t 8 0 7 8 . 9 4 0 0 0 0 . 0 5 S 0 0 0 0 . 0 5 0 0 0 0 . 0 5 X % 0 0 . 4 % 0 0 . 4 r T, time to option maturity 0.5000 0.4960 <-- =B8-B2 % 0 3 % 0 3 a m g i S d1 0.2003 0.1873 =E18-C18 d2 -0.0118 -0.0240 N(d 1) 0.5794 0.5743 7 1 C - 7 1 E = 5 B / 5 C * 7 1 B = N(d 2) 0.4953 0.4904 Stock position, S*N(d1) 28.9698 28.6401 <-- =C5*C14 28.8949 0.2548 <-- stock Bond position, -X*N(d2) -24.2745 -24.0399 <-- =-C6*EXP(-C8*C7)*C15 -24.2784 -0.2385 <-- bond Value of call option 4.6952 4.6002 3 6 1 0 . 0 ) 8 1 C : 7 1 C ( M U S = - - < =B18*EXP(B7*B2)BLACK-SCHOLES AS A PORTFOLIO Cash flow from position changeValue of previous position =SUM(F17:F18) net cash flow from position changeΔ ΔΔΔ 748 Chapter 29 • At times t > 0, we set the stock position = S t N ( d 1 ), but we set the bond posi- tion equal to the cash flow from the change in the stock position: Bond Bond e tt trt tt t+ ↑ +=∗ +ΔΔ Δ value of time bond position/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/dncurlybracketright/horizcurlybracketextSSN dS Stttt t tt t1,() ∗+ ↑ +Δ Δ value of time stock position/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext /dncurlybracketright /horizcurlybracketext/horizcurlybracketext /horizcurlybracketext/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext− () =++ ↑ +SN d Bondtt tt tt tΔΔ Δ1, desired stock position ∗∗+ () −() {}++ e S Nd Ndrt tt t ttΔ ΔΔ 11,, Here ’ s the way this looks. At t = 0 the replicating portfolio is exactly equiva- lent to the Black-Scholes (cells H13:I13), but at t > 0, the Black-Scholes value is different from the portfolio value (though quite close). 1 2 3 45678 9 10 11 12 13 14 1516AB C D E F G H I S0, stock price 50 X, exercise price 50 T, strike date 0.5 Mean stock return (mu) 12% Sigma of stock return 30%r, interest rate 4% Delta_t 0.0192 <-- =1/52 WeekStock priceTime remaining Stock Bond Portfolio BSPortfolio - BS 0 50.0000 0.5000 28.9698 -24.2745 4.6952 4.6952 0.0000 1 51.0829 0.4808 31.5541 -26.2502 5.3039 5.2435 0.0605 2 47.5675 0.4615 22.7932 -19.6809 3.1123 3.2099 -0.0977 3 43.8959 0.4423 14.1025 -12.7647 1.3378 1.6521 -0.3143=B14*NORM.S.DIST(done(B14,exe rcise,C14,interest,Sigma),1)=E13*EXP(interest*Delta_t)+B14*(NO RM.S.DIST(done(B13,exercise,C13,int erest,Sigma),1)- NORM.S.DIST(done(B14,exercise,C14 ,interest,Sigma),1)) Replicating portfolio Comparing BS to portfolio valueIMPERFECT BUT CASHLESS REPLICATION OF CALL OPTION WITH PORTFOLIO Requires no investment over time but doesn't perfectly match Black-Scholes 749 Simulating Options and Option Strategies Here ’ s the result in terms of final payoffs: 34 3536 37 38394041 42 43AB C D E F G H I 21 44.5525 0.0962 5.5524 -5.4820 0.0705 0.2463 -0.1759 22 45.1987 0.0769 5.7963 -5.6495 0.1468 0.2324 -0.0856 23 48.2980 0.0577 16.4192 -15.8793 0.5399 0.7571 -0.2172 24 45.4011 0.0385 2.5675 -3.0246 -0.4571 0.0630 -0.5201 25 48.4558 0.0192 11.5024 -11.7891 -0.2867 0.2752 -0.5619 26 50.0476 0.0000 Perfectly replicated option 0.0476 <-- =MAX(B39-exercise,0) Investment portfolio payoff 0.0821 <-- =D38*B39/B38+EXP(interest*Delta_t)*E38Final payoff We run this simulation 50 times and compare the payoffs on the perfect replication with those of the investment portfolio. We use the technique from Chapter 31, “ Data Table on a blank cell,” to run the simulation. Our conclu- sion: By and large, the imperfect replication strategy works ok. 46 47 484950515253545556575859606162636465666768697071AB C D E F G H I J K SimulationPerfect replication PortfolioDifference: Perfect - portfolio 1 12.8857 13.6891 -0.8034 2 20.2031 20.8742 -0.6711 -0.0024 <-- =AVERAGE(D49:D98) 3 4.9478 3.9451 1.0026 0.5662 <-- =STDEV.S(D49:D98) 4 20.0870 19.3043 0.7827 1.0026 <-- =MAX(D49:D98) 5 5.8534 5.8424 0.0109 -1.3473 <-- =MIN(D49:D98) 6 6.3475 6.5438 -0.1962 7 0.0000 0.8066 -0.8066 8 0.0000 -0.1808 0.1808 9 42.8039 42.4171 0.3868 10 8.5893 8.7009 -0.1116 11 0.0000 0.3803 -0.3803 12 14.9803 15.0901 -0.1098 13 0.0000 -0.0419 0.0419 14 0.0000 0.3429 -0.3429 15 0.0000 0.2457 -0.2457 16 15.3211 15.2346 0.0865 17 5.0699 5.2351 -0.1652 18 0.0000 0.2243 -0.2243 19 40.9947 40.4187 0.5760 20 0.0000 0.3497 -0.3497 21 7.7107 7.1019 0.6088 22 0.0000 -0.7894 0.7894 23 5.8724 5.5092 0.3632Data table: running 50 replications Mean differenceSigmaMax differenceMin differenceStatistics for 50 simulations -1.5-1.0-0.50.00.51.01.5 0 5 10 15 20 25 30 35 40 45 50Diﬀerence between Formula Payoﬀ Max(ST -X , 0 ) and Replica Ɵng Porƞolio Payo ﬀ 750 Chapter 29 Without too much explanation, we can do the same for a put. Redoing the mathematics for a put: Bond Bond e tt trt tt t+ ↑ +=∗ −ΔΔ Δ value of time bond position/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/dncurlybracketright/horizcurlybracketextSSN dS Stttt t tt t−() ∗+ ↑ +1,Δ Δ value of time stock position/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/dncurlybracketright /dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext /dncurlybracketright/horizcurlybracketext/horizcurlybracketext+− () =++ ↑ +SNd Btt tt ttΔΔ Δ1, desired stock position oo n de S Nd Nd trt tt t tt ∗+ − − () +−() {}++Δ ΔΔ 11,, Putting this in a simulation and running the simulation 50 times: 46 47 4849505152535455565758596061626364656667686970AB C D E F G H I J K SimulationPerfect replication PortfolioDifference: Perfect - portfolio 1 0.0000 10.5672 -10.5672 2 11.3925 0.6324 10.7602 4.0640 <-- =AVERAGE(D49:D98) 3 0.0000 10.6771 -10.6771 11.7531 <-- =STDEV.S(D49:D98) 4 0.0000 1.9068 -1.9068 38.8730 <-- =MAX(D49:D98) 5 7.4425 -0.9831 8.4256 -13.0531 <-- =MIN(D49:D98) 6 15.3637 0.2359 15.1278 7 0.0000 1.6436 -1.6436 8 3.7379 0.2299 3.5080 9 28.2190 0.0705 28.1484 10 27.3503 -0.8341 28.1844 11 5.1821 0.0421 5.1400 12 0.0000 9.1971 -9.1971 13 1.1650 -0.0918 1.2568 14 21.2614 -0.2358 21.4972 15 26.5251 -0.1598 26.6849 16 0.0000 2.6018 -2.6018 17 2.8785 0.2471 2.6314 18 9.2148 -0.4114 9.6262 19 0.0000 6.4053 -6.4053 20 1.4479 0.9499 0.4980 21 0.9231 -0.4849 1.4080 22 2.6633 1.2584 1.4049Min differenceData table: running 50 replications Statistics for 50 simulations Mean differenceSigmaMax difference -20.0-10.00.010.020.030.040.050.0 0 5 10 15 20 25 30 35 40 45 50Diﬀerence between Put Formula Payo ﬀ Max(X-ST ,0) and Replica Ɵng Porƞolio Payo ﬀ 29.3 Simulating Portfolio Insurance Options can be used to guarantee minimum returns from stock investments. As we showed in our discussion of option strategies in Chapter 15, when you purchase a stock (or a portfolio of stocks) and simultaneously purchase a put on the stock (on the portfolio), you are assured that the strategy payoff will never be lower than the exercise price on the put: 751 Simulating Options and Option Strategies Stock Put S X S SS X XS XTT TT T+= + − () => ≤⎧⎨⎩max , 0 if if It is not always possible to find marketed puts in all portfolios; in this case the Black-Scholes option pricing formula can show us how to replicate a put by a dynamic strategy in which the investment in a risky asset (be it a single stock or a portfolio) and the investment in riskless bonds changes over time to mimic the returns of a put option. Such replication strategies are at the heart of the portfolio insurance strategies discussed here. We start by considering the following simple example: You decide to invest in one share of General Pills stock, which currently costs $56. The stock pays no dividends. You hope for a large capital gain at the end of the year, but you worry that the stock ’ s price may decline. To guard against a decline in the stock ’ s price, you decide to purchase a European put on the stock. The put you purchase allows you to sell the stock at the end of 1 year for $50. The cost of the put, $2.38, is derived from the Black-Scholes model (see Chapter 17) using the following data: S 0 = $56, X = $50, σ = 30%, and r = 8%: 2 3 45 6 7AB C D E S0 56.00 0 0 . 0 5 X 1 T % 0 0 . 8 r Sigma 30% Put price 2.38 <-- =bsput(B2,B3,B4,B5,B6) This protective put or portfolio insurance strategy guarantees that you will lose no more than $6 on your share of General Pills stock. If the stock ’ s price at the end of the year is more than $50, you will simply let the put expire without exercising it. However, if the stock ’ s price at the end of the year is less than $50, you will exercise the put and collect $50. It is as if you had purchased an insurance policy on the stock with a $6 deductible. Of course this protection doesn ’ t come for free: Instead of investing $56 in your single share of stock, you have invested $58.38. You could have deposited the additional $2.38 in the bank and earned interest of 8%*$2.38 = $0.19 in the course of the year; alternatively, you could have used the $2.38 to buy more shares. 752 Chapter 29 To see how this strategy works, we perform sensitivity analysis of the strat- egy profit as a function of the terminal price of the stock S T : 9 10 11121314 15 16 1718192021 22 23 24252627282930313233343536373839AB C D E F G H I J Buy stock 56.00 <-- =B2 Buy put 2.38 <-- =B7 Total cost 58.38 <-- =B10+B11 ST 35.00 Put payoff 15.00 <-- =MAX(B3-B15,0) Total payoff 50.00 <-- =SUM(B15:B16) Profit -8.38 <-- =B17-B12 ST Stock Put Profit <-- =B23+C23-B12, data table headers (hidden) 00 50-8.37698 10 10 40 -8.37698 20 20 30 -8.37698 30 30 20 -8.37698 40 40 10 -8.37698 50 50 0 -8.37698 60 60 0 1.623024 70 70 0 11.62302 80 80 0 21.62302 90 90 0 31.62302 100 100 0 41.62302Payoff at date TPORTFOLIO INSURANCE STRATEGY Data table: Total strategy profit as function of ST -1001020304050 0 20 40 60 80 100 120Payoﬀs: Stock, Put, Total STProtecƟve Put on GP , Terminal Payo ﬀ Stock Put Proﬁt Portfolio Insurance When There Are No Traded Puts In the example above, we have implemented a portfolio insurance strategy by purchasing a put whose underlying asset exactly corresponds to our share portfolio. But this technique may not always be possible: • It could be that there is no traded put option on the shares we wish to insure. • It could also be that we want to purchase portfolio insurance on a more complicated basket of assets, such as a portfolio of shares. Puts on portfolios do exist (for example, there are traded puts on the S&P 100 and S&P 500 portfolios), but there are no traded puts on most portfolios. 753 Simulating Options and Option Strategies It is here that the Black-Scholes option pricing model comes to our aid. From this formula it follows that a put option on a stock (from here on, “stock” will be used to refer to a portfolio of stocks as well as a single stock) is simply a portfolio consisting of a short position in the stock and a long position in the risk-free asset, with both positions being adjusted continuously. For example, consider the Black-Scholes formula for a put with expiration date T = 1 and exercise price X . At time t , 0 ≤ t < 1, the put has value P S Nd X e Nd dS Xrt tdttrt t=− − () +− () =() ++() −() −−−() 11 2 1221 1ln / ,σ σ221 1 1=− − −dt t Stσ where is time remaining to maturity is the pri ice of the stock at time t Thus, buying a put is equivalent to investing Xe − r (1 − t ) N ( − d 2 ) in a risk-free bond which matures at time 1 and investing − S t N ( − d 1 ) in the stock. Since the invest- ment in the stock is negative, this means that a put is equivalent to a short position in the stock and a long position in the risk-free asset. The total investment required to buy one share of the stock plus a put on the stock is S t + P t . Writing this out and substituting in the Black-Scholes put formula gives Total investmen t protective put S P SS Nd X e Ntt ttrt, =+ =− − () +−−() 11− −() =− − () () +− () = ()+− (−−() −−()d SN dX eN d SN d X e N dtrt trt2 11 2 11 21 ) ) where the last equality uses the fact that for the standard normal distribution N ( x ) + N ( − x ) = 1. Another way of looking at this problem is to regard the total investment S t + P t at time t as a portfolio of a stock and a bond; we can then ask, What is the proportion ω t of this portfolio invested in the stock at time t ? Rewriting the formula above in terms of portfolio proportions gives 754 Chapter 29 Proportion invested in stock SN d SN d X e N dt t trt= =() ()+− (−−()ω 1 11 2) ) =− =−()−−()Proportion inv ested in risk free asset Xe N d St rt t1 1 2ω NNd X e N drt 11 2 ()+− ()−−() To sum up: If you want to buy a specific portfolio of assets and an insurance policy guaranteeing that at t = 1 your total investment will not be worth less than X , then at each point in time, t , you should invest a proportion ω t of your wealth in the specific portfolio you have chosen, and a proportion 1 − ω t in riskless, pure discount bonds that mature at t = 1. The Black-Scholes put pricing formula can be used to determine these proportions. An Example Suppose you decide to invest $1,000 in General Pills stock (currently selling at $56) and in protective puts on the shares with an exercise price of $50 and an expiration date 1 year from now. This ensures that your dollar value per share at the end of 1 year will be no less than $50. Suppose that there is no traded put on General Pills, so that you will have to create your own put by investing in the share and in riskless discount bonds. The riskless rate of inter-est is 8%, and the standard deviation of General Pills’ log return is 30%. We will construct a series of portfolios which implements this strategy on a week-by-week basis. Based on our discussion from the previous section, we know that this replication strategy will not be perfect. We simulate it to see how it works. Week 0 : At the beginning of this week, the initial investment in shares of General Pills should be: ω001 0056 0 7865 56 2 3875 45 =() +=∗ +=SN d SP. ..% 755 Simulating Options and Option Strategies with the remaining proportion, 1 − ω 0 = 24.55%, invested in riskless discount bonds maturing in 1 year. If traded European puts on GP existed and if these puts had an exercise price of 50 with an exercise date 1 year from now, these would be trading at $2.38. Your strategy would consist of buying 17.13 shares of GP (cost = $959.23) and 17.13 puts (cost = $40.77). Buying $754.40 worth of shares and $245.60 worth of bonds exactly duplicates the initial investment in 17.13 shares and 17.13 puts. This equivalence is guaranteed by Black and Scholes. The calculations of the option price and the appropriate portfolio proportions are shown in the spreadsheet picture below: 1 2 34 5 678 9 10 11C B A S 56Stock price X 50 Exercise price T 1 Time remaining r 8.00% Risk-free rate of interest Sigma 30% Stock volatility Put price 2.38 <-- call price - S + X*Exp(-r*T): by Put-Call parity Calculating the portfolio insurance proportions Omega 75.45% <-- =B2*NORM.S.DIST(done(B2,B3,B4,B5,B6),1)/(B2+B7), proportion in shares 1-omega 24.55% <-- =1-B10, proportion in bondsBlack-Scholes Option Pricing Formula Applied to General Pills Put You started at t = 0 with an initial investment of $1,000; now suppose that by the beginning of the next week ( t = 1/52 = 0.0192) the price of GP shares increased to $60. Here is your updated portfolio at the beginning of week 1. 756 Chapter 29 If, conversely the stock price at time Δ t is 52, the proportion of the stock will decrease and the proportion of the risk-free will increase: 1 2 3 45 6 789 10 11 12 13 141516 17 18 19C B A Previous stock price S t 56.00 Previous time to maturity 1.00 Time interval, t 0.0192 <-- =1/52 New time to maturity 0.9808 <-- =B3-B4 Previous portfolio 0 5 . 4 5 7 k c o t S 0 5 . 5 4 2 s d n o B Current stock price S t+ t 60.00 Stock price 2 B / 0 1 B * 8 B = - - < 9 3 . 8 0 8 k c o t S ) 4 B * 2 2 B ( P X E * 9 B = - - < 8 8 . 5 4 2 s d n o B ) 4 1 B : 3 1 B ( M U S = - - < 7 2 . 4 5 0 , 1 l a t o T Calculating the portfolio insurance proportions Proportion of stock Omega, 82.53%<-- =B10*NORM.S.DIST(done(B10,B21,B5,B22,B23), 1)/(B10+bsput(B10,B21,B5,B22,B23)) % 7 4 . 7 1 a g e m o - 1 <-- =1-B18Updating the Portfolio Insurance Proportions Current portfolio before readjustmentΔ ωΔYou can see that when the stock price increases, the portfolio proportion of the stock increases: 757 Simulating Options and Option Strategies 1 2 3 4 5 67 8 9 10 11 121314 15 1617 18 19C B A Previous stock price S t 56.00 Previous time to maturity 1.00 Time interval, t 0.0192 <-- =1/52 New time to maturity 0.9808 <-- =B3-B4 Previous portfolio 0 5 . 4 5 7 k c o t S 0 5 . 5 4 2 s d n o B Current stock price S t+ t 52.00 Stock price 2 B / 0 1 B * 8 B = - - < 1 6 . 0 0 7 k c o t S ) 4 B * 2 2 B ( P X E * 9 B = - - < 8 8 . 5 4 2 s d n o B ) 4 1 B : 3 1 B ( M U S = - - < 9 4 . 6 4 9 l a t o T Calculating the portfolio insurance proportions Proportion of stock Omega, 66.41%<-- =B10*NORM.S.DIST(done(B10,B21,B5,B22,B23), 1)/(B10+bsput(B10,B21,B5,B22,B23)) % 9 5 . 3 3 a g e m o - 1 <-- =1-B18Updating the Portfolio Insurance Proportions Current portfolio before readjustmentΔ ωΔ We now simulate this strategy over time: 1 2 3 456789 1011121314151617181920212223242526ABCD E FGH I JKLM N S0 56.00 X 50.00 T1r 8.00% Sigma 30%Mean 12%Delta_t 0.0192 <-- =1/52 Week Stock Put Omega Total wealth Stocks Bonds 0 56.00 2.38 0.7545 1,000.00 754.50 245.50 1 54.92 2.59 0.7324 985.87 722.01 263.862 54.87 2.58 0.7313 985.63 720.82 264.803 54.25 2.70 0.7175 977.88 701.66 276.224 52.34 3.19 0.6711 953.57 639.93 313.655 52.21 3.20 0.6671 952.40 635.33 317.076 52.76 3.02 0.6808 959.60 653.32 306.277 52.93 2.94 0.6850 962.26 659.15 303.108 52.73 2.97 0.6794 960.16 652.30 307.869 52.33 3.05 0.6684 955.70 638.76 316.94 10 52.34 3.02 0.6684 956.39 639.22 317.17 11 50.36 3.62 0.6104 932.64 569.25 363.39 12 50.26 3.63 0.6060 932.01 564.80 367.21 13 49.05 4.05 0.5661 919.00 520.28 398.73 14 46.24 5.24 0.4675 889.84 416.01 473.83Beginning of week Wealth PORTFOLIO INSURANCE STRATEGY Formulas--in cell F12: =D12*E12 in cell G12: =E12*(1-D12) 0102030405060 7508008509009501,0001,050 1 6 11 16 21 26 31 36 41 46 51 Stock priceTotal wealth WeekPortfolio Insured Wealth Total Wealth and Stock Price over 52 Weeks Total wealth Stock 758 Chapter 29 In the above simulation, the stock price decreased during the year, and the final proportions of the portfolio insurance strategy will be wholly in the risk- free asset. Below we present another possibility: The stock price increases over the year, and the portfolio proportions are increasingly in the stock, with the bond going to zero. 010203040506070 02004006008001,0001,200 1 6 11 16 21 26 31 36 41 46 51 Stock priceTotal wealth WeekPortfolio Insured Wealth Total Wealth and Stock Price over 52 Weeks Total wealth Stock 02004006008001,0001,200 0 5 10 15 20 25 30 35 40 45 50Portfolio Insured Wealth Stock and Bond Portfolio over 52 Weeks Stocks Bonds 29.4 Some Properties of Portfolio Insurance The preceding example illustrates some of the typical properties of portfolio insurance. Three important properties are the following: PROPERTY 1 When the stock price is above the exercise price X , then the proportion ω invested in the risky asset is greater than 50%. Proof The proof of this property requires a little manipulation of our formula for ω . Rewrite ω as: ω=() ()+− ()= +−() ()−−() −−()SN d SN d Xe N d Xe N d SN drt rt1 11 21 2 11 1 We will show that when S ≥ X , the denominator of ω is < 2, which will prove the proposition: First note that when S ≥ X , X/S ≤ 1. Next note that e − r (1- t ) < 1 for all 0 ≤ t ≤ 1. Finally, examine the expression 759 Simulating Options and Option Strategies Nd NdNt d Nd Nt S X r t t−() ()=−−( ) () =−− () +− [] −(2 11 11 05 1 1 1σ σσ.l n ( ) / ) ) ( ) −+ () +− [] −() ( )< Nt S X r t t05 1 1 11 .l n ( ) /σσ This proves the property. PROPERTY 2 When the stock ’ s price increases the proportion ω invested in the stock increases and vice versa. Proof To see this property, it is enough to see that when S increases, the value of the put decreases and N (- d 1 ) decreases. Rewrite the original definition of ω as: ω=−−() [] +=−−() [] +SN d SPNd PS11 111 / Thus, when S increases, the denominator of ω decreases and the numerator increases, which proves Property 2. PROPERTY 3 As t → 1, one of two things happens: If S t > X , then ω t → 1. If S t < X , then ω t → 0. Proof To see this, note that when S t > X and t → 1, N(d 1 ) → 1 and N(-d 1 ) → 0; thus for this case ω t → 1. Conversely, when S t < X and t → 1, N(d 1 ) → 0 and N(-d 1 ) → 1 and thus ω t → 0. (Strictly speaking these statements are only true as “probability limits”—see Billingsley 1968. What about the case when, as t → 1, S t /X → 1? In this case ω t → ½. However, the probability of this occurring is zero.) 29.5 Digression: Insuring Total Portfolio Returns We digress slightly to consider an interesting portfolio insurance problem. So far we have considered only the problem of constructing artificial puts, one 760 Chapter 29 per share. A slightly different version of this problem involves constructing a portfolio of puts and shares that guarantees the total dollar returns on the total initial investment. A typical story goes like this: You have $1,000 to invest, and you want to guarantee that a year from now you will have at least $1,000 z . Here z is some number, generally between 0 and 1; for example, if z = 0.93, this means that you want your final wealth to be at least $930. 2 You want to invest in a stock whose current price is S 0 and in a put on the stock with an exercise price X . You want the number of puts to be equal to the number of shares, so that each “package” of share + put costs you S 0 + P ( S 0 , X ). To implement the strategy, you must therefore buy α shares, where: α=+()1 000 00, , SP S X Since you have bought α shares and α puts with an exercise price of X , the minimum dollar return from your portfolio is α X . You want this to be equal to 1,000 z , and therefore you solve to get α = 1,000 z/X . Thus you can guarantee your minimum return if SP S X X z00+() = ,/ Here ’ s a spreadsheet implementation of this equation. The data table shows the graph of S 0 + P ( S 0 , X ) − X / z ; where this graph crosses the x-axis is the solution for the put exercise price X when S 0 = 56, σ = 30%, r = 6%, T = 1, and z = 93%. 2. As we show below, it is possible to insure (up to a point) even with z > 1. 761 Simulating Options and Option Strategies As you can see, the X for which the equation in cell B12 equals zero is between 56 and 57. We can use Solver to find the exact value, X = 56.4261: 1 2 3 4 5 6789 1011 12 13141516171819202122232425262728293031AB C D z 0.9300 Insurance level S0 56.0000 Current stock price X 56.4261 Exercise price T 1 Time to maturity of option (in years) r 8.00% Risk-free rate of interest Sigma 30% Stock volatility Alpha 16.4817 <-- =1000/(B4+ bsput(B4,B5,B6,B7,B8)) Equation to be solved 0.00 <-- =B4+bsput(B4,B5,B6,B7,B8)-B5/B2 Exercise price ↓ 0.00 <-- =B12, data table header 50 4.6135 51 3.8358 52 3.0800 53 2.3463 54 1.6348 55 0.9453 56 0.2778 57 -0.367958 -0.992259 -1.595360 -2.1776INSURING TOTAL PORTFOLIO RETURNS Data table: Sensitivity of B12 on X -3.0-2.0-1.00.01.02.03.04.05.0 50 51 52 53 54 55 56 57 58 59 60 Exercise XAt Which X to Create a Synthe Ɵc Put? 762 Chapter 29 Solver gives the solution to the equation S 0 + Put ( S 0 , X ) − X / z = 0. The solu- tion is indicated in the next picture: 1 2 3 4 5 6789 10111213141516171819AB C z 0.9300 Insurance level S0 56.0000 Current stock price X 56.4261 Exercise price T 1 Time to maturity of option (in years) r 8.00% Risk-free rate of interest Sigma 30% Stock volatility Alpha 16.4817 <-- =1000/(B4+bsput(B4,B5,B6,B7,B8)) Equation to be solved 0.00 <-- =B4+bsput(B4,B5,B6,B7,B8)-B5/B2 Check Cost of shares 922.98 <-- =B10*B4 Cost of puts 77.02 <-- =B10*bsput(B4,B5,B6,B7,B8) Total cost 1,000.00 <-- =B15+B16 Minimum portfolio return 930.00 <-- =B10*B5INSURING TOTAL PORTFOLIO RETURNS 763 Simulating Options and Option Strategies The solution is to buy α = 16.4817 puts and shares (the cost of which is $1,000, as you can see in cell B19). The minimum return of this portfolio is 16.4817* X = $930 (cell B19). Can You Insure for More Than Your Initial Investment? When we raise the insurance level, the implied exercise price of the put must go up. This means that as we buy more insurance, we spend relatively more of our $1,000 on puts (insurance) and relatively less on the stocks (which have the upside potential). Can we insure for more than our current level of investment? To put it another way, can we set z > 1? This means that we are picking an insurance level which guarantees that we end up with more than our initial investment. A little thought and some calculations reveal that we can indeed choose z > 1 as long as z ≤ 1 + r . That is: We cannot guarantee ourselves a return greater than the riskless interest rate! To see this, we offer two examples. In the first example below, we solve for z = 1.08 = 1 + r . This has a solution (note that the value of cell B12 is zero): 1 2 3 4 5 6 789 10111213 14 151617 18 19C B A l e v e l e c n a r u s n I 0 0 8 0 . 1 z S0 56.0000 Current stock price e c i r p e s i c r e x E 8 6 3 8 . 4 0 1 X ) s r a e y n i ( n o i t p o f o y t i r u t a m o t e m i T 1 T t s e r e t n i f o e t a r e e r f - k s i R % 0 0 . 8 r y t i l i t a l o v k c o t S % 0 3 a m g i S ) ) 8 B , 7 B , 6 B , 5 B , 4 B ( t u p s b + 4 B ( / 0 0 0 1 = - - < 7 1 0 3 . 0 1 a h p l A Equation to be solved 0.00 <-- =B4+bsput(B4,B5,B6,B7,B8)-B5/B2 Check Cost of shares 576.90 Cost of puts 423.10 Total cost 1,000.00 Minimum portfolio return 1,080.00 <-- =B10*B5INSURING TOTAL PORTFOLIO RETURNS 764 Chapter 29 When z > 1.08, however, there is no solution. Returning to the first chart of this section, we can see that there is no solution that insures for 9% ( z = 1.09) that is > the interest rate of 8%: 1 2 3 4 5 6789 1011 12 131415161718192021222324252627282930AB C D z 1.0900 Insurance level S0 56.0000 Current stock price X 56.4261 Exercise price T 1 Time to maturity of option (in years) r 8.00% Risk-free rate of interest Sigma 30% Stock volatility Alpha 16.4817 <-- =1000/(B4+bsput(B4,B5,B6,B7,B8)) Equation to be solved 8.91 <-- =B4+bsput(B4,B5,B6,B7,B8)-B5/B2 Exercise price ↓ 8.91 <-- =B12, data table header 50 12.505455 9.6264 60 7.2927 65 5.4649 70 4.0756 75 3.0466 80 2.3018 85 1.7738 90 1.4072 95 1.1581 100 0.9932INSURING TOTAL PORTFOLIO RETURNS Data table: Sensitivity of B12 on X 0.02.04.06.08.010.012.014.0 50 60 70 80 90 100 Exercise XLooking for put X that gives Insurance level of z =1.09 765 Simulating Options and Option Strategies 29.6 Simulating a Butterfly For our last exercise in this chapter, we simulate a butterfly strategy. Recall from Chapter 15 that a butterfly consists of three options. In this section we simulate a butterfly over 1 month (22 days), rebalancing the position daily. Our butterfly consists of three calls written on a stock with current price S 0 = 35. We assume that the stock return is lognormal with σ = 35% and that r = 2%. The calls: • Call 1: X = 20, position: 1 call purchased • Call 2: X = 35, position: 2 calls written • Call 3: X = 50, position: 1 call purchased The payoff/profit pattern of the butterfly is described below: 766 Chapter 29 We recall the Black-Scholes formula and denoting the time remaining to option maturity by t : 1 2 3 456789 10111213 14 15 16171819 20 21 22 23242526272829303132333435363738ABCDEFGH S0 35 T 0.087302 <-- =22/252Sigma 80%r2 % XP o s i t i o n C o s t Call1 20 1 15.05 <-- =bscall($B$2,B8,$B$3,$B$5,$B$4) Call2 35 -2 3.32 <-- =bscall($B$2,B9,$B$3,$B$5,$B$4) Call3 50 1 0.29 <-- =bscall($B$2,B10,$B$3,$B$5,$B$4) Initial cost 8.70 <-- =SUMPRODUCT(C8:C10,D8:D10) S T 47 Profit1 11.95 <-- =C8*(MAX($B$14-B8,0)-D8) Profit2 -17.36 <-- =C9*(MAX($B$14-B9,0)-D9)Profit3 -0.29 <-- =C10*(MAX($B$14-B10,0)-D10) Total -5.70 <-- =SUM(B15:B17) S T Payoff -5.70 <-- =B18 0 -8.705 -8.70 10 -8.7015 -8.7020 -8.7025 -3.7030 1.3035 6.3040 1.3045 -3.7050 -8.7055 -8.7060 -8.7065 -8.7070 -8.7075 -8.70One profit example (used in data table) Data table: profit as function of S TBUTTERFLY -10-8-6-4-202468 0 1 02 03 04 05 06 07 08 09 0BuƩerﬂy pro ﬁt Terminal stock price, STBuƩerﬂy Pro ﬁt 767 Simulating Options and Option Strategies Call X SN d t Xe N d t dSXrt tdd trT()= () − () =()++()=−− 12 12 212,, ln ,σ σσ In a table for the butterfly: N Low calls Call X t N SN d X t X e N d X t dXLow Low Low LowrT Low ,, , () = ()() − ()() []− 12 1 LLowLow Low Low tSXrt tdX t dX t t ,ln ,, , () =() ++()() =() −σ σσ2 212 N Mid calls Call X t N SN d X t X e N d X t dXMid Mid Mid MidrT Mid ,, , () = ()() − ()() []− 12 1 MMidMid Mid Mid tSXrt tdX t dX t t ,ln ,, , () =() ++()() =() −σ σσ2 212 N High calls Call X t N SN d X t X e N d X t High High High HighrT High ,, , () = ()() − ()()− 12 [[] () =( )++() () = dX tSXrt tdX t dX t HighHigh High High 12 212,ln ,, ,σ σ(() −σt Adding these together we get Butterfly t S N N d X t N N d X t NtL o w L o w M i d M i d Hig()=∗ ()() +∗ ()() { +11 ,, hhH ighrT Low Low Low Mid MidNd X t e N X Nd X t NX N∗ ()() }+− ∗ ()() { +∗− 12 ,, ddX t N X N dX t Mid High High High 22 ,, ()() +∗ ()() } Newly defined VBA functions: Butterfly t S t ()=∗ butterflyNd X X X N N N Low Mid High Low Mid Hig1, ,, , , hht Low Mid High Low MidSX t r butterflyNd X X X N N,,, , , ,, ,,,σ () −−erT2N NS X t rHigh t,,, , , σ () The VBA function ButterflyNd1 is defined below (the function ButterflyNd2 is similar): 768 Chapter 29 Function butter ﬂ yNd1(XLow, XMid, XHigh, _ NumberLow, NumberMid, NumberHigh, Stock, _ Time, Interest, sigma) butter ﬂ yNd1 = Stock * _ (NumberLow * Application.Norm_S_Dist _ (dOne(Stock, XLow, Time, Interest, sigma), 1) _ + NumberMid * Application.Norm_S_Dist _ (dOne(Stock, XMid, Time, Interest, sigma), 1) _ + NumberHigh * Application.Norm_S_Dist _ (dOne(Stock, XHigh, Time, Interest, sigma), 1)) End Function Self-Financing Butterfly Portfolio We attempt to replicate this position dynamically, maintaining the self- financing requirement (i.e., no cash flows after time t = 0). At time t = 0, we define the investment in the stock and the bond as above. Stock SNN d X t N N d X t NLow Low Mid Mid High000 011()=∗= ()() +∗ = ()() +,, ∗∗= ()()⎧ ⎨⎩⎫⎬ ⎭ Nd X t High 1 0 , Afterward, at time t + Δ t , we define the stock investment as above and adjust the bond investment to net out the stock: Stock t t SNN d X t t N d X t t ttLow Low Mid Mid+() =∗+ ()() +∗ + ()( + ΔΔΔ Δ11 ,, ) ) +∗ + ()()⎧ ⎨⎩⎫⎬ ⎭ NN d X t t High High 1 ,Δ Cash Flow from the Stock Position The cash flow from the stock position is the value of the time t position minus the value of the time t + Δ t position. 769 Simulating Options and Option Strategies Stock cash flow t t Stock tS SStock t t S SNtt t tt tL+() = ()∗− + () =+ +ΔΔΔ Δ oow Low t Mid Mid t High HighNd X S t N Nd X S t NN d X∗ ()() +∗ ()() { +∗11 1,, ,, ,, , ,, ,St SN N dX S t t N dX St ttLow Low t t Mid Mid()() }− ∗+ ()() +∗ ++ ΔΔ Δ 11 ttt High High t ttt Nd X S t t+ ++ ()() +∗ + ()()⎧ ⎨⎩⎫⎬ ⎭ Δ ΔΔ Δ, ,, 1 In Excel: S Stt t+∗ΔbutterflyNd X X X N N N S X t Low Mid High Low Mid High t1, ,, , ,, , , , , , ,, ,,, , ,r butterflyNd X X X N N N S Low Mid High Low Mid High t tσ () − + 1 ΔXXt tr,, ,+ () Δσ Zero-Investment Cash Flow from the Bond Position In order to define a self-financing strategy, we let the bond position at each time t “absorb” the change in the stock position. At time t = 0, the bond posi- tion is Bond eNX N d X N X N d X NrTLow Low Low Mid Mid Mid Hi022()=−∗ ()() +∗ ()() +− ggh High High XN d X∗ ()()⎧ ⎨⎩⎫⎬ ⎭ 2 At time t + Δ t , the bond position is the previous position minus the cash flow on the stock position: Bond t Bond t e S Srt tt t() *, ,+= ()∗ −+ΔΔ ΔbutterflyNd X X X Low Mid High1, , , , ,,,, ,, ,NNNS X t r butterflyNd X X XLow Mid High t Low Mid Highσ () − 1N NNNSX t t rLow Mid High t t,, ,, , , , + + ()⎧ ⎨⎪ ⎩⎪⎫ ⎬⎪ ⎭⎪Δ Δσ The cash flow on the bond position is Bond cash flow t t Bond t e Bond t t Bond t ert rt+() = ()∗− + () = ()∗−ΔΔΔ ΔBBond t e S Srt tt t()∗ +∗+Δ ΔbutterflyNd X X X N N Low Mid High Low Mi1, ,, , ddH i g h t Low Mid High Low MidNS X t r butterflyNd X X X N N,, , , , ,, ,,σ () − 1, , , ,, ,, NSX t t rHigh t t + + ()⎧ ⎨⎪ ⎩⎪⎫ ⎬⎪ ⎭⎪Δ Δσ 770 Chapter 29 Running the Simulation We run the simulation: 1 2 3 4 5 67 8 9 10 11 1213 14 15 16 1718 19 20 21 2223 24 25 26 2728 29 30 31 32 33 3435 36AB C D E F GH S0 r e b m u N X y l f r e t t u B 5 3 T 0.0873 <-- =22/252 Xlow 20 -1 2 5 3 d i m X % 0 8 a m g i S 1 - 0 5 h g i h X % 2 r Delta_t 0.0040 <-- =1/252 Time to maturity StockStock positionBond position 0.0873 35.0000 0.8045 -9.50360.0833 34.9221 0.6791 -9.3806 0.0794 34.6785 0.0585 -8.76560.0754 39.2902 12.4606 -21.1606 0.0714 35.4297 2.5165 -12.4425 0.0675 35.7399 3.6778 -13.5827 0.0635 37.6961 10.1079 -19.8126 0.0595 39.5127 15.6702 -24.88940.0556 39.3373 16.0412 -25.3320 0.0516 40.0574 18.7535 -27.7526 0.0476 37.8111 12.9252 -22.9781 0.0437 39.6546 19.8128 -29.2374 0.0397 38.0253 15.3452 -25.58610.0357 39.1652 20.6678 -30.4508 0.0317 37.0963 12.9733 -23.8505 0.0278 37.8587 17.7407 -28.3531 0.0238 37.6234 17.7742 -28.4991 0.0198 36.2854 10.6435 -22.0028 0.0159 39.9963 32.6490 -42.9215 0.0119 38.3893 28.0061 -39.5939 0.0079 39.5149 36.2603 -47.0300 0.0040 38.1897 35.1787 -47.1683 0.0000 37.5170 34.5591 -47.1720 Formula -12.4830 <-- =G3*MAX(B32-F3,0)+G4*MAX(B32-F4,0)+G5*MAX(B32-F5,0) Simulation -12.6129 <-- =SUM(C32:D32)SIMULATING A BUTTERFLY <-- =D10*EXP($B$5*Delta_t)+B11/B10*butterflyN d1($F$3,$F$4,$F$5,$G$3,$G$4,$G$5,B10,A1 0,$B$5,$B$4)- butterflyNd1($F$3,$F$4,$F$5,$G$3,$G$4,$G$ 5,B11,A11,$B$5,$B$4) Comparison of formula payoff to simulation payoffButterfly simulation 771 Simulating Options and Option Strategies Repeating this simulation 50 times and comparing the formula payoff (B35) to the simulation payoff (B36): 34 353637383940414243444546474849505152535455565758596061626364AB C D EF G H I Formula -3.0153 <-- =G3*MAX(B32-F3,0)+G4*MAX(B32-F4,0)+G5*MAX(B32-F5,0)Simulation -2.2116 <-- =SUM(C32:D32) Run -0.8037 <-- =B35-B36, data table header 1 0.4614 2 -0.87213 -0.2146 Average 0.0329 4 0.3714 Sigma 1.3119 5 -2.3605 Max 4.2486 6 -1.1354 Min -4.0611 7 1.12938 -2.09899 -0.4745 10 0.132811 -0.094712 1.790613 1.523514 4.248615 -0.640416 0.618717 -0.120018 -0.457619 -0.856520 0.923021 -0.011722 0.305323 0.055124 1.0346<-- =MAX(B41:B90)<-- =MIN(B41:B90)Statistics for 50 runs: Formula payoff-simulation <-- =AVERAGE(B41:B90)<-- =STDEV.S(B41:B90)Data table: 50 runs of the simulationComparison of formula payoff to simulation payoff -5-4-3-2-1012345 0 5 10 15 20 25 30 35 40 45 50Formula payo ﬀ minus Simula Ɵon payoﬀ 29.7 Summary This chapter concentrated on simulating option replication strategies. All of the replication strategies are based on the idea that the Black-Scholes formula gives the dynamic investment over time in the risky and riskless asset. When implementing this idea, we had to adjust this dynamic formula so that the net investment over time is zero (the so-called self-financing or zero-investment strategies). The replication strategies then become somewhat less than perfect, so that the terminal payoff of these strategies matches the formula 772 Chapter 29 payoff only approximately. For more complicated strategies (we illustrated for a butterfly), the mismatch between the formula and the strategy payoff can be significant. Exercises 1. You are a portfolio manager, and you want to invest in an asset having σ = 40%. You want to create a put on the investment so that at the end of the year you have losses no greater than 5%. Since there is no put on this specific asset, you plan to create a synthetic put by engaging in a dynamic investment strategy—purchasing a portfolio composed of dynami-cally changing proportions of the risky asset and riskless bonds. If the interest rate is 6%, how much should your initial investment be in the portfolio and in the riskless bond? 2. Simulate the above strategy, assuming weekly rebalancing of the portfolio. 3. Go back to the numerical example of section 29.5. Write a VBA function which solves for the implied asset value V a . (Hint: Use the bisection method discussed to compute the implied volatility in section 17.5.) Then use this function to create a graph showing the trade-off between the implied asset value and the asset volatility. 4. You have been offered the chance to purchase stock in a firm. The seller wants $55 per share, but offers to repurchase the stock at the end of one half year for $50 per share. If the σ of the share ’ s log returns is 80% determine the true value per share. Assume that the interest rate is 10%. 5. A covered call is a long stock and short call. The pattern of payoffs is given below: 773 Simulating Options and Option Strategies 1 2 3 4 5 6 7 8 9 10 11 12 13 14 151617 18 19202122 23 242526 27 282930AB C D E F G H Future stock price, S T 50 Call exercise price, X 45 6 e c i r p l l a C Payoffs at T Long stock, +S T 50 <-- =B2 Short call payoff, -Max[S T-X,0] -5 <-- =-MAX(B2-B3,0) 8 B + 7 B = - - < 5 4 f f o y a p l a t o T Data table of payoffs Future stock price, S T 45 0 0 5 5 0 1 0 1 5 1 5 1 0 2 0 2 5 2 5 2 0 3 0 3 5 3 5 3 0 4 0 4 5 4 5 4 5 4 0 5 5 4 5 5 5 4 0 6 5 4 5 6 5 4 0 7 5 4 5 7COVERED CALL PROFIT PATTERN 05101520253035404550 0 1 02 03 04 05 06 07 08 0 Stock price, S T In this problem, you are asked to simulate the payoffs of a covered call over 52 weeks, with weekly updating of the positions. Start by deriving the formula for the covered call: Add together the Black-Scholes price and the stock price: S S Nd X e Nd SrT 00 1 2 0 ↑− ↑− ()+ () = Long stock Short call/verticalbraceright/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /dncurlybracketright /horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext1 1 12 −() () + () ↑− ↑Nd X e NdrT Long position in stockLong po/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext ssition in bond/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext Thus we see that a covered call is a long position in the stock and a long position in the bond. Now implement the following spreadsheet to test the effectiveness of a simulated covered call strategy. 6. Section 29.2 discusses the cashless replication of a call. Use the same logic to program in a spreadsheet the replication of a put. 3 0 Using Monte Carlo Methods for Option Pricing 30.1 Overview This chapter continues the discussion of the previous chapter and shows how to implement Monte Carlo methods for pricing options. The main objective is to show how to price Asian options and barrier options. Both of these options are path dependent : Their payoffs depend not just on the terminal price of an underlying asset but also on the intermediate asset prices before the terminal price. An Asian option has a payoff which depends on the average price of the underlying asset for some period before option maturity, and a barrier option ’ s payoff depends on the underlying price reaching a particular level at some point before maturity. In sections 30.6–30.9 we will make these general state-ments more explicit. What Does Risk Neutrality Mean? Consider a situation in which there are two basic securities, a riskless bond and a stock. The interest rate on the bond is called the risk-free rate and is usually denoted by r . In the context of this situation of two basic assets, “risk- neutral pricing” can have two meanings. In both meanings of risk-neutrality derivative (i.e., non-basic) securities are priced as the discounted value (at the risk-free rate) of their expected payoffs. The two meanings of risk neutrality differ in the procedure used to arrive at the payoffs of the risky basic security (the stock). • In the first meaning of risk neutrality, we change the underlying distribution of the stock ’ s returns so that the expected stock price is one plus the risk-free rate. To price an option we apply the basic risk-neutral pricing principle of discounting the expected option payoffs by the risk-free rate. In this use of risk neutrality, we transform the stock ’ s returns but compute the expected payoffs using the actual return probabilities. We illustrate this procedure in section 30.2. • The second meaning of risk neutrality uses the binomial model (see Chapter 16). We transform the state prices into risk-neutral probabilities. In this use of risk neutrality, we do not transform the stock ’ s payoffs but instead replace the actual state probabilities by the equivalent risk-neutral probabilities. We then price derivative securities by discounting their expected payoffs at the risk-free rate. 776 Chapter 30 The first method of pricing is ideal for pricing options whose payoffs depend only on the terminal price of the stock. We call such options path independent . The second method is more general and can in principle be used to price any option, even if the payoffs are path dependent. Examples of such options explored in this chapter are Asian and barrier options. Both these options are path-dependent options—options whose price depends not only on the termi-nal price of the asset, but also on the path of the prices by which the terminal price was reached. In general a path-dependent option does not have an ana-lytic price solution. Monte Carlo provides us with a handy numerical tool for pricing such options. Monte Carlo pricing of path-dependent options depends on a simulation of the price path of the underlying asset. The Structure of This Chapter In section 30.2 we show how the first risk-neutrality pricing principle (trans-forming the stock ’ s returns) can be used to Monte Carlo price a standard call and a put. We then continue with the second meaning of risk neutrality and show how it can be used to price barriers and Asian options. To make this chapter more self-contained we include a brief review of state prices and risk neutrality (section 30.3). We then show, in section 30.4, how to price a plain-vanilla option with a Monte Carlo algorithm. Since plain-vanilla options—jargon by which we simply mean European calls and puts on a stock whose price process is lognormal—are accurately priced using the Black-Scholes formula, this exercise allows us to check our pricing method against a known result and also allows us to develop the proper intuitions about the Monte Carlo pricing of more complicated options. 30.2 Pricing a Plain-Vanilla Call Using Monte Carlo Methods In this section we explore the pricing of standard European calls and puts using Monte Carlo. We employ the first meaning of risk neutrality discussed in section 30.1, transforming the returns on the stock so that the stock ’ s expected return is the risk-free rate and then discounting the expected option payoffs at the risk-free rate. To use this complicated model to price European calls and puts with Monte Carlo methods might be viewed as an immense waste of time—the Black-Scholes formula (Chapter 17) gives a wonderful pricing solution for European calls and puts. However, like the example of estimating the value of 777 Using Monte Carlo Methods for Option Pricing π discussed in Chapter 25, the exercise of pricing a plain-vanilla call using Monte Carlo methods gives us considerable insight into the application of Monte Carlo methods. The Procedure Consider a call on a stock with the parameters given below. This call can be priced using the Black-Scholes formula. We will show how our first risk-neutral procedure of transforming the returns can be used to price this call using Monte Carlo. 1 2 3 45678AB C S0 50 X4 4 T 1 r5 % Sigma 15% Black-Scholes call price 8.5417 < -- =BSCall(B2,B3,B4,B5,B6)BLACK-SCHOLES CALL PRICE We now simulate the option price as follows: • Step 1: We simulate a set of stock prices at time T . The stock prices have the property that they are lognormally distributed with mean r and standard deviation σ . To do this we assume that the stock prices have mean r − σ 2 /2 and standard deviation σ . • Step 2: We compute the terminal payoffs of our option for these stock prices: max( S T − X ,0). • Step 3: We compute the average discounted payoff: exp[ − r * T ]* Average [max( S T − X ,0)]. This should be the same as the Black-Scholes price (and approximately it is). Why Do We Assume That the Stock ’ s Mean Return Is r − σ 2 /2? Suppose that the stock returns are normal with mean μ and standard deviation σ . As discussed in Chapter 26, this means that the expected stock price is S 0 exp[( μ + σ 2 /2) t ]. In our first meaning of risk neutrality, we want to transform the return distribution so that the expected price has mean r . We do this by 778 Chapter 30 replacing μ by r − σ 2 /2. This guarantees that the expected future price of the stock grows at rate r , which is the basic condition for the risk-neutral pricing: St S r t S r t 02 022 0 22 2 exp exp exp μσ σ σ +()[] =− () + ()[] = [] Step 1: Generating the Price Data Having cleared up this theoretical issue, we now return to our computations. We first generate 1,000 future stock prices. Each price is generated using: SS r T T ZT=∗ −⎛ ⎝⎜⎞⎠⎟∗+∗ ∗⎡ ⎣⎢⎤⎦⎥ 02 2expσσ Here Z is the standard normal deviate produced, as illustrated in Chapter 26, by the Excel function Norm.S.Inv(Rand( )) . Here ’ s some sample data: 1 2 3 4 56789 10111213141516AB C D E F G H I Simulated time T stock pricesStock prices S0 50 50.4594 Count 1,000 <-- =COUNT(D:D) X 44 57.3000 Max 80.5565 <-- =MAX(D:D) T 1 43.1088 Min 32.7373 <-- =MIN(D:D) r 5% 62.2230 Average 52.6528 <-- =AVERAGE(D:D) Sigma 15% 70.9889 Sigma 7.9982 <-- =STDEV.S(D:D) 54.0741 Black-Scholes call price 8.5417 55.4966 56.7003 Return 5.17% <-- =LN(H6/B3) 60.0961 Sigma of return 15.19% <-- =H7/H6 41.830845.563544.9597 Return 5.13% <-- =EXP(B6*B5)-1 59.0905 Sigma of return 15.00% <-- =B7 50.5293Theoretical statisticsSIMULATING RISK-NEUTRAL STOCK PRICES The terminal stock prices S T in column D have standard deviation σ and expected return r <-- =$B$3*EXP(($B$6-$B$7^2/2)*$B$5+$B$7*SQRT($B$5)*NORM.S.INV(RAND())) <-- =BSCall(B3,B4,B5,B6,B7)Data statistics Steps 2 and 3 We now use the sample data to compute the payoffs of our option. Below we compute the call payoff for each simulated stock price (column E), and in cell B10 we compute the discounted value (at the risk-free rate) of the average of these payoffs exp[ − r * T ]* Average [max( S T − X ,0)]. As predicted, this discounted average closely matches the Black-Scholes price. 779 Using Monte Carlo Methods for Option Pricing The same procedure works for puts: 1 2 3 4 56789 101112AB C D E F Simulated time T stock pricesSimulated call payoff S0 50 47.3920 3.3920 <-- =MAX(D3-$B$4,0) X 44 57.7402 13.7402 <-- =MAX(D4-$B$4,0) T 1 46.5386 2.5386 <-- =MAX(D5-$B$4,0) r 5% 62.5030 18.5030 Sigma 15% 60.6115 16.6115 59.3324 15.332463.4439 19.4439 Discounted average payoff 8.6400 < -- =EXP(-B6*B5)*AVERAGE(E:E) 58.7748 14.7748 Black-Scholes call price 8.5417 <-- =BSCall(B3,B4,B5,B6,B7) 71.8958 27.8958 47.4755 3.4755PRICING A CALL WITH SIMULATED RISK-NEUTRAL PRICES 1000 simulations (columns D, E) Call option valuation Digital Option To show the power of this method, suppose we wish to price a security that pays off the second digit of the terminal stock price. As an example: If the S T = 43.5323, our “digital security” pays off 3; if S T = 50.5323, the payoff is 0. (Why anyone would want to buy such a security is a separate question.) The spreadsheet below shows that this security can easily be priced using the Monte Carlo method explained in this section. We simulate 1,000 stock 1 2 3 4 56789 101112AB C D E F Simulated time T stock pricesSimulated call payoff S0 50 59.8926 0.0000 <-- =MAX($B$4-D3,0) X 44 52.6776 0.0000 <-- =MAX($B$4-D4,0) T 1 62.4782 0.0000 <-- =MAX($B$4-D5,0) r 5% 67.1018 0.0000 Sigma 15% 62.4515 0.0000 53.0296 0.000046.7010 0.0000 Discounted average payoff 0.3801 <-- =EXP(-B6*B5)*AVERAGE(E:E) 43.4355 0.5645 Black-Scholes call price 0.3958 <-- =bsput(B3,B4,B5,B6,B7) 73.7133 0.0000 53.5770 0.0000PRICING A PUT WITH SIMU LATED RISK-NEUTRAL PRICES 1000 simulations (columns D, E) Put option valuation 780 Chapter 30 30.3 State Prices, Probabilities, and Risk Neutrality In the remainder of this chapter we use the second meaning of risk neutrality discussed in section 30.1: In the framework of a binomial model, we compute risk-neutral state probabilities which are then used to compute the expected payoffs of derivative securities. Our main focus will be on the pricing of barrier and Asian options, but the principles are general and can be applied to most derivatives. In this section we start with a brief recapitulation of the basic facts about state prices and risk-neutral pricing discussed in Chapter 16. Suppose we have binomial framework with stock price S which grows at U or D in every period. Suppose the interest rate is R . 1 Risk neutrality is a property of every set of state prices: Given state prices qRD RU DqUR RU DUD=− −()=− −()⎧⎨⎩⎫⎬⎭, , the risk-neutral probabilities are defined by { π U = Rq U , π D = Rq D }. The risk-neutral probabilities can be used to price assets by taking the discounted expected 1 2 3 4 56789 1011AB C D E F Simulated time T stock pricesSimulated call payoff S0 50 53.6894 3.0000 <-- =INT(MOD(D3,10)) X 44 49.2395 9.0000 <-- =INT(MOD(D4,10)) T 1 44.3635 4.0000 <-- =INT(MOD(D5,10)) r 5% 45.7508 5.0000 Sigma 15% 44.5083 4.0000 57.4873 7.000048.8942 8.0000 Discounted average payoff 4.2606 <-- =EXP(-B6*B5)*AVERAGE(E:E) 46.8333 6.0000 46.5321 6.0000DERIVATIVE PAYS OFF SECOND DIGIT OF TERMINAL STOCK PRICE Digital option valuation 1. Properly speaking, U , D , and R are one plus the growth and interest rates. For the sake of linguistic parsimony, we well use “up growth,” “down growth,” and “interest rate” even though we mean something slightly different. prices and use the Excel function Int(Mod(S T ,10) to determine the second digit of the terminal stock price: 781 Using Monte Carlo Methods for Option Pricing value of the asset payoffs. 2 An asset with payoffs one period hence of { Payoff U , Payoff D } in states U and D respectively has value today of: Asset value today q Payoff q PayoffPayoff Payoff RUU DDUU DD=+=+ ↑ππ Thhe risk-neutral expected payoff expectation computed with ( tthe risk-neutral probabilities discounted at the risk-fre) e e interest rate./dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /dncurlybracketright /horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext The { Payoff U , Payoff D } are usually functions of the underlying asset price. For an ordinary call, for example, { Payoff U = max( S * U − X ,0), Payoff D = max( S * D − X ,0)}. We can extend the risk-neutral pricing scheme to multi-period frameworks. Consider a multi-period binomial setting where U and D do not change over time, and indicate the date n state payoffs by Payoff n,j , j = 0, … , n . This notation Payoff n,j indicates the date- n payoff of the asset in a state where there are j up moves on the binomial tree; for a call in a binomial framework Payoff n,j = Max ( S * U j D n − j − X ,0). Then the value of this asset is given by Asset value todayn jq q PayoffRn jUj Dnj nj jn n=⎛ ⎝⎜⎞⎠⎟ =⎛⎝⎜⎞⎠⎟ − =∑ , 01πππUj Dnj nj jn Payoff− = ↑∑ , 0 The risk-neutral expected discounted d value./dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext This particular notation assumes that the tree is recombining . It assumes, in other words, that the date- n payoffs are path independent —the option payoff is a function only of the terminal stock price and does not depend on the path by which this price is reached (see Figure 30.1 ). We return to this topic later in this chapter. 2. As discussed in Chapter 16, the risk-neutral probabilities are not the actual probabilities of the state occurrences. They are in fact “pseudo probabilities” which derive from the state prices. 782 Chapter 30 30.4 Pricing a Call Using the Binomial Monte Carlo Model We start with a ridiculously simple example. We use Monte Carlo to price a European call in a two-period setting in which the stock price goes either up SUU R2 S0 SUD = S DU 1 R2 SDD R2 2 e t a D 1 e t a D 0 e t a D 2 e t a D 1 e t a D 0 e t a D Payoff UU Payoff UU Payoff UD Value today Payoff UD = Payoff DU Value today Payoff DU Payoff DD Payoff DD 2 e t a D 1 e t a D 0 e t a D 2 e t a D 1 e t a D 0 e t a DUNDERLYING ASSETS AND PATH-INDEPENDENT VERSUS PATH-DEPENDENT PAYOFFS e u l a v d n o B s e c i r p k c o t S Path-independent asset with payoffs at Date 2 Path-dependent asset with payoffs at Date 2 0 0R RSU SD 0 0 Figure 30.1 Recombining versus non-recombining binomial models. 783 Using Monte Carlo Methods for Option Pricing The spreadsheet below shows two random price paths and their pricing: Up 1.4 Down 0.9 SUU = 98 = 50*1.42 S0 S 0 5 = UD = S DU = 63 = 50*1.4*0.9 SDD = 40.5 = 50*0.92 Date 0 Date 1 Date 2 S U = 70 S D = 45 Figure 30.2 Stock price tree in a standard recombining binomial model. or down each period. In the spreadsheet below we use Monte Carlo methods to price an at-the-money option on a stock whose price today is S 0 = 50. There are two periods, and in each period the stock price goes either Up = 1.4 or Down = 0.9; the interest rate is R = 1.05. Given Up and Down, the stock price tree looks like Figure 30.2 . 784 Chapter 30 The state prices and risk-neutral probabilities are computed in cells B10:B11 and B14:B15. Cells B18:B19 and C18:C19 show two random price paths. In each period we use a random number from Excel generated by the function Rand . If Rand( ) > π D , then the stock price goes Up, and if Rand() ≤ π D then the stock price goes Down. 1 2 34 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32D C B A 0 5 e c i r p k c o t s l a i t i n I 0 5 X 4 . 1 p U 9 . 0 n w o D 5 0 . 1 R State prices qu 0.2857 <-- =(B7-B6)/(B7*(B5-B6)) qd 0.6667 <-- =(B7-B6)/(B7*(B5-B6)) Risk-neutral probabilities u 0.3000 <-- =(B7-B6)/(B7*(B5-B6)) d 0.7000 <-- =(B7-B6)/(B7*(B5-B6)) First period, up (1) or down (0)? 0 0 <-- =IF(RAND()>$B$15,1,0) Second period, up (1) or down (0)? 0 1 <-- =IF(RAND()>$B$15,1,0) Total ups 0 1 <-- =SUM(C18:C19) Terminal stock price 40.5 63 <-- =$B$2*up^C21*down^(2-C21) Option payof f 0 13 <-- =MAX(C22-$B$3,0) Average discounted payoff 5.8957 <-- =AVERAGE(23:23)/R_^2 Computing the actual option price with state prices Payoffs ) 0 , 3 B - 2 ^ p u * 2 B ( X A M = - - < 8 4 p o t ) 0 , 3 B - n w o d * p u * 2 B ( X A M = - - < 3 1 e l d d i m ) 0 , 3 B - 2 ^ n w o d * 2 B ( X A M = - - < 0 m o t t o b ^ p u _ q = - - < 7 0 7 8 . 8 e c i r p n o i t p o l a u t c A 2*B29+2*q_up*q_down*B30+q_down^2*B31Random paths and the Monte Carlo priceSIMPLE SIMULATION: TWO PATHS IN A TWO-DATE MODEL π π 785 Using Monte Carlo Methods for Option Pricing • In the first price path (cells B18:B19), the stock price goes down in both periods. The terminal stock price is 40.5 and the option ’ s payoff is 0 (cell B23). • In the second price path (cells C18:C19), the stock price goes up in the first period and down in the second period. The terminal stock price is 63 and the option ’ s payoff is 13 (cell C23). If these were the only two random price paths, the Monte Carlo option price would be the discounted average 5.8957 (cell B25). Notice that we have also computed the actual call price using the state prices; cell B32 shows this price to be 8.8707. Risk-Neutral Probabilities in Monte Carlo Notice the role of the risk-neutral probabilities in the Monte Carlo simu- lation: The price path is determined not by the actual probabilities , but by the risk-neutral probabilities π U and π D . There is no role for the actual probabilities in the Monte Carlo pricing. Extending the Two-Period Model You can ’ t, of course, run a Monte Carlo simulation by using only two price paths. In the spreadsheet below, we ’ ve extended our price paths to all the columns in the spreadsheet. Excel ’ s spreadsheet is 256 columns wide; this means that the computation in cell B25 is the average of the option value over 255 simulated price paths. 786 Chapter 30 The average discounted payoff (cell B25) is 8.7502. This value is random, meaning it will change each time we press F9 to produce a new set of random paths. Monte Carlo methods imply that for even more paths we would con- verge to the actual option price of 8.8707. In the next section we show that the Monte Carlo method eventually produces convergence to this price. 30.5 Monte Carlo Plain-Vanilla Call Pricing Converges to Black-Scholes Now that we understand the principles, we extend our logic. We write a VBA routine which prices a plain-vanilla call using Monte Carlo methods under conditions which converge to Black-Scholes pricing. 1 23 4 5678 9 10 11 12 13 14 15 16 17181920 21 2223 24 25 26 2728293031 32I H G F E D C B A 0 5 e c i r p k c o t s l a i t i n I 0 5 X 4 . 1 p U 9 . 0 n w o D 5 0 . 1 R State prices qu 0.2857 <-- =(B7-B6)/(B7*(B5-B6)) qd 0.6667 <-- =(B7-B6)/(B7*(B5-B6)) Risk-neutral probabilities u 0.3000 <-- =(B7-B6)/(B7*(B5-B6)) d 0.7000 <-- =(B7-B6)/(B7*(B5-B6)) First period, up (1) or down (0)? 0 0 1 0 0 0 1 1 Second period, up (1) or down (0)? 0 1 1 0 1 0 0 0 Total ups 01201011 Terminal stock price 40.5 63 98 40.5 63 40.5 63 63 Option payoff 01 34 8 01 3 01 31 3 Average discounted payoff 8.7502 <-- =AVERAGE(23:23)/R_^2 Computing the actual option price with state prices Payoffs ) 0 , 3 B - 2 ^ p u * 2 B ( X A M = - - < 8 4 p o t ) 0 , 3 B - n w o d * p u * 2 B ( X A M = - - < 3 1 e l d d i m ) 0 , 3 B - 2 ^ n w o d * 2 B ( X A M = - - < 0 m o t t o b Actual option price 8.8707 <-- =q_up^2*B29+2*q_up*q_down*B30+q_down^2*B31Random paths and the Monte Carlo priceSIMPLE SIMULATION: A TWO-DATE MODEL as many price paths as there are columns pressing F9 runs the simulation and will change the value in cell B25 This value should be compared to the actual option price in cell B32 π π 787 Using Monte Carlo Methods for Option Pricing Our basic setup is as follows: We price a European call on a stock whose current price is S 0 . The option ’ s exercise price is X , and the time to maturity of the option is T . We assume that the stock price is lognormally distributed with mean μ and standard deviation σ . To price the call using Monte Carlo: • We divide the unit time interval into n divisions. This means that Δ t = 1/ n . • For each Δ t , we define Up t t tΔ ΔΔ =+ ⎡⎣⎤⎦expμσ and Down tΔ= ttΔΔ− ⎡⎣⎤⎦expμσ . The interest rate on the interval Δ t is R Δ t = exp[ r Δ t ]. • This means that the state prices and risk-neutral probabilities are given by qRD o w n RU p D o w nqUp R RU p D o w nutt tt tdtt tt t=− − ()=− − ()ΔΔ ΔΔ ΔΔΔ ΔΔ Δ, πu utt ttdtt ttuRD o w n Up DownUp R Up Down=− −=− −=−ΔΔ ΔΔΔΔ ΔΔ, ππ 1 • Since the time to maturity of the option is T , the price path to T requires m = T / Δ t periods. A price path of length m is created by determining the Up or Down move of the stock as a function of a random number between 0 and 1 and the risk-neutral probability π d . As discussed in the example in section 30.3, if the random number is greater than π d , the stock makes an Up move; other- wise it makes a Down move. A VBA Routine The VBA routine below defines a function VanillaCall . This function requires as inputs the variables mentioned above. The variable Runs is the number of random price paths created; these paths are averaged to determine the Monte Carlo value of the call: 788 Chapter 30 Function VanillaCall(S0, Exercise, Mean, sigma, _ Interest, Time, Divisions, Runs) deltat = 1 / Divisions interestdelta = Exp(Interest * deltat) up = Exp(Mean * deltat + _ sigma * Sqr(deltat)) down = Exp(Mean * deltat - _ sigma * Sqr(deltat)) pathlength = Int(Time / deltat) ‘Risk-neutral probabilities piup = (interestdelta - down) / _ (up - down) pidown = 1 - piup Temp = 0 For Index = 1 To Runs Upcounter = 0 ‘Generate terminal price For j = 1 To pathlength If Rnd > pidown Then Upcounter = _ Upcounter + 1 Next j callvalue = Application.Max(S0 * _ (up ∧ Upcounter) * (down ∧ (pathlength - _ Upcounter)) - Exercise, 0) _ 789 Using Monte Carlo Methods for Option Pricing The number of Up moves is stored in a counter called Upcounter and the value of the call for each Run is the discounted value of the call payoff for a particular terminal price S 0 * Up Upcounter Down pathlength − Upcounter , where pathlength = Int(Time / deltat) is the integer part of T / Δ t : callvalue = Application.Max(S0 * (up ∧ Upcounter) * _ (down ∧ (pathlength - Upcounter)) _ - Exercise, 0) / (interestdelta ∧ pathlength) The Monte Carlo value of the call is given by: VanillaCall = Temp / Runs . Understanding the Principles of the Monte Carlo Simulation For future reference we state the principles of the Monte Carlo simulation. These principles hold not only for the plain-vanilla options of this section, but also for the Asian options treated later in this chapter: • Price paths are generated by using the risk-neutral probabilities. In the program VanillaCall , for example, the price of the stock moves Up if the random number generator > π D and moves Down if the random number gen- erator ≤ π D . Effectively this means that the risk-neutral probabilities { π U = 1 − π D , π D } of each price path are incorporated into the price path itself. • The value of the option using Monte Carlo is determined by the discounted value of the simple average of all results over the price paths generated. / (interestdelta ∧ pathlength) Temp = Temp + callvalue Next Index VanillaCall = Temp / Runs End Function 790 Chapter 30 The function divides the time to option expiration T = 0.8 (cell B5) into 100 divisions (cell B9), so that Δ t = 1/200. Each time the function is called, it runs 3,000 price paths (cell B10). A particular call of the function shown above produced the value 7.5861 (cell B12), whereas the Black-Scholes call value—computed with the function BSCall defined in Chapter 19—is 7.2782 (cell B14). How good is this MC routine? One way to test it is to run it many times. In the spreadsheet below, we ’ ve run 40 instances of the function VanillaCall . 1 2 3 45 6 789 10111213 14C B A S0 , current stock price 50 0 5 e c i r p e s i c r e x e , X % 0 1 e t a r t s e r e t n i , r 8 . 0 e m i t , T , mean stock return 33% , sigma--standard deviation of stock return 30% 0 0 2 e m i t t i n u f o s n o i s i v i d , n 0 0 0 , 3 s n u R ) 0 1 B , 9 B , 5 B , 4 B , 7 B , 6 B , 3 B , 2 B ( l l a c a l l i n a v = - - < 1 6 8 5 . 7 l l a C a l l i n a V ) 7 B , 4 B , 5 B , 3 B , 2 B ( l l a C S B = - - < 2 8 7 2 . 7 l l a c S BMONTE CARLO PRICING OF PLAIN-VANILLA CALLS μ σ Implementing the MC Function VanillaCall in a Spreadsheet The spreadsheet below shows the implementation of VanillaCall . The value in cell B14 is the option value as computed by the Black-Scholes formula; the function BSCall was defined in Chapter 19. 791 Using Monte Carlo Methods for Option Pricing The average value (cell A28) has a relatively low standard deviation (cell A29). The Monte Carlo routine works pretty well. Improving the Efficiency of the MC Routine Monte Carlo routines are inherently very wasteful—you have to run them many times to get a reasonable approximation to the true value. Thus there is a lot of mileage in making a particular routine more efficient. Continuing with our VanillaCall example, we show one example of such an efficiency gain. Suppose that after j random numbers the random price is such that there is no chance that the call option will be in the money. Denote the number of Ups after j random coin tosses by Upcounter ( j ). Then the call option cannot be in the money after n random numbers if S 0 Up Upcounter ( j ) + ( n − j ) Down j − Upcounter ( j ) < X . This formula assumes that all the remaining random numbers (there will be n − j such numbers) will give an Up stock price movement. 1 2 3 456789 1011121314151617181920212223242526272829AB C D E S0 , current stock price 50 X, exercise price 50 r, interest rate 10% T, time 0.8 μ, mean stock return 33% σ, sigma--standard deviation of stock return 30% n, divisions 100 Runs 3,000 VanillaCall 6.9059 <-- =vanillacall(B2,B3,B6,B7,B4,B5,B9,B10) BS call 7.2782 <-- =BSCall(B2,B3,B5,B4,B7) Multiple runs of the function 7.4154 7.0526 7.2989 7.39937.2086 7.1906 7.4140 7.29867.1909 7.0336 7.2967 7.45467.5312 7.3078 7.5679 7.20177.1911 7.0003 6.8358 7.13347.2903 7.3150 7.3853 7.09257.6109 7.3928 7.1644 7.41267.6070 7.2575 7.1837 7.27177.2296 7.5758 7.1568 7.45727.3825 7.0926 7.1412 7.1313 7.2793 <-- =AVERAGE(A17:D26) 0.1765 <-- =STDEV.S(A17:D26)RUNNING THE MONTE CARLO FUNCTION MANY TIMES <-- =vanillacall(B2,B3,B6,B7,B4,B5,B9,B10) 792 Chapter 30 For this case, we should stop choosing random numbers after j and let the call value be zero. The VBA routine below implements this logic: Function BetterVanillaCall(S0, Exercise, Mean, _ sigma, Interest, Time, Divisions, Runs) deltat = Time / Divisions interestdelta = Exp(Interest * deltat) up = Exp(Mean * deltat + sigma * Sqr(deltat)) down = Exp(Mean * deltat - sigma * Sqr(deltat)) pathlength = Int(Time / deltat) ‘Risk-neutral probabilities piup = (interestdelta - down)/(up - down) pidown = 1 - piup Temp = 0 For Index = 1 To Runs Upcounter = 0 ‘Generate terminal price For j = 1 To pathlength If Rnd > pidown Then Upcounter = _ Upcounter + 1 If S0 * up ∧ (Upcounter + pathlength - j) _ * down ∧ (j - Upcounter) < X _ Then GoTo Compute Next j Compute: callvalue = Application.Max(S0 * _ (up ∧ Upcounter) * (down ∧ _ (pathlength - Upcounter)) _ 793 Using Monte Carlo Methods for Option Pricing The highlighted portions of the code show the changes. The lines called Compute simply calculate the Callvalue . The spreadsheet below shows the implementation: 1 2 3 456 7 89 101112 13 14C B A S0 , current stock price 50 5 4 e c i r p e s i c r e x e , X % 6 e t a r t s e r e t n i , r 8 . 0 e m i t , T , mean stock return 12% , sigma--standard deviation of stock return 30% 0 0 1 s n o i s i v i d , n 0 0 0 , 2 s n u R ) 0 1 B , 9 B , 5 B , 4 B , 7 B , 6 B , 3 B , 2 B ( l l a c a l l i n a v r e t t e b = - - < 1 0 0 0 . 9 l l a C a l l i n a V ) 7 B , 4 B , 5 B , 3 B , 2 B ( l l a C S B = - - < 1 3 9 2 . 9 l l a c S BMONTE CARLO PRICING OF PLAIN-VANILLA CALLS BetterVanillaCall: A somewhat more efficient function: If, after j random numbers which produce k Up moves, S 0*Up(k+n-j)*Down(j-k)<X, then we abort the random price path and let the call value = 0 μ σ Where Do We Go from Here? Now that we understand the Monte Carlo technology and its implementation in VBA, we can extend our examples in two directions. In the next section we discuss the pricing of Asian options—options in which the option ’ s terminal payoff depends on the average price over the path. In section 30.6 we discuss the pricing of barrier options. - Exercise, 0) / (interestdelta _ ∧ pathlength) Temp = Temp + callvalue Next Index BetterVanillaCall = Temp / Runs End Function 794 Chapter 30 30.6 Pricing Asian Options An Asian option is an option whose payoff depends in some way on the average price of the asset over a period of time prior to option expiration. 3 Asian options are sometimes called “average price options.” There are two common kinds of Asian options: • In the first kind of Asian option, the option ’ s payoff is based on the differ- ence between the average price of the underlying asset and the strike price: Max[Average underlying – Strike, 0]. The examples in Figures 30.3 and 30.4 of the oil contract traded on the NYMEX and the traded average price option (TAPO) traded on the London Metals Exchange are this kind of option. • In the second kind of Asian option, the option ’ s exercise price is the average of the underlying asset ’ s price over a period preceding option maturity: Max[Terminal underlying – average underlying, 0]. Such average strike options are common in markets for electric energy. They assist hedgers whose primary risks are related to the average price of the underlying. Asian options are particularly useful when the user sells the underlying during the period and is therefore exposed to the average price and when there is danger of price manipulation in the underlying. The Asian option mitigates the effect of manipulation, since it is based not on a single price, but on a sequence of prices. 3. See www.riskglossary.com/articles/asian_option.htm and www.global-derivatives.com/option s/asian-options.php for some definitions and a discussion of the literature. A list of references is also given in the Selected References section of this book. 795 Using Monte Carlo Methods for Option Pricing Figure 30.3 Average price crude oil options traded on NYMEX. www.nymex.com/AO_spec.aspx 796 Chapter 30 An Initial Example of an Asian Option We start by considering an Asian option on a stock whose price either increases by 40% or decreases by 20% each period. We look at five dates, starting with date 0: Figure 30.4 Asian options on copper traded on the London Metals Exchange (LME). www.basemetals.com/html/cuinfo.htm 797 Using Monte Carlo Methods for Option Pricing To compute the value of the option, we first compute each price path . There are 16 such paths. The spreadsheet below shows each path, the average stock price over the path, the option payoff, and the path ’ s risk-neutral probability: 1 2 3 456 7 8 9 10 11 12 13 14 15 16 1718192021222324 25 262728293031323334 35 36AB C D E F G H I J Initial stock price 30 4 . 1 p U Down 0.8 R, 1+interest rate 1.08Exercise price 50 State prices q u 0.4321 <-- =(B5-B4)/(B5*(B3-B4)) qd 0.4938 <-- =(B3-B5)/(B5*(B3-B4)) Risk-neutral probabilities u 0.4667 <-- =B9*$B$5 d 0.5333 <-- =B10*$B$5 115.25 <-- =G18*B3 Stock price 82.32 4 B * 8 1 G = - - < 6 8 . 5 6 0 8 . 8 5 4 0 . 7 4 0 0 . 2 4 4 B * 0 2 G = - - < 3 6 . 7 3 0 6 . 3 3 0 0 . 0 3 8 8 . 6 2 0 0 . 4 2 4 B * 2 2 G = - - < 0 5 . 1 2 0 2 . 9 1 15.36 12.29 <-- =G24*B4 1.3605 <-- =G29*$B$5 Bond price 1.2597 5 $ B $ * 1 3 G = - - < 5 0 6 3 . 1 4 6 6 1 . 1 7 9 5 2 . 1 0 0 8 0 . 1 5 0 6 3 . 1 4 6 6 1 . 1 0 0 0 0 . 1 7 9 5 2 . 1 0 0 8 0 . 1 5 0 6 3 . 1 4 6 6 1 . 1 1.2597 1.3605ASIAN OPTION PICTURE ππ 798 Chapter 30 The paths are determined by the number and the sequence of the Up and the Down movements of the stock. For explanatory purposes we have high- lighted two price paths: • Along the path {up, down, up, up} the terminal stock price is 65.856, the average price is 43.699, the option payoff is 13.699, and the discounted expected value using the risk-neutral prices is 0.546: 1 2 34567 8 9 10 111213 14 15 16 17181920212223242526272829303132333435363738394041AB C D E F G H I J K L M N O P Initial stock price 30 0 4 . 1 p U 0 8 . 0 n w o D 8 0 . 1 t s e r e t n I Option exercise price 30 Formula in cell O16: =$B$11^4 State price, Up: q U 2 1 $ B $ * 3 ^ 1 1 $ B $ = : 8 1 O l l e c n i a l u m r o F ) ) 4 B - 3 B ( * 5 B ( / ) 4 B - 5 B ( = - - < 1 2 3 4 . 0 State price, Down, q D 0.4938 <-- =(B3-B5)/(B5*(B3-B4)) Risk-neutral prob., Up 0.4667 <-- =B8*B5 ) 0 , 6 $ B $ - 6 1 M ( X A M = 6 1 N l l e c n i a l u m r o F 5 B * 9 B = - - < 3 3 3 5 . 0 n w o D , . b o r p l a r t u e n - k s i R PathsPeriod 1Period 2Period 3Period 4Period 0Period 1Period 2Period 3Period 4Average stock priceOption payoffPath risk-neutral probability All up (1 path) up up up up 30.00 42.00 58.80 82.32 115.25 65.67 35.67 0.0474 One down (4 paths) down up up up 30.00 24.00 33.60 47.04 65.86 40.10 10.10 0.0542 up down up up 30.00 42.00 33.60 47.04 65.86 43.70 13.70 0.0542up up down up 30.00 42.00 58.80 47.04 65.86 48.74 18.74 0.0542up up up down 30.00 42.00 58.80 82.32 65.86 55.80 25.80 0.0542 Two down (6 paths) down down up up 30.00 24.00 19.20 26.88 37.63 27.54 0.00 0.0619 down up down up 30.00 24.00 33.60 26.88 37.63 30.42 0.42 0.0619down up up down 30.00 24.00 33.60 47.04 37.63 34.45 4.45 0.0619 up down down up 30.00 42.00 33.60 26.88 37.63 34.02 4.02 0.0619up up down down 30.00 42.00 58.80 47.04 37.63 43.09 13.09 0.0619up down up down 30.00 42.00 33.60 47.04 37.63 38.05 8.05 0.0619 Three down (4 paths) up down down down 30.00 42.00 33.60 26.88 21.50 30.80 0.80 0.0708 down up down down 30.00 24.00 33.60 26.88 21.50 27.20 0.00 0.0708down down up down 30.00 24.00 19.20 26.88 21.50 24.32 0.00 0.0708down down down up 30.00 24.00 19.20 15.36 21.50 22.01 0.00 0.0708 Four down (1 path) down down down down 30.00 24.00 19.20 15.36 12.29 20.17 0.00 0.0809 Option value 5.3756 Formula in cell N37 =SUMPRODUCT(N16:N35,O16:O35)/B5^4PRICING AN ASIAN OPTION BY PRICING ALL THE PATHS Formula in cell M16 =AVERAGE(G16:K16) STOCK PRICE 799 Using Monte Carlo Methods for Option Pricing The average stock price along this path is 43.699, so that the option pays off max[43.699 − 30,0] = 13.699. • Along the path {up, up, down, up} the terminal stock price is the same as before: 65.856. However, the average price and thus the option payoff and value are different: 1 2 345 6 7 8 9 10 11 12 13 14 15 16171819 20 2122 23C B A 0 3 e c i r p k c o t s l a i t i n I 0 4 . 1 p U 0 8 . 0 n w o D 8 0 . 1 t s e r e t n I Option exercise price 30 State price, Up: q U 0.4321 <-- =(B5-B4)/(B5*(B3-B4)) State price, Down, q D 0.4938 <-- =(B3-B5)/(B5*(B3-B4)) Risk-neutral prob., Up 0.4667 <-- =B8*B5 Risk-neutral prob., Down 0.5333 <-- =B9*B5 DatePrice at beginning of periodPrice movement: Up or Down 0 30.000 p U 0 0 0 . 2 4 1 n w o D 0 0 6 . 3 3 2 p U 0 4 0 . 7 4 3 p U 6 5 8 . 5 6 4 Average price along path 43.699 <-- =AVERAGE(B15:B19) Option payoff at path end 13.699 <-- =MAX(B20-$B$6,0) Path risk-neutral price 0.0542 <-- =B11^COUNTIF(C16:C19,\"Up\")*B12^COUNTIF(C16:C19,\"Down\") Value of path: Payoff * risk-neutral price * discount factor 0.546 <-- =B21*B22/B5^4PATH PRICE EXAMPLE: {Up, Down, Up, Up} 800 Chapter 30 These two paths illustrate what we mean when we say that an Asian option price is path dependent : Two paths—both starting at the initial stock price of 30 and ending at 65.856—have different option payoffs because the stock price average along the path is different. This example, which we ’ ve not yet concluded, also illustrates the difficulty of pricing Asian options: Each single path must be dealt with—16 separate paths. This distinguishes Asian options from the case of ordinary options (“plain vanilla,” in the jargon of option pricers); for the particular example we ’ re considering here, a plain-vanilla option requires dealing only with five ending prices. To price the Asian option, we attach a risk-neutral probability to each price path: 1 2 345 6 7 8 9 10 11 12 13 14 15 16171819 20 2122 23C B A 0 3 e c i r p k c o t s l a i t i n I 0 4 . 1 p U 0 8 . 0 n w o D 8 0 . 1 t s e r e t n I Option exercise price 30 State price, Up: q U 0.4321 <-- =(B5-B4)/(B5*(B3-B4)) State price, Down, q D 0.4938 <-- =(B3-B5)/(B5*(B3-B4)) Risk-neutral prob., Up 0.4667 <-- =B8*B5 Risk-neutral prob., Down 0.5333 <-- =B9*B5 DatePrice at beginning of periodPrice movement: Up or Down 0 30.000 p U 0 0 0 . 2 4 1 p U 0 0 8 . 8 5 2 n w o D 0 4 0 . 7 4 3 p U 6 5 8 . 5 6 4 Average price along path 48.739 <-- =AVERAGE(B15:B19) Option payoff at path end 18.739 <-- =MAX(B20-$B$6,0) Path risk-neutral price 0.0542 <-- =B11^COUNTIF(C16:C19,\"Up\")*B12^COUNTIF(C16:C19,\"Down\") Value of path: Payoff * risk-neutral price * discount factor 0.747 <-- =B21*B22/B5^4PATH PRICE EXAMPLE: {Up, Up, Down, Up} 801 Using Monte Carlo Methods for Option Pricing The option price is the discounted expected payoff value, where the expecta- tions are computed with the risk-neutral probabilities: πPath All paths nOption payoff on path R∗ =∑ 5 3756 . 15 1617181920 21 22232425262728293031323334353637P O N M Average stock priceOption payoffPath risk-neutral probability 65.67 35.67 0.0474 <-- =B11^4 40.10 10.10 0.0542 <-- =$B$11^3*$B$12 43.70 13.70 0.054248.74 18.74 0.0542 55.80 25.80 0.0542 27.54 0.00 0.0619 <-- =$B$11^2*$B$12^2 30.42 0.42 0.061934.45 4.45 0.061934.02 4.02 0.061943.09 13.09 0.061938.05 8.05 0.0619 30.80 0.80 0.0708 <-- =$B$11*$B$12^3 27.20 0.00 0.070824.32 0.00 0.070822.01 0.00 0.0708 20.17 0.00 0.0809 <-- =$B$12^4 Option value 5.3756 <-- =SUMPRODUCT(N16:N35,O16:O35)/B5^4 Risk-Neutral Probabilities–Again We repeat our earlier comments (page 789) about the role of risk-neutral probabilities: Each path is priced by its discounted risk-neutral probabil-ity, which is a function of the Up, Down, and R . The actual state prob- abilities are not relevant. 802 Chapter 30 30.7 Pricing Asian Options with a VBA Program Our spreadsheet example in the previous section illustrates both the principle of Monte Carlo pricing of options and the problematics of pricing the options directly in a spreadsheet. For four periods, we require the computation of 2 4 = 16 paths. For a more general problem with n periods, there are 2 n paths to consider; this rapidly becomes too large for even a very powerful computer. In order to accurately price the options, you would need hundreds or thousands of simulations. Doing this in a spreadsheet directly would be cumbersome. The obvious answer is to write some VBA code to automate the process and which allows us to run an arbitrarily large number of simulations. In this section we write VBA code to do a Monte Carlo simulation of Asian pricing options. We generate price paths by simulating a sequence of Up and Down movements of the underlying stock price; the probability of Up or Down depends on the risk-neutral probabilities—in this sense our Monte Carlo simu-lation for Asian options is similar to that illustrated in section 30.4 for plain-vanilla options. For each price path generated, we calculate the option payoff, and after generating a large number of price paths, we compute the option price by discounting and averaging these payoffs. The VBA function, MCAsian , which prices the Asian options, is given below: Function MCAsian(initial, Exercise, Up, Down, _ Interest, Periods, Runs) Dim PricePath() As Double ReDim PricePath(Periods + 1) ‘Risk-neutral probabilities piup = (Interest - Down) / (Up - Down) pidown = 1 - piup Temp = 0 For Index = 1 To Runs ‘Generate path For i = 1 To Periods PricePath(0) = initial 803 Using Monte Carlo Methods for Option Pricing pathprob = 1 If Rnd > pidown Then PricePath(i) = PricePath(i - 1) _ * Up Else: PricePath(i) = PricePath(i - 1) * _ Down End If Next i PriceAverage = Application.Sum _ (PricePath) / (Periods + 1) callpayoff = Application.Max _ (PriceAverage - Exercise, 0) Temp = Temp + callpayoff Next Index MCAsian = (Temp / Interest ∧ Periods) / _ Runs End Function Here ’ s the implementation of the function in a spreadsheet: 1 2 34 5 678 9C B A 4 . 1 p U 8 . 0 n w o D 8 0 . 1 t s e r e t n I 0 3 e c i r p l a i t i n I 0 2 s d o i r e P 0 3 e s i c r e x E 0 0 5 s n u R Asian call value 9.7253 <-- =MCAsian(B5,B7,B2,B3,B4,B6,B8)PRICING AN ASIAN OPTION BY MONTE CARLO 804 Chapter 30 The function in cell B9 is our Monte Carlo valuation of the option—the simu- lated value. Any recalculation of the spreadsheet will cause the function to rerun and recompute the option value. Below we show a block of replications of the function. Each of the cells A10:F17 contains = MCAsian(Initialprice,exercise,Up,Down,Interest, Periods,Runs) , so that we calculate 48 simulations of the option value. 1 23456789 101112131415161718192021222324AB C D E F G Up 1.4 Down 0.8 Interest 1.08 Initialprice 30 Periods 4 Exercise 30 Runs 100 5.5604 5.5127 5.3137 5.9568 4.9349 5.7926 6.2343 4.7683 5.8404 5.5072 5.9239 5.0891 5.3737 5.3555 4.2552 4.8458 5.3619 6.3329 4.3899 6.0211 5.4461 5.5281 5.7560 6.2756 4.8685 5.3166 4.5529 4.8597 5.3485 5.8267 6.0235 4.5321 4.4843 4.8879 4.9199 5.3249 5.2095 4.7944 5.4976 4.4916 5.6223 5.3322 5.2452 5.6684 5.4797 5.2801 5.9564 3.8410 Average of MC simulations 5.3071 <-- =AVERAGE(A10:F17) True value 5.3756 <-- From Section 30.6 3.8410 <-- =MIN(A10:F17)6.3329 <-- =MAX(A10:F17)0.5631 <-- =STDEV.S(A10:F17)PRICING AN ASIAN OPTION--VBA FUNCTION Prices an Asian option with 4 pe riods and 100 runs for each simulation <-- =MCAsian($B$5,$B$7,$B$2,$B$3,$B$4,$B$6,$B$8) 123456789 101112131415161718192021222324AB C D E F G Up 1.4 Down 0.8 Interest 1.08 Initialprice 30 Periods 4 Exercise 30 Runs 100 5.5604 5.5127 5.3137 5.9568 4.9349 5.7926 6.2343 4.7683 5.8404 5.5072 5.9239 5.0891 5.3737 5.3555 4.2552 4.8458 5.3619 6.3329 4.3899 6.0211 5.4461 5.5281 5.7560 6.2756 4.8685 5.3166 4.5529 4.8597 5.3485 5.8267 6.0235 4.5321 4.4843 4.8879 4.9199 5.3249 5.2095 4.7944 5.4976 4.4916 5.6223 5.3322 5.2452 5.6684 5.4797 5.2801 5.9564 3.8410 Average of MC simulations 5.3071 <-- =AVERAGE(A10:F17) True value 5.3756 <-- From Section 30.6 3.8410 <-- =MIN(A10:F17)6.3329 <-- =MAX(A10:F17)0.5631 <-- =STDEV.S(A10:F17)PRICING AN ASIAN OPTION--VBA FUNCTION Prices an Asian option with 4 pe riods and 100 runs for each simulation <-- =MCAsian($B$5,$B$7,$B$2,$B$3,$B$4,$B$6,$B$8) We have deliberately priced the Asian option for which we know the true value—as we showed in section 30.6, the value of an Asian option in a four- period model with the parameters for Up, Down, and Interest illustrated above, is 5.3756. The average of our Monte Carlo simulations is 5.3071, with a stan-dard deviation of 0.5631. 805 Using Monte Carlo Methods for Option Pricing When we increase the number of runs (cell B8), we will usually decrease the standard deviation of our estimates (cell B24), which is equivalent to increasing the accuracy of the simulation. In the example below, we have run the 48 simulations 500 runs each: 1 23456789 101112131415161718192021222324AB C D E F Up 1.4 Down 0.8 Interest 1.08 Initialprice 30 Periods 4 Exercise 30 Runs 500 5.4918 5.2237 5.4857 5.6620 5.0970 5.3702 6.0799 5.2819 5.8147 5.4304 5.5054 5.0958 5.5832 5.7454 5.0490 5.5856 5.0470 5.8236 5.3436 5.3475 5.5037 5.4204 5.2500 6.1101 4.9375 5.3760 5.3095 5.4251 5.4096 5.1571 5.5058 5.2473 5.1213 6.1103 5.2689 5.0927 5.6943 5.2531 5.0314 5.7414 4.8099 5.0938 5.0082 5.3070 5.3588 5.1692 5.7047 4.8963 Average of MC simulations 5.3828 <-- =AVERAGE(A10:F17) True value 5.3756 <-- From Section 30.6 4.8099 <-- =MIN(A10:F17)6.1103 <-- =MAX(A10:F17)0.3088 <-- =STDEV.S(A10:F17)PRICING AN ASIAN OPTION--VBA FUNCTION Prices an Asian option with 4 periods and 500 runs for each simulation As you can see, the standard deviation is much reduced—about half of the standard deviation with 100 runs. 4 Asian Options with More Periods In the following spreadsheet we divide the unit time interval into n subperiods. We follow the procedure of section 30.4 for defining the returns, state prices, and risk-neutral probabilities over the subperiod Δ t . Here is the resulting spreadsheet: 4. The bad news, of course, is that we have to increase the number of runs by a factor of 5 to reduce the standard deviation by one-half. 806 Chapter 30 The block of results in cells A18:F25 gives 48 results for running the function MCAsian . Below this block we give the statistics for these simulations. The above simulations use 100 (cell B16) price paths per iteration of the function MCAsian ; this is the number contained in cell B16. We can use Data|Table to see the effect of changing the number of runs: 1 2345678 9 101112131415161718192021222324252627282930AB C D E F S0, current stock price 50 X, exercise price 45 T, time to o ption exercise 0.4 r, interest rate 8% μ, mean stock return 15% σ, standard deviation of stock return 22% n, number of sub-intervals of T 80 Delta t 0.0125 <-- =1/B9 Up over 1 sub-interval 1.0268 <-- =EXP(B6*B10+B7*SQRT(B10)) Down over 1 sub-interval 0.9775 <-- =EXP(B6*B10-B7*SQRT(B10)) Interest over 1 sub-interval 1.0010 <-- =EXP(B5*B10) Runs 100 5.5148 5.1334 6.1348 5.8025 6.0843 5.8046 6.0585 6.1534 5.8453 6.0183 6.2981 5.3826 5.4753 5.9614 5.9462 5.3539 6.5194 5.6043 5.5941 6.0015 5.7392 6.1450 5.7562 5.8220 5.3215 6.0690 5.4965 5.0476 5.1488 5.7132 5.3827 6.0806 5.4600 6.0932 5.4499 5.6005 6.1500 5.7218 6.0046 6.1990 5.4302 5.2791 5.7279 6.2467 5.6817 5.6702 5.6883 5.2343 Average of above 5.7510 <-- =AVERAGE(A18:F25) Minimum 5.0476 <-- =MIN(A18:F25) Maxmimum 6.5194 <-- =MAX(A18:F25) Standard deviation 0.3481 <-- =STDEV(A18:F25)PRICING AN ASIAN OPTION--VBA FUNCTION Each time interval is divided in to n subintervals. In this simulation the initia l stock price = 50.00, the exercise price = 45.00, the time to maturity = 0.40, and the unit time interval is divided into 80 subintervals. The stock price process has mean return = 15.00% and standard deviation = 1.25%, and the interest rate = 8.00%. There are 100 runs in each Monte Carlo simulation 807 Using Monte Carlo Methods for Option Pricing It is clear that increasing the number of runs narrows the bounds on the simulation. 30.8 Pricing Barrier Options with Monte Carlo 5 A barrier option ’ s payoff depends on whether the price reaches a specific level during the life of the option: • A knockin barrier call option has payoff Max( S T − X , 0) only if at some time t < T , S t > K. A knockin put has the same condition but pays off Max( X − S T , 0). • A knockout barrier call or put option has these payoffs provided that at no time before T does the stock price reach the barrier. Imposing a barrier makes it more difficult for an option to be in the money at expiration; thus barrier options have lower value than regular options. A Simple Example of a Barrier Call Option Below we show an extended example for a knockout barrier option which is similar to the example for an Asian option given in section 30.6: 32 33 3435363738 39 40414243 44 4546474849 50 51I H G F E D C B Data table: Sensitivity of results on number of runs RunsAverage of 48 MCAsianMinimum MaximumStandard deviation <-- =B30 , data table header (hidden) 50 5.7832 4.9871 6.6371 0.4255 100 5.7343 4.8668 6.4071 0.3309150 5.7689 5.1077 6.4571 0.3145200 5.7052 5.2953 6.1088 0.2047 250 5.7285 5.3057 6.2896 0.2198 300 5.7208 5.1867 6.4113 0.2666350 5.7163 5.2251 6.1966 0.2093400 5.7248 5.3671 6.3500 0.1972450 5.6868 5.2898 5.9580 0.1707 500 5.7353 5.3822 6.1974 0.1636 550 5.7321 5.1561 6.0600 0.1808 4.04.55.05.56.06.57.0 50 100 150 200 250 300 350 400 450 500 55048 MCAsian Simula Ɵons, Varying the Runs Average Minimum Maximum 5. Pricing barrier options with Monte Carlo isn ’ t necessarily a good idea, but it ’ s a good exercise. See Broadie, Glaserman, and Kou (1997) for a complete discussion. 808 Chapter 30 In this example, we model a five-date, four-period barrier call option. The barrier is 50 (cell B7). A knockout option pays off only if the price never goes through this barrier, and a knockin option pays off only if the stock price goes through the barrier. In an equation: Barrier knockin call payoffS X S Barrier for t T oth Tt=−[] >< max , 0 0if eerwise Barrier knockout call payoffS X S BarrieTt⎧⎨⎩ =−[] < max , 0 if rrf o r t T otherwise< ⎧⎨⎩ 0 1 2 345 6 78 9 10 11 12 1314 15 16 1718 19 202122 23 242526 27 2829 30 313233 34 353637 38 39 40 41 42AB C D E F G H I J K L M N O P Initial stock price 30 0 4 . 1 p U 0 8 . 0 n w o D 8 0 . 1 t s e r e t n I Option exercise price 30 0 0 . 0 5 r e i r r a B qU 0.4321 <-- =(B5-B4)/(B5*(B3-B4)) qD 0.4938 <-- =(B3-B5)/(B5*(B3-B4)) Risk-neutral probability, up 0.4667 <-- =B9*B5 Risk-neutral probability, down 0.5333 <-- =B10*B5 Paths Period 1 Period 2 Period 3 Period 4 Period 0 Period 1 Period 2 Period 3 Period 4Max(S t)< Barrier?Path risk-neutral probabilityKnockout option payoff All up (1 path) up up up up 30.00 42.00 58.80 82.32 115.25 FALSE 0.0474 0.00 One down (4 paths) down up up up 30.00 24.00 33.60 47.04 65.86 FALSE 0.0542 0.00 up down up up 30.00 42.00 33.60 47.04 65.86 FALSE 0.0542 0.00 up up down up 30.00 42.00 58.80 47.04 65.86 FALSE 0.0542 0.00 up up up down 30.00 42.00 58.80 82.32 65.86 FALSE 0.0542 0.00 Two down (6 paths) down down up up 30.00 24.00 19.20 26.88 37.63 TRUE 0.0619 7.63 down up down up 30.00 24.00 33.60 26.88 37.63 TRUE 0.0619 7.63 down up up down 30.00 24.00 33.60 47.04 37.63 TRUE 0.0619 7.63 up down down up 30.00 42.00 33.60 26.88 37.63 TRUE 0.0619 7.63 up up down down 30.00 42.00 58.80 47.04 37.63 FALSE 0.0619 0.00 up down up down 30.00 42.00 33.60 47.04 37.63 TRUE 0.0619 7.63 Three down (4 paths) up down down down 30.00 42.00 33.60 26.88 21.50 TRUE 0.0708 0.00 down up down down 30.00 24.00 33.60 26.88 21.50 TRUE 0.0708 0.00 down down up down 30.00 24.00 19.20 26.88 21.50 TRUE 0.0708 0.00 down down down up 30.00 24.00 19.20 15.36 21.50 TRUE 0.0708 0.00 Four down (1 path) down down down down 30.00 24.00 19.20 15.36 12.29 TRUE 0.0809 0.00 Knockout value 1.7375PRICING A KNOCKOUT BARRIER OPTION Formula in cell N38: =SUMPRODUCT(O17:O36,N17:N36)/B5^4 Formula in cell O36: =M36*MAX(K36-$B$6,0)STOCK PRICE Formula in cell M17: =MAX(G17:K17)<$B$7 809 Using Monte Carlo Methods for Option Pricing The knockout barrier call illustrated above pays off only when two things happen simultaneously: • The stock price does not exceed the barrier. This happens for all the paths labeled “TRUE” in column M. To check this condition in cell M17 we use the Boolean function ( = MAX(G17:K17) < $B$7). 6 This function evaluates to TRUE or FALSE, depending on whether the condition is met. Other cells in column M use a similar condition. When used in a formula as in the bullet below, the Boolean function evaluates to 1 if TRUE and to 0 if FALSE. • The terminal stock price S T is greater than the option exercise price of 30. In cell O18 we use the condition M17*MAX(K17-$B$6,0) to evaluate the option payoff. Ⴜ If M17 = 0 (meaning that S t > 50 somewhere along the path and the option was “knocked out”), then the option doesn ’ t pay off. Ⴜ If M17 = 1 (so that S t < 50 throughout the path), then the option has a standard call payoff of max( S T − X ,0). As in all previous cases discussed in this chapter, the barrier call ’ s value is the discounted expected payoff of the option, where the probabilities are the risk-neutral probabilities: Option valuePayoff Rjj all states j==∑π 41 7375 . The Knockin Barrier Call By changing the condition in column O we can price the knockin barrier call. This time we write (in cell O17, for example) the function = (1-M17)*MAX (K17-$B$6,0). The value in M17 tests whether the barrier has never been passed; if this is FALSE (i.e., has a value of zero), then the option is “knocked in” and the payoff is like that of a regular call. If M17 is TRUE, then the barrier has not been passed and the option does not pay off: 6. Boolean functions are discussed in Chapter 33. 810 Chapter 30 The spreadsheets for the knockout and knockin barriers illustrate another principle of pricing barrier options: The price of a knockin plus a knockout call equals the price of a plain-vanilla call: 1 2 3 4567 8 9 10 11 121314 15 16 17 1819 20 21 2223 24 25 26 27282930 31 32 333435 36 3738 39 40 41 42 43AB C D E F G H I J K L M N O P Initial stock price 30 0 4 . 1 p U 0 8 . 0 n w o D 8 0 . 1 t s e r e t n I Option exercise price 30 0 0 . 0 5 r e i r r a B qU 0.4321 <-- =(B5-B4)/(B5*(B3-B4)) qD 0.4938 <-- =(B3-B5)/(B5*(B3-B4)) Risk-neutral probability, up 0.4667 <-- =B9*B5Risk-neutral probability, down 0.5333 <-- =B10*B5 Paths Period 1 Period 2 Period 3 Period 4 Period 0 Period 1 Period 2 Period 3 Period 4Max(S t)< Barrier?Path risk-neutral probabilityOption payoff All up (1 path) up up up up 30.00 42.00 58.80 82.32 115.25 FALSE 0.0474 85.25 One down (4 paths) down up up up 30.00 24.00 33.60 47.04 65.86 FALSE 0.0542 35.86 up down up up 30.00 42.00 33.60 47.04 65.86 FALSE 0.0542 35.86 up up down up 30.00 42.00 58.80 47.04 65.86 FALSE 0.0542 35.86 up up up down 30.00 42.00 58.80 82.32 65.86 FALSE 0.0542 35.86 Two down (6 paths) down down up up 30.00 24.00 19.20 26.88 37.63 TRUE 0.0619 0.00 down up down up 30.00 24.00 33.60 26.88 37.63 TRUE 0.0619 0.00 down up up down 30.00 24.00 33.60 47.04 37.63 TRUE 0.0619 0.00 up down down up 30.00 42.00 33.60 26.88 37.63 TRUE 0.0619 0.00 up up down down 30.00 42.00 58.80 47.04 37.63 FALSE 0.0619 7.63 up down up down 30.00 42.00 33.60 47.04 37.63 TRUE 0.0619 0.00 Three down (4 paths) up down down down 30.00 42.00 33.60 26.88 21.50 TRUE 0.0708 0.00 down up down down 30.00 24.00 33.60 26.88 21.50 TRUE 0.0708 0.00 down down up down 30.00 24.00 19.20 26.88 21.50 TRUE 0.0708 0.00 down down down up 30.00 24.00 19.20 15.36 21.50 TRUE 0.0708 0.00 Four down (1 path) down down down down 30.00 24.00 19.20 15.36 12.29 TRUE 0.0809 0.00 Knockin value 9.0334PRICING A KNOCKIN BARRIER OPTION Formula in cell N38: =SUMPRODUCT(O17:O36,N17:N36)/B5^4 Formula in cell O36: =(1-M36)*MAX(K36-$B$6,0)STOCK PRICE Formula in cell M17: =MAX(G17:K17)<$B$7 811 Using Monte Carlo Methods for Option Pricing 30.9 Using VBA and Monte Carlo to Price a Barrier Option We write two VBA functions to price knockin and knockout barrier options. Here is the function for knockout options: 1 2 34 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 4142 43 44 45 46AB C D E F G H I J K L M N O P Q Initial stock price 30 0 4 . 1 p U 0 8 . 0 n w o D 8 0 . 1 t s e r e t n I Option exercise price 30 0 0 . 0 5 r e i r r a B qU 0.4321 <-- =(B5-B4)/(B5*(B3-B4)) qD 0.4938 <-- =(B3-B5)/(B5*(B3-B4)) Risk-neutral probability, up 0.4667 <-- =B9*B5Risk-neutral probability, down 0.5333 <-- =B10*B5 Paths Period 1 Period 2 Period 3 Period 4 Period 0 Period 1 Period 2 Period 3 Period 4Max(S t)< Barrier?Path risk-neutral probabilityKnockout payoffKnockin payoffPlain vanilla All up (1 path) up up up up 30.00 42.00 58.80 82.32 115.25 FALSE 0.0474 0 85.2480 85.2480 One down (4 paths) down up up up 30.00 24.00 33.60 47.04 65.86 FALSE 0.0542 0 35.8560 35.8560 up down up up 30.00 42.00 33.60 47.04 65.86 FALSE 0.0542 0 35.8560 35.8560 up up down up 30.00 42.00 58.80 47.04 65.86 FALSE 0.0542 0 35.8560 35.8560 up up up down 30.00 42.00 58.80 82.32 65.86 FALSE 0.0542 0 35.8560 35.8560 Two down (6 paths) down down up up 30.00 24.00 19.20 26.88 37.63 TRUE 0.0619 7.632 0.0000 7.6320 down up down up 30.00 24.00 33.60 26.88 37.63 TRUE 0.0619 7.632 0.0000 7.6320 down up up down 30.00 24.00 33.60 47.04 37.63 TRUE 0.0619 7.632 0.0000 7.6320 up down down up 30.00 42.00 33.60 26.88 37.63 TRUE 0.0619 7.632 0.0000 7.6320 up up down down 30.00 42.00 58.80 47.04 37.63 FALSE 0.0619 0 7.6320 7.6320 up down up down 30.00 42.00 33.60 47.04 37.63 TRUE 0.0619 7.632 0.0000 7.6320 Three down (4 paths) up down down down 30.00 42.00 33.60 26.88 21.50 TRUE 0.0708 0 0.0000 0.0000 down up down down 30.00 24.00 33.60 26.88 21.50 TRUE 0.0708 0 0.0000 0.0000 down down up down 30.00 24.00 19.20 26.88 21.50 TRUE 0.0708 0 0.0000 0.0000 down down down up 30.00 24.00 19.20 15.36 21.50 TRUE 0.0708 0 0.0000 0.0000 Four down (1 path) down down down down 30.00 24.00 19.20 15.36 12.29 TRUE 0.0809 0 0.0000 0.0000 Knockin 9.0334 <-- =SUMPRODUCT(N17:N36,P17:P36)/B5^4 Knockout 1.7375 <-- =SUMPRODUCT(N17:N36,O17:O36)/B5^4 Sum 10.7708 <-- =L38+L39 Plain vanilla 10.7708 <-- =SUMPRODUCT(N17:N36,Q17:Q36)/B5^4 Formula in cell O36: =M36*MAX(K36-$B$6,0)KNOCKIN + KNOCKOUT = PLAIN VANILLA Formula in cell P36: =(1-M36)*MAX(K36-$B$6,0)STOCK PRICE Formula in cell M17: =MAX(G17:K17)<$B$7 Function MCBarrierIn(Initial, Exercise, Barrier, Up, _ Down, Interest, Periods, Runs) Dim PricePath() As Double ReDim PricePath(Periods + 1) ‘Risk-neutral probabilities piup = (Interest - Down) / (Up - Down) pidown = 1 - piup 812 Chapter 30 Temp = 0 For Index = 1 To Runs ‘Generate path For i = 1 To Periods PricePath(0) = Initial pathprob = 1 If Rnd > pidown Then PricePath(i) = PricePath(i - 1) * Up Else: PricePath(i) = PricePath(i - 1) * Down End If Next i If Application.Max(PricePath) > Barrier Then _ Callpayoff = _ Application.Max(PricePath(Periods) - _ Exercise, 0) _ Else Callpayoff = 0 Temp = Temp + Callpayoff Next Index MCBarrierIn = (Temp / Interest ∧ Periods) / Runs End Function Function MCBarrierOut(Initial, Exercise, _ Barrier, Up, Down, Interest, Periods, Runs) Dim PricePath() As Double ReDim PricePath(Periods + 1) ‘Risk-neutral probabilities piup = (Interest - Down) / (Up - Down) pidown = 1 - piup Temp = 0 813 Using Monte Carlo Methods for Option Pricing Since this function is very similar to the function MCAsian of section 30.6, we will not discuss it, except to point out that the operative part for the “knockin” option is contained in the following lines (note the use of Excel ’ s Max function—in the form of Application.Max ; VBA does not have its own maximum function): For Index = 1 To Runs ‘Generate path For i = 1 To Periods PricePath(0) = Initial pathprob = 1 If Rnd > pidown Then PricePath(i) = PricePath(i - 1) * Up Else: PricePath(i) = PricePath(i - 1) * Down End If Next i If Application.Max(PricePath) < Barrier _ Then Callpayoff = Application.Max _ (PricePath(Periods) - Exercise, 0) _ Else: Callpayoff = 0 Temp = Temp + Callpayoff Next Index MCBarrierOut = (Temp / Interest ∧ Periods) _ / Runs End Function 814 Chapter 30 1 234 5 678 9 10 111213 14 15161718 19 20212223 24 25 2627 28 29303132 33 34AB C D E F 4 . 1 p U 8 . 0 n w o D 8 0 . 1 t s e r e t n I 0 3 e c i r p l a i t i n I 4 s d o i r e P 0 3 e s i c r e x E 0 5 r e i r r a B 0 0 1 s n u R Knockin option value 7.0810 <-- =mcbarrierin(B6,B8,B9,B2,B3,B4,B7,B11) Actual value 9.0334 <-- ='Initial knockin'!N38 Knockout option value 1.6829 <-- =mcbarrierout(B6,B8,B9,B2,B3,B4,B7,B11) Actual value 1.7375 <-- Determined from fully-worked out example 7.7944 7.2408 8.4210 9.2159 6.8481 13.1353 11.6143 8.3860 9.5916 9.1598 7.6430 11.3200 9.3154 6.7095 7.2673 9.2593 9.7948 8.9174 11.0269 10.1018 7.4959 7.5435 9.3069 9.3799 11.7265 8.4210 6.5369 10.6289 8.8613 8.6327 9.5016 9.6350 9.1037 7.9066 8.2262 8.9565 10.9358 7.4440 9.2550 12.1806 8.1056 8.9216 6.3771 7.4440 9.4318 9.3323 9.5831 9.1428 Average of simulations 9.0162 <-- =AVERAGE(A20:F27) True value 9.0334 <-- =B14 6.3771 <-- =MIN(A20:F27) 13.1353 <-- =MAX(A20:F27) 1.5066 <-- =STDEV(A20:F27)PRICING BARRIER OPTIONS BY MONTE CARLO 48 iterations of MCBarrierIn In the spreadsheet below we use this function and its associated function MCBarrierOut to price the options previously priced in our extensive example: If Application.Max(PricePath) < Barrier Then Callpayoff = _ Application.Max(PricePath(Periods) - Exercise, 0) _ Else Callpayoff = 0 815 Using Monte Carlo Methods for Option Pricing Finally, we can also show the implementation of the functions MCBarrierIn and MCBarrierOut for the case where the unit period is divided into n subperiods: As for the case discussed in section 30.6 for Asian options, as the number of runs (cell B17) gets larger, the approximations become better, although the improvement is not dramatic: 1 23456789 1011 1213141516171819202122232425262728293031AB C D E F S0, current stock price 50 X, exercise price 45 Barrier 50 T, time to o ption exercise 0.4 r, interest rate 8% μ, mean stock return 15% σ, standard deviation of stock return 22% n, number of sub-intervals of 1 period 80 Delta t 0.0125 <-- =1/B10 Up over 1 sub-interval 1.0268 <-- =EXP(B7*B11+B8*SQRT(B11)) Down over 1 sub-interval 0.9775 <-- =EXP(B7*B11-B8*SQRT(B11)) Interest over 1 sub-interval 1.0010 <-- =EXP(B6*B11) Runs 100 6.3585 6.9583 6.3533 7.7962 6.1659 7.0748 7.6459 6.6480 7.3670 7.0983 7.6145 7.55187.5930 6.0479 7.4641 6.9369 7.3640 6.84846.6697 6.8640 7.5060 5.5781 6.5915 6.86376.5892 6.0845 7.4208 6.6688 6.2547 7.08696.7855 6.8115 7.4927 8.0739 6.5437 6.80947.1895 6.7203 6.4660 7.2249 7.4684 6.19467.4440 7.3391 5.8421 7.1641 6.9199 6.3297 Average of above 6.9142 <-- =AVERAGE(A19:F26) Minimum 5.5781 <-- =MIN(A19:F26) Maxmimum 8.0739 <-- =MAX(A19:F26) Standard deviation 0.5542 <-- =STDEV(A19:F26)PRICING BARRIER OPTIONS--VBA FUNCTION Each time interval is divided into n subintervals. In this simulation the initial stock price = 50.00, th e exercise price = 45.00, the time to maturity = 0.40, and the unit ti me interval is divided into 80 subintervals. The stock price process has mean return = 15.00% and standard deviation = 1.25%, and the interest rate = 8.00%. There are 100 runs in each Monte Carlo simulation 816 Chapter 30 Finally, we can show that the sum of the knockin plus knockout is approxi- mately equal to the Black-Scholes call when n , the number of divisions of the unit time interval, is very large: 1 23 4 56 7 8 9 10 11 12 1314 15 1617 18 1920 21 22C B A S0, current stock price 30 0 3 e c i r p e s i c r e x e , X Barrie r 40 T, time to option exercise 0.4 % 8 e t a r t s e r e t n i , r , mean stock return 15% , standard deviation of stock return 22% n, number of subintervals of 1 period 200 0 1 B / 1 = - - < 0 5 0 0 . 0 t a t l e D Up over 1 subinterval 1.0164 <-- =EXP(B7*B11+B8*SQRT(B11)) Down over 1 subinterval 0.9853 <-- =EXP(B7*B11-B8*SQRT(B11)) Interest over 1 subinterval 1.0004 <-- =EXP(B6*B11) 0 0 7 s n u R 8 4 1 3 5 6 . 1 r e i r r a b t u o k c o n K <-- =mcbarrierout (B2,B3,B4,B13,B14,B15,INT (B10*B5 ),B17) 1 2 3 4 0 5 . 0 r e i r r a b n i k c o n K <-- =mcbarrierin (B2,B3,B4,B13,B14,B15,INT (B10*B5 ),B17) Sum of knockout + knockin 2.157468 <-- =B19+B20 Black-Scholes call price 2.153173 <-- =BSCall(B2,B3,B5,B6,B8)KNOCKIN + KNOCKOUT = CALL The almost-continuous case μ σ 34 35 36 37 38 39 40 41 42 43 4445 46 47 48 49 50 51 52H G F E D C B RunsAverage of 48 MCBarrierInMinimum MaximumStandard deviation <-- =B31 , data table header (hidden) 50 6.9429 4.9848 8.3475 0.8578 100 6.8413 5.6721 8.6888 0.6402 150 6.8778 6.0454 8.1278 0.5073 200 6.9010 5.9834 8.0931 0.5616 250 7.0201 5.6747 7.8031 0.4348 300 6.8057 5.7971 7.4750 0.3576 350 6.9462 6.2091 7.5758 0.3026 400 6.9964 6.1380 7.6593 0.3181 450 6.9201 6.0998 7.6141 0.3294 500 6.9382 6.2906 7.7124 0.3502 550 6.8899 6.3473 7.5942 0.2355 4.55.05.56.06.57.07.58.08.59.0 50 100 150 200 250 300 350 400 450 500 55048 MCBarrierIn, Varying the Number of Runs Average Minimum Maximum 817 Using Monte Carlo Methods for Option Pricing 30.10 Summary Monte Carlo methods—simulations of option pricing by tracing out many paths of the stock price—are at best a “second best” method of pricing. But in cases where no analytical formulas are available, Monte Carlo is easy to program in VBA and easy to see in Excel. In this chapter we have illustrated Monte Carlo methods for plain-vanilla options, Asian options, and barrier options. Other variations of path-dependent options and their Monte Carlo solutions are considered in the exercises. Exercises 1. Create a VBA subroutine [call it Exercise1( ) ] which generates a random number and prints it on the screen in a message box that looks like this: Note Use the VBA keyword Rnd . 2. Create a VBA subroutine [call it Exercise2( ) ] which generates five random numbers and prints them out on the screen in a message box like the following: Note Use FormatNumber ( Expression , NumDigitsAfterDecimal ) to print out only four digits. 3. Create a VBA subroutine [call it Exercise3( ) ] which generates five random digits of either 1 or 0 and prints them out on the screen in a message box like the following: 818 Chapter 30 Notes • In the VBA message box, use Chr(13) to start a new line. • Use range names in the spreadsheet to transfer values from the spreadsheet to the VBA routine. 5. Repeat the last exercise. This time compute the average price of a path: 6. Use the function VanillaCall defined in the chapter to create a Data Table in which you can see the relation between the number of runs incorporated in the function and the Black-Scholes value of a call. Your result should look something like the following: 4. Suppose a stock price follows a binomial distribution. We want to create a random price path for the stock in a VBA macro. Here ’ s the input with some sample output. Write a VBA for an appropriate subroutine. 819 Using Monte Carlo Methods for Option Pricing 1 2 3 456 7 89 101112 13 14151617 18 192021 22 2324252627 28 29303132 33 34J I H G F E D C B A S0 , current stock price 50 4 4 e c i r p e s i c r e x e , X % 0 1 e t a r t s e r e t n i , r 8 . 0 e m i t , T , mean stock return 13% , sigma--standard deviation of stock return 30% s i h t h t i w d n u o r a g n i y a l p y r T - - < 0 5 1 e m i t t i n u f o s n o i s i v i d , n e l b a t a t a d e h t n i d e r e t l a s ' t a h w s i s i h T - - < 1 1 1 s n u R ) 0 1 B , 9 B , 5 B , 4 B , 7 B , 6 B , 3 B , 2 B ( l l a c a l l i n a v = - - < 2 3 6 0 . 3 1 l l a C a l l i n a V ) 7 B , 4 B , 5 B , 3 B , 2 B ( l l a C S B = - - < 8 4 9 8 . 0 1 l l a c S B Monte CarloBlack-Scholes Runs 13.0632 10.8948 8 4 9 8 . 0 1 9 4 7 7 . 9 0 0 1 8 4 9 8 . 0 1 4 9 6 3 . 1 1 0 0 5 1,000 10.8217 10.8948 1,500 10.9121 10.8948 2,000 10.9170 10.8948 2,500 10.6694 10.8948 3,000 10.8389 10.8948 3,500 10.8755 10.8948 4,000 10.8451 10.8948 4,500 11.1993 10.8948 5,000 10.9505 10.8948 5,500 10.8181 10.8948 6,000 11.0687 10.8948 6,500 10.7333 10.8948MONTE CARLO PRICING OF PLAIN-VANILLA CALLS Data table: the effect of runs on the MC Vanilla call value 9.59.79.910.110.310.510.710.911.111.311.5 123456789 1 0 1 1 1 2 1 3 1 4 Monte Carlo Black-Scholesμ σ V I EXCEL TECHNIQUES The five chapters of this section cover technical topics related to Excel. Chapter 31 discusses Data Tables , Excel ’ s amazing sensitivity analysis tool. An important addition in this edition of Financial Modeling is a discussion of data tables on blank cells. This is a tool we use extensively in our discussions of simulations and Monte Carlo methods in Section V . Chapter 32 discusses matrices, without going into much theory. In Financial Modeling we use matrices primarily in our discussion of portfolio optimization (Section II). Chapter 33 is a compendium of most of the Excel functions used in the book, and Chapter 34 is a discussion of array functions; these are func-tions that take rectangular arrays of cells as arguments and that are entered by pressing [Ctrl] + [Shift] + [Enter]. Finally, Chapter 35 covers a grab-bag of Excel hints that we couldn ’ t place anywhere else in this book! The last section of this chapter shows how to put custom-made procedures into Excel ’ s personal notebook. We use this particu-larly to automate the somewhat cumbersome Copy/Paste-as-Picture feature of Excel. 3 1 Data Tables 31.1 Overview Data table commands are powerful commands that make it possible to do complex sensitivity analyses. Excel offers the opportunity to build a table in which only one variable is changed, or one in which two variables are changed. Excel data tables are array functions, and thus change dynamically when related spreadsheet cells are changed. In this chapter you will learn how to build both one-dimensional and two- dimensional Excel data tables. 31.2 An Example Consider a project which has an initial cost of $1,150, and seven subsequent cash flows. The cash flows in years 1–7 grow at rate g , so that the cash flow in year t is CF t = CF t − 1 *(1 + g ). Given a discount rate r , the net present value (NPV) of the project is NPVCF rCF g rCF g rCF=− + +()++() +()++() +()++ + 1 150 11 11 11 11 212 31, …1 1 16 7+() +()g r The internal rate of return (IRR), i , is the rate at which the NPV equals zero: 0 1 150 11 11 11 1 11 212 31=+ +()++() +()++() +()++ ++,CF iCF g iCF g iCF g…(() +()6 71 i These calculations are easily done in Excel. In the following example the initial cash flow is 234, the growth rate g = 10%, and the discount rate r = 15%: 1 2 3 4 5 6 78 9AB C D E F G H I CF 1 234 Growth rate 10% Discount rate 15% Y e a r 01234567 Cash flow -1150.00 234.00 257.40 283.14 311.45 342.60 376.86 414.55 NPV 101.46 <-- =+B6+NPV(B3,C6:I6) IRR 17.60% <-- =IRR(B6:I6,0) 824 Chapter 31 Note the cell addresses for the growth rate, the discount rate, the NPV , and the IRR. They will be needed below. 31.3 Setting Up a One-Dimensional Data Table We refer to a data table that does sensitivity analysis by varying one parameter as a one-dimensional data table . This section discusses such tables, and section 31.4 discusses two-dimensional data tables. Suppose we want to know how the NPV and IRR are affected by a change in the growth rate. The command Data Table allows us to do this simply. The first step is to set up the table ’ s structure. In the example below, we put the formulas for the NPV and IRR on the top row and we put the variable we wish to vary (in this case the growth rate) in the first column. At this point the table looks like this: 10 11 12 13 14 151617 18 19FGH I J 9 B = 8 B = NPV IRR 101.46 17.6% 0 Growth 5% rate 10% 15% The actual table (as opposed to the labels for the columns and the rows) is outlined in the dark border. The numbers directly under the labels “NPV” and “IRR” refer to the corresponding formulas in the previous picture. Thus, if the cell B8 contains the calculation for the NPV , then the cell under the letters “NPV” contains the formula “ = B8.” Similarly, if the cell B9 contains the original calculation for the IRR, then the cell under “IRR” in the table contains the formula “ = B9.” 825 Data Tables Now do the following: • Highlight the table area (outlined in the dark border). • Activate the command Data|What-if Analysis|Data Table . You will get a dialog box which asks you to indicate a Row input cell and/or a Column input cell . We like to think of a data table spreadsheet as having two parts: • A basic example. • A table that does a sensitivity analysis on the basic example. In our example, the first row of the table contains references to calculations done in our basic example. While there are other ways to do data tables, this structure is both typical and easy to understand. In this case, the variable we wish to change is in the left-hand column of our table, so we leave the Row input cell blank and indicate cell B2 (this cell contains the growth rate in our basic example.) in the Column input cell box. Here ’ s the result: 10 11 12 13 14 151617 18 19FGH I J 9 B = 8 B = NPV IRR 101.46 17.6% 0 -176.46 9.71% Growth 5% -47.82 13.67% rate 10% 101.46 17.60% 15% 274.35 21.50% 826 Chapter 31 31.4 Building a Two-Dimensional Data Table We can also use the Data Table command to vary one formula while changing two parameters. Suppose, for example, that we want to calculate the net present value (NPV) of the cash flows for different growth rates and different discount rates. We create a new table which looks like this: 21 22 2324 25 26FGH I J =B8 101.46 7% 10% 12% 0 5% 10%15%Growth rate -->Discount rate ↓ The upper left-hand corner of the table contains the formula “ = B8” as a refer- ence to the basic example. We now use the Data Table command again. This time we fill in both the Row input cell (indicating cell B3, the site of the discount rate in our basic example) and the Column input cell (indicating cell B2). Here ’ s the result: 21 22 2324 25 26FGH I J =B8 101.46 7% 10% 12% 0 111.09 -10.79 -82.08 5% 297.62 150.74 65.13 10% 515.79 339.09 236.4415% 770.34 558.25 435.41Growth rate -->Discount rate ↓ 827 Data Tables 31.5 An Aesthetic Note: Hiding the Formula Cells Data tables tend to look a bit strange, because the formula being calculated shows up in the data table (in our examples: in the top row of the first data table, and in the left-hand top corner of the second data table). You can make your tables look nicer by hiding the formula cells. To do this, mark the offend- ing cells and use the Format Cells command (or press the right mouse button and go to the Number|Custom ). In the dialog box go to the box marked Type and insert a semicolon into the box. Here ’ s the way this looks for the previous example: 828 Chapter 31 The cell contents will now be hidden. This gives the following result. 10 1112 13 14 15 1617 18 19FGH I J 9 B = 8 B = NPV IRR 0 -176.46 9.71% Growth 5% -47.82 13.67% rate 10% 101.46 17.60% 15% 274.35 21.50% 31.6 Excel Data Tables Are Arrays This means that Excel data tables are dynamically linked to your initial example. When you change a parameter in the original example, the corre-sponding column or row of the data table changes. For example, if we change the initial cash flow from 234 to 300, here ’ s what will happen in the data table pictured above: 1 2 3 4 5 6 7 8 9 1011 12 13 14 15 16 17 18 19AB C D E F G H I J CF 1 300 Growth rate 10% Discount rate 15% Y e a r 01234567 Cash flow -1150.00 300.00 330.00 363.00 399.30 439.23 483.15 531.47 NPV 454.43 <-- =+B6+NPV(B3,C6:I6) IRR 26.01% <-- =IRR(B6:I6,0) 9 B = 8 B = NPV IRR 0 98.13 17.80% Growth 5% 263.06 21.92% rate 10% 454.43 26.01% 15% 676.09 30.07% 829 Data Tables 31.7 Data Tables on Blank Cells (Advanced) An exciting use of data tables is to run multiple iterations of random simulations. Here ’ s an example: Suppose you use Rand( ) to create 10 random numbers between 0 and 1. This Excel random number generator is discussed in detail in Chapter 24. The simulation we are describing might look like this: 1 2 3456789 1011ABCD E F 0.9428 <-- =RAND()0.0698 <-- =RAND() Mean 0.5679 <-- =AVERAGE(A2:A11)0.6437 <-- =RAND() Variance 0.0878 <-- =VAR.P(A2:A11)0.2236 <-- =RAND() Sigma 0.2963 <-- =SQRT(E4)0.8855 <-- =RAND()0.3245 <-- =RAND()0.4922 <-- =RAND()0.9802 <-- =RAND()0.6795 <-- =RAND()0.4377 <-- =RAND()Statistics 10 RANDOM NUMBERS If you want to repeat this experiment 10 times, your spreadsheet might look like this: 830 Chapter 31 1 2 3456789 10111213141516171819 20 212223242526272829ABCD E F GH I JK 0.1304 <-- =RAND()0.0249 <-- =RAND() Mean 0.5337 <-- =AVERAGE(A2:A11)0.5569 <-- =RAND() Variance 0.1521 <-- =VAR.P(A2:A11)0.8470 <-- =RAND() Sigma 0.3900 <-- =SQRT(E4)0.9996 <-- =RAND()0.9951 <-- =RAND()0.9524 <-- =RAND()0.0621 <-- =RAND()0.6378 <-- =RAND()0.1309 <-- =RAND() 123 4 5 6789 1 0 0.6073 0.9267 0.3659 0.9473 0.5307 0.7728 0.6772 0.8663 0.1242 0.92850.4076 0.3475 0.4079 0.0923 0.1159 0.3125 0.9913 0.9525 0.1252 0.55220.5411 0.4921 0.0958 0.7892 0.5212 0.4310 0.9040 0.0733 0.9615 0.97750.2448 0.7231 0.3462 0.9175 0.3743 0.2937 0.1035 0.3312 0.8416 0.53760.2678 0.7630 0.3316 0.0017 0.4115 0.6189 0.0608 0.3203 0.0959 0.4950 0.2402 0.7870 0.3109 0.3760 0.3872 0.1488 0.6636 0.3832 0.3897 0.6506 0.1288 0.2508 0.2282 0.6406 0.8679 0.9740 0.1927 0.0848 0.6565 0.47390.6039 0.9266 0.4174 0.5396 0.5827 0.3528 0.9261 0.2797 0.3899 0.88800.0390 0.2560 0.3029 0.5665 0.0725 0.4498 0.2902 0.5482 0.7215 0.62740.2482 0.4922 0.5431 0.9500 0.7878 0.5518 0.5362 0.0747 0.5163 0.8535 Statistics for the 10 experimentsMean 0.3329 0.5965 0.3350 0.5821 0.4652 0.4906 0.5345 0.3914 0.4822 0.6984Variance 0.0353 0.0617 0.0127 0.1049 0.0581 0.0545 0.1122 0.0882 0.0870 0.0337Sigma 0.1880 0.2485 0.1126 0.3238 0.2410 0.2335 0.3350 0.2969 0.2949 0.1836Statistics 10 experiments: each cell contains Rand() 10 RANDOM NUMBERS Using Data Table with Blank Cell Reference There ’ s a more efficient way of running this experiment, illustrated below. Note that the cell referenced in the Data Table dialog box is empty. 831 Data Tables The result looks something like this (“something” because by the nature of this experiment, the results are random, so that each push of F9 will produce a different set of numbers): 832 Chapter 31 A Slightly More Realistic Example (Also More Advanced) Why use this technique? Go back to the pension problems discussed in section 27.6. Suppose you retire at age 75 with € 1,000,000 in savings. You want to invest this 60% in the risky asset that has a mean annual return μ = 11% and a standard deviation of return σ = 30%. You plan to withdraw € 100,000 at the end of this and each of the next 9 years. The amount you ’ ll have left at the end of 10 years depends on the random annual return on the risky asset. As explained in Chapter 26, this can be modeled by using Exp(mu + sigma*Norm.S.Inv(Rand( ))) . We embed this function and the assumptions in the spreadsheet below. The amount left is cell B24. In the example shown below, this number is positive, but it can—depending on the parameters—also be negative. 1 1 2 34 5 6789 10111213 14 1516171819202122 23 2425AB C DE F 0.5948 <-- =RAND()0.0850 <-- =RAND() Mean 0.5053 <-- =AVERAGE(A2:A11)0.9396 <-- =RAND() Variance 0.0717 <-- =VAR.P(A2:A11) 0.4272 <-- =RAND() Sigma 0.2677 <-- =SQRT(E4) 0.1722 <-- =RAND()0.4833 <-- =RAND()0.6271 <-- =RAND()0.8981 <-- =RAND()0.2721 <-- =RAND()0.5537 <-- =RAND() Experiment Mean Variance Sigma 0.5053 0.0717 0.2677 <-- =E5, data table header 1 0.5527 0.1225 0.3500 2 0.4129 0.0624 0.2498 3 0.5433 0.1072 0.3275 4 0.4453 0.0862 0.2937 5 0.3300 0.0420 0.2051 6 0.5339 0.0719 0.2681 7 0.6534 0.0601 0.2451 8 0.2358 0.0157 0.1253 9 0.4701 0.0884 0.2973 10 0.6402 0.0469 0.2165BETTER WAY OF RUNNING THE EXPERIMENT Statistics Data table 1. This negative number is, of course, problematic! Maybe you have other resources, maybe you should change your spending policy during the 10 years, or maybe you should die sooner (Heaven forfend!). We ignore all these issues. 833 Data Tables Now we use our new “data table on blank cell” technique to run 20 simulations to see what the final (cell B24) amount might be: 1 2 3456789 101112 13 1415161718192021222324AB C D E F Current savings 1,000,000Invested in Risky asset 60% Risk free asset 40% <-- =1-B4 Annual withdrawal 100,000 Return paramets Risk free rate 4% Risky asset mean return μ 11% Risky asset sigma σ 30% AgeSavings at beginning of yearSavings at end of yearWithdrawal at end of yearNet after withdrawal 75 1,000,000 1,437,841 100,000 1,337,841 <-- =C14-D14 76 1,337,841 1,097,621 100,000 997,621 77 997,621 713,551 100,000 613,551 78 613,551 722,186 100,000 622,186 79 622,186 543,920 100,000 443,920 80 443,920 483,394 100,000 383,394 81 383,394 651,125 100,000 551,125 82 551,125 380,550 100,000 280,550 83 280,550 339,858 100,000 239,858 84 239,858 252,465 100,000 152,465 85 152,465=B14*$B$4*EXP(mu+sigma*NORM.S.INV(R AND())+$B$5*EXP(riskfree))PENSION PROBLEM 1 2 3456789 101112 13 1415161718192021222324AB C D E F G H I J Current savings 1,000,000Invested in Risky asset 60% Risk free asset 40% <-- =1-B4 Annual withdrawal 100,000 Return paramets Risk free rate 4% Risky asset mean return μ 11% Risky asset sigma σ 30% AgeSavings at beginning of yearSavings at end of yearWithdrawal at end of yearNet after withdrawal SimulationEnding amount 75 1,000,000 1,045,933 100,000 945,933 <-- =C14-D14 -356,997 <-- =B24, data table header 76 945,933 742,643 100,000 642,643 1 -301,825 77 642,643 477,596 100,000 377,596 2 2,830,285 78 377,596 342,151 100,000 242,151 3 -585,010 79 242,151 208,010 100,000 108,010 4 -117,106 80 108,010 96,006 100,000 -3,994 5 -507,590 81 -3,994 -4,144 100,000 -104,144 6 -135,525 82 -104,144 -100,014 100,000 -200,014 7 -64,976 83 -200,014 -241,630 100,000 -341,630 8 1,265,134 84 -341,630 -256,997 100,000 -356,997 9 -345,502 85 -356,997 10 -141,072=B14*$B$4*EXP(mu+sigma*NORM.S.INV(R AND())+$B$5*EXP(riskfree)) Data tablePENSION PROBLEM 834 Chapter 31 Even Better We can do a simulation on the annual amount withdrawn: Here are some results, showing 10 simulations for five different annual with- drawal amounts. For fun and for a sanity check, we ’ ve also run some statistics in rows 26 and 27. 835 Data Tables 31.8 Data Tables Can Stop Your Computer Data tables are amazing, but they can be an incredibly wasteful use of com- puter resources! A few juicy data tables can slow your spreadsheet to a crawl. One way to get around this is to set the recalculation to manual: 12 13 1415 16 17181920212223 24 252627GH I J K L M -585,609 50,000 75,000 100,000 125,000 150,000 1 494,149 546,991 561,325 1,187,944 -1,709,883 Simulation --> 2 294,802 746,571 -419,406 -322,478 -634,332 3 167,369 773,073 -41,438 -425,747 638,336 4 5,224,365 -54,924 -608,211 -291,104 814,324 5 292,638 947,669 131,293 1,263,636 1,338,209 6 142,418 53,797 2,087,825 -122,044 -656,701 7 3,670,562 -95,539 -24,299 -551,433 -74,548 8 2,043,177 150,463 94,2 71 -362,274 1,483,009 9 246,264 1,285,907 105,789 -280,146 -837,601 10 608,727 166,481 -340,8 66 -1,718,429 426,265 Average 1,318,447 452,049 154,628 -162,207 78,708 Sigma 1,778,101 474,664 755,472 856,126 1,035,210Data table: Terminal legacy as funciton of withdrawal Annual withdrawal ↓ 836 Chapter 31 Exercises 1. a. Use Data|Table to graph the function f ( x ) = 3 x 2 − 2 x − 15, as illustrated below: 1 2 3 45 6 78 9 10 11 12 1314 15 1617 18 1920AB C D E F G H I 3 x f(x) 6 <-- =3*B2^2-2*B2-15 x 6 <-- =B3, data table header -6 105 -5 70 -4 41 -3 18 -2 1 -1 -10 0- 15 1- 14 2- 7 36 42 5 55 0 68 1 7 118USING DATA TABLE TO GRAPH A FUNCTION -300306090120150 -8 -6 -4 -2 0 2 4 6 8 b. Use Solver or Goal|Seek to find two values of x for which f ( x ) = 0 . 2. The Excel function PV(rate, number_periods, payment) calculates the present value of a constant payment. For example in the spreadsheet example below, PV( %, , ) .. 15 15 1010 11 558 47 115 −= ()= =∑ t t (Note that we have put the payment as a negative number, since otherwise Excel returns a negative value! This little irritation is discussed in Chapters 1 and 34.) Use Data Table to graph the present value as a function of the discount rate, as illus- trated below: 837 Data Tables 3. The spreadsheet fragment below shows a net present value and internal rate of return calculation for a project: 1 2 3 45 6 7 8 9 10 11 12 13 1415 16 17 18 1920 21AB C D E F G % 5 1 e t a R Number of periods 15 Payment -10 To get a positive PV, we let the payment be negative (see Chapters 1 & 34) Present value $58.47 <-- =PV(B2,B3,B4) Rate $58.47 <-- =B5, data table header 0% 150.00 2% 128.49 4% 111.18 6% 97.12 8% 85.59 10% 76.06 12% 68.11 14% 61.42 16% 55.75 18% 50.92 20% 46.75DATA TABLE AND PV 020406080100120140160 0% 5% 10% 15% 20% 1 2 345 6 7 8 9 101112131415 16 17 18 19 20 21222324AB C D E F G H Growth rate 10% Discount rate 15% 0 0 5 t s o C Year 1 cash flow 100 Year 0 1 2 3 4 5 Cash flow -500.00 100.00 110.00 121.00 133.10 146.41 NPV (101.42) <-- =NPV(B3,C8:G8)+B8 IRR 6.60% <-- =IRR(B8:G8) Growth ($101.42) 0% 3% 6% 9% 12% 0% 0.00 30.91 63.71 98.47 135.28 Discount rate 3% -42.03 -14.56 14.55 45.38 78.01 6% -78.76 -54.26 -28.30 -0.84 28.21 9% -111.03 -89.08 -65.85 -41.28 -15.33 12% -139.52 -119.78 -98.91 -76.86 -53.5715% -164.78 -146.97 -128.15 -108.28 -87.32 18% -187.28 -171.15 -154.13 -136.16 -117.23 21% -207.40 -192.75 -177.30 -161.01 -143.8424% -225.46 -212.11 -198.04 -183.22 -167.62Cell B15 contains the data table function =B10NPV, DISCOUNT AND GROWTH RATES 838 Chapter 31 Use Data Table to do a sensitivity analysis on the NPV of the project, varying the discount rates from 0%, 3%, 6%, …, 21% and varying the growth rates from 0%, 3%, …, 12%. 4. Using Data Table graph the function sin( x * y ) for x = 0, 0.2, 0.4, … 1.8, 2 and y = 0, 0.2, 0.4, … 1.8, 2. Use the “Surface” graph option to make a three-dimensional graph of the function. 5. Boris and Tareq are tossing coins. For each toss, if the coin falls on heads, Tareq wins $1. If the coin falls on tails, Tareq pays Boris $1. • Simulate 10 rounds of this game, showing Tareq ’ s cumulative winnings. • Use Data Table on a blank cell to simulate 25 games of 10 rounds each, showing Tareq ’ s cumulative winnings. 6. Maria and Shavit are tossing coins. Their game works as follows: • On the first toss, if the coin falls on heads, Shavit pays Maria $1 (and vice versa). • On each successive toss: Ⴜ If the coin falls on heads and Maria is ahead, Shavit pays her the square of her previ- ous winnings. Ⴜ If the coin falls on heads and Shavit is ahead, this cancels all of Maria ’ s debt to Shavit. Simulate Maria ’ s winnings after 10 tosses. 3 2 Matrices 32.1 Overview The portfolio optimization chapters of Financial Modeling (Chapters 8–13) make extensive use of matrices to find efficient portfolios. This chapter con- tains enough information about matrices to make it possible for you to do the calculations required for portfolio mathematics. A matrix is a rectangular array of numbers. All of the following are matrices: A matrix with only one row is also called a row vector ; a matrix with only one column is also called a column vector . A matrix with an equal number of rows and columns is called a square matrix . A single letter is often used to denote a matrix or a vector. In this case we often write, for example, B = [ b ij ], where b ij stands for the entry in row i and column j of the matrix. For a vector we might write A = [ a i ] or C = [ c i ]. Thus for the examples given above: ab c d32 2 1 4 1 41 0 1 30=== = ,, , The matrix B above is symmetric , meaning that b ij = b ji . (The variance- covariance matrices used in the portfolio discussion of Chapters 8–13 are symmetric.) 1 2 3 4 5 6 78 9 10 11ABCDEFGH I Matrix C (column vector) 234 1 3 - 8 - 3 1 3 8 - 1 - 0 1 8 - 3 - 1 1 1 - 3 - 13 -8 -3 -8 10 -1 -3 -1 11 01 3 3Matrix D (a 4 x 3 matrix)Matrix A (a row vector) Matrix B (square 3 x 3 matrix)MATRICES IN EXCEL 840 Chapter 32 32.2 Matrix Operations In this section we briefly review the basic operations on a matrix: multiplying a matrix by a scalar, adding matrices, transposition of matrices, and matrix multiplication. Multiplication by a Scalar Multiplying a matrix by a scalar multiplies every entry in the matrix by the scalar. Thus, for example: . 1 2345 6 789 1011ABCD E Scalar 6 Matrix B 13 -8 -3 -8 10 -1 -3 -1 11 Scalar * Matrix B 78 -48 -18 <-- =D4*$B$2 -48 60 -6-18 -6 66MULTIPLYING A MATRIX BY A SCALAR Matrix Addition Matrices may be added together provided they have the same number of rows and columns. Adding two vectors or matrices is accomplished by adding their corresponding entries. Thus if A = [ a ij ] and B = [ b ij ], A + B = [ a ij + b ij ]: 1 2 34567AB C DE F GH I Sum of A + B 13 23 36 < - - = B 3 + E 3 30 2 35 2 656- 9 8 6 1 4- 351 1 - 1 5 1 - 1 01 271 2 4 - 1 1 11 1ADDITION OF MATRICES Matrix A Matrix B 841 Matrices Matrix Transposition Transposition is an operation by which the rows of a matrix are turned into columns and vice versa. Thus for the matrix E : 1 2 34 5 6 7 8ABCDEFGH I Matrix E Transpose of E: ET 1 2 3 4 1 0 16 <-- {=TRANSPOSE(A3:D5)} 03 7 7 - 9 237 1 6772 3 7 77 4- 9 2TRANSPOSITION OF MATRICES Cells F3:H6 are generated with the array function Transpose(A3:D5). This function is inserted by marking off the target area, typing the formula, and then finishing by pressing [Ctrl]+[Shift]+[Enter] . See Chapter 34 for more details. The illustration above uses the array function Transpose . More details on the use of array functions are given in Chapter 34. Multiplication of Matrices You can multiply matrix A by matrix B to get product AB . However, you can only do this if the number of columns in A equals the number of rows in B . The resulting product AB is a matrix with the number of rows as A and the number of columns as in B . Confused? A couple of examples will help. Suppose that X is a row vector and that Y is a column vector, both with n coordinates: Xx x Yy yn n=[] =⎡ ⎣⎢ ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥11 /midhorizellipsis/vertellipsis ,. Then the product of X and the product of X and Y are defined by XY x xy yxy n nii in =[]⎡ ⎣⎢ ⎢ ⎢⎤ ⎦⎥ ⎥ ⎥= =∑ 11 1/midhorizellipsis/vertellipsis . Now suppose that A and B are two matrices, and that A has n columns and p rows and B has n rows and m columns: 842 Chapter 32 Aaa a aa aBbb bb bbn pp p nm m nn m=⎡ ⎣⎢ ⎢⎢⎤ ⎦⎥ ⎥⎥=⎡ 11 12 1 1211 1 21 2 1/midhorizellipsis /vertellipsis /midhorizellipsis/midhorizellipsis /midhorizellipsis /vertellipsis /midhorizellipsis ⎣ ⎣⎢ ⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥. Then the product of A and B , written AB , is defined by the matrix: ABab ab ab ab abhh hn hh hn hh m hn ph h hn ph hm=== = =∑∑ ∑ ∑11 112 11 1 1 1… /vertellipsis /vertellipsis …… h hnth ih hj hn with ij element a b == ∑∑⎡ ⎣⎢ ⎢⎢⎢⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥⎥⎥⎥= 11, Note that the ij th coordinate of AB is the product of the i th row of A times the j th column of B . For example, if A B then AB =− −⎡ ⎣⎢⎤⎦⎥=− −⎡⎣⎢⎤⎦⎥=− −−⎡⎣⎢⎤ 269369 1 2 52 442 6 4869 75 120, ⎦ ⎦⎥. The order of matrix multiplication is critical. Multiplication of matrices is not commutative; that is, AB ≠ BA . As the above example shows, the fact that it is possible to multiply A times B does not always imply that the multiplication BA is even defined. To multiply matrices in Excel, we use the array function MMult : 1 2 3 456 7 8ABCDEF 2- 7 6 9 - 1 2 03 - 524 47 4 -52 <-- {=MMULT(A3:B4,D3:F4)} -15 6 12Product ABMatrix B Matrix AMULTIPLYING MATRICES To multiply two matrices together, the number of columns in the first matrix must equal the number of rows in the second. Thus we can multiply A times 843 Matrices B , but we cannot multiply B times A . If you try this in Excel, the function MMult will give you an error message: 1 2345678ABCDEF 2- 7 6 9 - 1 2 03 - 524 #VALUE! #VALUE! #VALUE! <-- {=MMULT(D3:F4,A3:B4)}#VALUE! #VALUE! #VALUE!Product BAMatrix B Matrix A MATRIX MULTIPLICATION: Number of c olumns of first matrix must equal number of rows of second matrix 32.3 Matrix Inverses A square matrix I is called the identity matrix if all its off-diagonal entries are 0 and all its diagonal entries are 1. Thus I=⎡ ⎣⎢ ⎢⎢⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥⎥⎥10 00 01 00 00 10 00 01/midhorizellipsis/midhorizellipsis /vertellipsis/vertellipsis /vertellipsis/vertellipsis /midhorizellipsis It is easy to confirm that multiplying any matrix A by the identity matrix of the proper dimension leaves that A unchanged. Thus, if I n is an n × n identity matrix and A is an n × m matrix, IA = A . Similarly, if I m is an m × m identity matrix, AI = A . Now suppose we are given a square matrix A of dimension n . The n × n matrix A − 1 is called the inverse of A if A − 1 A = AA − 1 = I . The computation of an inverse matrix can be a lot of work; fortunately, however Excel has the array function MInverse which does the calculations for us. Here ’ s an example: 844 Chapter 32 As illustrated above, you can use MMult to verify that the product of the above matrix and its inverse indeed give the identity matrix. Expressions like 1.07E-15 mean 1.07*10 − 15 , and are thus essentially zero; you can use Format|Cells|Number to specify the number of decimal places and get rid of these ugly expressions: 1 234567 8 9 10 11 1213AB C D EFG HI J 1 -9 16 1 -0.0217 1.8913 0.5362 -1.1449 <-- {=MINVERSE(A3:D6)} 3 3 2 3 0.0000 -1.0000 -0.1667 0.6667 2 4 0 -2 0.0652 -0.6739 -0.1087 0.4348 5 7 3 4 -0.0217 -0.1087 -0.2971 0.1884 1 1.07E-15 -2.22045E-16 -9.4369E-16 0 1 -1.11022E-16 2.22045E-16 6.94E-18 8.33E-17 1 5.55112E-16 1.39E-17 1.17E-15 -4.44089E-16 1Verifying the inverse We multiply A*Inverse A: cells below contain array function {=MMULT(A3:D6,F3:I6)}Matrix AMATRIX INVERSE Use array function Minverse to compute the inverse of a square matrix Inverse of A 9 10 111213AB C D 1.0000 0.0000 0.0000 0.00000.0000 1.0000 0.0000 0.00000.0000 0.0000 1.0000 0.00000.0000 0.0000 0.0000 1.0000We multiply A*Inverse A: cells below contain array function {=MMULT(A3:D6,F3:I6)} A square matrix that has an inverse is called a nonsingular matrix . The conditions for a matrix to be nonsingular are the following: Consider a square matrix A of dimension n . It can be shown that A = [ a ij ] is nonsingular if and only if the only solution to the n equations ax j nij i i∑ ==01,, ,… is x i = 0, i = 1, … , n . Matrix inversion is a tricky business. If there exists a vector X whose components are almost zero and which solves the above system, then the matrix is ill-conditioned , and it may be very difficult to find an accurate inverse. 845 Matrices 32.4 Solving Systems of Simultaneous Linear Equations A system of n linear equations in m unknown is written as: ax ax ax y ax ax a x y ax axnn n nn11 1 12 2 1 1 21 1 22 1 2 1 2 11 21++ += ++ += ++/midhorizellipsis /midhorizellipsis /vertellipsis /midhorizellipsis ++=ax ynn n 1 Writing the matrix of coefficients as A = [ a ij ], the column vector of unknowns as X = [ x j ], and the column vector of constants as Y = [ y j ], we may write the above system in matrix notation as AX = Y . Not every system of linear equations has a solution, and not every solution of such a system is unique. The system AX = Y always has a unique solution, however, if the matrix A is square and nonsingular. In this case the solution is found by pre-multiplying both sides of the equation AX = Y by the inverse of A : since AX Y A AX A Y X A Y =⇒ = ⇒ =−− −11 1 Here is an example. Suppose we want to solve the 3 x 3 system of equations: 3 4 66 16 33 77 42 3 2 1212 3 23 12 3xx x xx xx x++ = −+ = ++ = We set this up and solve it in Excel as follows: 1 2 34567 8 9 10H G F E D C B A Column vector ySolution A -1 Y 3 4 66 16 0.4343 0 -33 1 77 -2.3223 <-- {=MMULT(MINVERSE(A3:C5),E3:E5)} 42 3 2 12 0.3634 Checking that the solution works 1677 <-- {=MMULT(A3:C5,G3:G5)}12Matrix A of coefficients SOLVING SIMULTANEOUS EQUATIONS In cells B8:B10 we check that the solution indeed solves the system by multiplying the matrix A times the column vector G3:G5. 846 Chapter 32 32.5 Some Homemade Matrix Functions In the chapters on portfolio problems we use a number of matrix functions that are not included in Excel. The functions in this section need to be embed-ded into the spreadsheet where they are used—see the Technical Note at the beginning of this book or Chapter 36 of the VBA section. Variance-Covariance Matrix When dealing with stock returns, we often need to compute the variance-covariance matrix. The following function does the trick: ‘My thanks to Amir Kirsch and Beni Czaczkes Function VarCovar(rng As Range) As Variant Dim i As Integer Dim j As Integer Dim numcols As Integer numcols = rng.Columns.Count numrows = rng.Rows.Count Dim matrix() As Double ReDim matrix(numcols - 1, numcols - 1) For i = 1 To numcols For j = 1 To numcols matrix(i - 1, j - 1) = _ Application.WorksheetFunction. _ Covar(rng.Columns(i), rng.Columns(j)) _ * numrows / (numrows - 1) Next j Next i VarCovar = matrix End Function Here is an application. The spreadsheet below shows five years of monthly returns for 10 stocks: 847 Matrices To compute the variance-covariance matrix: 1 2 345 6 789 5657 58 59606162 63ABC D E F G H I J K McDonalds US SteelArcelor- MiƩal Microso Ō Apple KelloggGeneral ElectricBank of America P ﬁzer Exxon Date MCD X MT MSFT AAPL K GE BAC PFE XOM 1-Mar-07 3.07% 11.18% 3.91% -1.06% 9.36% 3.13% 1.27% 0.38% 1.17% 5.13% 2-Apr-07 6.93% 2.37% 1.00% 7.18% 7.15% 2.84% 4.17% -0.25% 4.64% 5.08% 1-May-07 4.59% 11.02% 12.16% 2.80% 19.42% 2.55% 1.91% 0.73% 4.89% 5.09% 1-Jun-07 0.41% -3.98% 3.93% -4.06% 0.70% -4.14% 2.60% -3.66% -7.23% 0.85% 2-Jul-07 -5.85% -10.11% -2.23% -1.66% 7.66% 0.04% 1.24% -3.06% -8.39% 1.49% 1-Aug-07 2.83% -3.72% 8.65% -0.53% 4.97% 6.42% 0.28% 6.66% 6.70% 1.09% 1-Jul-11 2.53% -14.09% -10.97% 5.24% 15.12% 0.82% -5.16% -12.05% -6.79% -1.97% 1-Aug-11 5.12% -28.23% -33.99% -2.32% -1.46% -1.86% -9.36% -17.20% -0.27% -6.85% 1-Sep-11 -2.92% -31.32% -32.29% -6.66% -0.92% -2.10% -5.99% -28.81% -7.13% -1.89% 3-Oct-11 5.58% 14.13% 26.47% 6.77% 5.97% 1.90% 9.37% 10.99% 8.57% 7.24% 1-Nov-11 3.58% 7.58% -8.23% -3.27% -5.74% -8.89% -4.89% -22.61% 5.11% 3.56% 1-Dec-11 4.91% -3.13% -3.78% 1.47% 5.79% 2.83% 12.79% 2.18% 7.56% 5.24% 3-Jan-12 -1.28% 13.17% 12.05% 12.88% 11.97% -2.10% 4.37% 24.87% -1.13% -1.22% 1-Feb-12 0.94% 2.85% 12.71% 4.11% 7.73% 1.38% 2.22% 13.74% -0.19% 1.90%FIVE YEARS OF RETURNS FOR 10 STOCKS 1 2 3 45 6 7 8 9 10 11 1213 14ABCDEFGH I J K MCD X MT MSFT AAPL K GE BAC PFE XOM MCD 0.0020 0.0037 0.0028 0.0015 0.0017 0.0007 0.0020 0.0031 0.0015 0.0011 X 0.0037 0.0380 0.0284 0.0076 0.0111 0.0031 0.0127 0.0176 0.0043 0.0043 MT 0.0028 0.0284 0.0267 0.0065 0.0097 0.0031 0.0102 0.0133 0.0038 0.0039 MSFT 0.0015 0.0076 0.0065 0.0063 0.0049 0.0010 0.0046 0.0079 0.0018 0.0014 AAPL 0.0017 0.0111 0.0097 0.0049 0.0126 0.0016 0.0049 0.0049 0.0007 0.0020 K 0.0007 0.0031 0.0031 0.0010 0.0016 0.0026 0.0028 0.0046 0.0011 0.0003 GE 0.0020 0.0127 0.0102 0.0046 0.0049 0.0028 0.0122 0.0163 0.0041 0.0022 BAC 0.0031 0.0176 0.0133 0.0079 0.0049 0.0046 0.0163 0.0393 0.0080 0.0017 PFE 0.0015 0.0043 0.0038 0.0018 0.0007 0.0011 0.0041 0.0080 0.0041 0.0011 XOM 0.0011 0.0043 0.0039 0.0014 0.0020 0.0003 0.0022 0.0017 0.0011 0.0026VARIANCE-COVARIANCE MATRIX FOR 10 STOCKS Formula: {=VARCOVAR('Return data'!B4:K63)} Correlation Matrix An obvious variation on the previous function computes the correlation matrix of the returns: 848 Chapter 32 Function CorrMatrix(rng As Range) As Variant Dim i As Integer Dim j As Integer Dim numCols As Integer numCols = rng.Columns.Count numRows = rng.Rows.Count Dim matrix() As Double ReDim matrix(numCols - 1, numCols - 1) For i = 1 To numCols For j = 1 To numCols matrix(i - 1, j - 1) = _ Application.WorksheetFunction. Correl(rng.Columns(i), rng.Columns(j)) Next j Next i CorrMatrix = matrix End Function Applied to the above example: 1 2 3 45 6 7 8 9 10 11 1213 14ABCDEFGH I J K MCD X MT MSFT AAPL K GE BAC PFE XOM MCD 1.0000 0.4199 0.3859 0.4238 0.3379 0.2920 0.4064 0.3506 0.5411 0.4741 X 0.4199 1.0000 0.8898 0.4898 0.5062 0.3078 0.5904 0.4556 0.3491 0.4361 MT 0.3859 0.8898 1.0000 0.5044 0.5277 0.3692 0.5659 0.4103 0.3602 0.4620 MSFT 0.4238 0.4898 0.5044 1.0000 0.5497 0.2416 0.5312 0.5050 0.3542 0.3581 AAPL 0.3379 0.5062 0.5277 0.5497 1.0000 0.2827 0.3964 0.2205 0.0945 0.3425 K 0.2920 0.3078 0.3692 0.2416 0.2827 1.0000 0.4846 0.4559 0.3487 0.1234 GE 0.4064 0.5904 0.5659 0.5312 0.3964 0.4846 1.0000 0.7461 0.5842 0.3926 BAC 0.3506 0.4556 0.4103 0.5050 0.2205 0.4559 0.7461 1.0000 0.6328 0.1723 PFE 0.5411 0.3491 0.3602 0.3542 0.0945 0.3487 0.5842 0.6328 1.0000 0.3435 XOM 0.4741 0.4361 0.4620 0.3581 0.3425 0.1234 0.3926 0.1723 0.3435 1.0000CORRELATION MATRIX FOR 10 STOCKS Formula: {=CorrMatrix('Return data'!B4:K63)} 849 Matrices Unit Rows and Unit Columns Portfolio computations sometimes use unit rows or columns. For example global minimum variance portfolio (GMVP) of Chapter 10 has the following formula: GMVP as rowunitrow N S unitrow N S unitcolumn N GMVP as colu=∗ ∗∗() () () mmnS unitcolumn N unitrow N S unitcolumn N S=∗ ∗∗() () () where is the var riance covariance matrix − =: SN Nσσσ σ σσσ σ σσ11 12 13 1 21 22 23 2 31 3/midhorizellipsis /midhorizellipsis 223 3 3 123σσ σσσ σ/midhorizellipsis /vertellipsis /midhorizellipsisN NNN N N⎡ ⎣⎢ ⎢⎢⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥⎥⎥ The denominator of the above formulas is simply the sum of the numerator, and we can thus rewrite the formulas as: GMVP as rowunitrow N S Sum unitrow N S GMVP as columnS unit=∗ ∗ () =∗() () ccolumn N Sum S unitcolumn N() () ∗() The unit column or row can be computed in the following two functions: 850 Chapter 32 Here ’ s an example of these functions in a spreadsheet: ‘With thanks to Priyush Singh and Ayal Itzkovitz Function UnitrowVector(numcols As Integer) _ As Variant Dim i As Integer Dim vector() As Integer ReDim vector(0, numcols - 1) For i = 1 To numcols vector(0, i - 1) = 1 Next i UnitrowVector = vector End Function Function UnitColVector(numrows As Integer) As Variant Dim i As Integer Dim vector() As Integer ReDim vector(numrows - 1, 1) For i = 1 To numrows vector(i - 1, 0) = 1 Next i UnitColVector = vector End Function 1 2 345 6 78ABCD E 1 <-- {=UNITCOLVECTOR(5)}111 1 1 1 1 1 <-- {=UNITROWVECTOR(4)}ROW AND COLUMN UNIT VECTORS A more interesting use of these functions is to use them directly in a formula. In the following example we compute the GMVP: 851 Matrices 1 2 3 4 5 6 7 8 9 1011 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28ABCDEFGH I J K MCD X MT MSFT AAPL K GE BAC PFE XOM MCD 0.0020 0.0037 0.0028 0.0015 0.0017 0.0007 0.0020 0.0031 0.0015 0.0011 X 0.0037 0.0380 0.0284 0.0076 0.0111 0.0031 0.0127 0.0176 0.0043 0.0043 MT 0.0028 0.0284 0.0267 0.0065 0.0097 0.0031 0.0102 0.0133 0.0038 0.0039 MSFT 0.0015 0.0076 0.0065 0.0063 0.0049 0.0010 0.0046 0.0079 0.0018 0.0014 AAPL 0.0017 0.0111 0.0097 0.0049 0.0126 0.0016 0.0049 0.0049 0.0007 0.0020 K 0.0007 0.0031 0.0031 0.0010 0.0016 0.0026 0.0028 0.0046 0.0011 0.0003 GE 0.0020 0.0127 0.0102 0.0046 0.0049 0.0028 0.0122 0.0163 0.0041 0.0022 BAC 0.0031 0.0176 0.0133 0.0079 0.0049 0.0046 0.0163 0.0393 0.0080 0.0017 PFE 0.0015 0.0043 0.0038 0.0018 0.0007 0.0011 0.0041 0.0080 0.0041 0.0011 XOM 0.0011 0.0043 0.0039 0.0014 0.0020 0.0003 0.0022 0.0017 0.0011 0.0026 MCD 0.0326 <-- {=MMULT(B3:K12,UNITCOLVECTOR(10))/S UM(MMULT(B3:K12,UNITCOLVECTOR(10)))} X 0.2117 MT 0.1754 MSFT 0.0705 AAPL 0.0873 K 0.0340 GE 0.1166 BAC 0.1891 PFE 0.0493 XOM 0.0335 MCD X MT MSFT AAPL K GE BAC PFE XOM 0.0326 0.2117 0.1754 0.0705 0.0873 0.0340 0.1166 0.1891 0.0493 0.0335COMPUTING THE GLOBAL MINIMUM VARIANCE PORTFOLIO (GMVP) GMVP Formula: {=MMULT(UNITROWVECTOR(10),B3:K12)/SUM(MMULT(UNITROWVECTOR(10),B3:K12))} Exercises 1. Use Excel to perform the following matrix operations: a . 21 2 6 48 7 10 911 2 80 2 3 17 3 −⎡ ⎣⎢ ⎢⎢⎤ ⎦⎥ ⎥⎥+−⎡ ⎣⎢ ⎢⎢⎤ ⎦⎥ ⎥⎥ b . 29 50 66311 232− −⎡⎣⎢ ⎢⎢⎤ ⎦⎥ ⎥⎥⎡ ⎣⎢⎤⎦⎥ c . 20 648 7 10 911 2 80 2 17 3 −⎡ ⎣⎢ ⎢⎢⎤ ⎦⎥ ⎥⎥−⎡ ⎣⎢ ⎢⎢⎤ ⎦⎥ ⎥⎥ 852 Chapter 32 2. Find the inverses of the following matrices: a . 128 9 253 0 442 7 52 1 6−⎡ ⎣⎢ ⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥ b . 321 61 3 743−⎡ ⎣⎢ ⎢⎢⎤ ⎦⎥ ⎥⎥ c . 20 2 3 3 21 02 2 3 2 40 9 32 9 3 3− − −−⎡ ⎣⎢ ⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥ 3. Transpose the following matrices using the Excel array function Transpose : a . A=− −⎡ ⎣⎢ ⎢⎢⎤ ⎦⎥ ⎥⎥32 1 1 541 69 1 b . B=− − −⎡ ⎣⎢ ⎢⎢⎤ ⎦⎥ ⎥⎥1234 5 27 900 3 3 11 12 1 4. Solve the following system of equations by using matrices: 3469 1 5 22 3 1xy z w xy w yzw xy z+−− = −+ = ++ = +− = 5. Solve the equations AX = Y , where: AY Xx x x=−− −− −−⎡ ⎣⎢ ⎢⎢⎤ ⎦⎥ ⎥⎥=−⎡ ⎣⎢ ⎢⎢⎤ ⎦⎥ ⎥⎥=⎡ 13 8 3 81 0 1 31 1 120 5 0 1 2 3,, ⎣ ⎣⎢⎢⎢⎤ ⎦⎥ ⎥⎥ 853 Matrices 6. An ill-conditioned matrix is a matrix that “almost doesn ’ t have” an inverse. A set of examples of such matrices are Hilbert matrices. An n -dimensional Hilbert matrix looks like: Hn n nn nn=+() +() −()⎡ ⎣⎢ ⎢⎢ ⎢⎤ ⎦⎥ ⎥⎥ ⎥11 2 1 12 13 1 1 11 1 1 2 1// // / // /… … /vertellipsis a. Calculate the inverses of H 2 , H 3 , and H 8 . b. Consider the following system of equations: Hx x xn n nnn n1 211 2 1 12 13 1 1 11/vertellipsis/midhorizellipsis /midhorizellipsis /vertellipsis⎡ ⎣⎢ ⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥=++ + ++ + +// // / ( ) // ( ++++ −⎡ ⎣⎢ ⎢⎢⎢⎤ ⎦⎥ ⎥⎥⎥11 2 1)/ ( )/midhorizellipsis n Find the answers to these problems by inspection. c. Now solve H n * X = Y for n = 2, 8, 14. How do you explain the differences? 3 3 Excel Functions 33.1 Overview Excel contains several hundred functions. This chapter surveys only those functions used in this book. The functions discussed are the following: • Financial functions: NPV , IRR , PV , PMT , XIRR , and XNPV • Date functions: Now , Today , Date , Weekday , Month , Datedif • Statistical functions: Average , Var , Varp , Stdev , Stdevp , Correl , Covar • Regression functions: Slope , Intercept , Rsq , Linest • Conditional functions: If , VLookup , HLookup • Large , Rank , Percentile , Percentrank • Count , CountA , CountIf • Offset A separate chapter, Chapter 34, is devoted to the important topic of array functions. 33.2 Financial Functions Excel has a large number of financial functions. The main functions used in this book are explored in this section. NPV The Excel definition of NPV differs somewhat from the standard finance defi- nition. In the finance literature, the net present value of a sequence of cash flows C 0 , C 1 , C 2 , …, C n at a discount rate r refers to the expression C rCC rt t tn t t tn 11 00 1 +()+ +() ==∑∑ or In many cases C 0 represents the cost of the asset purchased and is therefore negative. The Excel definition of NPV always assumes that the first cash flow occurs after one period. The user who wants the standard finance expression must therefore calculate NPV(r,{C 1 , … , C n }) + C 0 . Here is an example: 856 Chapter 33 The NPV function has a potential bug: It differentiates between blank cells and cells containing zeros. This can cause some confusion, as can be seen in the example below. The present value of the cash flows in B5:B7 is 65.75, which corresponds to 100 11 53. . But in the otherwise similar example of the cash flows in B11:B13, Excel ’ s NPV function regards the first cash flow as being 100, and returns the answer 100 11 586 96..= . So—in using NPV you have to be explicit in putting in zeros for zero cash flows. 1 2 3 4 56789 10 11 12 1314AB C D Discount rate 10% Year Cash flowPresent value 0 -100.00 -100.00 <-- =B5/(1+$B$2)^A5 1 35.00 31.82 2 33.00 27.27 3 34.00 25.54 4 25.00 17.08 5 16.00 9.93 111.65 <-- =SUM(C6:C10)111.65 <-- =NPV(B2,B6:B10) Net present value 11.65 <-- =B5+NPV(B2,B6:B10)EXCEL'S NPV FUNCTION Present valueof future cash flows 1 2 3 4567 8 9 101112 13 14AB C Discount rate 15% Year Cash flow 10 .00 20 .00 3 100.00 Present value 65.75 <-- =NPV(B2,B5:B7) Year Cash flow 12 3 100.00 Present value 86.96 <-- =NPV(B2,B11:B13)NPV IGNORES BLANK CELLS! 857 Excel Functions IRR The internal rate of return (IRR) of a sequence of cash flows C 0 , C 1 , C 2 , …, C n is an interest rate r such that the net present value of the cash flows is zero: C rt t tn 10 0+()= =∑ The Excel syntax for the IRR function is IRR(cash flows , guess) . Here cash flows represents the whole sequence of cash flows, including the first cash flow C 0 , and guess is an optional starting point for the algorithm which calculates the IRR. 12 345 6 789 10 11C B A Year Cash flow 0- 1 0 0 13 5 23 3 33 4 42 5 51 6 IRR 15.00% <-- =IRR(B3:B8) 15.00% <-- =IRR(B3:B8,5%), IRR Guess = 5%EXCEL'S IRR FUNCTION Guess is not required, and when there is only one IRR it is usually irrelevant: 858 Chapter 33 If there are multiple IRRs, then choice of guess can make a difference. Consider, for example, the following cash flows: 1 2 3456789 10111213141516ABCDEFGH I YearCash flows 0 -11,0001 15,0002 15,0003 15,0004 15,0005 15,0006 15,0007 15,0008 15,0009 15,000 10 -135,000 IRR 1.86% <-- =IRR(B3:B13,0) 135.99% <-- =IRR(B3:B13,2)MULTIPLE IRRs -15,000-10,000-5,00005,00010,00015,00020,00025,00030,000 0% 20% 40% 60% 80% 100% 120% 140% 160%NPV Discount rateNPV of Cash Flows The graph (created from a Data Table which is not shown) shows that there are two IRRs, since the NPV curve crosses the x -axis twice. To find both these IRRs, we have to change the guess (though the precise value of guess is still not critical). In the example below we have changed both guesses, but still get the same answer: 15 16ABCD IRR 1.86% <-- =IRR(B3:B13,0) 135.99% <-- =IRR(B3:B13,2) Note A given set of cash flows typically has more than one IRR if there is more than one change of sign in the cash flows—in the above example, the initial cash flow is negative, and CF 1 –CF 9 are positive (this accounts for one change of sign); but then CF 10 is negative—making a second change of sign. If you suspect that a set of cash flows has more than one IRR, the first thing to do is to use Excel to make a graph of the NPVs, as we did above. The 859 Excel Functions number of times that the NPV graph crosses the x -axis identifies the number of IRRs (and also their approximate values). PV This function calculates the present value of an annuity (a series of fixed periodic payments). For example: 1 2 3 4 56AB C Rate 10% Number of periods 10.00Periodic payment 100.00Present value -614.46 <-- =PV(B3,B4,B5)THE PV FUNCTION Payments made at the end of the period 9 10 11 12 13AB C Rate 10% Number of periods 10.00 Periodic payment 100.00 Present value -675.90 <-- =PV(B10,B11,B12,,1)Payments made at the beginning of the period Thus $. .614 46100 11 0 110 =()=∑ t t . Here are two things to note about the PV function: • Writing PV(B3,B4,B5) assumes that payments are made at dates 1, 2, … , 10. If the payments are made at dates 0, 1, 2, … , 9, you should write: The formula PV(B10,B11,B12,,1) can also be generated from the dialog box: 860 Chapter 33 • Irritatingly, the PV function (and the PMT , IPMT , and PPMT functions— see below) produces a negative answer when the payment or future value is positive (there is a logic here, but it ’ s not worth explaining). The solution is obvious: Either write -PV(B3,B4,B5) or let the payment be negative by writing PV(B3,B4,-B5) . PMT This function calculates the payment necessary to pay off a loan with equal payments over a fixed number of periods. For example, the first calculation below shows that a loan of $1,000, to be paid off over 10 years at an interest rate of 8% will require equal annual payments of interest and principal of $149.03. The calculation performed is the solution of the following equation: X rInitial loan principalt tn 11+()= =∑ 861 Excel Functions Loan tables can be calculated using the PMT function. These tables—explained in detail in Chapter 1—show the split between interest and principal of each payment. In each period, the payment on the loan (calculated with PMT ) is split: • We first calculate the interest owing for that period on the principal outstand- ing at the beginning of the period. In the table below, at the end of year 1, we owe $80 ( = 8% * $1,000) of interest on the loan principal outstanding at the beginning of the year. • The remainder of the payment (for year 1: $69.03) goes to reduce the prin- cipal outstanding. 1 2 345 6 789 10 11 12AB C Rate 8% Number of periods 10.00Principal 1,000.00 Payment -149.03 <-- =PMT(B3,B4,B5) Rate 8% Number of periods 10.00 Principal 1,000.00 Payment -137.99 <-- =PMT(B9,B10,B11,,1)Payments made at the end of the period THE PMT FUNCTION Payments made at the beginning of the period 862 Chapter 33 Note that at the end of the 10 years the repayment of principal is exactly equal to the principal outstanding at the beginning of the year (i.e., the loan has been paid off). The Functions IPMT and PPMT As you have seen above, a loan table shows the split of a loan ’ s flat payments (computed with PMT ) between interest and principal. In the loan table of the previous subsection, we computed this split by first computing the flat payment per period (column C), then taking the interest on the principal at the beginning of the period (column D), and finally subtracting this interest from the period ’ s total payment (column E). IPMT and PPMT perform this calculation without the necessity of relying on the total payment. Here ’ s an example: 1 2 34 5 67 8 9 10 11 12 1314 15 1617 18 1920AB C D E F Interest 8% Number of periods 10Principal 1,000 Annual payment 149.03 <-- =-PMT(B2,B3,B4) YearPrincipal at beginning of year Payment InterestRepayment of principal 1 1,000.00 149.03 80.00 69.03 <-- =C9-D9 2 930.97 149.03 74.48 74.55 3 856.42 149.03 68.51 80.52 4 775.90 149.03 62.07 86.96 5 688.95 149.03 55.12 93.91 6 595.03 149.03 47.60 101.43 7 493.60 149.03 39.49 109.54 8 384.06 149.03 30.73 118.30 9 265.76 149.03 21.26 127.77 10 137.99 149.03 11.04 137.99 9 B * 2 $ B $ = 9 E - 9 B = LOAN TABLE Split payment into =$B$5 863 Excel Functions As you can see, the payments computed are the same as in the loan table of the previous subsection. 33.3 Dates and Date Functions Read the quote from the Excel help below and you will know almost every- thing you need to know about entering dates into your spreadsheet. 1 2 3 4 5 6 7 8 9 10 11 121314 15 16E D C B A % 8 t s e r e t n I Number of periods 10 Principal 1,000 YearPrincipal payment at end yearInterest payment at end year 1 69.03 <-- =PPMT($B$2,A7,$B$3,-$B$4) 80.00 <-- =IPMT($B$2,A7,$B$3,-$B$4) 2 74.55 <-- =PPMT($B$2,A8,$B$3,-$B$4) 74.48 <-- =IPMT($B$2,A8,$B$3,-$B$4) 1 5 . 8 6 2 5 . 0 8 3 7 0 . 2 6 6 9 . 6 8 4 2 1 . 5 5 1 9 . 3 9 5 0 6 . 7 4 3 4 . 1 0 1 6 9 4 . 9 3 4 5 . 9 0 1 7 3 7 . 0 3 0 3 . 8 1 1 8 6 2 . 1 2 7 7 . 7 2 1 9 4 0 . 1 1 9 9 . 7 3 1 0 1IPMT AND PPMT 864 Chapter 33 The basic fact you need to know is that Excel translates dates into a number: Here ’ s an example: Suppose you decide to type a date into a cell: When you hit [Enter], Excel decides that you ’ ve entered a date. Here ’ s the way it appears: Note that in the formula bar (indicated by the arrow above), Excel interprets the date entered as 03-02-2015 . 1 When you reformat the cell as Format Cells|Number|General , you see that Excel interprets this date as the number 42038, the number 1 being 1 January 1900. 1. The way this appears and is interpreted depends on the Regional Settings entered in the Windows Control Panel. Spreadsheet dates can be subtracted: In the spreadsheet below we ’ ve entered two dates and subtracted them to find the number of days between the dates: 865 Excel Functions You can also add a number to a date to find another date. What, for example, was the date 165 days after 16 November 1947? 1 2 3AB C Date1 15-Aug-40 Date2 28-Sep-52 Days between 4427 <-- =B2-B1 5 6BC 16-Nov-47 29-Apr-48 <-- =B5+165 Stretching Out Dates In the two cells below we ’ ve put in two dates and then “stretched” the cells out to add more dates with the same difference between them: Write in two dates; mark both cells. Grab the handle (arrow on previ- ous drawing) and pull The result: More dates added with same spacing (in this case, 6 months): Times in a Spreadsheet Hours, minutes, etc., can also be typed into a cell. In the cell below, we ’ ve typed in 8:22: 866 Chapter 33 When we hit [Enter], Excel interprets this as 8:22 AM: EXCEL RECOGNIZES 24-HOUR CLOCK As entered When you hit [Enter] Excel recognizes 24-hour times and also recognizes the symbol a for AM and p for PM: As entered Note that the p is separated from the time by a space. (Of course AM is represented by an a .)When you hit [Enter] 867 Excel Functions When you reformat the cells above with Format|Cells|Number|General , you can see that times are represented in Excel as fractions of a day: 3 45BCD 3:48 PM8:16 AM7:32 AM <-- =B3-B4 345BCD 0.6583330.3444440.313889 <-- =B3-B4 If you type in a date and a time and reformat, you can also see this: Here ’ s what you typed: Here ’ s how it appears: If you reformat this to General : You can subtract times just like you subtract dates; cell B5 below tells you that 7 hours and 32 minutes have elapsed between the two times (ignore the “AM” in B5): 868 Chapter 33 Time and Date Functions in Excel Excel has a whole set of time and date functions. Here are several functions which we find useful: • Now reads the computer clock and represents the date and the time. Now takes no arguments and is written with empty parentheses: Now( ) . • Today reads the computer ’ s clock and prints the date. This function, like Now , is written with empty parentheses: Today( ) . • Date(yyyy,mm,dd) gives the date entered. • Weekday gives the day of the week • Month, Weeknum, Day give the month, week, day of a date Here are some of these functions in a spreadsheet: 1 23456789 1011121314151617AB C Serial representationDate/Time Format 41620.41885 12-12-13 10:03 <-- =NOW() 41620 12-12-13 <-- =TODAY()43924 Apr-3-2020 <-- =DATE(2020,4,3) Different formatting of Now() 12-Dec-13 <-- =NOW() 12-12-13 10:03 <-- =NOW() 10:03 AM <-- =NOW() Using Weekday, Month, Weeknum, Day 5 <-- =WEEKDAY(NOW())5 <-- =WEEKDAY(\"3apr1947\")4 <-- =MONTH(B4) 12 <-- =MONTH(NOW())50 <-- =WEEKNUM(NOW())12 <-- =DAY(NOW()) Calculating the Difference Between Two Dates: The Function Datedif The Excel function Datedif computes the difference between two dates in various useful ways: 869 Excel Functions 33.4 The Functions XIRR, XNPV The functions XIRR and XNPV calculate the internal rate of return and the net present value for a series of cash flows received on specific dates. They are especially useful for calculating IRR and NPV when the dates are unevenly spaced. 2 If you do not have these functions, you will have to go to File|Options|Add-Ins|Manage . Choose Add-Ins and mark Analysis ToolPak : 1 2 3 4 5 6 78 9 10D C B A Date1 03-Apr-47 Date2 15-Jan-13 65 <-- =DATEDIF(B2,B3,\"y\") Number of years between dates 789 <-- =DATEDIF(B2,B3,\"m\") Numb er of months between dates 24029 <-- =DATEDIF(B2,B3,\"d\") Number of days between dates 12 <-- =DATEDIF(B2,B3,\"md\") Number of days in excess of full number of months 9 <-- =DATEDIF(B2,B3,\"ym\") Number of months in excess of full number of years 287 <-- =DATEDIF(B2,B3,\"yd\") Number of days in excess of full number of yearsDATEDIF COMPUTES THE DIFFERENCE BETWEEN TWO DATES 2. Excel ’ s IRR function assumes that the first cash flow occurs today, the next cash flow occurs one period hence, the following cash flow two periods hence, etc. Excel ’ s NPV function assumes that the first cash flow occurs one period from now, the next cash flow in two periods, etc. We call this “even spacing of cash flows.” When this is not the case, you ’ ll need the XIRR and XNPV functions. 870 Chapter 33 The XIRR function works by discounting each cash flow at the daily rate. In our example the first cash flow of $100 occurs 48 days from now, the second in 149 days, … The XIRR transforms 21.97% to a daily rate and uses it to discount the cash flows: −+()+()++()600100 1 2197100 1 2197100 1 219748 365 149 365 3..... .// 1 140 3650/= 1 2 3456 7 89 10 11 12131415 16AB C Date Payment 16-Feb-01 -600 05-Apr-01 100 15-Jul-01 100 22-Sep-01 10022-Sep-02 100 22-Sep-03 10022-Sep-04 10022-Sep-05 100 22-Sep-06 100 22-Sep-07 10022-Sep-08 10022-Sep-09 100 XIRR 21.97% <-- =XIRR(B3:B14,A3:A14)THE EXCEL XIRR FUNCTION XIRR Here ’ s an example: You pay $600 on 16 February 2001 for an asset that repays $100 on 5 April, $100 on 15 July 2001, and then $100 on every 22 September from 2001 until 2009. The dates are not evenly spaced, so that you cannot use IRR . With XIRR (cell B16 below), you can compute the annualized IRR (the effective annual interest rate EAIR, as defined in Chapter 2). 871 Excel Functions XNPV The XNPV function computes the NPV for unevenly spaced cash flows. In the example below, we use the function to compute the NPV on the same example we used for XIRR . 1 2 3 4 5 6 7 8 9 1011 12 13 14 15 16 17 18 19AB C D E Date Payment Days from initial datePresent value 3 B = - - < 0 0 . 0 0 6 - 0 0 6 - 1 0 - b e F - 6 1 05-Apr-01 100 48 97.42 <-- =B4/(1+$B$16)^(C4/365) 15-Jul-01 100 149 92.21 <-- =B5/(1+$B$16)^(C5/365) 22-Sep-01 100 218 88.81 <-- =B6/(1+$B$16)^(C6/365) 22-Sep-02 100 583 72.81 <-- =B7/(1+$B$16)^(C7/365) 22-Sep-03 100 948 59.70 <-- =B8/(1+$B$16)^(C8/365) 22-Sep-04 100 1,314 48.91 22-Sep-05 100 1,679 40.10 22-Sep-06 100 2,044 32.88 22-Sep-07 100 2,409 26.96 22-Sep-08 100 2,775 22.09 22-Sep-09 100 3,140 18.11 XIRR 21.97% <-- =XIRR(B3:B14,A3:A14) 0.00 <-- =SUM(D3:D14)HOW DOES XIRR WORK? XIRR computes the daily internal rate of return Cell C4 contains the formula =A4-$A$3 872 Chapter 33 Notice that XNPV requires you to indicate all the cash flows (starting with the initial cash flow), as opposed to NPV , which starts from the first cash flow. Bugs in XIRR and XNPV XIRR and XNPV address the problems of discounting when cash flows are time dated, but they have two bugs: XNPV does not work with zero discount rates, and XIRR does not solve multiple internal rates of return. Below we discuss these problems. We then define two new functions, NXNPV and NXIRR , that solve these problems. These two functions are included as addi- tional functions in the spreadsheet that accompanies this chapter. 3 Problem: XNPV Doesn ’ t Work with Zero Discount Rates XNPV works fine with positive discount rates but fails when discount rates are zero. 4 We illustrate this below. 1 2 345 6 7 8 9 10 11 1213 14 15 16 17AB C Date Payment 16-Feb-01 -600 05-Apr-01 100 15-Jul-01 100 22-Sep-01 100 22-Sep-02 100 22-Sep-03 100 22-Sep-04 100 22-Sep-05 100 22-Sep-06 100 22-Sep-07 10022-Sep-08 100 22-Sep-09 100 Discount rate 15% XNPV 97.29 <-- =XNPV(B16,B3:B14,A3:A14)THE EXCEL XNPV FUNCTION 3. The two additional functions NXIRR and NXNPV were developed by Benjamin Czaczkes. Read “Adding Getformula to Your Spreadsheet” on the disk that accompanies this book to see how you can copy these functions into your own spreadsheets. 4. Recall that when the discount rate is zero, the net present value is just the sum of all the cash flows. 873 Excel Functions Our new function NXNPV solves this problem: 1 2 3456789 1011AB C DE F Discount rate 3% Discount rate 0% XNPV 579.00 <-- =XNPV(B2,B 6:B11,A6:A11) XNPV #NUM! <-- =XNPV(E2,E6:E11,D6:D11) Date Cash flow Date Cash flow 13-Jan-12 -1,000 13-Jan-12 -1,000 18-Aug-12 115 18-Aug-12 115 20-Jan-13 121 20-Jan-13 121 15-Jul-13 100 15-Jul-13 100 01-Jan-14 333 01-Jan-14 333 16-Jul-14 1,011 16-Jul-14 1,011XNPV DOES NOT WORK WITH ZERO DISCOUNT RATES 1 2 3456789 1011F E D C B A % 0 e t a r t n u o c s i D % 3 e t a r t n u o c s i D XNPV 579.00 <-- =nXNPV(B2,B6:B11,A6:A11) XNPV 680 <-- =nXNPV(E2,E6:E11,D6:D11) w o l f h s a C e t a D w o l f h s a C e t a D 0 0 0 , 1 - 2 1 - n a J - 3 1 0 0 0 , 1 - 2 1 - n a J - 3 1 5 1 1 2 1 - g u A - 8 1 5 1 1 2 1 - g u A - 8 1 1 2 1 3 1 - n a J - 0 2 1 2 1 3 1 - n a J - 0 2 0 0 1 3 1 - l u J - 5 1 0 0 1 3 1 - l u J - 5 1 3 3 3 4 1 - n a J - 1 0 3 3 3 4 1 - n a J - 1 0 1 1 0 , 1 4 1 - l u J - 6 1 1 1 0 , 1 4 1 - l u J - 6 1NXNPV SOLVES THE PROBLEM Problem: XIRR Doesn ’ t Work with Two IRRs The Guess switch on XIRR doesn ’ t work. As shown below, this means that XIRR is unable to compute the IRR for cash flows having multiple rates of return: 874 Chapter 33 1 2 3456789 101112131415161718192021222324252627282930AB C D E F G Discount rate 22% Net present value 65.09 <-- =nXNPV(B2,B9:B15,A9:A15), no GuessIRR #NUM! <-- =XIRR(B9:B15,A9:A15)#NUM! <-- =XIRR(B9:B15,A9:A15,35%), Guess = 5% Data table: XNPV as function of discount rate #NUM! <-- =XIRR(B9:B15,A9:A15,5%), Guess = 35% Discount NPV 65.09 <-- =B3, data table header Date Cash flow 0% -100.00 30-Jun-13 -500 4% -15.97 14-Feb-14 100 8% 33.62 14-Feb-15 300 12% 59.64 14-Feb-16 400 16% 69.54 14-Feb-17 600 20% 68.52 14-Feb-18 800 24% 60.19 14-Feb-19 -1800 28% 47.09 32% 30.9736% 13.1040% -5.6844% -24.7548% -43.7052% -62.2556% -80.23PROBLEMS WITH XIRR -150-100-50050100 0% 5% 10% 15% 20% 25% 30% 35% 40% 45% 50% 55% 60%Net present valueDiscount rateTwo IRRs From the data table, it is evident that there are two internal rates of return (around 5% and around 40%). But the XIRR function does not identify either (see cells B4:B6). The additional function NXIRR solves this problem: 1 2 3456789 10111213C B A IRR 5.06% <-- =nXIRR(B7:B13,A7:A13) 38.80% <-- =nXIRR(B7:B13,A7:A13,35%), Guess = 35% 5.06% <-- =nXIRR(B7:B13,A7:A13,5%), Guess = 5% Date Cash flow 30-Jun-13 -500 14-Feb-14 10014-Feb-15 30014-Feb-16 40014-Feb-17 60014-Feb-18 80014-Feb-19 -1800NXIRR SOLVES THE PROBLEM 875 Excel Functions 33.5 Statistical Functions Excel contains a number of statistical functions. We illustrate these functions using the following example. Note that with the introduction of Excel 2013, some of these functions have been renamed, though all of the functions still work; thus, for example, the population variance can be computed with the function Var (old versions of Excel) or Var.p (new versions). 1 2 3456789 1011121314151617181920212223242526272829AB C D E F G H Observation X Y 1 35.30 10.98 2 29.70 11.13 3 30.80 12.51 4 58.80 8.40 5 61.40 9.27 6 71.30 8.73 7 74.40 6.36 8 76.70 8.50 9 70.70 7.82 10 57.50 9.14 Average 56.66 9.28 <-- =AVERAGE(C3:C12) Correlation -0.9049 <-- =CORREL(B2:B12,C2:C12) Sample variance 334.15 3.23 <-- =VAR(C3:C12) Co variance 40.4206 <-- =COVAR(B19:B29,C19:C29) 334.15 3.23 <-- =VAR.S(C3:C12) 44.4627 <-- =COVARIANCE.S(B19:B29,C19:C29) Population variance 300.73 2.91 <-- =VARP(C3:C12 ) 40.4206 <-- =COVARIANCE.P(B19:B29,C19:C29) 300.73 2.91 <-- =VAR.P(C3:C12) Sample standard deviation 18.28 1.80 <-- =STDEV(C3:C12) Regression intercept 14.3285 <-- =INTERCEPT(C3:C12,B3:B12) 18.28 1.80 <-- =SQRT(C21) Regression slope -0.0890 <-- =SLOPE(C3:C12,B3:B12) 18.28 1.80 <-- =STDEV.S(C3:C12) Regression r-squared 0.8189 <-- =RSQ(C3:C12,B3:B12) Population standard deviation 17.34 1.71 <-- =STDEVP(C3:C12) 17.34 1.71 <-- =SQRT(C22)17.34 1.71 <-- =STDEV.P(C3:C12)BASIC STATISTICAL FUNCTIONS y = -0.089x + 14.328 R² = 0.8189 678910111213 25 35 45 55 65 75 85Regression via XY Plot The functions Varp , Var.p , Stdevp , and Stdev.p calculate the population variance and standard deviation, whereas the functions Var, Stdev , Var.s , Stdev.s compute the sample variance and standard deviation. The difference between these two functions is that Varp assumes that your data are the whole population and thus divides by the number of data points, whereas Var assumes that the data are samples from the distribution: Varp x xNx Average x x Stdevp x xNi N iN N112 1 11,, ,, ,,…… …() =− () () ()=∑ = = () () =−− () () =Varp x x Var x xNx Average x xN Ni N iN1 112 11 1,, ,, ,,… …… ∑ ∑ () = () Stdev x x Var x x NN 11,, ,, …… 876 Chapter 33 Covar, Covariance.s, Covariance.p, and Correl These functions—used extensively in the portfolio chapters (8–13)—are used to compute the covariance and correlation of two series of numbers. The func-tions Covariance.s and Covariance.p (computing the sample and the popula- tion covariance respectively) are new with Excel 2013. For the definitions, we refer you to section 8.2. Below is an example in which we compute the covari-ance and correlation for returns on McDonald ’ s stock and Wendy ’ s stock. Note the two computations for the correlation. In the first (cell E9) we use the Excel Correl function; in cell E10 we use the definition correlation = Correlation (MCD, WEN) = Covar (MCD, WEN) / ( σ MCD * σ WEN ) . The function Covar is the population covariance (that is, divides by 1/ M , where M is the population size). Cells E11 and E12 give two more variations to the calculation of the correlation. 1 2 3 45 6 78 9 10 11 12 13 1415 16 17 18F E D C B A Date MCD WEN Covariance 1-Aug-05 4.01% -8.97% 0.00085 <-- =COVAR(B3:B26,C3:C26) 1-Sep-05 3.14% -4.30% 0.00085 <-- =COVARIANCE.P(B3:B26,C3:C26) 3-Oct-05 -5.78% 3.42% 0.00085 <-- =COVARIANCE.P(B3:B26,C3:C26) 1-Nov-05 8.89% 8.71% 0.00089 <-- =COVARIANCE.S(B3:B26,C3:C26)1-Dec-05 -0.36% 8.44% 3-Jan-06 3.76% 6.47% Correlation 1-Feb-06 -0.29% -1.52% 0.36204 <-- =CORREL(B3:B26,C3:C26) 1-Mar-06 -1.60% 6.97% 0.36204 <-- =COVAR(B3:B26,C3:C26)/(STDEVP(B3:B26)*STDEVP(C3:C26)) 3-Apr-06 0.62% -0.45% 0.36204 <-- =COVARIANCE.P(B3:B26,C3:C26)/(STDEV.P(B3:B26)*STDEV.P(C3:C26)) 1-May-06 -4.14% -2.20% 0.36204 <-- =COVARIANCE.S(B3:B26,C3:C26)/(STDEV.S(B3:B26)*STDEV.S(C3:C26)) 1-Jun-06 1.29% -3.35% 3-Jul-06 5.20% 3.17% 1-Aug-06 1.41% 6.29% 1-Sep-06 8.61% 4.74% 2-Oct-06 6.90% 9.76% 1-Nov-06 2.53% -5.79%COMPUTING COVARIANCE AND CORRELATION FOR MCDONALD'S (MCD) AND WENDY'S (WEN) Highlighted cells are new functions with Excel 2013 Computing Statistics for a Database Excel has a whole family of statistical functions that works on databases. These functions all start with the letter “D” (for “data,” get it?). The list includes DAverage , DCount , DMin , DVar (the sample variance), DVarP (the population variance), DStdev , and DStevP . There are more, but we ’ ll leave them to you to explore. 877 Excel Functions To see how these functions work, consider the following example: We have a set of monthly stock prices and returns for Apple. Suppose we want to cal- culate the average return of all the returns that are greater than 10%: 1 2 3 4 5 67 8 9 1011ABC DE FGH I Date AAPL n r u t e R L P A A e t a D n r u t e R % 0 1 > 9 6 . 7 1 0 - p e S - 7 1-Oct-01 8.70 12.34% <-- =LN(B5/B4) 4 H : 3 F , 3 , 0 4 1 C : 3 A ( E G A R E V A D = - - < % 8 3 . 5 1 e g a r e v A % 8 3 . 9 1 6 5 . 0 1 1 0 - v o N - 1 ) ) 4 H : 3 F , 3 , 0 4 1 C : 3 A ( R A V D = - - < 1 2 0 0 . 0 e c n a i r a V % 1 7 . 2 5 8 . 0 1 1 0 - c e D - 3 ) 4 H : 3 F , 3 , 0 4 1 C : 3 A ( V E D T S D = - - < % 5 5 . 4 a m g i S % 4 1 . 2 1 5 2 . 2 1 2 0 - n a J - 2 1-Feb-02 10.75 -13.06% 1-Mar-02 11.73 8.72% 1-Apr-02 12.03 2.53%MANIPULATING APPLE STOCK RETURNS, PRICES USING DAVERAGE, DVAR, etc. Criterion range (2 rows) Looking at the above example, we see that there are three parts: • The database is in cells A3:C140. It has headers Date , AAPL , Return . • There is a two-row Criterion range : The top row matches the headers of the database, and the bottom row has “ > 10%” under Return . • Now the functions: DAverage(A3:C140,3,F3:H4) computes the average for all returns that are greater than 10%. DVar with the arguments computes the population variance, and DStdev … If you change the criterion range, you get a different answer: 2 345 6 78FGH I Date AAPL Return <9% Average -1.71% <-- =DAVERAGE(A3:C140,3,F3:H4 ) Variance 0.0078 <-- =DVAR(A3:C140,3,F3:H4)Sigma 8.83% <-- =DSTDEV(A3:C140,3,F3:H4)Criterion range (2 rows) 878 Chapter 33 We ’ ve put the date in cell G11, and used the Text function to create an appropriate criterion under the Date header. One more example and we leave the rest to you. We want to find Apple ’ s return statistics for each of the years. We expand the database and the criterion range by adding in the year. A single example for 2001 shows the average return and sigma for that year to be 11.47% and 3.47%. 5 Running a data table with Year as the parameter to be varied gives the results below: 2 3 456 7 89 1011FGH I DateAAPL stock price Return ) \" 0 \" , 1 1 G ( T X E T & \" > \" = - - < 3 5 3 8 3 > Average 2.88% <-- =DAVERAGE(A3:C140,3,F3:H4 ) Variance 0.0114 <-- =DVAR(A3:C140,3,F3:H4)Sigma 10.67% <-- =DSTDEV(A3:C140,3,F3:H4) Date 01-Jan-05Criterion range (2 rows) 5. As a finance example, this is somewhat marred, since we have only 3 months in 2001. Advanced Use of the “D” Functions Suppose we want to know the statistics for Apple ’ s returns for a specific year. Here ’ s the trick: 879 Excel Functions 1 2 3 456789 10111213141516171819202122232425262728293031323334353637383940ABCD E F GH I J K DateAAPL stock price e t a D r a e Y n r u t e RAAPL stock price Return Year 7-Sep-01 7.69 2001 1-Oct-01 8.70 12.34% 2001 <-- =YEAR(A5) ) 4 J : 3 G , 3 , 0 4 1 D : 3 A ( E G A R E V A D = - - < % 7 4 . 1 1 e g a r e v A 1 0 0 2 % 8 3 . 9 1 6 5 . 0 1 1 0 - v o N - 1 ) 4 J : 3 G , 3 , 0 4 1 D : 3 A ( V E D T S D = - - < % 7 3 . 8 a m g i S 1 0 0 2 % 1 7 . 2 5 8 . 0 1 1 0 - c e D - 3 2-Jan-02 12.25 12.14% 2002 1-Feb-02 10.75 -13.06% 2002 Data base: vary the year in criterion range a m g i S e g a r e v A 2 0 0 2 % 2 7 . 8 3 7 . 1 1 2 0 - r a M - 1 r e d a e h e s a b a t a d , 7 H = - - < 2 0 0 2 % 3 5 . 2 3 0 . 2 1 2 0 - r p A - 1 % 7 3 . 8 % 7 4 . 1 1 1 0 0 2 2 0 0 2 % 7 0 . 4 - 5 5 . 1 1 2 0 - y a M - 1 % 2 4 . 1 1 % 3 5 . 3 - 2 0 0 2 2 0 0 2 % 2 4 . 7 2 - 8 7 . 8 2 0 - n u J - 3 % 1 1 . 9 % 3 3 . 3 3 0 0 2 2 0 0 2 % 6 9 . 4 1 - 6 5 . 7 2 0 - l u J - 1 % 6 5 . 0 1 % 9 1 . 9 4 0 0 2 2 0 0 2 % 6 3 . 3 - 1 3 . 7 2 0 - g u A - 1 % 5 7 . 0 1 % 9 6 . 6 5 0 0 2 2 0 0 2 % 6 6 . 1 - 9 1 . 7 2 0 - p e S - 3 % 0 8 . 0 1 % 8 3 . 1 6 0 0 2 2 0 0 2 % 7 1 . 0 1 6 9 . 7 2 0 - t c O - 1 % 9 6 . 7 % 7 0 . 7 7 0 0 2 2 0 0 2 % 8 5 . 3 - 8 6 . 7 2 0 - v o N - 1 % 9 2 . 8 1 % 2 0 . 7 - 8 0 0 2 2 0 0 2 % 5 8 . 7 - 0 1 . 7 2 0 - c e D - 2 % 5 8 . 5 % 3 5 . 7 9 0 0 2 3 0 0 2 % 8 2 . 0 2 1 . 7 3 0 - n a J - 2 % 1 5 . 7 % 5 5 . 3 0 1 0 2 3 0 0 2 % 0 4 . 4 4 4 . 7 3 0 - b e F - 3 % 2 6 . 5 % 0 9 . 1 1 1 0 2 3 0 0 2 % 5 9 . 5 - 1 0 . 7 3 0 - r a M - 3 % 6 5 . 8 % 5 3 . 2 2 1 0 2 3 0 0 2 % 7 5 . 0 5 0 . 7 3 0 - r p A - 1 1-May-03 8.90 23.30% 2003 2-Jun-03 9.45 6.00% 2003 1-Jul-03 10.45 10.06% 2003 1-Aug-03 11.21 7.02% 2003 2-Sep-03 10.27 -8.76% 2003 1-Oct-03 11.34 9.91% 2003 3-Nov-03 10.36 -9.04% 2003 1-Dec-03 10.59 2.20% 2003 2-Jan-04 11.18 5.42% 2004 2-Feb-04 11.85 5.82% 2004 1-Mar-04 13.40 12.29% 2004 1-Apr-04 12.78 -4.74% 2004 3-May-04 13.91 8.47% 2004 1-Jun-04 16.13 14.81% 2004 1-Jul-04 16.03 -0.62% 2004 2-Aug-04 17.09 6.40% 2004 1-Sep-04 19.20 11.64% 2004FINDING APPLE'S YEAR-BY-YEAR RETURN STATISTICS Criterion range below -10%-5%0%5%10%15%20% 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012AAPL Returns 2001-2012 Average Sigma 33.6 Regressions with Excel There are several techniques to produce an ordinary least squares regression with Excel. We illustrate three techniques using the McDonald ’ s and Wendy ’ s data just discussed. 880 Chapter 33 Using Excel Functions The first technique involves the functions Slope , Intercept , and Rsq ; these functions give the parameters for a simple regression of the data in column B on column C. Using these numbers, the best linear explanation of the relation between the returns on WEN and MCD is: WEN MCD R =+ =0 0038 0 6381 13 11 2.. ,. % Using a Scatter Plot and Trendline Another way that we can produce a simple regression is to graph the data in a scatter chart and then use the Trendline function to compute the regression. • First plot the data using an XY Scatter Chart . • Click the data and then go to Add Trendline . The menu of regressions is given below the picture that follows this bullet. 1 2 3456789 1011121314151617181920212223242526 27 28AB C D EFG H I J K Date MCD WEN 1-Aug-05 4.01% -8.97% 1-Sep-05 3.14% -4.30% 3-Oct-05 -5.78% 3.42% 1-Nov-05 8.89% 8.71% 1-Dec-05 -0.36% 8.44% 3-Jan-06 3.76% 6.47% 1-Feb-06 -0.29% -1.52% 1-Mar-06 -1.60% 6.97% 3-Apr-06 0.62% -0.45% 1-May-06 -4.14% -2.20% 1-Jun-06 1.29% -3.35% 3-Jul-06 5.20% 3.17% 1-Aug-06 1.41% 6.29% 1-Sep-06 8.61% 4.74% 2-Oct-06 6.90% 9.76% 1-Nov-06 2.53% -5.79% 1-Dec-06 5.47% 1.59% Regression using functions 3-Jan-07 0.05% 2.58% Intercept 0.0038 <-- =INTERCEPT(C3:C26,B3:B26) 1-Feb-07 -1.50% -5.51% Slope 0.6381 <-- =SLOPE(C3:C26,B3:B26) 1-Mar-07 3.07% -2.38% R-squared 0.1311 <-- =RSQ(C3:C26,B3:B26) 2-Apr-07 6.92% 18.61% 1-May-07 4.59% 6.57% Note that 1-Jun-07 0.41% -8.80% Intercept 0.0038 <-- =AVERAGE(C3:C26)-F21*AVERAGE(B3:B26) 2-Jul-07 3.37% 1.11% Slope 0.6381 <-- =COVARIANCE.P( C3:C26,B3:B26)/VAR.P(B3:B26) 0.6381 <-- =COVARIANCE.S(C3 :C26,B3:B26)/VAR.S(B3:B26) R-squared 0.1311 <-- =C ORREL(C3:C26,B3:B26)^2REGRESSING WEN ON MCD -15%-10%-5%0%5%10%15%20% -8% -6% -4% -2% 0% 2% 4% 6% 8% 10% WEN MCDXY Sca/g425er Chart: WEN vs MCD 881 Excel Functions Here ’ s the menu. We ’ ve indicated that we want a linear regression and clicked on two boxes to display the equation and the R 2 in the chart. 882 Chapter 33 Using Data Analysis for Regressions Using the same data as before, we press Data|Data Analysis|Regression . 6 In the picture below, we ’ ve asked that the output be put in cell E4: y = 0.6381 x + 0.0038 R² = 0.1311 -15%-10%-5%0%5%10%15%20% -8% -6% -4% -2% 0% 2% 4% 6% 8% 10% WEN MCDXY ScaƩer Chart: WEN vs MCD Here ’ s the final result: 6. This procedure is available only if you ’ ve installed the Data Analysis add-in. If you don ’ t see Data Analysis on your Excel Data menu, go to File|Options|Add-Ins . At the bottom of the resulting screen, indicate Manage Add-Ins . On the next screen put a checkmark next to Analysis ToolPak . 883 Excel Functions Here ’ s the output. We have highlighted cells corresponding to the intercept, slope, and R 2 as computed by the relevant Excel functions: 1 2 3 4 5 6 7 89 10 11 12 13 14 15 16 17 18 19 20 21 22 23242526ABC D E F G H I J K Date MCD WEN 1-Aug-05 4.01% -8.97% 1-Sep-05 3.14% -4.30% SUMMARY OUTPUT 3-Oct-05 -5.78% 3.42% 1-Nov-05 8.89% 8.71% Regression Statistics 1-Dec-05 -0.36% 8.44% Multiple R 0.3620 3-Jan-06 3.76% 6.47% R Square 0.1311 1-Feb-06 -0.29% -1.52% Adjusted R Square 0.0916 1-Mar-06 -1.60% 6.97% Standard Error 0.0627 3-Apr-06 0.62% -0.45% Observations 24 1-May-06 -4.14% -2.20% 1-Jun-06 1.29% -3.35% ANOVA 3-Jul-06 5.20% 3.17% df SS MS F Significance F 1 2 8 0 . 0 6 8 1 3 . 3 1 3 1 0 . 0 1 3 1 0 . 0 1 n o i s s e r g e R % 9 2 . 6 % 1 4 . 1 6 0 - g u A - 1 9 3 0 0 . 0 5 6 8 0 . 0 2 2 l a u d i s e R % 4 7 . 4 % 1 6 . 8 6 0 - p e S - 1 6 9 9 0 . 0 3 2 l a t o T % 6 7 . 9 % 0 9 . 6 6 0 - t c O - 2 1-Nov-06 2.53% -5.79% 1-Dec-06 5.47% 1.59% Coefficients Standard Erro rt Stat P-value Lower 95% Upper 95% 3-Jan-07 0.05% 2.58% Intercept 0.0038 0.0152 0.2477 0.8067 -0.0278 0.0354 1-Feb-07 -1.50% -5.51% X Variable 1 0.6381 0.3503 1.8217 0.0821 -0.0883 1.3644 1-Mar-07 3.07% -2.38% 2-Apr-07 6.92% 18.61% 1-May-07 4.59% 6.57% Intecept 0.0038 <-- =INTERCEPT(C3:C26,B3:B26) ) 6 2 B : 3 B , 6 2 C : 3 C ( E P O L S = - - < 1 8 3 6 . 0 e p o l S % 0 8 . 8 - % 1 4 . 0 7 0 - n u J - 1 2-Jul-07 3.37% 1.11% R-squared 0.1311 <-- =RSQ(C3:C26,B3:B26)REGRESSING WEN ON MCD: Using Data|Data Analysis|Regression 884 Chapter 33 Using Data Analysis|Regression for Multiple Regressions The same module can be used for multiple regressions. In the picture below, we ’ ve asked that the output be placed in cell F3: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21FG H I J K L M N SUMMARY OUTPUT Regression Statistics Multiple R 0.9589 R Square 0.9196 Adjusted R Squar e 0.8966 Standard Error 0.5783 Observations 10 ANOV A df SS MS FSignificance F Regression 2 26.7674 13.3837 40.0228 0.0001 4 4 3 3 . 0 8 0 4 3 . 2 7 l a u d i s e R 2 8 0 1 . 9 2 9 l a t o T CoefficientsStandard Error t Stat P-value Lower 95% Upper 95%Lower 95.0%Upper 95.0% Intercept 14.1705 0.6271 22.5967 0.0000 12.6877 15.6534 12.6877 15.6534 X Variable 1 -0.0987 0.0110 -8.9405 0.0000 -0.1248 -0.0726 -0.1248 -0.0726 X Variable 2 0.0089 0.0030 2.9599 0.0211 0.0018 0.0159 0.0018 0.0159 Here ’ s the output. Highlighted cells correspond to the most important values produced in the previous example. 885 Excel Functions Index The discussion of the Index function belongs in the section on statistics only because we want to use it in our next subsection. We sometimes want to pick an individual value out of an array. In the example below, the range of cells A2:C4 contains a mixture of numbers and names. To pick out an individual item from this range, we use = Index(A2:C4,row,column) , where row and column are relative to the range itself. Thus “Howie” appears in row 2 and column 3 of the range A2:C4. 1 2 3 45 6AB C ab 3 Simon 6 Howie q 7 Jack Howie <-- =INDEX(A2:C4,2,3)USING THE INDEX FUNCTION In the next subsection we use the Index function to pick out a single item in the Linest array. Using Linest Excel has an array function Linest whose output consists of a number of regression statistics for an ordinary least squares regression. 7 Here is a picture of the spreadsheet and the Linest dialog box: 7. There is also an Excel function Logest , whose syntax is exactly the same as that of Linest . Logest calculates the parameters to fit an exponential curve. 886 Chapter 33 Linest is an array function (see next chapter), which means that instead of [Enter], we press [Control] + [Shift] + [Enter] at the same time. With the data from the example above, we can use Linest to produce the following output: 1 2 3 4 56 7 89 101112 13 1415 16 17 18 19 20 21 22 23 24 25 26 2728 29D C B A Observation X Y 8 9 . 0 1 3 . 5 3 1 3 1 . 1 1 7 . 9 2 2 1 5 . 2 1 8 . 0 3 3 4 . 8 8 . 8 5 4 7 2 . 9 4 . 1 6 5 3 7 . 8 3 . 1 7 6 6 3 . 6 4 . 4 7 7 5 . 8 7 . 6 7 8 2 8 . 7 7 . 0 7 9 4 1 . 9 5 . 7 5 0 1 slope intercept Slope (also =slope(C3:C12,B3:B12) )--> -0.0890 14.3285 <-- Intercept Standard error of slope --> 0.0148 0.8770 <-- Standard error of intercept R2 (also =Rsq(C3:C12,B3:B12) ) --> 0.8189 0.8117 <-- Standard error of y values (also =Steyx(C3:C12,B3:B12) ) F statistic --> 36.1825 8 <-- Degrees of freedom SSxy = Slope*(summed product of observations from means) --> 23.8377 5.2705 <-- SSE = Residual sum of squares Slope -0.0890 <-- =INDEX(LINEST(C3:C12,B3:B12,,1),1,1) Intercept 14.3285 <-- =INDEX(LINEST(C3:C12,B3:B12,,1),1,2) R20.8189 <-- =INDEX(LINEST(C3:C12,B3:B12,,1),3,1) t-statistic 16.3376 <-- =C23/INDEX(LINEST(C3:C12,B3:B12,,1),2,2) Slope -0.0890 <-- =INDEX(LINEST(C3:C12,B3:B12,,TRUE),1,1) Standard error of slope 0.0148 <-- =INDEX(LINEST(C3:C12,B3:B12,,TRUE),2,1) t-statistic -6.0152 <-- =C27/C28Linest outputUSING LINEST FOR A SIMPLE REGRESSION 887 Excel Functions Linest produces a block of output without column headers or row labels which identify the output. Excel ’ s Help provides a good explanation of the meaning of the output; in the above picture, we have added in the explanations. Note the syntax of this function: Linest(y-range,x-range,constant, statistics) . The y-range is the range of dependent variables and the x-range is the range of the independent variables. If constant is omitted (as in the case above) or set to True , then the regression is calculated normally; if constant is set to False , then the intercept is forced to be zero. If statistics is set to True (as in the case above), then the range of statistics is calculated; otherwise only the slope and intercept are calculated. Individual items of this output can be accessed by using the function Index discussed above. Suppose, for example, that we want to do a simple t -test on the slope; doing this requires us to divide the slope value by its standard error. 19 202122 23 24 25 26 2728 29 30 313233J I H G F E D C B A Linest output slope intercept Slope (also =slope(D4:D13,C4:C13) )--> -0.0890 14.3285 <-- Intercept Standard error of slope --> 0.0148 0.8770 <-- Standard error of intercept R 2 (also =Rsq(D4:D13,C4:C13) ) --> 0.8189 0.8117 <-- Standard error of y values (also =Steyx(D4:D13,C4:C13) ) F statistic --> 36.1825 8 <-- Degrees of freedom SSxy = Slope*(summed product of observations from means) --> 23.8377 5.2705 <-- SSE = Residual sum of squares Slope -0.0890 <-- =INDEX(LINEST(D4:D13,C4:C13,,1),1,1) Intercept 14.3285 <-- =INDEX(LINEST(D4:D13,C4:C13,,1),1,2) R20.8189 <-- =INDEX(LINEST(D4:D13,C4:C13,,1),3,1) Slope -0.0890 <-- =INDEX(LINEST(D4:D13,C4:C13,,TRUE),1,1) S.e. of slope 0.0148 <-- =INDEX(LINEST(D4:D13,C4:C13,,TRUE),2,1) t-statistic -6.0152 <-- =C31/C32 888 Chapter 33 1 23 456 7 89 1011 12 13 14 15 16 17 18 19 20 21 22 23 24AB C D E F Observation X 1 X2 Y 1 35.3 81.2 10.98 2 29.7 22.5 11.13 3 30.8 77.3 12.51 4 58.8 34.8 8.4 5 61.4 55.1 9.27 6 71.3 124.8 8.73 7 74.4 18.5 6.36 8 76.7 234.6 8.5 9 70.7 22.5 7.82 10 57.5 123.3 9.14 x2coeff. x 1coeff. intercept Slope --> 0.0089 -0.0987 14.1705 <-- Intercept Standard error --> 0.0030 0.0110 0.6271 R2 --> 0.9196 0.5783 #N/A F statistic --> 40.0228 7.0000 #N/A SSxy --> 26.7674 2.3408 #N/A {=LINEST(E3:E12,C3:D12,,TRUE)}USING LINEST TO DO A MULTIPLE REGRESSION Multiple Regressions with Linest Linest can also be used to do a multiple regression, as illustrated below: 889 Excel Functions The predicted versus the actual Y ’ s are shown below: 33.7 Conditional Functions If , VLookup , and HLookup are three functions which allow you to put in conditional statements. The syntax of Excel ’ s If statement is If(condition,output if condition is true, output if condition is false) . In the example below, if the initial number is B3 < 3, then the desired output is 15. If B3 > 3, then the output is 0: 1 23 4 5 67 8 9 101112 13 14 15 16 17 18 19 20AB C D E F G H I J K L M N Observation X 1 X2 Y d e t c i d e r P Y 3 C * 5 1 $ D $ + 3 D * 5 1 $ C $ + 5 1 $ E $ = - - < 1 7 0 4 . 1 1 8 9 . 0 1 2 . 1 8 3 . 5 3 1 4 9 3 4 . 1 1 3 1 . 1 1 5 . 2 2 7 . 9 2 2 6 6 1 8 . 1 1 1 5 . 2 1 3 . 7 7 8 . 0 3 3 0 7 7 6 . 8 4 . 8 8 . 4 3 8 . 8 5 4 4 0 0 6 . 8 7 2 . 9 1 . 5 5 4 . 1 6 5 3 1 4 2 . 8 3 7 . 8 8 . 4 2 1 3 . 1 7 6 2 3 9 9 . 6 6 3 . 6 5 . 8 1 4 . 4 7 7 7 1 8 6 . 8 5 . 8 6 . 4 3 2 7 . 6 7 8 7 3 9 3 . 7 2 8 . 7 5 . 2 2 7 . 0 7 9 7 9 8 5 . 9 4 1 . 9 3 . 3 2 1 5 . 7 5 0 1 x2 coeff. x 1 coeff. intercept Slope --> 0.0089 -0.0987 14.1705 <-- Intercept Standard error --> 0.0030 0.0110 0.6271 R2 --> 0.9196 0.5783 #N/A F statistic --> 40.0228 7.0000 #N/A SSxy --> 26.7674 2.3408 #N/A {=LINEST(E3:E12,C3:D12,,TRUE)}USING LINEST TO DO A MULTIPLE REGRESSION The regression equation is Y = 14.1705 - 0.0987*x 1 + 0.0089*x 2 The chart shows the predicted versus the actual Y. If all the predictions were exact (i.e., R2 = 100%), then the predicted points would all fall on the 45-degree line (the dark line).6789101112 579 1 1 1 3 Actual YPredicted Y 1 2 3 4 5 6C B A 2 r e b m u n l a i t i n I ) 0 , 5 1 , 3 = < 2 B ( F I = - - < 5 1 t n e m e t a t s f I 2 r e b m u n l a i t i n I If statement Less than or equal to 3 <-- =IF( B5<=3,\"Less than or equal to 3\",\"More than 3\")THE IF FUNCTION As you can see in row 6, you can make If print text also, by enclosing the desired text in double quotes. Since VLookup , and HLookup both have the same structure, we will concentrate on VLookup and leave you to figure out 890 Chapter 33 HLookup for yourself. VLookup is a way to introduce a table search in your spreadsheet. Here is an example: Suppose the marginal tax rates on income are given by the table below (i.e., for income less than $8,000, the marginal tax rate is 0%; for income above $8,000, the marginal tax rate is 15%). Cell B9 illustrates how the function VLookup is used to look up the marginal tax rate. 1 2 3 45 6 78 9AB C IncomeTax rate 00 % 8,000 15% 14,000 25%25,000 38% Income 15,000Tax rate 25% <-- =VLOOKUP(B8,A3:B6,2)VLOOKUP FUNCTION The syntax of this function is VLookup(lookup_value,table,column) . The first column of the lookup table, A3:B6, must be arranged in ascending (increasing) order. The lookup_value , in this case the income of 15,000, is used to determine the applicable row of the table . The row is the first row whose value is < the lookup_value ; in this case, this is the row which starts with 14,000. The column entry determines from which column of the appli- cable row the answer is taken; in this case the marginal tax rates are in column 2. 33.8 Large and Rank, Percentile, and PercentRank Large(array, k) returns the k th largest number of the array , and Rank(number, array) returns the rank in array of number . Here is an example of each function: 891 Excel Functions Thus the third-largest number in the range A3:A12 is 10.98 and 9.27 is the fourth-largest number in the range A3:A12. If, as in cell B19, you specify an additional parameter in the function Rank , you will see that 9.27 is the sev- enth-ranking number from the bottom of the range A3:A12. As illustrated, Excel has similar functions for percentiles: Percentile and PercentRank . 33.9 Count, CountA, CountIf, CountIfs, AverageIf, AverageIfs As their names suggest, all six of these functions count: • Count : Counts the number of numeric entries in a range of cells. • CountA : Counts all the non-blank cells in a range. • CountIf : Counts cells which fulfill a specific condition. 1 2345 6 789 10111213141516171819 20 2122232425C B A Data 10.9811.1312.51 8.409.278.736.368.507.829.14 Ranking, k 3 K-th largest 10.98 <-- =LARGE(A3:A12,B14) Specific number 9.27 Rank from top 4 <-- =RANK(B17,A3:A12) Rank from bottom 7 <-- =RANK(B17,A3:A12,1) Percentile rank 0.8 Percentile 11.01 <-- =PERCENTILE(A3:A12,B21) Specific number 9.27 Percentile ranking 0.666 <-- =PERCENTRANK(A3:A12,B24)LARGE, RANK, PERCENTILE, PERCENTRANK 892 Chapter 33 • CountIfs : Counts cells depending on multiple conditions. • AverageIf and AverageIfs : Obvious. Examples of Count and CountA are given below: 1 2 3 4AB C D E F G Count : Count only numerical values 5 <-- =COUNT(E2:G4) 1 two 3 CountA : count all non-blank cells 8 <-- =COUNTA(E2:G4) 4 six seven 8 9COUNT, COUNTA To use CountIf we have to specify a condition. The spreadsheet below gives a year of Merck ’ s weekly stock returns (some rows have been hidden): 1 23 4 567 8 9 10 11 12 13 14 151617 18 19D C B A Number of returns 52 <-- =COUNT(C10:C61) Returns over 2% 13 <-- =COUNTIF(C10:C61,\">2%\") % 5 f f o t u C Returns over cutoff 2 <-- =COUNTIF(C10:C61,\">\"&TEXT(B5,\"0.00%\")) DateMerck price Return 3-Jan-06 31.82 9-Jan-06 32.15 1.03% <-- =LN(B10/B9) 17-Jan-06 31.94 -0.66% 23-Jan-06 33.33 4.26% 30-Jan-06 33.04 -0.87% 6-Feb-06 32.96 -0.24% 13-Feb-06 34.63 4.94% 21-Feb-06 33.72 -2.66% 27-Feb-06 33.81 0.27% 6-Mar-06 33.76 -0.15% 13-Mar-06 34.61 2.49%USING COUNTIF ON MERCK'S WEEKLY STOCK RETURNS In cell B3 we count all stock returns which are over 2%. In cells B5:B6 we illustrate a different technique. The cutoff in cell B5 is introduced into CountIf by means of the function Text . 8 Changing the entry in cell B5 allows us to 8. This function and other text functions are discussed in Chapter 35. 893 Excel Functions count the number of returns above a certain level. Here is this information in a Data Table : 1 234567 8 9 10 11 121314 15 16H G F E D C B A Number of returns 52 <-- =COUNT(C10:C61) Returns over 2% 13 <-- =COUNTIF(C10:C61,\">2%\") Data table: number of returns above cutoff r e d a e h e l b a t a t a d , 6 B = - - < 2 f f o t u C % 5 f f o t u C Returns over cutoff 2 <-- =COUNTIF(C10:C61,\">\"&TEXT(B5,\"0.00%\")) 0% 30 1% 21 DateMerck price Return 2% 13 8 % 3 2 8 . 1 3 6 0 - n a J - 3 9-Jan-06 32.15 1.03% <-- =LN(B10/B9) 4% 6 2 % 5 % 6 6 . 0 - 4 9 . 1 3 6 0 - n a J - 7 1 1 % 6 % 6 2 . 4 3 3 . 3 3 6 0 - n a J - 3 2 1 % 7 % 7 8 . 0 - 4 0 . 3 3 6 0 - n a J - 0 3 1 % 8 % 4 2 . 0 - 6 9 . 2 3 6 0 - b e F - 6 1 % 9 % 4 9 . 4 3 6 . 4 3 6 0 - b e F - 3 1 0 % 0 1 % 6 6 . 2 - 2 7 . 3 3 6 0 - b e F - 1 2USING COUNTIF ON MERCK'S WEEKLY STOCK RETURNS Here is the resulting table: Of the 52 weekly returns, 30 are over 0%, 21 over 1%, … We can use the function Countifs to introduce multiple-criteria counts: 894 Chapter 33 33.10 Boolean Functions When you include a question in parentheses, you are setting up a Boolean function : 1 2345 6 7 8 9 10 1112 13C B A Lower cutoff 2% Upper cutoff 4% One cutoff 13 <-- =COUNTIF(C:C,\">2%\") Multiple cutoffs 7 <-- =COUNTIFS(C:C,\"<4%\",C:C,\">2%\") 7 <-- =COUNTIFS(C:C,\"<\"&TEXT(B3,\"0%\"),C:C,\">\"&TEXT(B2,\"0%\")) DateMerck price Return 03-Jan-06 31.82 09-Jan-06 32.15 1.03% 17-Jan-06 31.94 -0.66% 23-Jan-06 33.33 4.26% 30-Jan-06 33.04 -0.87%USING COUNTIFS FOR MULTIPLE-CRITERIA COUNTS 1 2 3 45 6 78 9AB C 2 2 x 5 1 - y Number 25 Is number <= x? FALSE <-- =(B5<=B2) Is number > y? TRUE <-- =(B5>B3) Multiplying 0 <-- =B6*B7 BASIC BOOLEAN FUNCTIONS In cell B6 we have written = (B5 < = B2) ; this asks whether B5 is less than or equal to B2: If the answer is positive, Excel returns False , else it returns True . Multiplying False*True or False*False gives 0 (see cell B9), and multiplying True*True gives 1: 895 Excel Functions 1 2 3 4 5 6 7 8 9AB C 2 2 x 5 1 - y Number 20 Is number <= x? TRUE <-- =(B5<=B2) Is number > y? TRUE <-- =(B5>B3) Multiplying 1 <-- =B6*B7 BASIC BOOLEAN FUNCTIONS Using Boolean Functions Boolean functions can be useful in the most unexpected places. In the spread- sheet below, the first two columns contain the monthly returns for Marriott for a 2-year period. The problem we encounter is counting the number of returns which are between two arbitrary bounds, and taking the average of the returns which are between these bounds: 1 2 34 5 67 8 9 10 11 1213 14 15 16 1718 19 2021 22 232425 26 27H G F E D C B A DateMarriott stock price Return ) 7 2 C : 4 C ( T N U O C = - - < 4 2 ? s t n i o p a t a d y n a m w o H 0 2 . 1 3 5 0 - n a J - 7 1-Feb-05 31.65 1.43% <-- =LN(B4/B3) Maximal return 8.02% <-- =MAX(C4:C27) 1-Mar-05 33.06 4.36% Minimal return -8.02% <-- =MIN(C4:C27) 1-Apr-05 31.03 -6.34% 2-May-05 33.40 7.36% % 5 d n u o b r e p p U % 3 1 . 1 8 7 . 3 3 5 0 - n u J - 1 % 2 - d n u o b r e w o L % 8 3 . 0 1 9 . 3 3 5 0 - l u J - 1 1-Aug-05 31.30 -8.01% 1-Sep-05 31.25 -0.16% How many < upper bound? 16 <-- =COUNTIF(C4:C27,\"<\"&G8) 3-Oct-05 29.58 -5.49% How many > lower bound? 19 <-- =COUNTIF(C4:C27,\">\"&G9) 1-Nov-05 32.05 8.02% 1-Dec-05 33.27 3.74%How many between upperand lower bounds? 11=SUMPRODUCT((C4:C27>G9)*(C4:C27<G8),(C4: C27>G9 )*(C4:C27<G8 )) 3-Jan-06 33.11 -0.48% 1-Feb-06 33.98 2.59%Average of returnsbetween the bounds 1.36%=SUMPRODUCT((C4:C27>G9)*(C4:C27<G8),C4:C27)/SUMPRODUCT((C4:C27>G9)*(C4:C27<G8),(C 4:C27>G9)*(C4:C27<G8)) 1-Mar-06 34.14 0.47% 3-Apr-06 36.36 6.30% 1-May-06 35.99 -1.02% 1-Jun-06 38.00 5.43% 3-Jul-06 35.07 -8.02% 1-Aug-06 37.61 6.99% 1-Sep-06 38.59 2.57% 2-Oct-06 41.71 7.77% 1-Nov-06 45.09 7.79% 1-Dec-06 47.72 5.67% 3-Jan-07 45.10 -5.65%USING BOOLEAN FUNCTIONS 896 Chapter 33 In cell G3 we use Count to determine the number of returns. Cells G11 and G12 use CountIf to determine how many returns are below the upper bound in cell G8 and how many are above the lower bound in cell G9. But how many of the returns are between the two bounds? You can ’ t do it with CountIf , but we can do it (cell G14) with a trick involving Boolean functions: => < ↑SUMPRODUCT C :C G * C :C G Creates a vector of ’(( ) ( ) 42 7 9 42 7 8 1ss where the returns ar e lower bound G and 0’s where the re> ()9 tturns are upper bound G C: C G C:< >∗(), () (9 42 7 9 4/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext CCG Ditto Sumproduct mu ltiplies the t27 8< ↑ ↑))/dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/dncurlybracketright/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext wwo vectors and sums the results This gives the number of . ddata points between the two bounds./dncurlybracketleft/dncurlybracketmid/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /dncurlybracketright /horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext/horizcurlybracketext /horizcurlybracketext A similar trick is employed in cell G15 to find the average of the returns which are between the two bounds: =>∗ < SUMPRODUCT C :C G C :C G C :C SUMPRODUCT C :(( ) ( ), ) ((42 7 9 42 7 8 42 7 4CCGC : CG C: C G C: C G Numerator Mu27 9 4 27 8 42 7 9 42 7 8>∗ < >∗ < =)( ) , () () ) :l ltiplies vector of ’s and ’s times the returns thus sum10 , ss the returns which are between the bounds Counts the retu rrns which are between the bounds This is all very tricky, but it is also very useful! 33.11 Offset The function Offset allows us to specify a cell or a block of cells in an array. It cannot be used by itself—rather, it must be part of another Excel function. The example below shows a large array of numbers. We want to sum a four-row, five-column array of the larger array (these numbers are specified in cells B6 and B7); as specified in cells B3 and B4, we want this summed array to start to the right and below the third row and the second column of the large block of numbers: 897 Excel Functions 1 2 34567 8 9 1011121314151617 18 1920212223242526 27 28293031AB C D E F G H Starting corner 3 n w o d s w o R Columns over 2 Range to be summed Number of rows 4 Number of columns 5 ) ) 7 B , 6 B , 4 B , 3 B , 1 3 H : 1 1 A ( T E S F F O ( M U S = - - < 1 1 8 m u S Check 811 <-- =SUM(C14:G17) 89 34 72 42 41 89 75 4133 6 49 7 62 50 38 1771 69 42 68 39 75 32 77 16 9 87 94 0 86 74 6 70 12 44 48 88 27 38 518 5 02 33 58 33 01 75 230 50 16 28 73 4 55 68 35 56 31 24 15 47 89 88 99 31 55 60 45 24 28 39 37 2 77 59 08 15 27 162 56 55 19 73 81 33 7687 27 80 38 65 61 38 6810 59 27 81 6 83 51 170 88 44 35 70 35 0 8298 45 17 45 89 19 58 4283 75 21 13 80 9 18 64 3 22 3 48 68 85 25 26 9 76 61 72 28 83 1 32 3864 87 32 67 50 73 19 8354 55 57 64 80 29 17 9212 95 66 59 48 78 87 23USING OFFSET The function OFFSET(A11:H31,B3,B4,B6,B7) in cell B8 specifies a block of cells within the range A11:H31. This range starts three rows below (the value in cell B3) and two columns to the right (the value in cell B4) of the top left-hand cell of the range A11:H31. The range itself is four rows deep (the value in cell B6) and five columns wide (the value in cell B7). The values in cells B6 and B7 always have to be positive, but the values in B3 and B4 can be negative as well as positive. In the example below the initial reference range is B22:H31, and Offset indicates a range which starts above this block of cells (since the value in B3 is negative): 898 Chapter 33 1 23 4 56789 101112 13 14151617181920 21 22 23242526272829 30 31 32AB C D E F G H I Starting corner 5 - n w o d s w o R Columns over 1 Range to be summed Number of rows 4 Number of columns 5 ( T E S F F O ( M U S = - - < 9 9 8 m uS B22:H31,B3,B4,B6,B7)) Check 899 <-- =SUM(C17:G20) 89 34 72 42 41 89 75 41 33 6 49 7 62 50 38 17 71 69 42 68 39 75 32 77 1 69 8 79 40 8 67 46 70 12 44 48 88 27 38 51 8 5 02 33 58 33 01 75 230 50 16 28 73 4 55 6835 56 31 24 15 47 89 8899 31 55 60 45 24 28 39 37 2 77 59 08 15 27 1 62 56 55 19 73 81 33 76 87 27 80 38 65 61 38 68 10 59 27 81 6 83 51 170 88 44 35 70 35 0 8298 45 17 45 89 19 58 4283 75 21 13 80 9 18 643 22 3 48 68 85 25 26 976 61 72 28 83 1 32 3864 87 32 67 50 73 19 83 54 55 57 64 80 29 17 92 12 95 66 59 48 78 87 23USING OFFSET with negative value For an innovative use of Offset , see Chapter 14, section 14.6. 3 4 Array Functions 34.1 Overview An Excel array function or formula performs an operation on a rectangular block of cells. In the simplest cases, built-in Excel array functions such as Transpose or MMult take an array and transpose it or take two matrices and multiply them. Once you get the hang of array functions, you can design your own array formulas. In this chapter, for example, we show how to use array formulas to find the minimum or maximum of the off-diagonal elements of a matrix or to pick out the diagonal of a matrix—all useful tricks to know when doing portfolio calculations such as those discussed in Chapters 8–13. The one critical thing to remember about array functions or formulas is that they are entered into a spreadsheet by pressing [Ctrl] + [Shift] + [Enter] keys simultaneously; this contrasts with the usual procedure whereby we enter a function or formula only by pressing [Enter]. 34.2 Some Built-In Excel Array Functions In this section we discuss some built-in Excel array functions: Transpose , MMult , MInverse , and Frequency . Other functions are discussed elsewhere in this book—for example, the function Linest is discussed in Chapter 32. Transpose Suppose we ’ re trying to calculate the transpose of a 3 x 2 (3 rows, 2 columns) matrix that is in cells A2:B4 of the spreadsheet. 2 34AB 152637 Excel has a function called Transpose( ) , but, like all array functions, its use requires care: • Mark the target : Block off the cells D3:F4 into which you intend to put the transposed matrix. • Type the array function : Now type = Transpose(A2:B4) . This will appear in the top left-hand corner of the blocked-off cells. Of course you can use the 900 Chapter 34 usual tricks to show Excel which cells you want (e.g., pointing or using named ranges). At this point your spreadsheet looks like this: • [Ctrl] + [Shift] + [Enter] : When you ’ ve finished typing the formula, don ’ t press [Enter] ! Instead, use [Ctrl] + [Shift] + [Enter]. This will put the array function into all of the blocked-off cells. Here ’ s what the final product will look like: 1 2 3 4ABCDEF G 15 2 6 1 2 3 <-- {=TRANSPOSE(A2:B4)} 37 567USING TRANSPOSE Notice that the array function is surrounded by curly brackets { }. You don ’ t type these in—Excel puts these in automatically. 901 Array Functions This will transpose the range, but it will not link the original with the target range—when you change something in the original range, the target range is unchanged. The neat thing about the array function Transpose is that it ’ s a dynamic function , as are all the array functions and formulas: When you change one of the initial set of cells, the transposed array also changes. Paste|Paste Special|Transpose There is, of course, another way to transpose an array: You can copy the origi-nal array, and then use Paste|Paste Special to transpose the range, clicking on Transpose : 902 Chapter 34 MMult and MInverse—Multiplying and Inverting Matrices These two functions are used and explained in the portfolio chapters (8–13), so we only recapitulate briefly: • MMult(range1,range2) multiplies the matrix in range1 times that in range2 . Of course this is only possible if the number of columns in range1 equals the number of rows in range2 . • MInverse(range) calculates the inverse of the matrix in range . Note that range must be rectangular. Frequency The Excel array function Frequency(data_array,bins_array) calculates the frequency distribution of a data set. The spreadsheet below shows monthly return data for Ford stock over the period January 1977–December 2006. In column E we have put the bins, taking care that the first bin will be below the minimum monthly return over the period and that the last bin will be above the maximum monthly return. The range F8:F38 contains the array function Frequency (C4:C363,E8:E38) . From the output we can, for example, deduce that in the 20-year period there were two monthly returns between − 25.71% and − 23.71%, and 33 monthly returns between 4.29% and 6.29%. 1 2 3 45 6 78 9 1011 1213 14 1516 17 1819 20 21 22 2324 25 2627 28 29 30 3132 33 3435 36 3738 39 40 41 4243 44 4546 47 48 49 5051 52 5354 55 5657 58 59 60 6162 63 6465 66 6768 69 70 71I H G F E D C B A DateFord stock priceMonthly return 3-Jan-77 0.50 1-Feb-77 0.48 -4.08% <-- =LN(B4/B3) Minimum -24.71% <-- =MIN(C4:C363) 1-Mar-77 0.45 -6.45% Maximum 32.48% <-- =MAX(C4:C363) 1-Apr-77 0.47 4.35% 2-May-77 0.46 -2.15% Bin Frequency } ) 8 3 E : 8 E , 3 6 3 C : 4 C ( Y C N E U Q E R F = { - - < 0 % 1 7 . 5 2 - % 4 3 . 8 0 5 . 0 7 7 - n u J - 1 2 % 1 7 . 3 2 - % 8 0 . 4 - 8 4 . 0 7 7 - l u J - 1 1 % 1 7 . 1 2 - % 1 1 . 2 - 7 4 . 0 7 7 - g u A - 1 2 % 1 7 . 9 1 - % 9 1 . 6 0 5 . 0 7 7 - p e S - 1 6 % 1 7 . 7 1 - % 9 1 . 6 - 7 4 . 0 7 7 - t c O - 3 3 % 1 7 . 5 1 - % 1 1 . 2 8 4 . 0 7 7 - v o N - 1 5 % 1 7 . 3 1 - % 8 0 . 4 0 5 . 0 7 7 - c e D - 1 8 % 1 7 . 1 1 - % 9 1 . 6 - 7 4 . 0 8 7 - n a J - 3 0 1 % 1 7 . 9 - % 0 0 . 0 7 4 . 0 8 7 - b e F - 1 8 1 % 1 7 . 7 - % 7 1 . 8 1 5 . 0 8 7 - r a M - 1 3 2 % 1 7 . 5 - % 6 8 . 2 1 8 5 . 0 8 7 - r p A - 3 6 2 % 1 7 . 3 - % 1 5 . 3 - 6 5 . 0 8 7 - y a M - 1 5 3 % 1 7 . 1 - % 1 5 . 5 - 3 5 . 0 8 7 - n u J - 1 5 3 % 9 2 . 0 % 0 0 . 0 3 5 . 0 8 7 - l u J - 3 7 3 % 9 2 . 2 % 5 8 . 3 - 1 5 . 0 8 7 - g u A - 1 0 3 % 9 2 . 4 % 5 8 . 3 3 5 . 0 8 7 - p e S - 1 3 3 % 9 2 . 6 % 1 9 . 9 - 8 4 . 0 8 7 - t c O - 2 2 2 % 9 2 . 8 % 6 0 . 2 9 4 . 0 8 7 - v o N - 1 1 2 % 9 2 . 0 1 % 2 0 . 2 0 5 . 0 8 7 - c e D - 1 9 % 9 2 . 2 1 % 0 0 . 0 0 5 . 0 9 7 - n a J - 2 3 1 % 9 2 . 4 1 % 0 0 . 0 0 5 . 0 9 7 - b e F - 1 5 % 9 2 . 6 1 % 3 8 . 5 3 5 . 0 9 7 - r a M - 1 4 % 9 2 . 8 1 % 0 7 . 3 5 5 . 0 9 7 - r p A - 2 5 % 9 2 . 0 2 % 0 7 . 3 - 3 5 . 0 9 7 - y a M - 1 2 % 9 2 . 2 2 % 0 0 . 0 3 5 . 0 9 7 - n u J - 1 1 % 9 2 . 4 2 % 0 0 . 0 3 5 . 0 9 7 - l u J - 2 1 % 9 2 . 6 2 % 0 7 . 3 5 5 . 0 9 7 - g u A - 1 0 % 9 2 . 8 2 % 0 8 . 1 6 5 . 0 9 7 - p e S - 4 2 % 9 2 . 0 3 % 2 4 . 5 1 - 8 4 . 0 9 7 - t c O - 1 0 % 9 2 . 2 3 % 3 2 . 8 1 - 0 4 . 0 9 7 - v o N - 1 1 % 9 2 . 4 3 % 8 8 . 4 2 4 . 0 9 7 - c e D - 3 2-Jan-80 0.45 6.90% 1-Feb-80 0.41 -9.31% 3-Mar-80 0.39 -5.00% 1-Apr-80 0.34 -13.72% 1-May-80 0.34 0.00% 2-Jun-80 0.34 0.00% 1-Jul-80 0.40 16.25% 1-Aug-80 0.39 -2.53%2-Sep-80 0.39 0.00% 1-Oct-80 0.37 -5.26% 3-Nov-80 0.32 -14.52% 1-Dec-80 0.29 -9.84% 2-Jan-81 0.29 0.00% 2-Feb-81 0.29 0.00% 2-Mar-81 0.35 18.81% 1-Apr-81 0.32 -8.96% 1-May-81 0.34 6.06% 1-Jun-81 0.35 2.90% 1-Jul-81 0.32 -8.96% 3-Aug-81 0.30 -6.45%1-Sep-81 0.30 0.00% 1-Oct-81 0.25 -18.23% 2-Nov-81 0.25 0.00% 1-Dec-81 0.25 0.00% 4-Jan-82 0.28 11.33% 1-Feb-82 0.29 3.51%1-Mar-82 0.32 9.84% 1-Apr-82 0.34 6.06% 3-May-82 0.35 2.90% 1-Jun-82 0.37 5.56% 1-Jul-82 0.34 -8.46% 2-Aug-82 0.42 21.13% 1-Sep-82 0.39 -7.41%THE FREQUENCY ARRAY FUNCTION Frequency Distribution of Ford Returns Jan 1977 - Dec 2006 2126 3581018232635 3537 3033 2221 913 545 21102 01 0510152025303540-25.7% - -23.7%-23.7% - -21.7%-21.7% - -19.7%-19.7% - -17.7%-17.7% - -15.7%-15.7% - -13.7%-13.7% - -11.7%-11.7% - -9.7%-9.7% - -7.7%-7.7% - -5.7%-5.7% - -3.7%-3.7% - -1.7%-1.7% - 0.3%0.3% - 2.3%2.3% - 4.3%4.3% - 6.3%6.3% - 8.3%8.3% - 10.3%10.3% - 12.3%12.3% - 14.3%14.3% - 16.3%16.3% - 18.3%18.3% - 20.3%20.3% - 22.3%22.3% - 24.3%24.3% - 26.3%26.3% - 28.3%28.3% - 30.3%30.3% - 32.3%32.3% - 34.3% 904 Chapter 34 34.3 Homemade Array Functions In our experience array functions often arise out of situations where you are called upon to do long, repetitive calculations. You then discover that the same calculation can be done in a single array function. In many cases it is not clear why a particular array technique should work. For example, in this chapter we will use the fact that A3 + B6:B8 adds the contents of cell A3 to each of cells B6:B8. Why? Heaven only knows! We also use the (undocumented, as far as we are aware) trick that B3:B7 ∧ A3:A7 raises cell B3 to the power A3, cell B4 to the power A4, … . In this section we illustrate homemade array functions with two examples having to do with investment returns. Computing the Compound Annual Return from 10 Years of Return Data The table below gives the annual returns for the Harvard University endowment. You are asked to compute the compound annual return over the 10-year period. Assuming that the returns have been discretely computed (meaning that rEndowment value Endowment valuet tt t== −111 0 ,, ,… ), you realize that the compounded annual return is rr r r=+() ∗+() ∗+() () − 11 1 1 2002 2003 201111 0…/ . In cell B14 below, we do this calculation with a single array function: 1 23456 7 89 1011 12 1314C B A Year Return 2002 -0.50% 2003 12.50% 2004 21.20% 2005 19.20% 2006 16.70% 2007 23.00% 2008 8.60% 2009 -27.30% 2010 11.40% 2011 21.40% Compound annual return 9.50% <-- {=PRODUCT(1+B3:B12)^(1/10)-1}HARVARD UNIVERSITY ENDOWMENT RETURNS Years ending June 30 The Excel function Product multiplies the entries in a range of cells. The entry in cell B14 adds 1 to each cell in B3:B12, multiplies the cells, takes the 905 Arra y Funct ions tenth root, an d subtracts 1 from t he resu lt—all in one ce ll (entere d, of course, with [Ctrl] + [Shift ] +[Enter] ). 1 Comput ing the Compound Annual Continuous Return Column B of the spreadsheet below gives the amounts which accumulated in a customer account of the Youn gtalk Investment Fund. The annual continuous ly compoun ded return is compute d by rAccount Accounttt t=⎛ ⎝⎜⎞⎠⎟ −ln 1 , and the avera ge return over the period is 1 10110 rt t=∑ . In cell B1 5 belo w we do this calculation b y avera ging the annual returns, and in cell B1 6 we show an arra y function w hich does t he whole calculation in a s ingle cell. Prett y neat! \u0014 \u0015 \u0016 \u0017 \u0018\u0019 \u001a \u001b \u0014\u0013\u0014\u0014 \u0014\u0015\u0014\u0016 \u0014\u0017 \u0014\u0018 \u0014\u0019 \u0014\u001a' & % $ YearInvestment beginning of yearContinuous return for year \u0014 \u0019 \u0014\u0013\u0013\u0011\u0013\u0013 \u0014 \u001a \u0014\u0015\u0014\u0011\u0018\u0014 \u0014 \u0011\u0017\u001b\b \u0010\u0010\u0003\u0003 /1 %\u0017\u0012%\u0016 \u0014 \u001b \u0014\u0016\u0015\u0011\u0015\u0015 \u001b\u0011\u0017\u0018\b \u0014 \u001b\u0011\u0019\u0016 \u0010\u0015 \u0011\u0016\u0014\b \u0015\u0013\u0013\u0013 \u001a\u0018\u0011\u0019\u0018 \u0010\u0015\u0019\u0011\u0018\u0016\b \u0015\u0013\u0013\u0014 \u0014\u0017\u0013\u0011\u0017\u001b \u0019\u0014\u0011 \u0013\b \u0015\u0013\u0013\u0015 \u0015\u0015\u0014\u0011\u0017\u0013 \u0017\u0018\u0011\u0017 \b \u0015\u0013\u0013\u0016 \u0015\u0017\u0016\u0011\u0017\u0019 \u0011\u0018\u0013\b \u0015\u0013\u0013\u0017 \u0015\u001b\u0013\u0011\u0014\u0014 \u0014\u0017\u0011\u0013\u0015\b \u0015\u0013\u0013\u0018 \u0016 \u001b\u0011\u001a\u0015 \u0016\u0018\u0011\u0016\u0014\b \u0015\u0013\u0013\u0019 \u0018\u0017\u0016\u0011\u0018\u001b \u0016\u0013\u0011 \b \u0016 \u0014 & \u0017 & ( * $ 5 ( 9 $ \u0003 \u0003 \u0010 \u0010 \b \u0016 \u0011 \u0019 \u0014 Q U X W H U \u0003 O D X Q Q D \u0003 G Q X R S P R & 6DPH\u0003FDOFXODWLRQ\u0003ZLWK DUUD\\\u0003IXQFWLRQ \u0014\u0019\u0011 \u0016\b \u0010\u0010\u0003\u0003^ $9(5$*( /1 %\u0017 %\u0014\u0016\u0012%\u0016 %\u0014\u0015 ` \u0014\u0019\u0011 \u0016\b \u0010\u0010\u0003\u0003 /1 %\u0014\u0016\u0012%\u0016 \u0012\u0014\u0013\u0003\u000f\u0003HYHQ\u0003VLPSOHU\u0004YOUNGTALK INVESTMENT FUND 1. There is nothin g in Excel documentation that indicates wh y this marvelous feature should work. But it does … 906 Chapter 34 A final note: Look at cell C17—if you know some continuous-time mathematics, you will know that LN(B13/B3)/10 produces the same result. Simpler yet! Computing Discount Factors with an Array Function We are given a set of interest rates r 1 , r 2 , … , and we want to compute the formula 1 11+()=∑rtt tn . Excel ’ s NPV function won ’ t work for this, so we ’ ll have to build our own function. The spreadsheet below shows two methods: 1 2 34567 8 9 1011 12 13 14 15 1617D C B A YearInterest rate 1 6.23% 2 4.00% 3 4.20% 4 4.65% 5 4.80% Present value 4.3746 <-- {=SUM(1/((1+B3:B7)^A3:A7))} Checking the formula with a recursive formula YearInterest rate Sum of 1/(1+r t)t 1 6.23% 0.9414 <-- =1/(1+B13)^A13 2 4.00% 1.8659 <-- =C13+(1/(1+B14)^A14) 3 4.20% 2.7498 <-- =C14+(1/(1+B15)^A15) 4 4.65% 3.5836 5 4.80% 4.3746 <-- =C16+(1/(1+B17)^A17)COMPUTING PRESENT VALUE FACTORS WITH AN ARRAY FUNCTION In cell B9 we use an array function { = SUM(1/((1 + B3:B7) ෺ A3:A7))} . Writing (1 + B3:B7) ∧ A3:A7) adds 1 to each of cells B3:B7 and raises the result to the power in cells A3:A7. Applying Sum gives the result (of course, this being an array function, you have to enter it with [Ctrl] + [Shift] + [Enter]). An alternative, given in rows 13–17, is to build the result recursively. This gives the same result, but with more work. 907 Array Functions 34.4 Array Formulas with Matrices In this section we create some array functions that have to do with matrices. Subtracting a Constant from a Matrix In the portfolio computations of Chapters 8–13, we often have to subtract a constant from a matrix. This is easy to do with an array formula, entered with [Ctrl] + [Shift] + [Enter]. 1 2345678 9 10 11121314ABCDE 1 6 Constant 3 26384951 0 -2 3-1 3 <-- {=A3:B7-E3} 051627Matrix SUBTRACTING A CONSTANT FROM A MATRIX Matrix minus constant Creating a Matrix with Ones on the Diagonal and Zeros Elsewhere This is a problem that comes up in Chapter 10: We want a matrix which has a diagonal of 1 ’ s, but has zero off-diagonal elements. The spreadsheet below shows three ways of doing this: 908 Chapter 3 4 The first an d secon d met hods rely on t he labeling of the rows an d the columns. In the first example, the formula =IF(B3:E3 =A4:A7,1,0 )tests whether the row label equa ls the column heading; if this is true, we put a 1 in the cell, and otherwise we put in a 0. In t he secon d examp le we use an If function w ith mixed absolute an d relative re ferences to create t he same e ffect. In the third examp le, there are no co lumn or row labels, an d we re ly on t he functions Colum nand Rowto test t he equa lity of the relative row an d column places in the matr ix. Finding the Max imum and M inimum Off-Diagonal Elements o f a Matr ix We want to find the max imal and minimal elements o f the off-diagonal ele- ments o f a matr ix. Two wa ys to do this are illustrate d below:\u0003\u0014 \u0015 \u0016\u0017\u0018\u0019 \u001a \u001b \u0014\u0013 \u0014\u0014\u0014\u0015 \u0014\u0016 \u0014\u0017\u0014\u0018 \u0014\u0019 \u0014\u001a \u0014\u001b \u0014 \u0015\u0013$%&'( ) A BCD A \u0014\u0013\u0013\u0013 B \u0013\u0014\u0013\u0013 C \u0013\u0013\u0014\u0013 D \u0013\u0013\u0013\u0014 A BCD A \u0014\u0013\u0013\u0013 B \u0013\u0014\u0013\u0013 C \u0013\u0013\u0014\u0013 D \u0013\u0013\u0013\u0014 \u0014\u0013\u0013\u0013 \u0013\u0014\u0013\u0013 \u0013\u0013\u0014\u0013\u0013\u0013\u0013\u0014CREATING A MATRIX OF 1'S AND 0'S We want 1 on diagonal, and 0 elsewhere this comes up in Chapter 10 Creating a diagonal matrix of 1's. The cells below contain the array formula =IF(B3:E3=A4:A7,1,0)} Creating a diagonal matrix of 1's. The cells below contain the array formula =IF(B$10=$A11,1,0)} Creating a diagonal matrix of 1's when there are no borders. The cells below contain the array formula =IF(ROW()-ROW($B$17)=COLUMN()-COLUMN($B$17),1,0)} 909 Array Functions 1 2 3 4 5 67 8 9 10 11 12 13 1415 16 17 18 19 20 21 2223 24 25 26 27 28 29AB C D E F A BCD A 10 2 3 4 B -3 20 4 -3 C 15 6 06 D 42 - 1 0 2 5 A BCD A 2 3 4 <-- {=IF(B3:E3=A4:A7,\"\",B4:E7)} B -3 4 -3 C 15 6 D 42 - 1 0 Max of off-diagonals 6 <-- =MAX(B11:E14) Min of off-diagonals -10 <-- =MIN(B11:E14) Using only non-array formulas A BCD A 2 3 4 <-- =IF(E$3=$A4,\"\",E4) B -3 4 -3 C 15 6 D 42 - 1 0 Max of off-diagonals 6 <-- =MAX(B23:E26) Min of off-diagonals -10 <-- =MIN(B23:E26)RANGE below contains array formula =IF(B3:E3=A4:A7,\"\",B4:E7) Range below contains the non-array formula =IF(B$3=$A4,\"\",B4)The source matrixFINDING THE MAX,MIN OF OFF-DIAGONAL ELEMENTS OF A MATRIX the long way In the example above we first use an array function to replace all the diago- nal elements with a blank cell. We can then use Max and Min to determine the extreme off-diagonal elements. As shown in rows 20–29, we could also have used the non-array formula = IF(B$3 = $A4,””,B4) in cell B11 and copied it to the rest of the matrix. We can also find the maximum and minimum by incorporating the array formula directly into the Max and Min : 910 Chapter 34 Replacing the Off-Diagonals Using VLookup Now suppose that we want to replace the off-diagonal elements using a lookup table, as illustrated below: 1 2 3 45 6 789 10AB C D E F A BCD A 10 2 3 4 B -3 20 4 -3 C 15 6 06 D 42 - 1 0 2 5 Max of off-diagonals 6 <-- {=MAX(IF(B3:E3=A4:A7,\"\",B4:E7))} Min of off-diagonals -10 <-- {=MIN(IF(B3:E3=A4:A7,\"\",B4:E7))}FINDING THE MAX,MIN OF OFF-DIAGONAL ELEMENTS OF A MATRIX in one step The source matrix 1 234567 8 9 10111213 14 15 16 17 18 19 20 2122F E D C B A ABCD A 1 0234B- 3 2 0 4- 3 C15 6 06D42 - 1 0 2 5 Lookup table for replacements -10 i -6 ii -2 iii 2i v 6v 10 vi ABCD A 10 iv iv iv <-- =IF(E$3=$A4,E4,VLOOKUP(E4,$A$10:$B$15,2)) Bi i 2 0 i v i i Ci i i i v 6 0 v Di v i v i 2 5REPLACING THE MAX,MIN OF OFF-DIAGONAL ELEMENTS OF A MATRIX long way, non-array formulas Range below contains non-array formula =IF(B$3=$A4,B4,VLOOKUP(B4,$A$10:$B$15,2)), which has been copied to all the cellsThe source matrix 911 Array Functions Array formulas can simplify this procedure: 1 23456789 1011121314 15 16 17 1819202122F E D C B A A BCD A 1 0234 B -3 20 4 -3 C 15 6 06 D 42 - 1 0 2 5 Lookup table for replacements -10 i -6 ii -2 iii 2i v 6v 10 vi A BCD A 10 iv iv iv <-- {=IF(B3:E3=A4:A7,B4:E7,VLOOKUP(B4:E7,A10:B15,2))} B ii 20 iv ii C iii iv 60 v D iv iv i 25REPLACING THE MAX,MIN OF OFF-DIAGONAL ELEMENTS OF A MATRIX Using array formula Range below contains array formula =IF(B3:E3=A4:A7,B4:E7,VLOOKUP(B4:E7,A10:B15,2))The source matrix Exercises 1. Use a homemade array function to multiply the vector {1,2,3,4,5} times the constant 3. 2. Use the array functions Transpose and MMult to multiply the row vector {1,2,3,4,5} times the column vector − −⎧ ⎨⎪ ⎪⎪ ⎩⎪ ⎪ ⎪⎫ ⎬⎪ ⎪⎪ ⎭⎪ ⎪ ⎪8 9 7 6 5 . 3. Below you will find the variance-covariance matrix of six stocks. Use an array function to create a matrix with only variances on the diagonal and with zeros elsewhere. 912 Chapter 34 4. For the problem above: Use an array function to create a matrix with zeros on the diagonal and the covariances off-diagonal. 5. The exercise Excel notebook gives data for three mutual funds. Compute the discrete annual returns for each fund and then use an array function to compute the compound annual return over the period. Recall that discretely compounded, the return in year t is ( Fund value t / Fund value t − 1 ) − 1. If the returns were continuously compounded, then the year- t return would be ln( Fund value t / Fund value t − 1 ) . 1 2 34 5 6 7ABCDEFG GE MSFT JNJ K B A IBM GE 0.1035 0.0758 0.0222 -0.0043 0.0857 0.1414 MSFT 0.0758 0.1657 0.0412 -0.0052 0.0379 0.1400 JNJ 0.0222 0.0412 0.0360 0.0181 0.0101 0.0455 K -0.0043 -0.0052 0.0181 0.0570 -0.0076 0.0122 BA 0.0857 0.0379 0.0101 -0.0076 0.0896 0.0856 IBM 0.1414 0.1400 0.0455 0.0122 0.0856 0.2993 3 5 Some Excel Hints 35.1 Overview This chapter covers a grab bag of Excel hints dealing with problems and needs that we sometimes run into. The chapter makes no pretence at uniformity or extensiveness of coverage. Topics covered include: • Fast fills and copy • Graph titles that change when data changes • Creating multi-line cells (useful for putting line breaks in cells and linked graph titles) • Typing Greek symbols • Typing sub- and superscripts (but not both) • Naming cells • Hiding cells • Formula auditing • Writing on multiple spreadsheets • Using Excel ’ s personal notebook to copy and paste and format quickly 35.2 Fast Copy: Filling in Data Next to Filled-In Column Usually, we copy cells by dragging on the fill handle of the cell with the formula. There is sometimes an easier method. Consider the following situation: 1 2 34 5 678 9AB C 12 2 5 <-- =B2+33 4 567 8AUTO FILL/COPY 914 Chapter 35 Now double-click on “fill handle” (shown below with the cross). After double- clicking, the range B2:B9 will automatically fill with the formula in B3. Here ’ s the result: 1 2 34 5 6 78 9 10 11ABC 12 25 < - - = B 2 + 3 3841 1 51 4 61 7 72 082 3AUTO FILL/COPY Double-clicking on the \"fill handle\" of a cell will fill in the rest of the column provided there's a filled cell next to it. 915 Some Excel Hints 35.3 Filling Cells with a Series Sometimes we want to fill a set of cells with a series. This can be accomplished by going to Editing|Fill|Series on the Home tab: Here ’ s an example. Starting with cell A1, we want to fill a column with cells increasing by 3 until we get to 16: 916 Chapter 35 Clicking OK gives 1 234 5 6A 147 10 13 16 This interesting command has several other options which we leave for you to try. 35.4 Multi-Line Cells It is sometimes useful to put a line break in a cell, thus creating a multi-line cell. Do this with [Alt] + [Enter] where you want a line break. 1 2A PUTTING LINE BREAKS IN CELLS This is a multi-line cell. The break was entered by inserting [Alt]+[Enter] at the first break point. There are, of course other ways to make a cell multi-lined. The most obvious is to use the Wrap text box in the Format Cells|Alignment command: 917 Some Excel Hints Here ’ s the cell after we word-wrap it. (Note that in the dialog box above we ’ ve also set the vertical alignment of the cell to Center .) 1A The line in this cell runs over into neighboring cells, but by using Home|Number|Alignment we can word wrap the cell. 35.5 Multi-Line Cells with Text Formulas Sometimes you want to put a line break in a cell which has text formulas in it. In the example below, the text formula in cell A4 combines the text in cells A1 and A2. 918 Chapter 35 1 234 5B A Simon JackSimonJack <-- =A1&A2 SimonJack <-- =A1&CHAR(10)&A2, not correctly formatted Simon Jack <-- =A1&CHAR(10)&A2, pushed the Wrap Text on the Home tab We can put a line break into the text formula by doing two things: • Put Char(10) between A1 and A2—that is, write the formula = A1&Char(10)&A2 into the cell. Char(10) is the code for a hard line return. • Push Word Wrap on the Home tab. Now you will have a break between the contents of the two cells at the point you entered Char(10) . 35.6 Writing on Multiple Spreadsheets This Excel trick enables you to write in multiple spreadsheets at the same time. First: Hold down [Shift] and indicate several spreadsheet tabs by clicking on them. In the example below we ’ ve clicked on the tabs labeled Spreadsheet1 , Spreadsheet2 , Spreadsheet3 . Now—whatever you write on one sheet will be written on all three. 919 Some Excel Hints Now anything we write in one of the sheets is also written in the same cells of all the others, so that we can produce three identical spreadsheets: 35.7 Moving Multiple Sheets of an Excel Notebook We write on multiple sheets by holding down [Shift] and marking the tabs of the relevant spreadsheets. A similar trick works to move multiple sheets of the same Excel notebook: • Mark the multiple sheets by holding down [Shift] and clicking on the appro- priate sheets. • Now use Edit|Move or copy sheet to move or copy the sheets to another location on the same spreadsheet or to a different spreadsheet. 920 Chapter 35 35.8 Text Functions in Excel The Text function lets you change numbers to text. Here are some examples: 1 2 3456789 10C B A Income 15,000 Tax rate 35% Taxes owed 5,250 <-- =B3*B2 Tax rate as text 35.00% <-- =TEXT(B3,\"0.00%\") 0.4 <-- =TEXT(B3,\"0.0\") Income as date Jan. 24, 1941 <-- =TEXT(B2,\"mmm. dd, yyyy\")TEXT FUNCTIONS Note that you can choose different ways of formatting the cell B3 in text form—in cell B7 we have formatted the tax rate as a percentage with two decimal points, whereas in cell B8 we have formatted the tax rate as one decimal, causing it to be rounded off. Note also the somewhat stupid example in cell B10: Since dates in Excel are just numbers that express the number of days from 1 January 1900, we can express the income of $15,000 in cell B2 as a date. In the next section we use text functions to create chart titles that update themselves. 35.9 Chart Titles That Update You want to have the chart title change when a parameter on the spreadsheet changes. For example, in the next spreadsheet, you want the chart title to indicate the growth rate. 921 Some Excel Hints 1 2 3456789 10111213141516171819 20 2122ABCDEFGH I Growth 15% Year Cash flow 1 100.002 115.00 <-- =B5*(1+$B$2)3 132.25 <-- =B6*(1+$B$2)4 152.095 174.90 Cash Flow Growth Rate = 15.0%CHART TITLES THAT UPDATE AUTOMATICALLY Chart title below contains the text function =\"Cash Flow Growth Rate = \"&TEXT(B2,\"0.0%\")050100150200 12345Cash ﬂow YearCash Flow Growth Rate = 15.0% Once we have completed the necessary steps, changing the growth rate will change both the graph and its title: 922 Chapter 35 To make graph titles update automatically, carry out the following steps: • Create the graph you want in the format you want it. Give the graph a “proxy title.” (It makes no difference what; you ’ re going to eliminate it soon.) At this stage your graph might look like: 1 2 3456789 10111213141516171819ABCDEFGH I Growth 5% Year Cash flow 1 100.002 105.00 <-- =B5*(1+$B$2)3 110.25 <-- =B6*(1+$B$2)4 115.765 121.55CHART TITLES THAT UPDATE AUTOMATICALLY 050100150 12345Cash ﬂow YearCash Flow Growth Rate = 5.0% 923 Some Excel Hints 1 2 3 4 56 7 8 9 10 11 12 13 14 1516 17 1819 20 21 22ABCDEFGH I Growth 12% Year Cash flow 11 0 0 . 0 0 2 112.00 <-- =B5*(1+$B$2) 31 2 5 . 4 4 41 4 0 . 4 9 51 5 7 . 3 5 61 7 6 . 2 371 9 7 . 3 8 Cash Flow Graph When Growth = 12.0%CHART TITLES THAT UPDATE AUTOMATICALLY Chart title below contains text function =\"Cash Flow Graph When Growth = \"&TEXT(B2,\"0.0%\")asdfasdf 050100150200250 1234567 YearCash flow • Create the title you want in a cell. In the example above, cell D22 contains the formula: = “Cash Flow Graph When Growth = “ &TEXT(B2,”0.0% ”) • Click on the graph title to mark it, and then go to the formula bar and insert an equal sign to indicate a formula. Then point at cell D22 with the formula and click [Enter]. In the picture below, you see the chart title highlighted and in the formula bar “ = Changing graph titles!$D$22” indicating the title of the graph. 924 Chapter 35 35.10 Putting Greek Symbols in Cells How do we type Greek letters in a spreadsheet? 1 2 34 5AB Initial stock price 30 Mean, 15% Standard deviation, 20% Delta, t 0.004GREEK AND SYMBOLS IN CELLS μ Δσ This is fairly simple, if you know the Greek equivalents for the Greek letters (for example, μ and σ are lowercase “m” and “s,” respectively, Σ and Δ are uppercase “S” and “D”). For example, we first typed “Delta, Dt” into cell A5 and then marked the “D” in the formula bar: 925 Some Excel Hints We then changed the font from Arial to Symbol: Pressing [Enter] produces the desired result. 35.11 Superscripts and Subscripts It is not a problem to type subscripts or superscripts in Excel. Enter text into a cell, and then mark the letters you want to turn into a subscript or superscript: Now go to Format Cells and check the Superscript box: 926 Chapter 35 Here ’ s the result: 1 2 3 4AB x2 x2 iCannot put superscript and subscript one above the othe rSUPERSCRIPTS/SUBSCRIPTS IN CELLS As you can see in cell A4 above, you cannot put a subscript and a superscript on the same letter. That is, you cannot create xi2 . 35.12 Named Cells It is sometimes useful to give a name to a cell. Here ’ s an example: 927 Some Excel Hints 1 2 34AB C Income 15,000Tax rate 33%Tax paid 4,950 <-- =B3*B2NAMED CELLS We want to refer to cell B3 by the name “tax.” To do this, we mark the cell and then go to the name tab on the toolbar: Typing in the word “tax” on the highlighted B3 allows us to reference B3 by this name anywhere in the Excel notebook: 1 2 34AB C Income 15,000Tax rate 33%Tax paid 4,950 <-- =tax*B2NAMED CELLS Sometimes Excel lets us use cell names without ever actually going through the procedure just described. In the next example, Excel lets us use the column headers as cell names: 7 89AB C D Sales Margin Profit 1000 20% 200 <-- =Sales*Margin 5000 30% 1500 <-- =Sales*Margin To manage the named cells, go to the Name Manager on the Formulas tab: 928 Chapter 35 35.13 Hiding Cells (in Data Tables and Other Places) In this text, we have often hidden the cell contents of data table headers. Here ’ s a simple data table (this topic is discussed in detail in Chapter 31): 1 2 3 4 56 7 89 101112 13 141516D C B A Payment 100 Number of payments 15 Discount rate 15% Present value $584.74 <-- =PV(B4,B3,-B2) PV of payments Data table 584.74 <-- =B5 , data table header 0% 1,500.00 3% 1,193.79 6% 971.22 9% 806.07 12% 681.09 15% 584.74 18% 509.16 21% 448.90HIDING CELLS The data table header in cell C8 is necessary for the table to work, but it is ugly and may be confusing if the table is copied into other documents. To hide the contents of C8, mark the cell and go to the Format Cells menu (or click on the right mouse button): 929 Some Excel Hints In the Number|Custom|Type box we have put in a semicolon. This pre- serves the cell contents but prevents them from being seen. Now when you copy the cells, this is the way they will appear: 7 8 9 10111213 14 1516D C B PV of payments <-- =B5 , data table header 0% 1,500.00 3% 1,193.79 6% 971.22 9% 806.07 12% 681.09 15% 584.74 18% 509.16 21% 448.90 930 Chapter 35 Note the comment in cell D8: We advise you always to annotate your spreadsheet, so that when you come back to it after a few weeks/months, you will know that cell C8 really does have something in it! One final note: To hide a cell which contains a reference to another cell containing a formula, three semicolons (;;; ) may be necessary. In the spread-sheet below, cell B4 contains the function IF . Cell B6 refers to this cell. To hide B6, we use three semicolons instead of one in the Format Cells|Number|Custom|Type. (If there ’ s logic here, it escapes us!) 1 234 5 6AB C 3 3 a 8 bc bbb <-- =IF(B2+B3<15,\"aaa\",\"bbb\") Cell to be hidden --> <-- =B4HIDING A CELL WHICH REFERS TO A FORMULA 35.14 Formula Auditing Excel can tell you where you ’ ve used a cell in your formulas and which cells a particular formula depends on. Clicking on Tools|Formula Auditing brings up a menu which allows you to do this: 931 Some Excel Hints Here ’ s the result: 1 2 34 5 67 8 9 1011 12 1314 15AB C D E F G Loan principal 10,000 Interest rate 7% Loan term 6 <-- Number of years over which loan is repaid Annual payment 2,097.96 <-- =PMT(B3,B4,-B2) Split payment into: YearPrincipal at beginning of yearPayment at end of year InterestReturn of principal 1 10,000.00 2,097.96 700.00 1,397.96 2 8,602.04 2,097.96 602.14 1,495.823 7,106.23 2,097.96 497.44 1,600.52 4 5,505.70 2,097.96 385.40 1,712.56 5 3,793.15 2,097.96 265.52 1,832.446 1,960.71 2,097.96 137.25 1,960.71 70 .00FLAT PAYMENT SCHEDULES =$B$3*C9 =D9-E9 =C9-F9 932 Chapter 35 In a similar way we can check to see which cells are precedents of a par- ticular cell: 1 2 34 5 6 7 8 9 10 11 1213 14 15AB C D E F G Loan principal 10,000 Interest rate 7% Loan term 6 <-- Number of years over which loan is repaid Annual payment 2,097.96 <-- =PMT(B3,B4,-B2) Split payment into: YearPrincipal at beginning of yearPayment at end of year InterestReturn of principal 1 10,000.00 2,097.96 700.00 1,397.96 2 8,602.04 2,097.96 602.14 1,495.82 3 7,106.23 2,097.96 497.44 1,600.52 4 5,505.70 2,097.96 385.40 1,712.56 5 3,793.15 2,097.96 265.52 1,832.44 6 1,960.71 2,097.96 137.25 1,960.71 7 0.00FLAT PAYMENT SCHEDULES =$B$3*C9 =D9-E9 =C9-F9 Formula auditing can help you implement a general rule of good spreadsheet writing: You should try to avoid cells which don ’ t have either precedents or dependents. 35.15 Formatting Millions as Thousands By using Format Cells|Custom you can change millions into thousands. To see where this is handy, consider the following income statement: 1 2 345678AB Sales 31,235,689 Cost of goods sold 15,250,888 Sales, general, and administrative 2,356,188Interest 1,999,824 Profits before taxes 11,628,789 Taxes 4,418,940 Profits after taxes 7,209,849INCOME STATEMENT 933 Some Excel Hints We want to make the income statement appear in thousands (in other words, instead of 31,235,689 we will see 31,236. Here ’ s how this can be done: In the Type box we have indicated #,###, . The comma at the end indicates that we want Excel to drop the last three digits in the number (and round the number), and the #,### indicates that we want the remaining numbers to appear with a comma. This is merely a formatting change—the actual numbers are not changed: In cell B10 in the output below, we ’ ve multiplied the Sales by 2; the result is 62,471,378. Adding another comma to the Type box (that is, #,###,, ) will drop another three digits. 934 Chapter 35 1 2 345 6 789 10AB C 6 3 2 , 1 3 s e l a S Cost of goods sold 15,251 Sales, general, and administrative 2,356 0 0 0 , 2 t s e r e t n I Profits before taxes 11,629 9 1 4 , 4 s e x a T 0 1 2 , 7 s e x a t r e t f a s t i f o r P The cells retain their values 62,471,378 <-- =B2*2INCOME STATEMENT 35.16 Excel ’ s Personal Notebook: Automating Frequent Procedures Excel ’ s personal notebook allows you to save macros and procedures that only you can access. We give two examples of such procedures: • We explain Excel ’ s Copy as Picture feature and show how to attach this to a macro stored in your personal notebook. This greatly simplifies copying from Excel and pasting into Microsoft Word (all the copy/pastes in this book were made this way). • We explain how to save number formatting in the personal notebook. Using the Copy as Picture Feature of Excel 1 Excel 2010 and 2013 contain a very nice way to copy from Excel as a picture. This is useful for embedding pictures of Excel spreadsheets into Word without a link. Here ’ s the way it works: 1. In Excel indicate the selection you want to copy: 1. This section applies to Excel 2010 and 2013, but not to previous versions. 935 Some Excel Hints 2. On the Home tab go to Copy|Copy as Picture: 3. Indicate As shown when printed : 4. You can now go to Microsoft Word and Copy and Paste. The result: You get a picture without any Excel link. 2 3 45 6ABC D E F s n a e M x i r t a m e c n a i r a v o c - e c n a i r a V 0.2000 -0.0200 0.0250 -0.0080 3% -0.0200 0.3000 0.0600 0.0030 2% 0.0250 0.0600 0.4000 0.0000 8% -0.0080 0.0030 0.0000 0.5000 4% 936 Chapter 35 Automating the Procedure We want to automate this procedure: • Turn it into a macro. • Attach a key sequence (in this case, [Ctrl] + q) to the macro. • Make the macro and key sequence available in all your Excel spreadsheets. To do this, you have to create a Personal.xlsb file. This file is hidden but activates each time you start Excel. It ’ s yours only—other readers of your spreadsheets won ’ t see it. Here are the steps: • Activate the Developer tab on the menu bar. • Use Record Macro to save a macro as a personal notebook. • Edit the personal notebook with what you want. Activate the Developer Tab Go to File|Options|Customize Ribbon and activate the Developer tab as shown below: 937 Some Excel Hints 938 Chapter 35 Use Record Macro The Developer tab allows you to record a macro and save it as part of the Personal.xlsb notebook. We will illustrate with the copy as picture feature. 1. Open a blank Excel notebook and click on the Developer tab and then on Record Macro : Excel will ask for details of the recording. Here ’ s what I wrote. Note that I ’ m saving this as a Personal Macro Workbook and that I ’ m using the shortcut keystrokes [Ctrl] + q: 2. Now go to the Home tab, mark an area of the spreadsheet, and go through the whole Copy as Picture feature: 939 Some Excel Hints 3. Go back to the Developer tab and stop the recording: 4. Close down Excel. Excel will ask you if you want to save the Personal notebook. The answer is, of course, positive: 940 Chapter 35 This creates the following file (“simon benninga” is of course my user name on my computer—you will substitute your user name): C:\\Users\\simonbenninga\\AppData\\Roaming\\Microsoft\\Excel\\XLSTART\\ PERSONAL.XLSB Edit the Personal Notebook Now that you ’ ve saved the Personal.xlsb file, you may want to edit it. Open any Excel file, hit [Alt] + [F11] to go the VBA editor. Note that the Personal file is also there: Range(“C3:G10”) : Sub Macro1() ‘ ‘ Macro1 Macro ‘ Copy as picture ‘ ‘ Keyboard Shortcut: Ctrl + q Selection.CopyPicture Appearance: = xlPrinter, _ Format: = xlPicture End Sub We have edited this by deleting the line Range(“C3:G10”).Select . The resulting macro is given below. 941 Some Excel Hints Using the Macro From now on, whenever you open a file on your computer , you can use [Ctrl] + q to copy a region as a picture. Note that this feature works only on your computer—it ’ s in your personal notebook. Quick Number Formatting We often want to format numbers with comma separators and without deci-mals. For example: 1 2AB 1356.001 1987.398 3387.3 4458.98 To make the formatting of these numbers uniform: • Mark the numbers. • Go to the appropriate formatting command and then press [Enter]. 942 Chapter 35 The result: 1 2AB 1,356 1,9873,387 4,459 By using the same routine as for Copy and Paste as Picture above, we can generate a macro in our personal notebook. We have assigned [Ctrl] + w to this macro: Sub Commas() ‘ Commas Macro ‘ Keyboard Shortcut: Ctrl + w Selection.NumberFormat = “#,##0” End Sub VISUAL BASIC FOR APPLICATIONS (VBA) Visual Basic for Applications (VBA) is the programming language attached to Excel. VBA is very functional and flexible. Because of its ready integration with Excel worksheets, VBA is widely used in the financial community. VBA incorporates many features that are part of standard programming languages, and it is not difficult to master if you have some programming experience. You do not need to be proficient in VBA to understand Sections I–VI of Financial Modeling . These sections can be understood without anything more than the very rudimentary VBA principles incorporated in the preface to this book (or alternatively in the small file called “Adding Getformula to your Spreadsheet” that is part of the disk that comes with the book). The four chapters of this section cover Visual Basic for Applications (VBA) topics for the reader interested in developing his or her own programs. Chapter 36 shows how to write functions that can be added in to Excel spreadsheets. Financial Modeling uses many of these “homemade” functions. Examples are the two-stage Gordon model (Chapter 3), Black-Scholes pricing of options (Chapter 17), and derivation of the Nelson-Siegel term structure (Chapter 22). Chapter 37 discusses more advanced topics related to variables and arrays in VBA. We have used this topic in fixing the bugs in Excel ’ s XNPV and XIRR functions (Chapter 1). Chapter 38 shows how to build subroutines in VBA. A subroutine is not a function, but rather an automation of some repeti-tive action. Financial Modeling uses subroutines in a number of places—for example, in computing the efficient frontier without short sales (Chapter 12). Finally, Chapter 39 discusses objects and add-ins. Among other topics dis- cussed in this chapter is the creation of user-defined add-ins in Excel. VII 3 6 User-Defined Functions with VBA 36.1 Overview Chapters 36–39 discuss the uses of Excel ’ s programming language, Visual Basic for Applications (VBA). VBA provides a complete programming lan-guage and environment fully integrated with Excel and all other Microsoft Office applications. In this chapter we introduce user-defined functions, which are used in various places in this book. The examples and screen shots depict the Excel 2013 working environment but are fully compatible (unless otherwise noted) with all versions of Excel using Visual Basic for Applications (Version 5 and above). 36.2 Using the VBA Editor to Build a User-Defined Function Throughout this book we have used VBA to define functions that are not included in Excel. One example is the function Getformula that is attached to all the spreadsheets in this book; another example is the function that com-putes the Black-Scholes option value (Chapter 17). In this section we show you how to build a user-defined function. A user function is a saved list of instructions for Excel that produces a value. Once defined, a user function can be used inside an Excel worksheet like any other function. 1 1. User-defined functions are usually attached to a specific workbook and are only available if that workbook is currently open in Excel. If you want a macro to be available whenever you use Excel on a specific computer save it in the Personal Macro Workbook ; see Chapter 35, section16. Another way of having access to a VBA function across worksheets is to put it in an add-in; see Chapter 39 for an introduction to add-ins in Excel. 946 Chapter 36 In this section we will write our first user-defined function. Before you can do this, you need to activate the VBA editor. You can do this either by using the keyboard shortcut [Alt] + F11 or from the Excel ribbon ( Developer Tab|Visual Basic Editor ). By default, Excel doesn ’ t display the Developer tab on the Excel ribbon. To show the Developer tab, go to File|Options| Customize the Ribbon and indicate Developer : 947 User-Defined Functions with VBA The result in both cases is a new window like the following screen shot (your window may look slightly different, but it will be functionally equivalent). 948 Chapter 36 We are now ready to write our first function. This function (named “ plus ”) will add together two numbers. A user-defined function in Excel has three obligatory elements: 1. A header line with the name of the function and a list of parameters. 2. A closing line (usually inserted by VBA). 3. Some program lines between the header and the closing line. Start writing the first line of the function: function plus (parameter1,parameter2) A user-defined function needs to be written in a module. To open a new module, select Insert|Module from the menu in the VBA editor environment. This will open a new window, as illustrated in the next screen shot: 949 User-Defined Functions with VBA As soon as you end the line with a tap on the Enter key, VBA will do a cleanup job. The color of all the words that VBA recognizes as part of its programming language (“reserved words”) will change. All reserved words will be capitalized. A space will be added after the comma separating the first parameter from the second parameter. The closing line for the function will be inserted, and the cursor will be in position between the header and the closing line ready for you to go on typing. 950 Chapter 36 Function plus(parameter1, parameter2) plus = parameter1 + parameter2 End Function We are now ready to type our function line. This is the line that makes our function do something. 2 Our first function will take two variables and return their sum: 2. The indentation of lines in VBA code, which we added manually, is not required by VBA but makes reading the code much easier. You can now use this function in your spreadsheet: 1 2 34AB C Parameter1 3.25 Parameter2 1.5Plus 4.75 <-- =plus(B2,B3)PLUS IN ACTION 951 User-Defined Functions with VBA The fastest way to insert a function (assuming you know its name) is to start typing the name. When the suggested list of names narrows down, select the appropriate function name from the list: 952 Chapter 36 You can also use the function in the Excel Function Wizard. Clicking on this icon on the toolbar will produce the following screen: 953 User-Defined Functions with VBA Selecting User Defined from the pull-down menu will present the following screen listing all user-defined functions; one of them should be the function we have just added, plus : 954 Chapter 36 When you select plus and click OK, you will see that Excel treats this like any other function, bringing up a dialogue box that asks for the location or value of parameter1 and parameter2 : Notice that at this point there is no explanation or help for the function. The next section provides part of the remedy. 955 User-Defined Functions with VBA 36.3 Providing Help for User-Defined Functions in the Function Wizard Excel ’ s Function Wizard (shown below) provides a short help line (an explana- tion of what the function does). Here ’ s how Excel explains its own functions in the Function Wizard: 956 Chapter 36 Click in the Macro name box, and type the name of the function (notice that you don ’ t see the function name in the macro dialogue box above … you have to type it in): To attach a text description to our function, activate the macro selection box. You can do this either from the Excel ribbon ( Developer|Macros ) or by using the keyboard shortcut [Alt] + F8. 957 User-Defined Functions with VBA Click on the Options button: 958 Chapter 36 Type the description in the Description box. Click OK , and close the macro selection box. Our function now has a help line. Excel functions have help lines attached to each of the parameters and a help file entry. We can supply the same for our function; sadly, the subject is beyond the scope of this introduction. 36.4 Saving Excel Workbook with VBA Content At some point in the process, you need to save your work. 3 Starting with Excel 2007, an Excel workbook with VBA content has to be saved as a “macro-enabled file.” When you first try to save a workbook with VBA content, Excel will present you with the following message: 3. We suggest soon and often. 959 User-Defined Functions with VBA You should choose No and get the Save As dialog to enable you to choose a new file type. 960 Chapter 36 Now open the circled selection, select the second option, xlsm , and save the workbook. If you use VBA often, then you might consider changing the default Excel file type to xlsm . 4 36.5 Fixing Mistakes in VBA Once you start using VBA, you ’ re sure to make mistakes. In this section we illustrate several typical mistakes and help you correct them. This list is not meant to be exhaustive—we have selected mistakes typically made by VBA beginners. Mistake 1: Using the Wrong Syntax Suppose that in writing Plus you forget the “ + ” between parameter1 and parameter2 (recall that the function is supposed to return parameter1 + parameter2 ). Once you hit the Enter key, you get the following error message: 4. The command is File|Options|Save|Save files in this format . Clicking the OK button corrects this problem. 961 User-Defined Functions with VBA Mistake 2: Right Syntax with a Typing Error It ’ s easy to make typing errors that will only be detected once you try to use the function. In the example below, we define two functions— function1 and function2 . Unfortunately, the program line for function2 mistakenly calls the function “function1”: The VBA editor does not immediately recognize this mistake. The mistake will pop up when you try to use the function in a worksheet. Excel will notify you that you ’ ve made a mistake and take you to the VBA editor: If you recognize your mistake, you can correct it. You can also try to go to the VBA help by clicking Help (in many cases this will lead to an incompre- hensibly complicated explanation). 962 Chapter 36 Suppose you recognize your mistake. You click OK , and get ready to correct the error by replacing the word “Function1” with “Function2.” At this point your screen looks like this: Notice: A. The word [break] in the title bar. B. The offending symbol is selected. C. The function line is highlighted and pointed to by an arrow in the margin. Because VBA found an error while trying to execute the function, it moved into a special execution mode called debug-break mode. For now all we need to do is get out of this special mode so we can get on with our work. We do this by clicking the icon on the VBA toolbar. Now you can fix the function and use it. We can (and should) have VBA check the module for errors before trying to use the functions in the module. From the VBA menu we select Debug|Compile VBAproject ; this will find the first error in the module and point it out as before but without going into debug-break mode. 963 User-Defined Functions with VBA 36.6 Conditional Execution: Using If Statements in VBA Functions In this section we explore the If statements available to you in VBA. Not all things in life are linear, and sometimes decisions have to be made. If state- ments are one way of doing this in VBA The One-Line If Statement The one-line If statement is the simplest way to control the execution of a VBA function: One statement is executed if a condition is true and another is executed if a condition is not true. The complete condition and its statement should be on one line. Here ’ s an example: Function OneLineIf(Parameter) If Parameter > 5 Then OneLineIf = 1 Else OneLineIf = 15 End Function We can now use the function OneLineIf in Excel. When Parameter is > 5, OneLineIf returns 1 and when Parameter is < 5, OneLineIf returns 15. 1 2 3 4AB C Parameter 12 1 <-- =OneLineIf(A3) 3 15 <-- =OneLineIf(A4)ONELINEIF IN ACTION The one-line If statement doesn ’ t even need the Else part. The function below, OneLineIf2 , returns 0 if the condition “Parameter > 5” is not fulfilled: Function OneLineIf2(Parameter) If Parameter > 5 Then OneLineIf = 1 End Function 964 Chapter 36 Good Programming Practice: Assign a Value to Your Function First In the above functions, it would be good programming practice to first assign a value to the function before introducing the If statement. This way we know that OneLineIf3 defaults to − 16 if the condition on Parameter is not fulfilled. 6 7 89AB C Parameter 12 1 <-- =OneLineIf2(A8) 3 0 <-- =OneLineIf2(A9)ONELINEIF2 IN ACTION Function OneLineIf3(Parameter) OneLineIf3 = -16 If Parameter > 5 Then OneLineIf3 = 1 End Function To see the difference this makes, look at the spreadsheet below: 11 12 1314AB C Parameter 12 1 <-- =OneLineIf3(A13) 3 -16 <-- =OneLineIf3(A14)ONELINEIF3 IN ACTION If … ElseIf Statements If more than one statement is to be conditionally executed, the block If… ElseIf statement can be used. It uses the following syntax: If Condition0 Then Statements ElseIf Condition1 Then Statements 965 User-Defined Functions with VBA [… More ElseIfs …] Else Statements End If The Else and ElseIf clauses are both optional. You may have as many ElseIf clauses as you want following an If, but none can appear after an Else clause. If statements can be contained within one another. Here ’ s an example: Function BlockIf(Parameter) If Parameter < 0 Then BlockIf = -1 ElseIf Parameter = 0 Then BlockIf = 0 Else BlockIf = 1 End If End Function Here ’ s how this function works in Excel: 23 24 252627AB C Parameter -3 -1 <-- =BlockIf(A25) 0 0 <-- =BlockIf(A26) 13 1 <-- =BlockIf(A27)BLOCKIF IN ACTION Nested If Structures As stated in the previous section, If statements can be used as part of the statements used in another If statement. A program structure that has some If statements inside others is called a nested If structure. Each If statement in the structure must be a complete If statement. Either the one-line or the block version can be used. 966 Chapter 36 The following function demonstrates the use of the NestedIf structure: Function NestedIf(P1, P2) If P1 > 10 Then If P2 > 5 Then NestedIf = 1 Else NestedIf = 2 ElseIf P1 < -10 Then If P2 > 5 Then NestedIf = 3 Else NestedIf = 4 End If Else If P2 > 5 Then If P1 = P2 Then NestedIf = 5 Else NestedIf = 6 Else NestedIf = 7 End If End If End Function This is how it looks in Excel: 30 31 32 33 34 35 3637AB C D 11 6 1 <-- =NestedIf(A31,B31) 22 3 2 <-- =NestedIf(A32,B32) -22 6 3 <-- =NestedIf(A33,B33) -57.3 4 4 <-- =NestedIf(A34,B34) 66 5 <-- =NestedIf(A35,B35) -5 7 6 <-- =NestedIf(A36,B36) 43 7 <-- =NestedIf(A37,B37)NESTEDIF IN ACTION 967 User-Defined Functions with VBA 36.7 The Boolean and Comparison Operators The expressions used as conditions in an If statement are also known as Boolean expressions. Boolean expressions can have one of two values: TRUE when the condition holds, and FALSE when the condition is violated. Usually Boolean expressions are constructed using the Comparison and/or Boolean operators. The following is a list of the most common Comparison operators. Operator Meaning < Less than < = Less than or equal to > Greater than > = Greater than or equal to = Equal to < > Not equal to The And Boolean Operator The next function uses a Boolean operator to check whether two conditions hold at the same time. Function AndDemo(parameter1, parameter2) If (parameter1 < 10) And (parameter2 > 15) _ Then AndDemo = 3 Else AndDemo = 12 End If End Function 968 Chapter 36 Here are some illustrations: 1 2 34 5 6AB C D parameter1 parameter2 9 14 12 <-- =AndDemo(A3,B3) 9 16 3 <-- =AndDemo(A4,B4) 11 14 12 <-- =AndDemo(A5,B5)11 16 12 <-- =AndDemo(A6,B6)ANDDEMO IN ACTION Notice what AndDemo does: It checks both conditions (parameter1 < 10) and (parameter2 > 15). If both conditions hold, then the combined conditions hold and the function returns a value of 3. Otherwise (i.e., if either one of the conditions is violated) it returns 12. (Note that both conditions are in parentheses.) The following function and screen shot demonstrate all four possible com- binations of two conditions and the resulting combined condition: Function AndTable(parameter1, parameter2) AndDemoTable = parameter1 And parameter2 End Function 1 2 3456AB C D parameter1 parameter2 9 14 12 <-- =AndDemo(A3,B3) 9 16 3 <-- =AndDemo(A4,B4) 11 14 12 <-- =AndDemo(A5,B5) 11 16 12 <-- =AndDemo(A6,B6)ANDDEMO IN ACTION 969 User-Defined Functions with VBA The Or Boolean Operator The function OrDemo , illustrated below, checks whether at least one of two conditions holds: Function OrDemo(parameter1, parameter2) If (parameter1 < 10) Or (parameter2 > 15) _ Then OrDemo = 3 Else OrDemo = 12 End If End Function Notice what OrDemo does: It checks whether either the first condition (Parameter1 < 10) or the second condition (Parameter2 > 15) or both conditions hold. Only if both conditions are violated will the function return a value of 12. Otherwise (i.e., if either one or both of the conditions hold) it returns 3. (Note that both conditions are in parentheses.) The following function and the screen shot demonstrate all four possible combinations of two conditions and the resulting combined condition: 18 19 2021 22 23AB C D parameter1 parameter2 9 14 3 <-- =OrDemo(A20,B20) 9 16 3 <-- =OrDemo(A21,B21) 11 14 12 <-- =OrDemo(A22,B22)11 16 3 <-- =OrDemo(A23,B23)ORDEMO IN ACTION Function OrDemoTable(parameter1, parameter2) OrDemoTable = parameter1 Or parameter2 End Function 970 Chapter 36 36.8 Loops Looping structures are used when you need to do something repeatedly. As always there is more than one way to achieve the desired effect. In general there are two major looping constructs: • A top-checking loop : The loop condition is checked before anything else gets done. The something to be done can be left undone if the condition is not fulfilled on entry to the loop. • A bottom-checking loop : The loop condition is checked after the something to be done is done. The something to be done will always be done at least once. VBA has the two major looping structures covered from all possible angles by the Do statement and its variations. All the following subsections will use a version of the factorial function for demonstration purposes. The function used is defined as: fff f f n n f n() () ( ) () ( ) ( )01 11 22 12 1 === ∗ = = ∗ − … 1 2 3 456AB C D parameter1 parameter2 FALSE FALSE FALSE <-- =ORDemoTable(A3,B3)FALSE TRUE TRUE <-- =ORDemoTable(A4,B4) TRUE FALSE TRUE <-- =ORDemoTable(A5,B5) TRUE TRUE TRUE <-- =ORDemoTable(A6,B6)ORTABLE IN ACTION 971 User-Defined Functions with VBA Function DoWhileDemo(N) If N < 2 Then DoWhileDemo = 1 Else i = 1 j = 1 Do While i < = N j = j * i i = i + 1 Loop DoWhileDemo = j End If End Function 1 2 3 4AB C 5 120 <-- =DoWhileDemo(A2) 9 362880 <-- =DoWhileDemo(A3) 13 6227020800 <-- =DoWhileDemo(A4)DOWHILEDEMO IN ACTION The Do While Statement The Do While statement is a member of the top-checking loops family. It makes VBA execute one or more statements zero or more times, while a condition is true. The following function demonstrates this behavior: 972 Chapter 36 The Do … Loop While Statement The Do … Loop While statement is a member of the bottom-checking loops family. It makes VBA execute one or more statements one or more times, while a condition is true. The following function demonstrates this behavior: Function DoLoopWhileDemo(N) If N < 2 Then DoLoopWhileDemo = 1 Else i = 1 j = 1 Do j = j * i i = i + 1 Loop While i < = N DoLoopWhileDemo = j End If End Function 1 2 34C B A 5 120 <-- =DoLoopWhileDemo(A2) 9 362880 <-- =DoLoopWhileDemo(A3) 13 6227020800 <-- =DoLoopWhileDemo(A4)DOLOOPWHILEDEMO IN ACTION 973 User-Defined Functions with VBA The Do Until Statement The Do Until statement is a member of the top-checking loops family. It makes VBA execute one or more statements zero or more times, until a condi- tion is met. The following function demonstrates this behavior: Function DoUntilDemo(N) If N < 2 Then DoUntilDemo = 1 Else i = 1 j = 1 Do Until i > N j = j * i i = i + 1 Loop DoUntilDemo = j End If End Function 1 2 34AB C 5 120 <-- =DoUntilDemo(A2) 9 362880 <-- =DoUntilDemo(A3) 13 6227020800 <-- =DoUntilDemo(A4)DOUNTILDEMO IN ACTION 974 Chapter 36 The Do … Loop Until Statement The Do … Loop Until statement is a member of the bottom-checking loops family. It makes VBA execute one or more statements one or more times, until a condition becomes true. The following function demonstrates this behavior: Function DoLoopUntilDemo(N) If N < 2 Then DoLoopUntilDemo = 1 Else i = 1 j = 1 Do j = j * i i = i + 1 Loop Until i > N DoLoopUntilDemo = j End If End Function 1 2 34C B A 5 120 <-- =DoLoopUntilDemo(A2) 9 362880 <-- =DoLoopUntilDemo(A3) 13 6227020800 <-- =DoLoopUntilDemo(A4)DOLOOPUNTILDEMO IN ACTION 975 User-Defined Functions with VBA The For Loop One last (for now) variation on the loopy theme, the For loop, is used mainly for loops where the number of times the action is repeated is known in advance. The following functions demonstrate its use and variations: Function ForDemo1(N) If N < = 1 Then ForDemo1 = 1 Else j = 1 For i = 1 To N Step 1 j = j * i Next i ForDemo1 = j End If End Function The Step part of the statement can be dropped if (as is in our case) the increment is 1. For example: 1 2 34AB C 5 120 <-- =ForDemo1(A2) 9 362880 <-- =ForDemo1(A3) 13 6227020800 <-- =ForDemo1(A4)FORDEMO1 IN ACTION For i = 1 To N j = j * i Next i 976 Chapter 36 If you want the loop to count down, the Step argument can be negative, as demonstrated in the next function: Function ForDemo2(N) If N < = 1 Then ForDemo2 = 1 Else j = 1 For i = N To 1 Step -1 j = j * i Next i ForDemo2 = j End If End Function The For loop can be exited early by using the Exit For statement as demon- strated in the next function (not the factorial function). 1 2 34AB C 5 120 <-- =ForDemo2(A2) 9 362880 <-- =ForDemo2(A3) 13 6227020800 <-- =ForDemo2(A4)FORDEMO2 IN ACTION Function ExitForDemo(Parameter1, Parameter2) Sum = 0 For i = 1 To Parameter1 Sum = Sum + i If Sum > Parameter2 Then Exit For Next i ExitForDemo = Sum End Function 977 User-Defined Functions with VBA 36.9 Using Excel Functions in VBA VBA can use most of Excel ’ s worksheet functions. We illustrate by showing how to define the binomial distribution (even though this, itself, is an Excel function). The probability distribution of a binomial random variable is defined as Binom p n xn xpp x nx,,() =⎛ ⎝⎜⎞⎠⎟ − ()−1 where p is the probability of success; x is the number of successes, and n is the number of trials. n xn nx x⎛ ⎝⎜⎞⎠⎟=− ()! !! is the binomial coefficient, which gives the number of ways of choosing x elements from among n elements. For example, suppose you want to form a two-person team from eight candidates and you want to know how many possible teams can be formed. The answer is given by 8 28 6287654321 654321 2128⎛ ⎝⎜⎞⎠⎟==⋅⋅⋅⋅⋅⋅⋅ ⋅⋅⋅⋅⋅∗⋅=! !! . The Excel function Combin (8, 2) does this calculation. We use this Excel function in the following VBA function: 1 2 3 4 5 6AB C D Parameter1 Parameter2 5 22 15 <-- =ExitForDemo(A3,B3) 6 22 21 <-- =ExitForDemo(A4,B4) 7 22 28 <-- =ExitForDemo(A5,B5) 8 22 28 <-- =ExitForDemo(A6,B6)EXITFORDEMO IN ACTION Function Binomial(p, n, x) Binomial = Application.WorksheetFunction. _ Combin(n, x) * p ∧ x * (1 - p) ∧ (n - x) End Function 978 Chapter 36 As usual, this can be applied inside a spreadsheet: 1 2 3 4 5C B A p0 .5 n1 0 x6 Binomial 0.20507813 <-- =Binomial(B2,B3,B4) BINOMIAL IN ACTION Note that we used Application.WorksheetFunction.Combin(n, x) to compute n x⎛ ⎝⎜⎞⎠⎟ in our function. As you might guess from its name ( Application. WorksheetFunction.Something ), this function is the Excel Worksheet func- tion Combin( ) . Most, but not all, 5 Excel worksheet functions can be used in VBA in exactly the same way. For a complete list see the Help file. One more thing to notice is the underscore (_) preceded by a space at the end of line 2. If a line gets too long to deal with, it can be continued on the next line using this contraption (the second and third lines of Binomial are one line as far as VBA is concerned). 6 Suppose we try to use our Binomial function to calculate Binomial (0.5,10,15) . This won ’ t work: 1 2 34 5C B A p0 .5 n1 0 x1 5 Binomial #VALUE! <-- =Binomial(B2,B3,B4) BINOMIAL IN ACTION 5. When an equivalent function is available as a native VBA function, the corresponding Excel function is not available in VBA. For example, in VBA use rnd( ) and not Application. WorksheetFunction.Rand() and sqr( ) and not Application.WorksheetFunction.Sqrt( ) . 6. What ’ s too long? This is a matter of programming taste, but for our purposes any line over 70–80 characters is considered too long 979 User-Defined Functions with VBA The reason for the problem is that in the computation n x⎛ ⎝⎜⎞⎠⎟ used in Binomial , we have to have x < n . In this case, VBA causes Excel to return the error message #V ALUE! . The subject of Excel error values is somewhat obscure and is discussed in the Appendix to this chapter. 36.10 Using User-Defined Functions in User-Defined Functions User-defined functions can be used in other user-defined functions, just like Excel functions. The next function is a replacement for the COMBIN worksheet function. COMBIN is defined as cnxn nx x,! !!() =−() where ! stands for the factorial function. (Recall that the factorial function n! is defined for any n > 0: 0! = 1, and for n > 0, n! = n *( n − 1)*( n − 2) … 1.) We will now write our VBA version of the two functions: the factorial func- tion and the COMBIN function. 1 Function HomeFactorial(n) 2 If Int(n) < > n Then 3 HomeFactorial = CVErr(xlErrValue) 4 ElseIf n < 0 Then 5 HomeFactorial = CVErr(xlErrNum) 6 ElseIf n = 0 Then 7 HomeFactorial = 1 8 Else 9 HomeFactorial = HomeFactorial(n - 1) * n 10 End If 11 End Function Line 2 checks if the input is an integer by comparing the integer part of “n” to “n.” The function “Int” is a part of VBA. If we have erred, for example, by 980 Chapter 36 asking for HomeFactorial(3.3) , then line 3 of the program will cause Excel to return #V ALUE! . Similarly, lines 4 and 5 check if we have improperly asked for HomeFactorial of a negative number; if this is the case, then line 5 causes Excel to return #NUM! . For a fuller explanation of the use of error values, see the Appendix to this chapter. Line 9 introduces a new concept; the function uses itself to calculate the value it should return. This is called recursion. Here ’ s an illustration of the function in action: 1 2 3 4 5 6AB C D E 1 1 <-- 1 1 <-- =HomeFactorial(A2) 2 2 <-- =B2*A3 2 <-- =HomeFactorial(A3) 3 6 <-- =B3*A4 6 <-- =HomeFactorial(A4)4 24 <-- =B4*A5 24 <-- =HomeFactorial(A5) 5 120 <-- =B5*A6 120 <-- =HomeFactorial(A6) RECURSION IN ACTION We can now use HomeFactorial to create our VBA version of Combin (which we will call HomeCombin ): Function HomeCombin(n, x) HomeCombin = HomeFactorial(n) / _ (HomeFactorial(n - x) * HomeFactorial(x)) End Function 981 User-Defined Functions with VBA Finally, we can use HomeCombin to create a VBA version of the binomial function: Function HomeBinom(p, n, x) If n < 0 Then HomeBinom = CVErr(xlErrValue) ‘Make the function ‘return #VALUE! ElseIf x > n Or x < 0 Then HomeBinom = CVErr(xlErrNum) ‘Make the function ‘return #NUM! Else HomeBinom = HomeCombin(n, x) _ * p ∧ x * p ∧ (n - x) End If End Function Putting Comments in VBA Code As illustrated above, VBA will ignore anything on a line which follows an apostrophe (note that each new line of comments has to begin with an apostrophe. Exercises 1. Write a VBA function for f ( x ) = x 2 − 3. 1 2 34 5 6AB C Exercise 1 X 1 -2 <-- =Exercise1(A4) 2 1 <-- =Exercise1(A5) 3 6 <-- =Exercise1(A6) 982 Chapter 36 2. Write a VBA function for fx x x()=+ 222 . Note that there are two ways to do this: The first is to use the VBA function Sqr . The second is to use the VBA operator “ ∧ ”. We suggest you try both. 8 9 10 11 12 1314AB C Exercise 2 X Exercise2 1 3.414213562 <-- =Exercise2(A10) 2 6.828427125 <-- =Exercise2(A10) 1 3.414213562 <-- =Exercise2a(A12)2 6.828427125 <-- =Exercise2a(A13) 3. Suppose a share was priced at price P 0 at time 0, and suppose that at time 1 it will be priced P 1 . Then the continuously compounded return is defined as returnP P=⎛ ⎝⎜⎞⎠⎟ ln 1 0 . Implement this function in VBA. There are two ways to do this: You can use Worksheetfunction.Ln or the VBA function Log . 18 19 2021222324ABC D Exercise 3 P0 P1 100 110 0.09531018 <-- =Exercise3(A21,B21)100 200 0.693147181 <-- =Exercise3(A22,B22)100 110 0.09531018 <-- =Exercise3a(A23,B23)100 200 0.693147181 <-- =Exercise3a(A24,B24) 4. A bank offers different yearly interest rates to its customers based on the size of the deposit in the following way: • For deposits up to 1,000, the interest rate is 5.5% • For deposits from 1,000 and up to 10,000, the interest rate is 6.3% • For deposits from 10,000 and up to 100,000, the interest rate is 7.3% • For all other deposits the interest rate is 7.8% Implement the function Interest(Deposit) in VBA. Note that you can use the BlockIf structure. 983 User-Defined Functions with VBA 5. Using the function in exercise 4, implement a function NewDFV(Deposit, Years) . The function will return the future value of a deposit with the bank assuming the deposit and accrued interest is reinvested for a given number of years. Thus, for example, NewDFV(10000,10) will return 10000*(1.063) ∧ 10. 1 2 3 4 5 678 9AB C Deposit -1 #VALUE! <-- =Interest(A3) 100 5.50% <-- =Interest(A4) 1100 6.30% <-- =Interest(A5) 9999.99 6.30% <-- =Interest(A6) 10000 6.30% <-- =Interest(A7) 10000.001 7.30% <-- =Interest(A8) 100000.001 7.80% <-- =Interest(A9)Exercise 4 6. An investment company offers a bond linked to the FT100 index. On redemption the bond pays the face value plus the largest of A: the face value times the change in the index. Or B: 5% yearly interest compounded monthly. Thus, for example, 100 invested when the index was 110 and redeemed a year later when the index was 125 will pay A: 100 + 100*(125 − 110)/110 = 113.636 and not B: 100*(1 + 0.05/12) ∧ 12 = 105.116. Implement a VBA function Bond(Deposit, Years, FT0, FT1). 1 2 3 4AB C D Deposit Years 10000 10 18421.82 <-- =NewDFV(A3,B3) 10000.001 10 20230.06 <-- =NewDFV(A4,B4)Exercise 5 64 65 666768697071AB C DE F Exercise 6 Deposit Years FT0 FT1 100 1 110 125 113.636 <-- =Bond(A67,B67,C67,D67)100 1 110 100 105.116 <-- =Bond(A68,B68,C68,D68)100 12 110 125 1,261.394 <-- =Bond(A69,B69,C69,D69)100 12 110 1387.53 1,261.394 <-- =Bond(A70,B70,C70,D70)100 12 110 1387.535 1,261.395 <-- =Bond(A71,B71,C71,D71) 984 Chapter 36 7. Implement a VBA function ChooseBond(Deposit, Years, FT0, FT1). The function will return the value 1 if the superior investment is the bank in exercise 5 or the value 2 if it is the company in exercise 6. 76 77 78 79 80 8182 83 84 85 86AB C D E F Exercise 7 Deposit Years FT0 FT1 100 1 110 125 2 <-- =ChooseBond(A79,B79,C79,D79) 100 1 110 110 1 100 1 110 116.04 1100 1 110 116.05 2 100000 1 110 125 2 <-- =ChooseBond(A83,B83,C83,D83)100000 1 110 110 1 100000 1 110 118.02 1 100000 1 110 118.03 2 8. A bank offers the following saving scheme: Invest a fixed amount on the first of each month for a set number of years. On the first of the month after your last installment, you get your money plus the accrued interest. The bank quotes a yearly interest rate but interest is calculated and compounded on a monthly basis. Eight different interest rates are offered depending on the monthly deposit and the number of years the program is to run. The following table lists the interest rates offered. For sums < = 100 a monthFor sums > 100 a month For a period of 2 years 3.5% 3.9% For a period of 3 years 3.7% 4.5% For a period of 4 years 4.2% 5.1% For a period of 5 years 4.6% 5.6% Write a two-argument function DFV(Deposit, Years) , returning the future value of such an investment. 1 2 3 4 56 7AB C D Deposit Years DFV 10 5 675.7458 <-- =DFV(A3,B3)10 4 523.5107 <-- =DFV(A4,B4) 10 3 381.2934 <-- =DFV(A5,B5)10 2 248.9488 <-- =DFV(A6,B6) 10 1 120 <-- =DFV(A7,B7)Exercise 8 985 User-Defined Functions with VBA 9. Using the information provided in exercise 8 write a two-argument function DEP(DFV , Years) that will return the monthly contribution necessary to get a certain sum in the future (2, 3, 4, or 5 years). Note: This problem is more interesting; remember that the interest rate depends on the monthly contribution. 1 2 345 6 7AB C D DFV Years DEP -100 2 -4.01689 <-- =DEP(A3,B3) 100 2 4.01689 <-- =DEP(A4,B4) 1000 4 19.10181 <-- =DEP(A5,B5) 2499 2 99.96106 <-- =DEP(A6,B6) 2500 2 100.0011 <-- =DEP(A7,B7)Exercise 9 10. Fibonacci numbers are named after Leonardo Fibonacci (1170–1230), an outstanding European mathematician of the medieval period. Fibonacci numbers are defined as follows: F FFF FFF FFF F()() ()00 11 201 131 2 242 3= = ()=+ ()= ()=()+()= ()=()+()= =3 … In general Fn Fn Fn()=−() +−() 21 . Write a recursive VBA function that computes the n th number in the Fibonacci series. 1 2 3 4 5 6 7 8 9 10AB C n Fibonacci 0 0 <-- =Fibonacci(A3) 1 1 <-- =Fibonacci(A4) 2 1 <-- =Fibonacci(A5) 3 2 <-- =Fibonacci(A6) 4 3 <-- =Fibonacci(A7) 5 5 <-- =Fibonacci(A8) 6 8 <-- =Fibonacci(A9) 7 13 <-- =Fibonacci(A10)Exercise 10 986 Chapter 36 11. Write a VBA function that computes the n th number in the Fibonacci series; do not use recursion. 1 2 3 4 5 6 7 8 9 10AB C n LoopFibonacci 0 0 <-- =LoopFibonacci(A3) 1 1 <-- =LoopFibonacci(A4) 2 1 <-- =LoopFibonacci(A5) 3 2 <-- =LoopFibonacci(A6) 4 3 <-- =LoopFibonacci(A7) 5 5 <-- =LoopFibonacci(A8) 6 8 <-- =LoopFibonacci(A9) 7 13 <-- =LoopFibonacci(A10)Exercise 11 Appendix: Cell Errors in Excel and VBA Excel uses a special kind of value to report errors. The CVErr( ) function is part of VBA. It converts a value, supplied by you, to the special kind of value used for errors in Excel. Excel has a number of error values that a function can return to signal that something went wrong. Here ’ s an example: The function NewMistake(x,y) returns the result x / y . However, if y = 0, the function outputs the (cryptic) error message #DIV0!. Function NewMistake(x, y) If y < > 0 Then NewMistake = x / y Else _ NewMistake = CVErr(xlErrDiv0) End Function To Anticipate Future Confusion All the VBA error values are written “xlErr … .” Because the typed alphabet letter “l” also looks like the number one, it would have been easier had Microsoft used capital letters “XLErr … .” But … 987 User-Defined Functions with VBA This is NewMistake in Excel: 1 2 3 4 5 6 7AB C D X Y NewMistake 1 2 0.5 <-- =NewMistake(A4,B4) 2 1 2 <-- =NewMistake( A5,B5) 0 1 0 <-- =NewMistake(A6,B6) 1 0 #DIV/0! <-- =NewMistake( A7,B7)NewMistake In Action Error values and their explanation are listed below. Error Value VBA Name Possible causes #NULL! XlErrNull The #NULL! error value occurs when you specify an intersection of two areas that do not intersect. #DIV/0! XlErrDiv0 The #DIV/0! error value occurs when a formula divides by 0 (zero). #V ALUE! XlErrValue The #V ALUE! error value occurs when the wrong type of argument is used. #REF! XlErrRef The #REF! error value occurs when a cell reference is not valid. #NAME? XlErrName The #NAME? error value occurs when Microsoft Excel doesn ’ t recognize text in a formula. #NUM! XlErrNum The #NUM! error value occurs when a problem occurs with a number in a formula or function. #N/A XlErrNA The #N/A error value occurs when a value is not available to a function or formula. 3 7 Variables and Arrays 37.1 Overview In the first part of this chapter we introduce function variable definitions. The second part of the chapter introduces arrays. An array is a group of variables of the same type sharing the same name and referenced individually using an index. Vectors and matrices are good examples of one- and two-dimensional arrays. The relationship between arrays and worksheet ranges opens the dis-cussion, followed by sections describing simple and dynamic arrays (whose size can be changed at run time). The chapter concludes with sections on the use of arrays as parameters and a short discussion of typed variables. 37.2 Defining Function Variables Function variables are used to store values. Function variables can be either parameter or simple variables. Parameters are defined when the function is defined by listing them within parentheses after the function ’ s name. Up until now we used simple variables as and when needed, relying on VBA to define the variable for us when it was first used. In most scenarios encountered in this book, this practice is good enough, and it has the advantage of being quick. The first time we encountered both flavors of function variables was in the function DoWhileDemo : Function DoWhileDemo(N) If N < 2 Then DoWhileDemo = 1 Else i = 1 ‘ A Loop counter j = 1 ‘ An accumulator for the series Do While i < = N j = j * i i = i + 1 Loop DoWhileDemo = j End If End Function 990 Chapter 37 The variable N is a parameter that gets its value from the application that activates the function (either Excel or another function). The variables i, j are simple variables. Function variables (aka internal or local variables) of both types are recognized only in the function in which they were defined (implic-itly or explicitly) and are not recognized by Excel or by other VBA functions. As this is a very short function, there really is no reason to define the vari- ables explicitly and the addition of comments makes everything clear enough. Longer functions with more variables might benefit by defining the variables at the top of the function, as it makes for more maintainable, and clear pro-gramming. Simple variables are defined using the Dim statement as demon- strated by the following function: Function NewDoWhileDemo(N) Dim i ‘ a Loop counter Dim j ‘ An accumulator for the series If N < 2 Then NewDoWhileDemo = 1 Else i = 1 j = 1 Do While i < = N j = j * i i = i + 1 Loop NewDoWhileDemo = j End If End Function The Option Explicit Statement We can make VBA alert us if we use an undeclared variable by inserting the Option Explicit statement as the first line in the module. With this statement any use of an undeclared variable will result in an error and not the creation of a new variable. The Option Explicit statement holds for all the routines in the module. 991 Variables and Arrays Forcing the definition of variables can help prevent errors from creeping into your functions. Here is an (slightly forced) example: The following func- tion contains a typing error (“Temp” is spelled “Remp”): Function Typo(Parameter) Remp = Parameter * 3 + 1 Typo = Temp End Function Without the Option Explicit statement, Excel merrily displays the follow- ing result: However, inserting the Option Explicit statement before the VBA code and recalculating the worksheet results in the following “Run Time Error”: 1 2AB C 5 0 <-- =Typo(A2)TYPO IN ACTION 992 Chapter 37 Once we are alerted to the problem, we can click the OK button, stop VBA from running, and fix the problem by replacing “Remp” with “Temp.” (Recall from Chapter 36 that after you fix the mistake in VBA, you have to press the button on the VBA editor toolbar.) 37.3 Arrays and Excel Ranges A VBA array is a group of variables of the same type sharing the same name and referenced individually using an index (or indices). VBA has its own version of arrays and we shall deal with this type of array in the following sections. For now let us demonstrate the Variant . If we want a function to accept an Excel range as a parameter we have to leave the parameter type-less, or declare the parameter as Variant (which amounts to the same thing). From inside the function the variable looks like an array. To demonstrate, we shall now write a small function, SumRange , that sums the value in the first four elements of its parameter. Function SumRange(R) S = 0 For i = 1 To 4 S = R(i) + S Next i SumRange = S End Function 1 2 3 4 5 6AB 1< - - 1 2< - - 2 3< - - 3 4< - - 4 10 <-- =SumRange(A2:A5)SUMRANGE IN ACTION 1 23ABC D 12 34 10 <-- =SumRange(A2:D2)SUMRANGE IN ACTION 993 Variables and Arrays In both cases the variable R can be treated as an array, with the first element being R(1) and the last element R(4) . Each of the elements can be treated as a single variable, that is, R(2) is a variable and so is R(i-3) (assuming that i-3 has an integer value > = 1 and < = 4). Ranges treated as arrays always start with index 1. What happens if the range passed to our function is rectangular? To dem- onstrate, we introduce a modified version of SumRange , inserting a second parameter that tells the function how many elements to sum. Function SumRange1(R, N) S = 0 For i = 1 To N S = R(i) + S Next i SumRange = S End Function As we can see, VBA treats the rectangular array as a linear array composed of the rows of the original range. The second parameter of the function SumRange1 indicates how many elements should be summed. Thus, for example, Sumrange1(A2:C4,5) sums the first row plus two cells in the second row. A Payback Period Function A slightly more complex use of ranges can be shown with a simple Payback Period function. Recall that the payback period in capital budgeting refers to 1 2 3 4 5 67ABCD 345 678 91 01 1 18 <-- =SumRange1(A2:C4,4)25 <-- =SumRange1(A2:C4,5)33 <-- =SumRange1(A2:C4,6)SUMRANGE1 IN ACTION 994 Chapter 37 the period of time required for the return on an investment to “repay” the sum of the original investment. For example, a $1,000 investment which pays cash flows of $500 per year has a 2-year payback period. To simplify matters, the function PayBack defined below gives a whole year solution. If the sum of the cash flows for 5 years is < 0 and for 6 years is > 0, then the function will return 6. We also assume that the first cash flow is the initial investment (nega-tive) and that no other cash flows are negative. Function PayBack(R, N) Temp = 0 For i = 1 To N Temp = Temp + R(i) If Temp > = 0 Then Exit For Next i PayBack = i - 1 End Function 1 234AB C D E F P e r i o d 12345Cash-flow -1500 400 600 600 300PayBack 3 <-- =PayBack(B3:F3,5)PAYBACK IN ACTION There are a few problems with this function as currently defined. One is that the function returns a wrong answer if the investment does not pay back its initial outlay, as demonstrated by the next screen shot. 1 234AB C D E F P e r i o d 12345Cash-flow -4000 400 600 600 300PayBack 5 <-- =PayBack(B3:F3,5)PAYBACK IN ACTION 995 Variables and Arrays The problem is solved by inserting a check before returning the payback period. Function PayBack1(r, n) Temp = 0 For i = 1 To n Temp = Temp + r(i) If Temp > = 0 Then Exit For Next i If Temp > = 0 Then PayBack1 = i - 1 Else PayBack1 = “No Payback” End If End Function 37.4 Simple VBA Arrays There are several ways to declare VBA arrays, all using the Dim statement. The simplest way to declare an array is simply to tell VBA the largest value the array index can take. Unless you indicate otherwise, VBA arrays always start with index 0. In the function below, MyArray has 6 elements numbered 0, 1, 2, … , 5. 1 234AB C D E F P e r i o d 12345Cash-flow -4000 400 600 600 300PayBack No Payback <-- =PayBack1(B3:F3,5)PAYBACK1 IN ACTION 996 Chapter 37 Function ArrayDemo1() Dim MyArray(5) For i = 0 To 5 MyArray(i) = i * i Next i S = “” For i = 0 To 5 S = S & “ # “ & MyArray(i) Next i ArrayDemo1 = S End Function If you use ArrayDemo1 in a spreadsheet, here is the result: 1 2B A # 0 # 1 # 4 # 9 # 16 # 25 <-- =ArrayDemo1()ARRAYDEMO1 IN ACTION Notice: • MyArray has six elements (variables), the first being MyArray(0) and the last MyArray(5) . All VBA arrays start from 0, unless you specify otherwise (see discussion of Option Base below). • An array element is treated just like a variable. MyArray(2) is a variable and so is MyArray(i-3) (assuming that i-3 has an integer value > = 0 and < = 5). • The use of the concatenation operator & . This operator concatenates (com- bines) its two operands to create a string. If an operand to the concatenation operator is not a string, it is converted to a string, and then the concatenation takes place. If you try and access an array element that is not part of the array, VBA will return an error value, as demonstrated by the following function: 997 Variables and Arrays Function ArrayDemo2(N) Dim MyArray(5) Dim i As Integer For i = 0 To 5 MyArray(i) = i * i Next i ArrayDemo2 = MyArray(N) End Function LBound and UBound LBound and UBound are two internal VBA functions that are very useful when dealing with arrays . These functions return the minimum and maximum value that an array index can have. The following function demonstrates their use on a one-dimensional array: 1 2 3 4 5 67 8AB C 0 0 <-- =ArrayDemo2(A2)1 1 <-- =ArrayDemo2(A3) 2 4 <-- =ArrayDemo2(A4) 3 9 <-- =ArrayDemo2(A5) 4 16 <-- =ArrayDemo2(A6) 5 25 <-- =ArrayDemo2(A7) 6 #VALUE! <-- =ArrayDemo2(A8)ARRAYDEMO2 IN ACTION Function ArrayDemo3(N) Dim MyArray(5) If N = “LB” Then ArrayDemo3 = LBound(MyArray) ElseIf N = “UB” Then ArrayDemo3 = UBound(MyArray) End If End Function 998 Chapter 37 Note that the array MyArray has six elements, the first being MyArray(0) as indicated by LBound , and the last being MyArray(5) as indicated by UBound . When used on a multidimensional array, a second parameter should be sup- plied indicating the dimension in whose bounds we are interested, as the next function demonstrates. 1 23AB C ) 2 A ( 3 o m e D y a r r A = - - < 0 B L ) 3 A ( 3 o m e D y a r r A = - - < 5 B UARRAYDEMO3 IN ACTION Function ArrayDemo4(Dimension, Bound) Dim MyArray(2, 3, 4) If Bound = “LB” Then ArrayDemo4 = LBound(MyArray, Dimension) ElseIf Bound = “UB” Then ArrayDemo4 = UBound(MyArray, Dimension) End If End Function 1 234 5 67AB C D LB 1 0 <-- =ArrayDemo4(B2,A2) UB 1 2 <-- =ArrayDemo4(B3,A3) LB 2 0 <-- =ArrayDemo4(B4,A4) UB 2 3 <-- =ArrayDemo4(B5,A5) LB 3 0 <-- =ArrayDemo4(B6,A6) UB 3 4 <-- =ArrayDemo4(B7,A7)ARRAYDEMO4 IN ACTION 999 Variables and Arrays How to Get the Bound of an Excel Range in a Function Sadly the internal functions UBound and LBound do not work for a range passed to a function. We can make use of the fact that the parameter is actually a range and use some of its properties to get the result we need. The following function demonstrates this: Function RangeBound(R, What) If What = “C” Then RangeBound = R.Columns.Count ElseIf What = “R” Then RangeBound = R.Rows.Count End If End Function Did you notice that the function does not work with lowercase characters? If we want to be case agnostic, as one usually does, we can use the VBA func-tion UCase to convert “what” to uppercase. 1 2345AB C C 2 <-- =rangebound(D1:E5,A2) R 5 <-- =rangebound(D2:E6,A3) c 0 <-- =rangebound(D3:E7,A4) r 0 <-- =rangebound(D4:E8,A5)RANGEBOUND IN ACTION Function RangeBound1(R, What) If UCase(What) = “C” Then RangeBound1 = R.Columns.Count ElseIf UCase(What) = “R” Then RangeBound1 = R.Rows.Count End If End Function 1000 Chapter 37 Fixing Excel ’ s NPV Function Recall from Chapter 1 that Excel ’ s language about discounted cash flows differs somewhat from the standard finance nomenclature. Excel uses the letters NPV to denote the present value ( not the net present value) of a series of cash flows. To calculate the finance net present value of a series of cash flows using Excel, we have to calculate the present value of the future cash flows (using the Excel NPV func-tion) and subtract from this present value the time-zero cash flow. (This is often the cost of the asset.) Let us try and write a function nNPV that addresses this shortcoming. In the process we shall learn a few things about Excel Ranges in VBA. In order to make the function simple, it will only work on a row of cash flows. 1 2 3 4 5 6AB C C 2 <-- =rangebound1(D1:E5,A2) R 5 <-- =rangebound1(D2:E6,A3) c 2 <-- =rangebound1(D3:E7,A4) r 5 <-- =rangebound1(D4:E8,A5) 1 0 <-- =rangebound1(D5:E9,A6)RANGEBOUND1 IN ACTION Function nNPV(Rate, R) nNPV = R(1) + Application.WorksheetFunction _ .npv(Rate, R.Range(“B1”, R.End(xlToRight))) End Function R.Range(CellTopLeft,CellBottomRight) returns a range defined by its parameters. Note that the cell addresses are relative to R and not the worksheet. R.End(Direction) returns one of the four possible last cells in the R accord- ing to Direction . Possible values for Direction are xlDown, xlToLeft, xlToRight, xlUp. 1001 Variables and Arrays Assuming R is a row of cells, R.Range(“B1”, R.End(xlToRight)) returns a range containing all the cells in R excluding the first one. 1 2 3 4 5 6AB C D E F Cash Flows ▶ -400 100 100 100 100 Rate ▶ 10% Excel NPV ▶ -75.4667776 <-- =NPV($B$3,$B$2:$F$2) Excel C0+NPV ▶-83.01345537 <-- =$B$2+NPV($B$3,$C$2:$F$2) nNPV ▶-83.01345537 <-- =nNPV($B$3,$B$2:$F$2)NNPV IN ACTION A New IRR Function Another useful function we can write using our newly acquired tools is nIRR . Recall from Chapter 1 that the internal rate of return (IRR) is defined as the compound rate of return r that makes the NPV equal to zero: CFCF rt t tN 0 010 + +()= =∑ We now use a technique called successive refinement to calculate IRR: 1. If we were given an initial guess for r we use it and if not we use 50% to calculate NPV . 2. If the calculated NPV is zero (or sufficiently near) we return the current guess. 3. If the calculated NPV is negative we set our guess to r = r + r /2. 4. If the calculated NPV is positive we set our guess to r = r − r /2. 5. We shall now recalculate NPV . 6. Repeat steps 2–5. We assume that the first cash flow is negative and that all others are positive. 1002 Chapter 37 Here is the function: Function nIRR(R, Optional guess = 0.5) n = nNPV(guess, R) Do While Abs(npv) > 0.0001 If n < 0 Then guess = guess - guess / 2 Else guess = guess + guess / 2 End If n = nNPV(guess, R) Loop nIRR = guess End Function Optional Parameters Note that the use of Optional guess = 0.5 to declare the last parameter as optional and give it a default value if the user did not supply one. Once a parameter is declared as optional, all the following parameters have to be declared optional as well. For example, this declaration is fine: Function WillWork(a, Optional b = 5, Optional c = 4) 1003 Variables and Arrays Whereas this will result in an error: As noted, this function is very slow so it might take a few seconds to calculate its results. 1 2 3 4 5 6 7 8 9AB C D E F Cash Flows ▶ -375 100 100 100 100 Guess ▶ 5% IRR ▶ 2.63247% <-- =IRR($B$2:$F$2,$B$3) nIRR ▶ 2.63247% <-- =nIRR($B$2:$F$2,$B$3) nIRR ▶ 2.63248% <-- =nIRR($B$2:$F$2) nNPV ▶7.708E-11 <-- =nNPV($B$4,$B$2:$F$2) nNPV ▶9.795E-06 <-- =nNPV($B$5,$B$2:$F$2) nNPV ▶ -9.55E-05 <-- =nNPV($B$6,$B$2:$F$2)NIRR IN ACTION 1004 Chapter 37 The Option Base Statement Excel arrays start at 1, whereas VBA arrays start at 0, unless otherwise defined. We can use a module option to make all not specifically declared array indices start at 1. We use ArrayDemo3 to demonstrate. We open a new VBA module with first line “OptionBase1.” We rename our previous function to reflect this change. Option Base 1 Function ArrayDemo3OptionBase1(N) Dim MyArray(5) If N = “LB” Then ArrayDemo3OptionBase1 = LBound(MyArray) ElseIf N = “UB” Then ArrayDemo3OptionBase1 = UBound(MyArray) End If End Function If we insert Option Base 1 as the first line of the module to get (the only change is in cell B2 where we get 1 and not 0). 1 23AB C LB 1 <-- =ArrayDemo3Optionbase1(A2) UB 5 <-- =ArrayDemo3Optionbase1(A3)ARRAYDEMO3OPTIONBASE1 IN ACTION The Option Base 1 statement, like all option statements, should be inserted before all functions and subroutines in a module. Like all option statements, its effect is limited to all routines in the current module. 1005 Variables and Arrays 37.5 Multidimensional Arrays Arrays can have more than one index. In a two-dimensional array the first index refers to the rows and the second to the columns. There is no formal limit to the number of indices you can declare in an array. The syntax for declaring a multidimensional array is demonstrated in the following functions: Function Matrix1(R, C) Dim MyMat(2, 1) For i = 0 To 2 For j = 0 To 1 MyMat(i, j) = i * j Next j Next i If R > = 0 And R < = 2 And C > = 0 And C < = 1 _ Then Matrix1 = MyMat(R, C) End If End Function 1 23456789 10AB C D R C Matrix1(R,C) 0 0 0 <-- =Matrix1(A3,B3) 1 0 0 <-- =Matrix1(A4,B4)2 0 0 <-- =Matrix1(A5,B5)0 1 0 <-- =Matrix1(A6,B6)1 1 1 <-- =Matrix1(A7,B7)2 1 2 <-- =Matrix1(A8,B8)3 1 0 <-- =Matrix1(A9,B9)1 3 0 <-- =Matrix1(A10,B10)MATRIX1 IN ACTION 1006 Chapter 37 Note the use of the second argument to LBound and UBound . If used with only one argument, both functions return the largest index value the first dimension of the array can have; if the array has more than one dimension (as in this case), we can use a second argument to the function to specify the dimension we are interested in. Function Matrix2(R, C) Dim MyMat(1, 1) For i = LBound(MyMat, 1) To UBound(MyMat, 1) For j = LBound(MyMat, 2) To _ UBound(MyMat, 2) MyMat(i, j) = i * j Next j Next i If R > = LBound(MyMat, 1) And _ R < = UBound(MyMat, 1) And _ C > = LBound(MyMat, 2) And _ C < = UBound(MyMat, 2) Then Matrix2 = MyMat(R, C) End If End Function 1 2 3 4 5 67 8AB C D R C Matrix2(R,C) 0 0 0 <-- =Matrix2(A3,B3) 1 0 0 <-- =Matrix2(A4,B4) 2 0 0 <-- =Matrix2(A5,B5) 0 1 0 <-- =Matrix2(A6,B6) 1 1 1 <-- =Matrix2(A7,B7) 1 2 0 <-- =Matrix2(A8,B8)MATRIX2 IN ACTION The following function demonstrates the use of LBound and UBound with multidimensional arrays: 1007 Variables and Arrays 37.6 Dynamic Arrays and the ReDim Statement Every so often it can be handy to have the size of an array set (and reset) when the program is running. Dynamic arrays are arrays that can have their size changed at run time. You declare dynamic arrays using the Dim statement but with nothing in the parentheses, as in: Dim SomeName() Before you can use the array you need to set its size using the ReDim state- ment, as in: ReDim ArrayName(SomeIntegerExpression) For example, you might type ReDim Prices(12) To set the size of the dynamic array Prices to 12 elements, a more typical case would involve the use of a variable for the size as in: ReDim Prices(I) This will set the size of Prices to the value of I. The ReDim statement can also be used to change the size of a dynamic array (or indeed any VBA array). If you change the size of an array, all the data in the array are lost. Use ReDim Preserve to keep the old data, as in: 1008 Chapter 37 The following function calculates the present value of a series of future cash flows. To simplify the function, the interest rate is fixed at 5% per period. The function illustrates the use of a dynamic array (the variable CF) that derives its size from the size of the original input (the variable n ): ReDim Preserve ArrayName(SomeIntegerExpression) Function DynPV(r As Range) ‘ n is number of periods ‘ cf() is dynamic array for cash ‘ ﬂ ows Dim n Dim cf() Dim Temp Dim i ‘Below we distinguish if the data ‘is in a column or in a row If r.Columns.Count = 1 Then n = r.Rows.Count ElseIf r.Rows.Count = 1 Then n = r.Columns.Count Else Exit Function End If ‘ re-dimension the array ReDim cf(1 To n) For i = 1 To n cf(i) = r(i) Next i Temp = 0 For i = 1 To n Temp = Temp + cf(i) / 1.05 ∧ i Next i DynPV = Temp End Function 1009 Variables and Arrays Running the function produces the following: Using the ReDim Preserve Statement As stated previously the Preserve part of the ReDim statement prevents the loss of data from the re-dimensioned array. The use of Preserve imposes two major limitations on the use of ReDim . • The inability to change the lower boundary of the index. • The inability to change the number of dimensions. The main use of the ReDim Preserve is in interactive programs and as such it will be demonstrated in a later chapter dealing with user interaction. 37.7 Array Assignment Here ’ s an error that ’ s easy to make: In the following example we want to tell VBA that Array2 is equal to Array1 : 1 2 3 4 5 6AB C Cash Flows 100200 300 DynPV ▶ 535.79527 <-- =DynPV(A3:A5)DYNPV IN VERTICAL ACTION 1 23AB C D Cash Flows ▶ 100 200 300 DynPV ▶ 535.79527 <-- =DynPV(B2:D2)DYNPV IN HORIZONTAL ACTION 1010 Chapter 37 VBA doesn ’ t allow this, as you can see on the next screen shot. Function ArrayAssignError() Dim Array1(5) Dim Array2(5) For i = 0 To 4 Array1(i) = i * i Next i Array2 = Array1 ArrayAssignError = Array2 End Function Obviously one way to assign arrays is to assign each element separately using a For loop. For I = 0 To 4: Array2(I) = Array1(I): Next I 1011 Variables and Arrays The : Operator Note the use of the “ : ” operator to signal the end of a statement. This way we can put two or more short statements on the same line. Another, much shorter, way of assigning arrays is discussed in the next section. 37.8 Variants Containing an Array A Variant type variable can contain an array. The procedure is somewhat more complicated than the declaration of a normal array, but the reward in terms of assignment is sometimes worth the inconvenience. The following function demonstrates the use of a Variant containing an array: 01 Function ArrayAssign(r, j) 02 Dim Array1 ‘This is a variant 03 Dim Array2 ‘This is a variant 04 Dim n ‘number of elements ‘in R 05 Array1 = Array() 06 If r.Columns.Count = 1 Then ‘data in column 07 n = r.Rows.Count 08 ElseIf r.Rows.Count = 1 Then ‘data in row 09 n = r.Columns.Count 10 Else ‘invalid data 11 Exit Function 12 End If 13 ReDim Array1(1 To n) 14 For i = 1 To n 15 Array1(i) = r(i) 16 Next i 17 ‘****************************Watch this spot 18 Array2 = Array1 ‘Watch this spot 19 ‘****************************Watch this spot 20 If j > = 1 And j < = n Then 21 ArrayAssign = Array2(j) 22 End If 23 End Function 1012 Chapter 37 Function ComputePV(CF()) Temp = 0 For i = LBound(CF) To UBound(CF) Temp = Temp + CF(i) / 1.05 ∧ i Next i ComputePV = Temp End Function The Array() function (on the fifth line) returns a Variant containing an array. The assignment on the same line makes Array1 into an array (not ini- tialized at the moment). The ReDim statement on line 15 makes Array1 into an n element array. The reward for all our trouble is illustrated on line 18. Here is the function in a worksheet context: 1 2 3 4 5 67 8AB C D E 55 88 77 12 99 1 55 <-- =ArrayAssign($A$2:$E$2,A3) 2 88 <-- =ArrayAssign($A$2:$E$2,A4) 3 77 <-- =ArrayAssign($A$2:$E$2,A5) 4 12 <-- =ArrayAssign($A$2:$E$2,A6) 5 99 <-- =ArrayAssign($A$2:$E$2,A7) 6 0 <-- =ArrayAssign($A$2:$E$2,A8)ARRAYASSIGN IN HORIZONTAL ACTION 37.9 Arrays as Parameters to Functions Arrays can be used as parameters to functions. The following set of functions presents an improved version of DynPV discussed in section 37.6. Notice how much easier it is to read the main function NewDynPV , when all the auxiliary tasks are relegated to separate functions. A function ComputePV(CF()) is used to compute the present value of a series of cash flows contained in an array of Doubles . 1013 Variables and Arrays Note the fact that in ComputePV(CF()) , CF() has to be declared without index information. Consequently, we use LBound and UBound to get index information. The function GetN(R As Range) returns the number of elements in R: Function GetN(R As Range) If R.Columns.Count = 1 Then ‘data in column GetN = R.Rows.Count ElseIf R.Rows.Count = 1 Then ‘data in row GetN = R.Columns.Count Else GetN = 0 End If End Function Here is the main function: Function NewDynPV(R As Range) Dim n As Integer ‘ Number of periods Dim CF() As Double ‘ Dynamic array for cash ﬂ ows n = GetN(R) If (n = 0) Then NewDynPV = n Exit Function End If ReDim CF(1 To n) ‘ re-dimension the array For i = 1 To n CF(i) = R(i) Next i NewDynPV = ComputePV(CF) End Function 1014 Chapter 37 1 23AB C D Cash Flows ▶ 100 200 300 NewDynPV ▶535.79527 <-- =newDynPV(B2:D2)NEWDYNPV IN ACTION Better IRR and NPV Functions We can now revisit nIRR and nNPV from section 37.4, and try and make them faster using internal arrays. Function fNPV(Rate, cf) Temp = 0 For i = LBound(cf, 2) + 1 To UBound(cf, 2) Temp = Temp + cf(1, i) / (1 + Rate) ∧ _ (i - 1) Next i fNPV = Temp + cf(1, LBound(cf, 2)) End Function Function fIRR(R, Optional guess = 0.5) cf = R.Value n = fNPV(guess, cf) Do While Abs(npv) > 0.0001 If n < 0 Then guess = guess - guess / 2 Else guess = guess + guess / 2 End If n = fNPV(guess, cf) Loop fIRR = guess End Function 1015 Variables and Arrays This works an order of magnitude faster but can be further improved. 37.10 Using Types All values, variables, and functions in VBA are categorized into types, either by default or explicitly. By default all variables and functions in VBA are of the type Variant . Variant is a category of values (type) that includes all other categories. In most cases we can just ignore the type, but sometimes it can be very useful to give a variable a type other than Variant . Variable types allow VBA to give us information about the variable as we use it, and this will become apparent as we start using Excel objects in the following chapters. For now we will just explain the mechanics of defining a typed variable, and provide a short demonstration of the help offered by VBA when dealing with typed variables. A type is given to a variable when it is defined by following the variables name with the word As followed with a type name. For example, the statement “Dim x As Integer” defines a variable named x of the type Integer. To demonstrate the usefulness of typed variables recall the function RangeBound from section 37.4. Here is a new version with the first parameter explicitly given the type Range. Although not necessary (it worked without it), it does make life easier. When you type in the function and a variable has a type, VBA can give you hints as you try to use properties. In our example, as soon as you type the period after R, VBA provides a list of possible Proper-ties or Methods. If the selected property (Rows, in our case) has properties of its own, then a period following its name will produce a list for you to choose from. 1 2 3 45 6 7 8 9AB C D E F Cash Flows ▶ -375 100 100 100 100 Guess ▶ 5% IRR ▶ 2.63247% <-- =IRR($B$2:$F$2,$B$3) fIRR ▶ 2.63247% <-- =fIRR($B$2:$F$2,$B$3) fIRR ▶ 2.63248% <-- =fIRR($B$2:$F$2) nNPV ▶ 7.70797E-11 <-- =nNPV($B$4,$B$2:$F$2) nNPV ▶ 9.79546E-06 <-- =nNPV($B$5,$B$2:$F$2) nNPV ▶ -9.54928E-05 <-- =nNPV($B$6,$B$2:$F$2)FIRR IN ACTION 1016 Chapter 37 37.11 Summary VBA functions use variables to store information. Variables can hold all sorts of information. Declaring and using variables that can hold only a specific type of information ( Typed Variables ) can make your programming task easier and your programs more readable, and use less computer memory. 1017 Variables and Arrays An array is a group of variables of the same type, sharing the same name and referenced individually using one or more indices. In VBA an array index is an integer. By default the index of the first element in an array is 0; this can be changed to 1 for all arrays used in a module by using the Option Base 1 statement. The size and number of dimensions of an array are set at the time the array is declared and have to be known when the program is written. Dynamic arrays are arrays whose size (but not number of dimensions) can be set at run time. Exercises 1. Write a function NewPV(CF, r) which calculates the present value of a given cash flow CF at interest rate r for 5 periods: NewPV CF rCF rCF rCF rCF rCF r(, ) = +()+ +()+ +()+ +()+ +() 1111112345 2. Rewrite the function in exercise 2 as BetterNewPV(CF, r, n), so it could deal with n periods. 1 2 3 4 56AB C D NEWPV IN ACTION CF r NewPV 100.0000 10% 379.0787 <-- =NewPV(A3,B3) 50.0000 10% 189.5393 <-- =NewPV(A4,B4) 100.0000 1% 485.3431 <-- =NewPV(A5,B5) 50.0000 1% 242.6716 <-- =NewPV(A6,B6) 1 2 3 4 5 6E D C B A BETTERNEWPV IN ACTION CF r n BetterNewP V 100.0000 5% 5 432.9477 <-- =BetterNewPV(A3,B3,C3) 50.0000 10% 5 189.5393 <-- =BetterNewPV(A4,B4,C4) 100.0000 1% 10 947.1305 <-- =BetterNewPV(A5,B5,C5) 50.0000 1% 10 473.5652 <-- =BetterNewPV(A6,B6,C6) 1018 Chapter 37 4. A bank offers different interest rates on deposit accounts. The rate is based on the size of the periodical deposit ( CF ) and the following table. Write a future value function BankFV(CF, r, n) . For Periodical Deposits The Interest Rate Is < = 100.00 r < = 500.00 r + 0.5% < = 1,000.00 r + 1.1% < = 5,000.00 r + 1.7% > 5,000.00 r + 2.1% 3. A bank offers different interest rates on loans. The rate is based on the size of the periodical repayment ( CF ) and the following table. Rewrite the function in exercise 2 as BankPV(CF, r, n) so that it reflects the present value of a loan in the bank. For Periodical Repayments < = The Interest Rate Is 100.00 r 500.00 r − 0.5% 1,000.00 r − 1.1% 5,000.00 r − 1.7% 1,000,000.00 r − 2.1% 1 2 345 6 789AB C D E CF r n BankPV -1 5% 5 E <-- =BankPV(A3,B3,C3) 100.00 5% 5 432.95 <-- =BankPV(A4,B4,C4)100.01 5% 5 439.04 <-- =BankPV(A5,B5,C5) 1000.00 5% 5 4464.36 <-- =BankPV(A6,B6,C6)1000.01 5% 5 4540.79 <-- =BankPV(A7,B7,C7)5000.00 5% 5 22703.71 <-- =BankPV(A8,B8,C8)5000.01 5% 5 22964.11 <-- =BankPV(A9,B9,C9)BANKPV IN ACTION 1019 Variables and Arrays 1 2 3 4 567 8 9AB C D E CF r n BankFV -1 5% 5 E <-- =Bankfv(A3,B3,C3) 100.00 5% 5 580.19 <-- =Bankfv(A4,B4,C4)100.01 5% 5 588.86 <-- =Bankfv(A5,B5,C5) 1,000.00 5% 5 5992.91 <-- =Bankfv(A6,B6,C6)1,000.01 5% 5 6099.47 <-- =Bankfv(A7,B7,C7) 5,000.00 5% 5 30497.07 <-- =Bankfv(A8,B8,C8) 5,000.01 5% 5 30856.78 <-- =Bankfv(A9,B9,C9)BANKFV IN ACTION 5. Another bank offers 1% increase in interest rate to savings accounts with a balance of more than 10,000.00. Write a future value function Bank1FV(CF, r, n) that reflects this policy. 6. The bank in exercise 5 changed its bonus policy and now offers the interest rate increase based on the following table. Rewrite Bank1FV(CF, r, n) to reflect this change. Balance Interest Rate < = 1,000.00 r + 0.2% < = 5,000.00 r + 0.5% < = 10,000.00 r + 1.0% > 10,000.00 r + 1.3%1 2 3 4 5 6 7 8AB C D E CF r n Bank1F V -1 5% 5 E <-- =Bank1FV(A3,B3,C3) 9999.00 5% 5 59620.97 <-- =Bank1FV(A4,B4,C4) 10000.00 5% 5 59626.94 <-- =Bank1FV(A5,B5,C5)10001.00 5% 5 59759.16 <-- =Bank1FV(A6,B6,C6) 5.96 <-- =D5-D4 132.22 <-- =D6-D5BANK1FV IN ACTION 1020 Chapter 37 1 2 3456AB C D E CF r n Bank2F V -1 5% 5 E <-- =Bank2FV(A3,B3,C3) 9999.00 5% 5 60237.93 <-- =Bank2FV(A4,B4,C4) 10000.00 5% 5 60243.96 <-- =Bank2FV(A5,B5,C5)10001.00 5% 5 60288.29 <-- =Bank2FV(A6,B6,C6)BANK2FV IN ACTION 7. Write a version of the present value function with two interest rates, one for positive cash flows and another for negative cash flows. The function should be written for use in a worksheet, and accept both column and row ranges as parameters. The function declaration line should be: Function MyPV(CF As Variant, PositiveR As Double, _ NegativeR As Double) As Double 1 2 3 4 5AB C D EF G PositiveR 5% 100 100 100 272.3248 <-- =MyPV(C2:E2,$B$2,$B$3)NegativeR 10% -100 -100 -100 -248.6852 <-- =MyPV(C3:E3,$B$2,$B$3) -100 100 100 86.17762 <-- =MyPV(C4:E4,$B$2,$B$3) -63 <-- =MyPV(C2:C4,$B$2,$B$3)MYPV IN ACTION 8. Write a future value version of the function in exercise 7. 9. A bank offers different interest rates on loans. The rate is based on the size of the periodical repayment ( CF i ) and the following table. Write a present value function BankPV(CF, r) so that it reflects the present value of a loan in the bank. The function should be useable as a worksheet function. CF could be either a row range or a column range. For Periodical Repayments < = The Interest Rate Is 100.00 r 500.00 r − 0.5% 1,000.00 r − 1.1% 5,000.00 r − 1.7% 1,000,000.00 r − 2.1% 1021 Variables and Arrays 10. A bank offers different interest rates on deposit accounts. The rate is based on the size of the periodical deposit ( CF i ) and the following table. Write a future value function BankFV(CF, r) . The function should be useable as a worksheet function. CF could be either a row range or a column range. For Periodical Deposits The Interest Rate Is < = 100.00 r < = 500.00 r + 0.5% < = 1,000.00 r + 1.1% < = 5,000.00 r + 1.7% > 5,000.00 r + 2.1% 11. Another bank offers 1% increase in interest rate to savings accounts with a balance of more than 10,000.00. Write a future value function Bank1FV(CF, r) that reflects this policy. The function should be useable as a worksheet function. CF could be either a row range or a column range. 3 8 Subroutines and User Interaction 38.1 Overview A subroutine is a VBA user routine used to automate routine or repetitive operations in Excel. Subroutines are sometimes called macros. Modules and module variables are introduced as the last subject of this chapter. 38.2 Subroutines A subroutine looks like a function, but the word “Sub” replaces the word Function in the definition. The parentheses following the subroutine name are blank (recall that the parentheses following the function name give the func-tion ’ s parameters). Separating the first and last line are the statements that the subroutine executes. The following is a very simple subroutine that puts a message on the screen: Sub SayHi() MsgBox “Hi”, , “I say Hi” End Sub The above subroutine introduces a built-in VBA subroutine called MsgBox . It also introduces the way one subroutine is activated (called) from another. MsgBox is named as a command on a line followed by its list of arguments separated by commas. Notice the syntax: MsgBox “Hi”, , “I say Hi” The commas separate the three arguments of every MsgBox : • “Hi” is the message which will be displayed. • The second argument is empty: Notice the space between the commas. This argument can be used to define buttons for the message box. This topic is discussed in section 38.3. • The third argument is “I say Hi”—this is the message box title. 1024 Chapter 38 A subroutine can be activated (run) from an Excel worksheet in various ways. The simplest way of running a subroutine is from the Macros button on the Developer tab on the Ribbon or by using the keyboard shortcut [Alt] + F8. Either way, the macro selection box appears. 1 The box lists all available subroutines alphabetically. Find our subroutine, click on its name, and click the Run button. And this is what you will see: 1. If you don ’ t have the Developer tab, go to File|Options|Customize the Ribbon . In the right side of the resulting screen, mark the Developer box. 1025 Subroutines and User Interaction At this point Excel is locked up—you have to click the OK button before you can proceed. Keyboard Shortcut for Subroutines Using a keyboard shortcut is a faster way to make a subroutine run. To attach a shortcut to our subroutine: • Select the Options button from the macro selection box. • Type a character in the provided space and click OK . • Close the macro selection box using the corner X . You can now activate the subroutine using the shortcut ([Ctrl] + h, in our case). 1026 Chapter 38 Recording a Subroutine One easy way to start writing subroutines is to record the sequence of actions you want in the subroutine, and then edit the resulting subroutine to produce the final results you need. Something we do a lot in this book is to insert the function Getformula in a cell to the right of the cell with the interesting formula. Let ’ s record a subroutine that performs this action (see Figures 38.1–38.3 ). 1. Select the cell to the right of the cell with the formula we are interested in (B4, in our case) 2. Select the Developer tab on the ribbon. 3. In the code group click Use Relative References . This causes Excel to record relative cell addresses in the subroutine rather than its default, which is to record the actual cell addresses. 4. Click Record Macro . 5. At this point you have the option to name the subroutine as well as all sorts of other options. Since we are going to change most of these options in the near future, we ignore all options and finally click OK to start recording. 6. Type in the formula = Getformula(A4) . 7. Click Stop Recording (this is the same button that used to be the Record Macro button). 1027 Subroutines and User Interaction Figure 38.1 Indicating recording with relative references. Figure 38.2 Start recording the subroutine. Figure 38.3 End subroutine recording. Button is in the same place as the Record Macro button. RECORDING A SUBROUTINE—SCREENS 1028 Chapter 38 Running a Subroutine from a Button on the Worksheet Instead of running the subroutine from the Developer tab or running it from a key combination, we can also insert a button on the worksheet to run a subroutine on that worksheet. To illustrate, we insert a button that runs the subroutine RecordGetformula : 1. Select the Developer tab on the ribbon. 2. In the Controls group, click Insert . 3. From the Form Controls, select Button . Sub RecordGetformula() ‘ Puts in Getformula, points to cell ‘ to the left If IsEmpty(ActiveCell) Then ActiveCell.FormulaR1C1 = _ “ = getformula(RC[-1])” End If End Sub If we now go to the VBA editor we can see that a new module has been added to the workbook. The module contains Macro1 : Sub Macro1() ActiveCell.FormulaR1C1 = _ “ = getformula(RC[-1])” End Sub We can add some bells and whistles to this recorded subroutine. In the recorded subroutine below, we changed the name and put in a line to prevent the accidental overwriting of a non-blank cell. 1029 Subroutines and User Interaction 4. Drag the crosshair on the sheet to draw the button. 5. Once you release the mouse button, the Assign Macro dialogue will appear. 6. Select our subroutine and click OK . 1030 Chapter 38 38.3 User Interaction In this section we show how to use subroutines to elicit data from the user of the spreadsheet. We illustrate with the MsgBox command, which (as discussed above) displays a message on the screen and returns a value based on the button clicked. Some of the different options available with this function are demonstrated in the following subroutines: Sub MsgBoxDefault() Dim Temp As Integer Temp = MsgBox(“Default Message”, , _ “Default Title”) MsgBox _ “The value returned by MsgBox is: “ _ & Temp End Sub 7. The button should be selected (control handles all round) and you can now edit the text that appears on the button. If the button is not selected, right-clicking on it will open a local menu enabling you to change the text or the subroutine assigned to the button. 1031 Subroutines and User Interaction Note: The default configuration of MsgBox produces one OK button. The default title is “Microsoft Excel.” Clicking the OK button makes MsgBox return the value 1. Sub MsgBoxOKCancel() Dim Temp As Integer Temp = MsgBox(“Default Message”, _ vbOKCancel) MsgBox _ “The value returned by MsgBox is: “ _ & Temp End Sub As previously noted, the second argument to MsgBox determines which buttons are displayed. This incarnation of the demo subroutine uses the con-stant vbOKCancel to produce the two buttons OK and Cancel . Note that if the Cancel button is clicked, MsgBox returns the value 2. 1032 Chapter 38 Sub PVCalculator() Dim CF CF = InputBox(“Enter the cash ﬂ ow value”, _ “PV calculator”, “100”) MsgBox “The present value of 4” & CF & _ “At 5% for 10 periods is: “ & _ Round(Application.PV(0.05, 10, -CF), _ 2), vbInformation, “PV calculator” End Sub CF = InputBox(“Enter the cash ﬂ ow value”, _ “PV calculator”, “100”) Note the syntax: • “Enter … please,” the first argument in InputBox , is the message to display. • “PV calculator,” the second argument, is the title for the box. • “100,” the third argument, is the default string to place in the box. If you do not replace this by some other value, this will also be the returned value from the function. • Running the subroutine should result in the following: InputBox: Getting Data from the User InputBox is an internal VBA function used to get textual information from the user into a variable in a subroutine. The workings of the function are demonstrated in the following present value calculator subroutine. The subroutine PVCalculator calculates CF t t 10 5 110 .()=∑ , where CF is a number input- ted by the user: 1033 Subroutines and User Interaction At this point you can replace “100” by some other number (in this example, we ’ ve chosen to leave it). Clicking on the OK button results in the following box: 38.4 Using Subroutines to Change the Excel Workbook Subroutines can be used to make changes to a spreadsheet. Here ’ s a small example, very similar to the example presented at the end of Chapter 35. In this version of the subroutine we change the current region ’ s format to numbers with comma separators and without decimals. 1034 Chapter 38 ActiveCell.CurrentRegion is the range around the active cell (B5 in the screen snaps), the same range that would be selected by pressing [Ctrl] + A in the worksheet (A3:C7 in the screen shots). After: Sub Format() ActiveCell.CurrentRegion.NumberFormat _ = “#,##0” End Sub 1035 Subroutines and User Interaction Sub ConvertToThousands() s = ActiveCell.CurrentRegion.Cells.Count For i = 1 To s ActiveCell.CurrentRegion(i).Value = _ Round(ActiveCell.CurrentRegion(i). _ Value / 1000, 0) Next i End Sub After: The next subroutine changes the actual data in ActiveCell.CurrentRegion to thousands by dividing each number in the range by 1,000 and rounding it to the nearest integer. 1036 Chapter 38 38.5 Modules VBA organizes user-defined functions and subroutines in units called modules. We can (and sometimes should) have more than one module in a VBA project (i.e., the part of the workbook that has our functions and subroutines). Modules have names: By default VBA uses the name “Module” followed by a number to indicate the module ’ s name, but you might find it useful to give them a somewhat more descriptive name. To rename a module (in the VBA Editor), select the module on the Project Explorer pane: 1037 Subroutines and User Interaction If the Project Explorer pane is not visible, select Project Explorer from the View menu. Once a module is selected, the module ’ s list of properties should appear in the Properties Pane . If the Properties Pane is not visible, select Properties Window from the View menu. Click on the module ’ s name (it should be the only property available) and change it. A module name should start with an alphabetic character and consist of only alphabetic characters, digits, and the underscore character (_); no other characters should be used. Once you tap the Enter key, the name is changed. Notice the change in the Project Explorer. 1038 Chapter 38 Modules must have unique names, and they cannot be named after subrou- tines and functions. If a module called Tom has a function called Tom in it, the function Tom will not be available to the workbook. One common practice is to start module names (and only module names) with M. Module Variables The Dim statement can be used before any routine in the module to define a module variable. Module variables are recognized anywhere in the module and keep their value until the workbook is closed. Module variables can be used to store information relevant to more than one routine without the need to pass the information via the parameters. Module variables are more commonly used in large modules with many interacting routines, so the following demonstra-tion is, of necessity, somewhat trivial: Dim MyStatus Sub SetMyStatus() MyStatus = InputBox _ (“Enter value for my status”, , “OK”) Calculate End Sub Function MyStatusIs() MyStatusIs = MyStatus End Function Sub ShowMyStatus() MsgBox “MyStatus is: “ & MyStatus End Sub Function MyStatusIsVolatile() Application.Volatile MyStatusIsVolatile = MyStatus End Function 1039 Subroutines and User Interaction When you first open the workbook, here is what you see: If you click on you get the Input Box : And a click on the OK button will produce the following: We now know that the variable MyStatus has the value “OK.” So why is the function MyStatusIs returning a zero, or for that matter, why is MyStatusIsVolatile returning the (correct) value of “OK”? 1040 Chapter 38 Application.Volatile The answer to the question above lies with the Application.Volatile statement in MyStatusIsVolatile . When Application.Volatile is used as the first state- ment in a function used in a worksheet, the function gets recalculated when- ever something gets recalculated on the worksheet. MyStatusIs will only recalculate if its (nonexisting) parameter changes, in this case only if we edit the cell and press Enter. So if we if we select cell A3, press F2 (for Edit Cell), and press Enter we get OK <-- =MyStatusIs() OK <-- =MyStatusIsVolatile()MODULE VARIABLES IN ACTION Set MyStatus Show MyStatus 38.6 Summary A subroutine is a VBA user routine used to automate routine or repetitive operations in Excel. VBA provides two important and very flexible functions for user interaction: MsgBox and InputBox . VBA groups subroutines and functions into units called modules; keeping related functions and subroutines grouped is useful when dealing with large projects. All of these topics, explored in this chapter, will help you with financial programming in Excel. Exercises 1. Write a subroutine that displays the following message box. The message box should be on top of all other windows, and prevent the user from doing anything in any application, until one of the buttons is clicked. Hint: You need to use some options of MsgBox that were not covered in the text, use the VBA help system. 1041 Subroutines and User Interaction 2. Write a present value calculator subroutine similar to the one which appears in section 38.4. However—as illustrated below—your subroutine should ask the user for the cash flow value, the interest rate, and the number of periods. It should then display the result in a message box. Sensible default values should be supplied for all arguments. Do not use the Excel function PV ; write your own present value function and use it. A reminder: PVC F rnCF ri in (, , )()=+=∑11 You can use the PV function provided by Excel, as we did, to verify the correctness of your subroutine. 1042 Chapter 38 3. Rewrite the subroutine in the previous exercise so that the user interface is as demonstrated in the following screen shots. Some of the functions needed to write the subroutine were not covered in the text. We used the following functions: • Val —A function used to convert a string of digits to a number. • Left —A function used to return the left part of a string. • Right —A function used to return the right part of a string. • FormatPercent —A function used to format a number. • FormatCurrency —A function used to format a number. More information about these functions is available from the VBA Help file. We recom- mend you use it. Not e: Your computer might display a different currency symbol. 4. Rewrite the subroutine in the previous exercise so it deals properly with the Cancel button. • A simple version of the new subroutine will abort the subroutine if Cancel is clicked in any stage. • A more sophisticated version of the new subroutine will allow the user to reenter the data from scratch. • The most sophisticated version of the new subroutine will allow reentering the data using the old data as a default. Note: The last version is a slightly more complicated exercise using loops within loops. 1043 Subroutines and User Interaction 5. Write a payment schedule calculator subroutine. The subroutine is to ask the user for the sum of the loan, the number of payments, and the interest rate. Assume payment at the end of the period. The output should look like the example below. Hints: • You may want to use the worksheet function PMT . • The following subroutine and its output might be of interest: Here is an example of the requested subroutine in action: 1044 Chapter 38 6. Rewrite the payment schedule calculator subroutine so it displays the payments broken down into interest and capital payments. The input boxes in the example were removed for compactness. 7. Write a payment schedule calculator subroutine. The subroutine is to ask the user for the sum of the loan, the payment, and the interest rate. Assume payment at the end of the period. The subroutine should display the payments broken down into interest and capital payments. Obviously, the last payment can be smaller (but not larger) than the payment supplied by the user. The output should look like the example below (input boxes removed for compactness): 1045 Subroutines and User Interaction 8. A somewhat more complicated version of the subroutine in exercise 7 would produce the following, better-looking results. Write this version of the subroutine. Note : A quick look at the Help file for the Format function might be advantageous at this point. 9. A sliding payment schedule involves payment that changes by a fixed percentage over the life of the loan. Write a sliding payment version of the payment schedule calculator in exercise 8. In addition to all the inputs described above, the subroutine will get a payment rate of change (as percentage) from the user. This is what it should look like in action: 3 9 Objects and Add-Ins 39.1 Overview This chapter deals with several more advanced subjects in VBA. Most of these subjects relate to the Excel Object Model. The bulk of the chapter describes some useful Excel objects and ways of dealing with them. Names, a way to make worksheets clearer and more readable, are presented in section 39.6. The chapter closes with a discussion of Excel Add-Ins, one easy way to make self-crafted functions automatically available across workbooks. 39.2 Introduction to Worksheet Objects Objects are the basic building blocks of VBA. Although you may not be aware that you are using objects, most things you do in VBA require the manipulation of objects. We can think of an object as a sort of a container with variables, functions, and subroutines inside. All of Excel ’ s components (workbooks, worksheets, ranges, etc.) are represented by an object in the VBA Object Hierarchy. The object ’ s data are held in special variables called properties that can be accessed using the Dot (.) operator. One of the most important object types in VBA is the Range Object . A worksheet cell and a range of cells are all objects of the type Range . The following subsection introduces some pre- defined Range Object variables. The Active Cell VBA has many variables predefined for our use; one of the more useful is ActiveCell . ActiveCell is a predefined Range Object variable that represents the cell in the worksheet with the cursor box around it. The follow-ing function replaces the contents of the active cell with a string representation of the contents. We use the property Formula ; this property holds the text in the cell as a string and can be changed. Sub ToString() ActiveCell.Formula = “’” & _ ActiveCell.Formula End Sub 1048 Chapter 39 The Selection Another very useful predefined variable is the Selection . This variable represents the currently selected item in Excel. Unlike the ActiveCell variable, Selection is not limited to a range and can be any selection (range, chart, and many more). We suggest that you check the type using the TypeName function. Methods are functions contained within an object. Methods are used to manipulate the object. Like properties, methods can be accessed using the Dot (.) operator. The line between methods and properties is sometimes very fuzzy. The following subroutine demonstrates some methods of the Range Object , and use of the predefined variable Selection : Before After Sub SelectBlank() If UCase(TypeName(Selection)) < > “RANGE” _ Then Exit Sub Selection.SpecialCells(xlCellTypeBlanks). _ Select End Sub The first line checks to see if the current selection is a range and stops the subroutine if it is not; a message would have been appropriate under non-educational circumstances. 1049 Objects and Add-Ins The first part of the second line Selection.SpecialCells (xlCellTypeBlanks) uses the SpecialCells method of the Range Object to return a Range containing all the blank cells in the current selection. The Select method of the returned Range is activated to select it. Before After 39.3 The Range Object In the previous section we encountered some predefined Range Object vari- ables. This section demonstrates the use of ranges in VBA and presents more of the properties and methods of the Range Object . A Range as a Parameter to a Function In this subsection we build a function that accepts a Range as a parameter. Our new function, named MeanReturn , accepts a column range of asset prices as a parameter and computes and returns the mean return of the assets in the column. Recall that the return of an asset for period t i s rPrice Price Pricettt t=− − −1 1 and the mean return of an asset is rNrt tN = =∑1 1 . An auxiliary function AssetReturn is used to compute r t . 1050 Chapter 39 Function MeanReturn(Rng) NumRows = Rng.Rows.Count Prices = Rng.Value T = 0 For i = 2 To NumRows T = T + AssetReturn(Prices(i - 1, 1), _ Prices(i, 1)) Next i MeanReturn = T / (NumRows - 1) End Function Lines of note: • NumRows = Rng.Rows.Count In this line the Dot operator is used twice. Rng is our Range object. Rows is property of the Range object so Rng.Rows is an object of the Collection type that represents all the rows in our range. Count is a property of Collection type objects that stores the number of members in the collection, so Rng.Rows.Count is a variable that stores the number of rows in our range. • Prices = Rng.Value Value is a property of the Range object containing the values of all the cells in the range. Value is of the type Variant . If the range is more than one cell in size Value is a two-dimensional array. The first index of Value is the row index starting from 1, and the second index is the column index staring from 1. 1051 Objects and Add-Ins The Range Property The Range property is one way to access a range on a worksheet. Range is a property of many Excel objects. When used on its own, as in the next sub- routine, Range is a short way of writing ActiveSheet.Range . 1 2345678AB C 100 110 10.00% <-- =(A3-A2)/A2121 10.00% <-- =(A4-A3)/A3145 19.83% <-- =(A5-A4)/A4174 20.00% <-- =(A6-A5)/A5 14.96% <-- =AVERAGE(B3:B6)14.96% <-- =MeanReturn(A2:A6)MEANRETURN IN ACTION Sub RangeDemo() Range(“A2”).Formula = 23 End Sub As expected, the subroutine will set the formula in cell A2 of the active worksheet to 23. Before After 1052 Chapter 39 The next subroutine sets the formula of each cell in the range A2:C3 of the active worksheet to 23. Sub RangeDemo1() Range(“A2:C3”).Formula = 23 End Sub Another way of addressing a range of cells using the Range property is demonstrated by the next subroutine. The subroutine sets the formula of each cell in the range A2:C3 of the active worksheet to 23. The first argument to Range is the cell in the top left corner of the range, and the second is the cell in the bottom right corner of the range. Sub RangeDemo2() Range(“A2”, “C3”).Formula = 23 End Sub Range is also a property of the Range object. The range returned by Range when used this way is relative to the Range object. The next subrou- tine sets the formula of the cell C3 of the active worksheet to 999. Sub RangeDemo3() Range(“B2”).Range(“B2”).Formula = 999 End Sub 1053 Objects and Add-Ins Note: Range(“B2”) returns the range (or cell) B2 of the active worksheet. Range(“B2”).Range(“B2”) returns the cell B2 of the range that has B2 as the top left corner. In worksheet terms, Range(“B2”).Range(“B2”) returns the cell C3. The next subroutine sets the formula of each cell in the range C2:D3 of the active worksheet to 23. The subroutine uses the cell C2 as a starting point. Sub RangeDemo4() Range(“C2”).Range(“A1”, “B2”).Formula = 23 End Sub Note: Range(“C2”) is the same as Range(“C2”).Range(“A1”) and refers to the cell C2 in the worksheet. Range(“C2”).Range(“B2”) refers to the cell D3 in the worksheet, B2 means one column to the left and one line down. And so Range(“C2”).Range(“A1”, “B2”) is the same as Range(“C2”, “D3”) . 39.4 The With Statement The With statement allows you to perform a series of statements on a speci-fied object without restating the obvious (the object ’ s name and its pedigree, which can be very long). If you have more than one property to change or more than one method to use for a single object, use the With statement. With statements make your procedures run faster, and help you avoid repeti-tive typing. The following, somewhat contrived, subroutine sets some proper-ties of the font of the cell in the top left-hand corner of the current region of the active cell. The font is set to be Arial, bold, and 15 points in size. 1054 Chapter 39 And here is the same subroutine using the With statement: Sub WithoutDemo() ActiveCell.CurrentRegion.Range(“A1”). _ Font.Bold = True ActiveCell.CurrentRegion.Range(“A1”). _ Font.Name = “Arial” ActiveCell.CurrentRegion.Range(“A1”). _ Font.size = 15 End Sub Sub WithDemo() With ActiveCell.CurrentRegion. _ Range(“A1”).Font .Bold = True .Name = “Arial” .size = 15 End With End Sub Notice the Dot (.) operator before the properties in the With statement. Recall from Chapter 38 that ActiveCell.CurrentRegion is the con- tiguous range of non-empty cells around the active cell (C3 in the screen shots), the same range that would be selected by pressing [Ctrl] + A in the worksheet (A1:D4 in the screen shots). Before 1055 Objects and Add-Ins 39.5 Collections A Collection is a set of items that can be referred to as a unit. Members can be added using the Add method and removed using the Remove method. Specific members can be referred to using an integer index. The number of members currently in a Collection is available via the Count method. Our use of Collections will be restricted to using the (quite numerous) arsenal of Collections that are part of the Excel Object Model, to name but a few, Range is a collection of cells, Worksheets is a collection of all the worksheets in a workbook, and Workbooks is a collection of all the open workbooks in Excel. The For Each Statement in Use with Arrays and Collections The For Each statement is a variation of the For loop. This statement comes in two distinct flavors. The first variation uses the statement to loop over a VBA array as demonstrated in the following subroutine: After 1056 Chapter 39 Points of note: 1. The current member of the array is available to the statements within the loop body through the loop variable ( Element in the above function). 2. The loop variable ( Element in the above example) has to be of the type Variant irrespective of the array type. 3. Changes to Element will not be reﬂ ected in the actual array. Notice that the changes to Element in line 8 are not re ﬂ ected in y . 4. You don ’ t need to know the number of dimensions or the range of indices to loop over the array. Sub ForEachDemo() Dim A(4) For i = 0 To 4: A(i) = i * i: Next i x = “x is: “ y = “y is: “ For Each Element In A x = x & vbTab & Element Element = Element * 2 Next Element For Each Element In A y = y & vbTab & Element Next Element MsgBox x & vbCrLf & y, , “For Each Demo” End Sub 1057 Objects and Add-Ins The For Each Statement in Use with Collections The second version of the For Each statement loops over Collections : Sub ZeroRange() Set Rng = ActiveCell.CurrentRegion For Each Cell In Rng Cell.Formula = 0 Next Cell End Sub Here is what happens when you run the subroutine: 1058 Chapter 39 Points of note: 1. Ranges are collections and so the variable Rng is a collection of all the cells in the current region of the active cell (C3:D15 in our example). 2 . Cell is a variable used to iterate over all the members of the collection. 3 . Cell has to be one of the following types: Variant , Object , or the specific type of element the Collection is made of. (Recall that all vari- ables are of type Variant unless specifically defined.) 4 . Cell refers to the actual member of the Collection , and changes to Cell will be reflected in the Collection . 5. A complete explanation of the use of the Set statement is beyond the scope of this book. For our purposes, just prefix the reserved word Set to all object assignments. Before After 1059 Objects and Add-Ins The Workbooks Collection and the Workbook Object All the currently open workbooks are represented by a Workbook object in the Workbooks Collection . The following subroutine lists all open workbooks: Sub ListOpenWorkbooks() Temp = “List of open Workbooks” & _ “ Created on:” & FormatDateTime(Date, _ vbLongDate) _ & “ At: “ & FormatDateTime(Time, _ vbLongTime) For Each Element In Workbooks Temp = Temp & vbCrLf & Element.FullName Next Element MsgBox Temp, vbOKOnly, “List of open _ Workbooks” End Sub 1060 Chapter 39 Lines of note: Temp = “List of open Workbooks” & _ “ Created on:” & _ FormatDateTime(Date, vbLongDate) _ & “ At: “ & _ FormatDateTime(Time, vbLongTime) • The Date function returns the current system date. • The Time function returns the current system time. • The FormatDateTime function formats Date and Time variables for display. For Each Element In Workbooks Temp = Temp & vbCrLf & Element.FullName Next Element The For statement loops over the entire Workbooks Collection . On each iteration, Element is one of the Workbook objects in the Collection . FullName is a property of the Workbook object containing the full path name of the workbook. The Worksheets Collection and the Worksheet Object All the worksheets in a workbook are Worksheet objects in the Worksheets Collection that is a property of the Workbook object. We can use the Worksheets Collection without an object as a short form for ActiveWorkbook.Worksheets . 1061 Objects and Add-Ins 39.6 Names In Excel you can use user-defined names to refer to a cell or a range of cells. Use easy-to-understand names, such as Products, to refer to hard-to-understand ranges, such as Sales!C20:C30 . Using names can make for- mulas easy to read: Compare the formula = sum(‘sheet12’!a10:a10) to = sum(lastYearSales) . This section deals with the VBA side of names. Naming a Range Using a Subroutine The following subroutine gives the name “Jon” to the cells selected. Sub NameSelection() Names.Add “Jon”, “ = ” & _ Selection.Address End Sub Select cells A2:B3 and run the subroutine. The next two screenshots show the Excel name box before and after we operate the NameSelection subroutine: Before 1062 Chapter 39 Names is a Collection of all the names in the active workbook. Add is a method of the Names Collection used to add members to the collec- tion. We use only the first two parameters of the method. The first parameter “Jon” is the name to add to the Names Collection . The second param- eter is a string containing the address, formula, or value to which the added name refers, preceded by = . Looking for Defined Names The name “Jon” has just now been defined, and we can use it in the workbook as demonstrated in the following screen shot. Notice that whatever capitaliza-tion you use, Excel reverts to the original “Jon.” The name “Jon” is not directly available in VBA as demonstrated by the fol-lowing function: After 1063 Objects and Add-Ins Function SumJon() SumJon = Application.WorksheetFunction. _ Sum(Jon) End Function Referring to a Named Range To get to values in a named range we can use the built-in function Application.Evaluate , as demonstrated by the next function. Note that the function is designed to be used as an Array Function and the use of Application.Volatile to make sure the value gets updated whenever a change is made to the workbook. 1 2 3AB C 10 <-- =SUM(Jon) 0 <-- =SumJon()SUM(Jon) IN ACTION Function JonAsArray() Application.Volatile JonAsArray = Application.Evaluate(“Jon”) End Function Referring to the actual range the name refers to is beyond the scope of this book. 1 2 3AB C 1 3 <-- {=JonAsArray()} 2 4 <-- {=JonAsArray()}JonASARRAY IN ACTION 1064 Chapter 39 39.7 Add-Ins and Integration An Excel Add-In is a file that Excel can load when it starts up. The file contains VBA code that adds additional functionality to Excel, usually in the form of new functions. Add-Ins provide an excellent way of increasing the power of Excel and they are the ideal vehicle for distributing your custom functions. This section shows you how to convert an Excel Workbook containing VBA functions to an Add-In, and how to load and use Add-Ins in Excel and VBA. The process is somewhat arcane and the steps below should be followed in the order in which they are presented. Create and Debug Your Base Workbook As editing an Add-In once it ’ s created is very difficult, it is important that the original workbook on which the Add-In is based is kept intact and as a work-book. For this demonstration we have created a workbook containing one worksheet and a VBA project containing one module with one function and one subroutine. 1065 Objects and Add-Ins Convert the Base Workbook to an Add-In To make the Add-In, save the workbook as an Add-In. Select Save As from the Excel file menu and change Save as type to “Excel Add-In (*.xlam).” The Save in location will change to the Add-Ins directory on your computer. You may want to navigate to a different location (we tend to keep files together). Now click Save . You may want to use a new name for the Add-In (we did not). 1066 Chapter 39 Install and Use an Add-In from an Excel Worksheet Installing an Add-In is done on a per computer basis (actually per computer user basis). So we do not get confused with the chapter we suggest you close Excel and reopen it with a brand new Excel workbook. Select Developer | Add-Ins . The following dialogue should be presented (your names may vary): 1067 Objects and Add-Ins Click Browse and navigate to the location of your Add-In. Select it and click OK . Notice that a new Add-In is available and activated. Click OK to close the Add-Ins dialogue. All the functions in our Add-in are now available to all workbooks in Excel. To verify insert a formula in a cell (A1), select the cell next to the cell with the formula (B1), and press [Alt] + F8. You should get the Macro dialogue box. Notice that, sadly, annotate is not on the list, but if you type “annotate” in the Macro name box, then the Run button will become available and when pressed will produce the expected results. 1068 Chapter 39 39.8 Summary This chapter discussed two separate topics. We started with a more extensive discussion of objects, which underlie the VBA programming concept. Objects allow you to be much more parsimonious in expressing your programming references. We finished the chapter with a discussion of how to build Add-Ins in Excel. Exercises 1. Suppose you have a spreadsheet with a series of numbers and formulas: Suppose you want to turn this into: 1069 Objects and Add-Ins Write a subroutine that does this. Your subroutine should: • Put in a set of parentheses and multiply the cell contents by 100. • Move down one cell (see ActiveCellDemo1 , section 39.1). • Ask if you want to repeat the process (if “yes,” it should do it; if “no,” the subroutine should exit). Note: The parentheses have to come after the “ = .” The Right function might be used for this operation. You may want to refer to section 39.2 for more information on the MsgBox function and the values it returns. 2. Rewrite the subroutine in exercise 1 so that it deals correctly with the end of the series. One possible treatment is not to ask to repeat the process when the last cell in the series is dealt with. Hint: For this subroutine it might be useful to think of the last cell in the series as the cell that fulfills the criterion Cell.Item(2,1).Formula = ”” (see section 39.2). 3. Write a subroutine that multiplies all cells in the current region by 2. 4. Rewrite the subroutine in exercise 3 so that its action is dependent on the cell ’ s contents. • If the cell contents is a formula, it will be replaced by the same formula multiplied by 2. • If the cell contents is a number, it will be replaced by a number equal to the old number multiplied by 2. • On all other cells in the current region, nothing will be done. Note: To make life easier, you may assume, for the purposes of this exercise, that a formula is anything beginning with “ = ” and a number is anything beginning with the characters “0” to “9.” 5. Rewrite the subroutine in exercise 4 so that it uses another method (the correct one) to detect the existence of a formula in a cell. Look at the different properties of the Range object in the Help file. 6. The annotations (using Getformula ) for worksheet formulas in this book were done with a subroutine. For example, running the subroutine on this worksheet 1070 Chapter 39 produces the following: Write a subroutine to perform the annotation. If the cell immediately to the right of the active cell is not empty, the subroutine should overwrite it with Getformula only after receiving confirmation from the user. 7. The Selection object represents the current selection in the worksheet. Selection is usually, and for our purposes always, a Range object. Rewrite the subroutine in exercise 6 so that it works on a selected range. Note the following: If the selected range is a single cell, activate the subroutine in exercise 6. If the selected range is a column, activate a subroutine repeatedly for all cells in the column. If the selected range is more than one column, the subroutine should abort with an appro-priate message. 8. Array functions are functions that return more than one value. For example, the Transpose worksheet function returns its argument turned by 90 degrees, as the following worksheet demonstrates: 1 2 34 5ABCDE F 1234 1 < - - { = T R A N S P O S E ( A 2 : D 2 ) } 2 <-- {=TRANSPOSE(A2:D2)} 3 <-- {=TRANSPOSE(A2:D2)}4 <-- {=TRANSPOSE(A2:D2)}TRANSPOSE IN ACTION The curly brackets were not typed in but were added by Excel to indicate an array formula. The following subroutine created the preceding worksheet: 1071 Objects and Add-Ins Sub TransposeMe() Range(“E3:E6”).FormulaArray = “ = Transpose(A3:D3)” End Sub The next subroutine is a more complicated version that could deal with any size or place in the row range: Sub TransposeMeToo() C = Selection.Columns.Count R = Selection.Rows.Count If C = 1 Then ‘Its a Column MsgBox “I don ’ t do Columns” ElseIf R = 1 Then ‘Its a Row Selection.Cells(1, C + 1).Range(“A1:A” & C). _ FormulaArray = “ = Transpose(“ _ & Selection.AddressLocal(False, False) & “)” Else ‘What is it? MsgBox “What is it?” End If End Sub Rewrite TransposeMeToo so it could deal with column ranges as well as row ranges. 9. Rewrite TransposeMeToo of exercise 8 so it could deal with all ranges. Selected References Note: This bibliography is not intended to be extensive. We give the refer- ences mentioned in Financial Modeling and occasionally add books and articles that may help the reader expand his/her horizons to more advanced topics. Sometimes the same reference appears several times in different sec-tions. Sometimes we give the references for a number of chapters together, and at other times we reference single chapters. Chapters 1–6: Corporate Finance and Valuation Benninga , S. , and O. Sarig . 1997 . Corporate Finance: A Valuation Approach . McGraw-Hill . Benninga , S. , and O. Sarig . 2003 . Risk, Returns and Values in the Presence of Differential Taxa- tion . Journal of Banking and Finance . Brealey , R. A. , S. C. Myers , and F. Allen . 2013 . Principles of Corporate Finance , 11th ed . McGraw-Hill . DeAngelo , H. , L. DeAngelo , and D. J. Skinner . 2008 . Corporate Payout Policy . Foundations and Trends in Finance . Dittmar , A. K. , and R. F. Dittmar . 2004 . Stock Repurchase Waves: An Explanation of the Trends in Aggregate Corporate Payout Policy . Working paper, University of Michigan. Fruhan , W. E. 1979 . Financial Strategy: Studies in the Creation, Transfer, and Destruction of Shareholder Value . Irwin . Gordon , M. J. 1959 . Dividends, Earnings and Stock Prices . Review of Economics and Statistics . McKinsey & Company , T. Koller , M. Goedhart , and D. Wessels . 2010 . Valuation: Measuring and Managing the Value of Companies , 5th ed . Wiley . Ross , S. A. , R. W. Westerfield , and J. Jaffe . 2010 . Corporate Finance , 9th ed . McGraw-Hill . Chapter 7: Leasing Abdel-Khalik , A. R. 1981 . Economic Effects on Lessees of FASB Statement No. 13, Accounting for Leases . Financial Accounting Standards Board . Copeland , T. E. , and J. F. Weston . 1982 . A Note on the Evaluation of Cancelable Operating Leases . Financial Management . Financial Accounting Standards Board . 1976 . Statement No. 13: Accounting for Leases . Stamford , Conn . Franks , J. R. , and S. D. Hodges . 1978 . Valuation of Financial Lease Contracts: A Note . Journal of Finance . Levy , H. , and M. Sarnat . 1979 . On Leasing, Borrowing and Financial Risk . Financial Management . Lewellen , W. G. , M. S. Long , and J. J. McConnell . 1979 . Asset Leasing in Competitive Capital Markets . Journal of Finance . McConnell , J. J. , and J. S. Schallheim . 1983 . Valuation of Asset Leasing Contracts . Journal of Financial Economics . Myers , S. C. , D. A. Dill , and A. J. Bautista . 1976 . Valuation of Financial Lease Contracts . Journal of Finance . 1074 Selected References Ofer , A. R. 1976 . The Evaluation of the Lease versus Purchase Alternative . Financial Management . Schallheim , J. S. 1994 . Lease or Buy? Principles for Sound Decision Making . Harvard Business School . Chapters 8–12: Portfolio Calculations Bengtsson , C. , and J. Holst . 2002 . On Portfolio Selection: Improved Covariance Matrix Estimation for Swedish Asset Returns . Working paper, Lund University. Black , F. 1972 . Capital Market Equilibrium with Restricted Borrowing . Journal of Business . Bodie , Z. , A. Kane , and A. J. Marcus . 2011 . Investments , 9th ed . McGraw-Hill/Irwin . Burton , G. M. 2005 . Reflections on the Efficient Market Hypothesis: 30 Years Later . Financial Review . Chan , L. K. C. , J. Karceski , and J. Lakonishok . 1999 . On Portfolio Estimation: Forecasting Covari- ances and Choosing the Risk Model . Review of Financial Studies . D’Avolio , G. M. 2003 . The Market for Borrowing Stock . Journal of Financial Economics . Disatnik , D. , and S. Benninga . 2007 . Shrinking the Covariance Matrix—Simpler Is Better . Journal of Portfolio Management . Elton , E. J. , and M. J. Gruber . 1973 . Estimating the Dependence Structure of Share Prices . Journal of Finance . Elton , E. J. , M. J. Gruber , S. J. Brown , and W. N. Goetzmann . 2009 . Modern Portfolio Theory and Investment Analysis , 8th ed . Wiley . Elton , E. J. , M. J. Gruber , and T. Ulrich . 1978 . Are Betas Best? Journal of Finance . Fama , E. , and K. French . 1997 . Industry Costs of Equity . Journal of Financial Economics . Frost , P. , and Savarino , J. 1986 . An Empirical Bayes Approach to Efficient Portfolio Selection . Journal of Financial and Quantitative Analysis . Green , R. C. 1986 . Positively Weighted Portfolios on the Minimum-Variance Frontier . Journal of Finance . Green , R. C. , and B. Hollifield . 1992 . When Will Mean-Variance Efficient Portfolios Be Well Diversified? Journal of Finance . Jensen , M. C. (Ed.). 1972 . Studies in the Theory of Capital Markets . Praeger . Ledoit , O. , and M. Wolf . 2003 . Improved Estimation of the Covariance Matrix of Stock Returns with an Application to Portfolio Selection . Journal of Empirical Finance . Ledoit , O. , and M. Wolf . 2004 . Honey, I Shrunk the Sample Covariance Matrix . Journal of Port-folio Management . Lintner , J. 1965 . The Valuation of Risky Assets and the Selection of Risky Investments in Stock Portfolios and Capital Budget . Review of Economics and Statistics . Markowitz , H. 1952 . Portfolio Selection . Journal of Finance . Merton , R. C. 1973 . An Analytic Derivation of the Efficient Portfolio Frontier . Journal of Finan- cial and Quantitative Analysis . Mossin , J. 1966 . Equilibrium in a Capital Market . Econometrica . Nielsen , L. R. 1987 . Positively Weighted Frontier Portfolios: A Note . Journal of Finance . Roll , R. 1977 . A Critique of the Asset Pricing Theory ’ s Tests, Part I: On Past and Potential Test- ability of the Theory . Journal of Financial Economics . 1075 Selected References Roll , R. 1978 . Ambiguity When Performance Is Measured by the Securities Market Line . Journal of Finance . Sharpe , W. F. 1963 . A Simplified Model for Portfolio Analysis . Management Science . Sharpe , W. F. 1964 . Capital Asset Prices: A Theory of Market Equilibrium Under Conditions of Risk . Journal of Finance . Surowiecki , J. 2003 . Get Shorty . The New Yorker . http://newyorker.com/talk/content /?031201ta_talk_surowiecki . Chapter 13: Black-Litterman Best , M. J. , and R. R. Grauer . 1985 . Capital Asset Pricing Compatible with Observed Market Value Weights . Journal of Finance . Best , M. J. , and R. R. Grauer . 1991 . On the Sensitivity of Mean-Variance-Efficient Portfolios to Changes in Asset Means: Some Analytical and Computational Results . Review of Financial Studies . Bevan , A. , and K. Winkelmann . 1998 . Using the Black-Litterman Global Asset Allocation Model: Three Years of Practical Experience . Goldman-Sachs. Black , F. , and R. Litterman . 1991 . Global Asset Allocation with Equities, Bonds, and Currencies. Goldman-Sachs . (See the disk that accompanies this book.) Chopra , V . K. , and W. Ziemba . 1993 . The Effect of Errors in Means, Variances, and Covariances on Optimal Portfolio Choice . Journal of Portfolio Management . DeMiguel , V . , L. Garlappi , and R. Uppal . 2007 . Optimal versus Naive Diversification: How Inef-ficient Is the 1/N Portfolio Strategy? Review of Financial Studies . Goldman-Sachs . 1999 . The Intuition Behind Black-Litterman Model Portfolios . Author. Jagannathan , R. , and T. Ma . 2002 . Risk Reduction in Large Portfolios: A Role for Portfolio Weight Constraints . Journal of Finance . Kandel , S. , and R. F. Stambaugh . 1995 . Portfolio Inefficiency and the Cross-Section of Expected Returns . Journal of Finance . Litterman , R. 2003 . Modern Investment Management: An Equilibrium Approach . Wiley . Schwartz , T. 2000 . How to Beat the S&P 500 with Portfolio Optimization . Mimeo. Sharpe , W. F. 1974 . Imputing Expected Portfolio Returns from Portfolio Composition . Journal of Financial and Quantitative Analysis . Chapter 14: Event Studies Ball , C. , and W. N. Torous . 1988 , Investigating Security Price Performance in the Presence of Event Date Uncertainty . Journal of Financial Economics . Binder , J. J. 1985 , On the Use of the Multivariate Regression Model in Event Studies . Journal of Accounting Research . Boehmer , E. , J. Musumeci , and A. B. Poulsen . 1991 . Event-Study Methodology Under Conditions of Event-Induced Variance . Journal of Financial Economics . Brown , S. , and J. B. Warner . 1985 . Using Daily Stock Returns: The Case of Event Studies . Journal of Financial Economics . Campbell , J. Y . , A. Lo , and C. McKinley . 1996 . The Econometrics of Financial Markets . Princeton University Press . 1076 Selected References Fama , E. 1976 , Foundations of Finance . Chapters 3 and 4. Basic Books . Fama , E. , L. Fisher , M. Jensen , and R. Roll . 1969 . The Adjustment of Stock Prices to New Infor- mation . International Economic Review . MacKinlay , C. 1997 . Event Studies in Economics and Finance . Journal of Economic Literature . Salinger , M. 1992 . Value Event Studies . Review of Economics and Statistics . Thompson , R. 1995 . Empirical Methods of Event Studies in Corporate Finance . Chapter 29. R. Jarrow et al. (Eds.), Handbooks in OR & MS (V ol. 9). Elsevier Science B.V . Chapters 15–19: Options Bhaghat , S. , J. Brickley , and U. Loewenstein . 1987 . The Pricing Effects of Interfirm Cash Tender Offers . Journal of Finance . Billingsley , P. 1968 . Convergence of Probability Measures . Wiley . Black , F. , and M. Scholes . 1973 . The Pricing of Options and Corporate Liabilities . Journal of Political Economy . Brennan , M. J. , and E. S. Schwartz . 1976 . The Pricing of Equity-Linked Life Insurance Policies with an Asset Value Guarantee . Journal of Financial Economics . Brennan , M. J. , and R. Solanki . 1981 . Optimal Portfolio Insurance . Journal of Financial and Quantitative Analysis . Copeland , T. E. , and J. F. Weston Shastri . 2003 . Financial Theory and Corporate Policy . Addison-Wesley . Cox , J. , and S. A. Ross . 1976 . The Valuation of Options for Alternative Stochastic Processes . Journal of Financial Economics . Cox , J. , and M. Rubinstein . 1985 . Options Markets . Prentice-Hall . Cox , J. , S. A. Ross , and M. Rubinstein . 1979 . Option Pricing: A Simplified Approach . Journal of Financial Economics . Cvitani ć , J. , Z. Wiener , and F. Zapatero . 2006 . Analytic Pricing of Employee Stock Options . Review of Financial Studies . Gatto , M. A. , R. Geske , R. Litzenberger , and H. Sosin . 1980 . Mutual Fund Insurance . Journal of Financial Economics . Haug , E. G. 2006 . The Complete Guide to Option Pricing Formulas , 2nd ed . McGraw-Hill . Hull , J. 2000 . Options Futures, and Other Derivative Securities , 8th ed . Prentice Hall . Hull , J. , and A. White . 2004 . How to Value Employee Stock Options . Financial Analysts Journal . Jacobs , B. 1983 . The Portfolio Insurance Puzzle . Pensions and Investment Age . Jacques , W. E. 1987 . Portfolio Insurance or Job Insurance? Financial Analysts Journal . Jarrow , R. A. , and A. Rudd . 1983 . Option Pricing . Irwin . Knuth , D. E. 1981 . The Art of Computer Programming. Vol. 2: Seminumerical Algorithms . Addison-Wesley . Leland , H. E. 1980 . Who Should Buy Portfolio Insurance? Journal of Finance . Leland , H. E. 1985 . Option Pricing and Replication with Transaction Costs . Journal of Finance . Merton , R. C. 1973 . Theory of Rational Option Pricing . Bell Journal of Economics and Manage- ment Science . Merton , R. C. 1976 . Option Pricing When Underlying Stock Returns Are Discontinuous . Journal of Financial Economics . 1077 Selected References Omberg , E. 2012 . A Note on the Convergence of Binomial-Pricing and Compound-Option Models . Journal of Finance . Pozen , R. C. 1978 . When to Purchase a Protective Put . Financial Analysts Journal . Press , W. H. , B. P. Flannery , S. A. Teukolsky , and W. T. Vetterling . 2007 . Numerical Recipes: The Art of Scientific Computing , 3rd ed . Cambridge University Press . Rubinstein , M. 1985 . Alternative Paths to Portfolio Insurance . Financial Analysts Journal . Rubinstein , M. , and H. E. Leland . 1981 . Replicating Options with Positions in Stock and Cash . Financial Analysts Journal . Chapter 19: Real Options Amram , M. , and N. Kulatilaka . 1998 . Real Options: Managing Strategic Investment in an Uncer-tain World . Harvard Business School Press . Benninga , S. , and E. Tolkowsky . 2004 . Real Options—An Introduction and an Application to R&D Valuation . Engineering Economist . Dixit , A. K. , and R. S. Pindyck . 1995 . The Options Approach to Capital Investment . Harvard Business Review . Luehrman , T. A. 1998 . Investment Opportunities as Real Options: Getting Started on the Numbers . Harvard Business Review . Trigeorgis , L. 1993 . Real Options and Interactions with Financial Flexibility . Financial Management . Trigeorgis , L. 1996 . Real Options: Managerial Flexibility and Strategy in Resource Allocation . MIT Press . Chapters 20–21: Duration and Immunization Altman , E. 1989 . Measuring Corporate Bond Mortality and Performance . Journal of Finance . Altman , E. , and V . M. Kishore . 1996 . Almost Everything You Wanted to Know About Recoveries on Defaulted Bonds . Financial Analysts Journal . Babcock , G. 1985 . Duration as a Weighted Average of Two Factors . Financial Analysts Journal . Bierwag , G. O. 1977 . Immunization, Duration, and the Term Structure of Interest Rates . Journal of Financial and Quantitative Analysis . Bierwag , G. O. 1978 . Measures of Duration . Economic Inquiry . Bierwag , G. O. , G. G. Kaufman , and A. Toevs . 1983a . Duration: Its Development and Use in Bond Portfolio Management . Financial Analysts Journal . Bierwag , G. O. , G. G. Kaufman , and A. Toevs . 1983b . Innovations in Bond Portfolio Management: Duration Analysis and Immunization . JAI Press . Bierwag , G. O. , G. G. Kaufman , R. Schweitzer , and A. Toevs . 1981 . The Art of Risk Management in Bond Portfolios . Journal of Portfolio Management . Billingham , C. J. 1983 . Strategies for Enhancing Bond Portfolio Returns . Financial Analysts Journal . Chance , D. M. 1983 . Floating Rate Notes and Immunization . Journal of Financial and Quantita- tive Analysis . Chance , D. M. 1996 . Duration Convexity, and Time as Components of Bond Returns . Journal of Fixed Income . 1078 Selected References Chua , J. H. 1984 . A Closed-Form Formula for Calculating Bond Duration . Financial Analysts Journal . Cooper , I. A. 1977 . Asset Values, Interest Rate Changes, and Duration . Journal of Financial and Quantitative Analysis . Cox , J. C. , J. E. Ingersoll , and S. A. Ross . 1979 . Duration and Measurement of Basis Risk . Journal of Business . Fisher , L. , and R. L. Weil . 1971 . Coping with the Risk of Market-Rate Fluctuations: Returns to Bondholders from Naive and Optimal Strategies . Journal of Business . Gultekin , B. , and R. J. Rogalski . 1984 . Alternative Duration Specifications and the Measurement of Basis Risk: Empirical Tests . Journal of Business . Hicks , J. 1939 . Value and Capital . Clarendon Press . Ingersoll , J. E. , Jr. , J. Skelton , and R. L. Weil . 1978 . Duration Forty Years Later . Journal of Financial and Quantitative Analysis . Leibowitz , M. L. , and A. Weinberger . 1981 . The Uses of Contingent Immunization . Journal of Portfolio Management . Macaulay , F. R. 1938 . Some Theoretical Problems Suggested by Movements of Interest Rates, Bond Yields and Stock Prices in the United States Since 1856 . National Bureau of Economic Research . McCullogh , J. H. 1990 . U.S. Term Structure Data, 1946–1987 . Handbook of Monetary Economics (V ol. 1). North-Holland . Ott , R. A. , Jr. 1986 . The Duration of an Adjustable-Rate Mortgage and the Impact of the Index . Journal of Finance . Redington , F. M. 1952 . Review of the Principle of Life-Office Valuations. Journal of the Institute of Actuaries . Reprinted in G. A. Hawawini (Ed.), Bond Duration and Immunization: Early Devel- opments and Recent Contributions . Garland , 1972. Samuelson , P. A. 1945 . The Effects of Interest Rate Increases on the Banking System . American Economic Review . Smith , D. J. 1998 . A Note on the Derivation of Closed-Form Formulas for Duration and Convexity Statistics on and between Coupon Dates . Journal of Financial Engineering . Weil , R. L. 1973 . Macaulay ’ s Duration: An Appreciation . Journal of Business . Chapter 22: Term Structure Modeling Adams , K. J. , and D. R. Van Deventer . 1994 . Fitting Yield Curves and Forward Rate Curves with Maximum Smoothness . Journal of Fixed Income . Annaert , J. , G. P. Claes , M. J. K. Ceuster , and H. Zhang . 2013 . Estimating the Spot Rate Curve Using the Nelson-Siegel Model: A Ridge Regression Approach . International Review of Econom- ics and Finance . Chambers , D. , W Carleton , and D. Waldman . 1984 . A New Approach to Estimation of Term Structure of Interest Rates . Journal of Financial and Quantitative Studies . Coleman , T. S. , L. Fisher , and R. Ibbotson . 1992 . Estimating the Term Structure of Interest from Data That Include the Prices of Coupon Bonds . Journal of Fixed Income . Coleman , T. , L. Fisher , and R. Ibbotson . n.d . U.S. Treasury Yield Curves 1926–1994 . Moody ’ s Investor Service . Diament , P. 1993 . Semi-Empirical Smooth Fit to the Treasury Yield Curve . Journal of Fixed Income . Fabozzi , F. J. 1996 . Bond Markets, Analysis and Strategies . Prentice Hall . 1079 Selected References Fisher , M. , and D. Zervos . 1996 . Yield Curve . In H. R. Varian (Ed.), Computational Economics and Finance: Modeling and Analysis with Mathematica . Springer . Ho , T. S. Y . 1992 . Key Rate Durations: Measures of Interest Rate Risk . Journal of Fixed Income . Jarrow , R. A. . 1996 . Modeling Fixed Income Securities and Interest Rate Options . McGraw-Hill . Litterman , R. , and J. Scheinkman . 1991 . Common Factors Affecting Bond Returns . Journal of Fixed Income . Mann , S. V . , and P. Ramanlal . 1997 . Relative Performance of Yield Curve Strategies . Journal of Portfolio Management . McCulloch , J. F. 1971 . Measuring the Term Structure of Interest Rates . Journal of Business . McCulloch , J. F. 1975 . The Tax-Adjusted Yield Curve . Journal of Finance . Nelson , C. , and A. Siegel . 1987 . Parsimonious Modeling of Yield Curves . Journal of Business . Shea , G. 1984 . Pitfalls in Smoothing Interest Rate Term Structure Data: Equilibrium Models and Spline Approximations . Journal of Financial and Quantitative Analysis . Shea , G. 1985 . Interest Rate Term Structure Estimation with Exponential Splines: A Note . Journal of Finance . Stigum , M. , and F. L. Robinson . 1996 . Money Market & Bond Calculations . Irwin . Suits , D. B. , A. Mason , and L. Chan . 1978 . Spline Functions Fitted by Standard Regression Methods . Review of Economics and Statistics . Sundaresan , S. 1997 . Fixed Income Markets and Their Derivatives . South-Western College . Taggart , R. A. , Jr. 1996 Quantitative Analysis for Investment Management . Prentice-Hall . Tuckman , B. 1996 . Fixed-Income Securities . Wiley . Vasicek , O. , and G. Fong . 1982 . Term Structure Estimation Using Exponential Splines . Journal of Finance . Chapter 22: Term Structure Diebold , F. X. , and C. Li . 2006 . Forecasting the Term Structure of Government Bond Yields . Journal of Econometrics . Gürkaynak , R. S. , B. Sack , and J. H. Wright . 2007 . The U.S. Treasury Yield Curve: 1961 to the Present . Journal of Monetary Economics . Nelson , C. , and A. Siegel . 1987 . Parsimonious Modeling of Yield Curves . Journal of Business . Svensson , L. E. O. 1995 . Estimating Forward Interest Rates with the Extended Nelson & Siegel Method . Sveriges Riksbank Quarterly Review . Chapter 23: Expected Bond Returns Altman , E. I. , and A. C. Eberhart . 1994 . Do Seniority Provisions Protect Bondholders’ Invest-ments? Journal of Portfolio Management . Altman , E. I. , and V . M. Kishore . 1996 . Almost Everything You Wanted to Know About Recoveries on Defaulted Bonds . Financial Analysts Journal . Altman , E. I. , and S. Nammacher . 1984 . The Default Rate Experience of High Yield Corporate Debt . Financial Analysts Journal . Amihud , Y . , and H. Mendelson . 1991 . Liquidity, Maturity, and the Yields on U.S. Treasury Securi- ties . Journal of Finance . 1080 Selected References Antonov , A. , and Y . Yanakieva . 2004 . Transition Matrix Generation . International Conference on Computer Systems and Technologies. Bakshi G. , D. B. Madan , and F. X. Zhang . 2004 . Understanding the Role of Recovery in Default Risk Models: Empirical Comparisons and Implied Recovery Rates . Unpublished working paper. Cantor , R. 2001 . Moody ’ s Investors Service Response to the Consultative Paper Issued by The Basel Committee on Banking Supervision and Its Implications for the Rating Agency Industry . Journal of Banking and Finance . Carty , L. V . , and J. S. Fons . 2003 . Measuring Changes in Corporate Credit Quality . Moody ’ s Special Report, November. Chacko , G. 2005 . Liquidity Risk in the Corporate Bond Markets . Working paper, Harvard Busi- ness School. Cochrane , J. H. 2001 . Asset Pricing . Princeton University Press . Crosbie P. J. , and J. R. Bohn . 2002 . Modeling Default Risk . KMV . Driessen , J. , and F. de Jong . 2005 . Liquidity Risk Premia in Corporate Bond Markets . Discussion paper, University of Amsterdam. Duffie , D. 1998 . Defaultable Term Structure Models with Fractional Recovery of Par . Working paper, Stanford University. Duffie , D. , and K. J. Singleton . 1997 . An Econometric Model of the Term Structure of Interest- Rate Swap Yields . Journal of Finance . Duffie , D. , and K. J. Singleton . 1999 . Modeling Term Structures of Defaultable Bonds . Review of Financial Studies . Dynkin L. , A. Gould , J. Hyman , V . Konstantinovsky , and B. Phelps . 2006 . Quantitative Manage- ment of Bond Portfolios . Princeton University Press . Edwards , A. K. , L. E. Harris , and M. S. Piwowar . 2004 . Corporate Bond Market Transparency and Transaction Costs . UWFC. Fama , E. , and K. R. French . 1993 . Common Risk Factors in the Returns of Stocks and Bonds . Journal of Financial Economics . Finger , C. C. , V . Finkelstein , G. Pan , J. P. Lardy , T. Ta , and J. Tierney . 2002 . Credit Grades Techni- cal Document, RiskMetrics Group, Inc. Gebhardt W. R. , S. Hvidkjaer , and B. Swaminathan . 2005 . The Cross-Section of Expected Cor- porate Bond Returns: Betas or Characteristics? Journal of Financial Economics . Hagan , P. , and G. West . 2005 . Methods for Constructing a Yield Curve . Wilmott Magazine . Hickman , W. B. 1958 . Corporate Bond Quality and Investor Experience . Princeton University Press . Jafry , Y . , and T. Schuermann . 2004 . Metrics for Comparing Credit Migration Matrices . Journal of Banking and Finance . Jarrow , R. A. , D. Lando , and S. M. Turnbull . 1997 . A Markov Model for the Term Structure of Credit Spreads . Review of Financial Studies . Jarrow , R. A. , and S. M. Turnbull . 1995 , Pricing Derivatives on Financial Securities Subject to Credit Risk . Journal of Finance . Lando , D. 1998 . On Cox Processes and Credit Risky Securities . Review of Derivatives Research . Lando , D. 2004 . Credit Risk Modeling Theory and Applications . Princeton University Press . Löffler , G. 2004 . An Anatomy of Rating Through the Cycle . Journal of Banking and Finance . Löffler , G. 2005 . Avoiding the Rating Bounce: Why Rating Agencies Are Slow to React to New Information . Journal of Economic Behavior and Organization . Longstaff , F. A. 2001 . The Flight-to-Liquidity Premium in U.S. Treasury Bond Prices . Journal of Business . 1081 Selected References Longstaff , F. A. , S. Mithal , and E. Neis . 2004 . Corporate Yield Spreads: Default Risk or Liquidity? New Evidence from the Credit-Default Swap Market . Journal of Finance . Merton , R. C. 1974 . On the Pricing of Corporate Debt: The Risk Structure of Interest Rates . Journal of Finance . Moody ’ s Special Report . 1992 . Corporate Bond Defaults and Default Rates . Moody ’ s Investors Service . Nelson , C. , and A. Siegel . 1987 . Parsimonious Modeling of Yield Curves , Journal of Business . Parnes , D. 2005 . Homogeneous Markov Chain, Stochastic Economics, and Non-Homogeneous Models for Measuring Corporate Credit Risk . Working paper, University of South Florida. Subramanian , K. V . 2001 . Term Structure Estimation in Illiquid Markets . Journal of Fixed Income . Yu , F. 2002 . Modeling Expected Return on Defaultable Bonds . Journal of Fixed Income . Chapters 24–30: Monte Carlo Abramowitz , M. , and I. A. Stegun . 1965 . Handbook of Mathematical Functions . Dover . Acworth , P. , M. Broadie , and P. Glasserman . 1996 . A Comparison of Some Monte Carlo and Quasi-Monte Carlo Techniques for Option Pricing . In Niederreiter et al. (Eds.), Monte Carlo and Quasi-Monte Carlo Methods . Springer . Bailey , D. H. , J. M. Borwein , and P. B. Borwein . 1987 . Ramanujan, Modular Equations, and Approximations to π ; or, How to Compute One Billion Digits of Pi . American Mathematical Monthly . Baker , N. L. , and R. A. Haugen . 2012 . Low Risk Stocks Outperform Within All Observable Markets of the World . http://ssrn.com/abstract = 2055431 . Barone-Adesi , G. , and R. E. Whaley . 1987 . Efficient Analytic Approximation of American Option Values . Journal of Finance . Benninga , S. , and M. Blume . 1985 . On the Optimality of Portfolio Insurance . Journal of Finance . Box , G. E. P. , M. E. Muller . 1958 . A Note on the Generation of Random Normal Deviates . Annals of Mathematical Statistics . Boyle , P. P. 1977 . Options: A Monte Carlo Approach . Journal of Financial Economics . Boyle , P. P. , M. Broadie , M. Glasserman . 1997 . Monte Carlo Methods for Security Pricing . Journal of Economic Dynamics and Control . Boyle , P. P. , and S. H. Lau . 1994 . Bumping Up Against the Barrier with the Binomial Method . Journal of Derivatives . Boyle , P. P. , and Y . K. Tse . 1990 . An Algorithm for Computing Values of Options on the Maximum or Minimum of Several Assets . Journal of Financial and Quantitative Analysis . Boyle , P. P. , and T. V orst . 1992 . Option Replication in Discrete Time with Transaction Costs . Journal of Finance . Broadie , M. , and P. Glasserman . 1997 . Pricing American-Style Securities Using Simulation . Journal of Economic Dynamics and Control . Broadie , M. , P. Glasserman , and G. Jain . 1997 . Enhanced Monte Carlo Estimates for American Option Prices . Journal of Derivatives . Cox , J. , S. A. Ross , and M. Rubinstein . 1979 . Option Pricing: A Simplified Approach . Journal of Financial Economics . Cremers , M. , A. Petajisto , and E. Zitzewitz . 2010 . Should Benchmark Indices Have Alpha? Revisiting Performance Evaluation . http://ssrn.com/abstract = 1108856 . 1082 Selected References Dupire , B. 1998 . Monte Carlo Methodologies and Applications for Pricing and Risk Management . Risk Books . Frazzini , A. , and L. H. Pedersen . 2011 . Betting Against Beta . http://ssrn.com/abstract = 2049939 . Fu , M. , S. B. Laprise , D. B. Madan , Y . Su , and R. Wu . 2001 . Pricing American Options: A Com- parison of Monte Carlo Simulation Approaches . Journal of Computational Finance . Galanti , S. , and A. Jung . 1997 . Low-Discrepancy Sequences: Monte Carlo Simulation of Option Prices . Journal of Derivatives . Gamba , A. 2002 . Real Options Valuation: A Monte Carlo Approach . http://ssrn.com/ abstract = 302613 . Gentle , J. E. 1998 . Random Number Generation and Monte Carlo Methods . Springer . Glasserman , P. 2004 . Monte Carlo Methods in Financial Engineering . Springer . Grant , D. , G. V ora , and D. E. Weeks . 1996a . Path-Dependent Options: Extending the Monte Carlo Simulation Approach . Management Science . Grant , D. , G. V ora , and D. E. Weeks . 1996b . Simulation and Early-Exercise of Option Problem , Journal of Financial Engineering . Haugh , M. 2004 . The Monte Carlo Framework, Examples from Finance and Generating Corre- lated Random Variables . www.columbia.edu/ ∼ mh2078/MCS04/MCS_framework_FEegs.pdf . Haugh , M. B. , and L. Kogan . 2008 . Duality Theory and Approximate Dynamic Programming for Pricing American Options and Portfolio Optimization . In J. R. Birge and V . Linetsky (Eds.), Handbooks in OR & MS (V ol. 15). Elsevier . Heynen , R. C. , and H. M. Kat . 1994a . Crossing Barriers . Risk . Heynen , R. C. , and H. M. Kat . 1994b . Partial Barrier Options . Journal of Financial Engineering . Hong , H G. , and D. A. Sraer . 2012 . Speculative Betas. Available at SSRN . http://ssrn.com/ abstract = 1967462 or http://dx.doi.org/10.2139/ssrn.1967462 . Kanigel , R. 1992 . The Man Who Knew Infinity: A Life of the Genius Ramanujan . Scribner . Knuth , D. E. 1981 . The Art of Computer Programming . Volume 2: Semi-Numerical Algorithms . Addison-Wesley . Lehmer , D. H. 1951 . Mathematical Methods in Large-Scale Computing Units, Proceedings of the 2nd Symposium on Large-Scale Digital Calculating Machinery . Annals of the Computational Laboratory of Harvard University . Harvard University Press . Longstaff , F. A. , and E. S. Schwartz . 2001 . Valuing American Options by Simulation: A Simple Least-Square Approach . Review of Financial Studies . Raymar , S. B. , and M. J. Zwecher . 1997 . Monte Carlo Estimation of American Call Option on the Maximum of Several Stocks . Journal of Derivatives . Rogers , L. C. G. 2002 . Monte Carlo Valuation of American Options . Mathematical Finance . Tavella , D. 2002 . Quantitative Methods in Derivatives Pricing—An Introduction to Computational Finance . Wiley . Tezuka , S. 1998 . Financial Applications of Monte Carlo and Quasi-Monte Carlo Methods . In P. Hellekalek and G. Larcher (Eds.), Random and Quasi-Random Point Sets . Springer . Tilley , J. A. 1998 . Valuing American Options in a Path Simulation Model . In B. Dupire (Ed.), Monte Carlo . Risk Books . Originally published in 1993. Tsitsiklis , J. N. , and B. Van Roy . 2001 . Regression Methods for Pricing Complex American-Style Options . IEEE Transactions on Neural Networks . Willard , G. A. 1997 . Calculating Prices and Sensitivities for Path-Independent Derivative Securi- ties in Multifactor Models . Journal of Derivatives . 1083 Selected References Chapter 28: Value at Risk Beder T. 1996 . V AR: Seductive But Dangerous . Financial Analysts Journal . Jorion , P. 1997 . Value at Risk: the New Benchmark for Controlling Market Risk . McGraw-Hill . Linsmeier , T. J. , and N. D. Pearson . 2000 . Risk Measurement: An Introduction to Value at Risk . Financial Analysts Journal . RiskMetrics . 1995 . Introduction to RiskMetrics . This and other documents can be found at www.riskmetrics.com/techdoc.html . Index AAR (average abnormal return), 347, 349 Abandonment option, 497–505 with equipment sale, 499 state prices with, 500–502, 509–510, 511 value enhancement with, 498–499 valuing as series of puts of, 503–505 valuing of project for, 497–498 Abnormal returns (AR), 331, 334–335 average, 347, 349 cumulative, 331, 334 examples of, 337, 340, 341–342, 346–349, 353 examples of, 337, 338–339, 340, 342, 345, 346, 353, 354 Abs function (Excel), 282 Absolute value, of array of numbers, 282–283 Accounting book values, in corporate valuation, 54–58 balance sheets in, 54–56 efficient markets approach to, 59 enterprise value on, 56, 57 examples of, 55, 56, 57–58 model for, 54–56 Accrued interest for bonds, 569–570, 592–593 for Treasury notes, 569–570 ActiveCell object (VBA), 1034–1035, 1047–1048 Add-Ins, 1064–1067 converting workbook to, 1065–1066 creating workbook for, 1064–1065 installing and using, 1066–1067 uses of, 1064 Add-Ins function (Excel), 869, 882n Add Trendline function (Excel), 93f, 880 Addition of dates in Excel, 865 of matrices, 840 Alignment of text, in Excel, 917 American call options, 362 pricing of, 374–375 binomial model for, 395–398 VBA function in, 400–404 Ampersand (&) operator (VBA), 996 And Boolean operator, 967–968 AndDemo function (VBA), 967–968 Annotation, of spreadsheets, 940 Annual returns, 219 Annualized internal rates of return (IRRs), 870 Annuity Value function (Excel), 530–532 Application.Evaluate function (Excel), in VBA , 1063 Application.Max function (Excel), in VBA , 813 Application.Volatile function (Excel), in VBA , 1063 Application.WorksheetFunction.Combin function (Excel), in VBA, 978 AR. See Abnormal returns (AR) Arbitrage, pricing by, 384–385 Array functions (Excel), 899–911, 1063 annual continuous return using, 905–906 built-in, 899–903 compound annual return using, 904–905 for discount factors, 906 entry into spreadsheet of, 899 Frequency as, 902–903 homemade, 904–906 with matrices, 907–910 matrix with ones on diagonal and zeroes elsewhere created using, 907–908 maximum and maximum off-diagonal elements of matrix using, 908–910 MMult and NInverse in, 902 overview of, 899 replacing off-diagonals of matrix using, 910–911 subtracting constant from a matrix using, 907 Transpose as, 899–900 variance-covariance matrices with, 251 Array of numbers, absolute value of, 282–283 Arrays (VBA) data tables as, 828 Excel ranges with, 992–995 For Each statement with, 1055–1057 LBound and UBound functions for, 997–1000 multidimensional, 998 Asian options examples of, 795f, 796f Monte Carlo pricing of, 776, 794–805 initial e xample of, 796–801 with more periods, 805–806 price paths in, 797–800 principles of, 789 risk-neutral probabilities in, 800–801 VBA program for, 802–805 payoff of, 775, 793 types of, 794 usefulness of, 794 Asset payoffs, discounted expected value of, 780–781 AssetReturn function (VBA), 1049–1050 Asset residual value, in lease analysis, 187–189 Asset returns, for value at risk, 723–724 Assets alpha of, 92 beta of, 91–92, 274–275 1086 Index At-the-money options, 362, 432–433 Auditing formulas, 930–932 Automating frequent procedures, in personal notebook (Excel), 934 copy as picture feature in, 934–940 editing files in, 940 quick number formatting using, 941–942 using macros in, 941 Average abnormal return (AAR), 347, 349 Average function (Excel), for expected monthly returns, 198–199 Average price options, 794. See also Asian options AverageIf function (Excel), 892 AverageIfs function (Excel), 892 Babcock ’ s formula, for bond duration, 523 Backward pricing, of options, 390, 391, 393–394 Backward-looking volatility, 431 Balance sheets in corporate valuation, 54–56 efficient markets approach to, 59 enterprise value on, 56, 57 examples of, 55, 56, 57–58 model for, 54–56 Balance sheet analysis, in financial modeling, 165 Barrier call option knockin, 807, 809–811, 813–816 knockout, 807–809, 811–813, 816 Barrier options Monte Carlo pricing of, 807–816 for knockin barrier call, 807, 809–811, 813–816 for knockout barrier call, 807–809, 811–813, 816 simple example of, 807–809 VBA program for, 811–816 Benchmark portfolios, 306 in portfolio optimization, 313–316 Beta ( β ) of assets, 274 of stock returns, 715–720 Bingo card exercise, 736–744 Binomial function (Excel), 399–400, 405 Binomial option pricing model, 383–419 advantage of, 383 for American options, 395–398 convergence to Black-Scholes price of, 404–407 employee stock options with, 408–417 multi-period, 389–395 non-standard options with, 417–419 overview of, 383 risk neutrality and, 775–776 state prices in, 385–389 risk-neutral prices vs., 388–389 two-date example of, 383–385 VBA programming of, 398–404 Biotechnology project phases of, 506 valuing of, 505–511 Black, Fischer, 225, 306, 425, 459 Black model, for bond option valuation, 459–462 Black-Litterman (BL) approach, to portfolio optimization, 305–329 assumptions in, 306–307 degree of confidence in, 323–324 implied asset returns in, 307 international asset allocation using, 324–325 naïve approach vs., 307–311 overview of, 305–329 Step 1 (benchmark portfolios) in, 313–316 Step 2 (investor opinions) in, 313, 316–317 tracking matrix in, 319–321 two or more opinions in, 321–323 variance-covariance matrix in, 311–312, 325–328 Black ’ s zero-beta capital asset pricing model, 225 Black-Scholes (BS) model, 425–462 “bang for the buck” with, 457–459 basic formula used in, 425–426 bond option valuation with, 459–462 central assumption of, 675 convergence of binomial pricing to, 404–407 dividend adjustments to, 437–441 for continuous payouts, 439–441 for dividend payout before option expiration, 437–439, 438f Greeks with. See Greeks historical return calculations with, 430–431, 434 implied volatility calculations with, 431–434, 696 Monte Carlo stock pricing and, 745–747 overview of, 425 real options with, 496–497 spreadsheet implementation of, 426–429 structured securities with, 441–456 more complicated example of, 443–450, 446f with reverse convertible, 450–455, 456f simple example of, 441–443 VBA program for to define pricing function, 427–429 to find implied volatility, 434–436 volatility calculation using, 430–434 1087 Index Blank cells, data table on, 704, 713, 749, 829–835 Bond duration, 517–536 Babcock ’ s formula for, 523 bond maturity and, 535 as convex combination of yields, 523 coupon effect on, 524–525 Duration formula in Excel for, 518–520 examples of, 517–530 Macaulay measure of, 533–535 meaning of, 520–522 non-flat term structures and, 533–534 overview of, 517 patterns of, 524–525 as price elasticity with respect to discount rate, 521–522 as time-weighted average of payments, 520–521 with uneven payments, 520, 526–533 uses of, 517 Bond maturity, effect on bond duration of, 535 Bond option valuation, Black model for, 459–462 Bond payments, time-weighted average of, 520–521 Bond payoff vector, 586–587 Bond portfolio computation of, 549–551 improving performance of, 547–551 Bond price elasticity with respect to discount rate of, 521–522 forward, 460–462 invoice, 580n market, 580 volatility of, 521–522 Bond ratings, 580, 582–583 Bond yields convex combination of, 523 to maturity, 580 immunization strategy and, 543–544, 546 with uneven payments, 520, 526–533 Bonds accrued interest in, 569–570, 592–593 coupon rate for, 579 default-adjusted expected returns on, 579–603 accrued interest in, 592–593 calculation of payoff for, 588–589 computation of actual bond of, 591–594 computation of bond beta for, 599–602 experimenting with example of, 589–591 in multi-period framework, 582–586 in one-period framework, 581–582 overview of, 579 payoff vector for, 586–587 promised return vs., 579 recovery percentage and, 581–582, 586–587 recovery rates for, 579, 594–595 semiannual transition matrices for, 596–599 terminology for, 579–581 transition matrix for, 582–583, 584–586 face value of, 541–542, 543 immunization strategies for, 539–551 convexity in, 545–546 improving portfolio performance in, 547–551 limitations of, 540–541 numerical example of, 541–544 overview of, 539 simple model of, 539–541 term structure in, 540–541, 546n initial state of, 587 issued at par, 579 principal of, 579 promised return of, 579 prorated coupon of, 580n recovery percentage of, 581–582, 586–587 term structure modeling of, 553–577 basic example of, 553–556 bond riskiness in, 553 bonds with same maturity in, 558–562 functional form fitted to, 562–566 in immunization strategy, 540–541, 546n Nelson-Siegel, 566–568 Nelson-Siegel-Svensson model and, 573–574 overview of, 553 pricing advantages of discount factors in, 556–557 Treasury notes using, 569–571 VBA functions in, 575–577 yield to maturity in, 553, 554–555, 558–559 zero-coupon, 557 term structure risk for, 579n Boolean functions, 894–896 Boolean operators, in VBA, 967–970 Bootstrapping bingo card exercise and, 736–744 data production in, 733–734 Data|Sort command (Excel) for, 738–739 defined, 732 Edit|Past Special|Values command (Excel) for, 738 1088 Index Frequency function (Excel) for, 735 For loops (Excel) in, 734 Rand() function for, 738, 744 Rank function (Excel) for, 743–744 return distribution for, 732–733 Sort function (Excel) for, 734–735, 738–739 for value at risk, 730–744 VBA program for, 734–735 Box-Muller method, for random number generation, 625–628 BS model. See Black-Scholes (BS) model BSCall function (VBA) in Black-Scholes model, 427–428 in binomial option pricing model, 405 in Monte Carlo option pricing, 790 BSMertonCall function (VBA), with Greeks, 475 BSPut function (VBA), in Black-Scholes model, 429 for abandonment option, 504 Bull spread, 372 ButterflyNd1 function (VBA), 767–768 ButterflyNd2 function (VBA), 767 Butterfly strategy, for portfolio insurance, 765–771 payoff/profit pattern in, 765–767 running simulation in, 770–771 self-financing, 768–769 three calls in, 765 VBA functions for, 767–768 Button, assigning macro to, 610, 1028–1030 Call bang, in Black-Scholes model, 457–459 Call options butterfly strategy for portfolio insurance with, 765–771 lower bounds of, 373 payoff patterns for, 363–364 purchased, 367 written, 368 pricing of Black-Scholes formulas for, 426–427 Merton model for, 439–441 replication of, 747–750 profit patterns for, 367–368 Call prices, 368 convexity of, 377–378 higher lower bounds for, 373–374 Call purchaser, 368 Call writer, 368 CallOption function (VBA), 436 Callvalue (VBA), 793 CallVolatility function (VBA), 267, 432, 435–436 Capital, cost of. See Cost of capital Capital asset pricing model (CAPM), 273 Black ’ s zero-beta, 225 for cost of equity, 82, 89–95 beta in, 90–93, 93f for Caterpillar, 108 Excel ’ s data analysis add-in in, 94–95 for Merck, 103–104 problems with, 111–113 TIntercept and TSlope functions in, 93–94 for Whole Foods Market, 105 efficient portfolios and, 221, 223–227 individual optimization vs. general equilibrium in, 273–274 with no risk-free asset, 274–275 as prescriptive and descriptive tool, 275 with risk-free asset, 273–274 testing of, 276–287 absolute value of array of numbers in, 282–283 discussion of results of, 280–282 efficient market portfolio in, 283–285 excess returns in, 286–287 first-pass regression in, 276, 277–278 non-efficiency of market portfolio in, 283–285 problems with results of, 279–280 second-pass regression in, 276, 278–279 security market line in, 276–280 true market portfolio in, 285–286 zero-beta model in, 274–275 uses of, 288 Capital market line (CML), 239–241, 273 CAPM. See Capital asset pricing model (CAPM) CAR (cumulative abnormal returns), 331, 334 examples of, 337, 340, 341–342, 346–349, 353 Cash in enterprise valuation, 140–141 in financial modeling, 175 Cash flows consolidated statement of. See Consolidated statement of cash flows free. See Free cash flows (FCF) from leveraged leases, 179 analysis of, 190–191 computation of, 192 Cell errors, in Excel and VBA, 986–987 Cell variable (VBA), 1058 Cells auditing formulas in, 930–932 blank, data table on, 704, 713, 749, 829–835 fast copy of, 913–914 Bootstrapping (cont.) 1089 Index Greek letters in, 924–925 hidden, 827–828 multi-line line breaks in, 916–917 with text formulas, 917–918 naming, 235–236, 926–928 precedents of, 932 superscripts and subscripts in, 925–926 Center alignment of text, in Excel, 917 Chart titles, automatic updates of, 920–923 Cholesky decomposition, for multiple random variables, 638–645, 645f Cholesky function (VBA), 640, 708 Circular references (Excel), 134 Clinical phase, of biotechnology project, 506 Closing line, for user-defined function, 948 CML (capital market line), 239–241, 273 Collar gamma of moderation of, 483–485 neutral, 483 hedging of, 476–485 delta, 479–483 Collection object (VBA), 1050, 1055–1060 Count property of, 1050 For Each statement with, 1057–1058 Workbooks , 1059–1060 Worksheets , 1060 Column function (Excel), to create matrix with ones on diagonal and zeroes elsewhere, 908 Column Input Cell (Excel), 825, 826 Column vector, 839 Combin function (Excel) in binomial option pricing model, 394, 399 for real options, 509 in VBA, 977–978 Comma separated numbers, formatting, 941–942, 1033–1035 Comments, in VBA code, 981 Comparison operators, in VBA, 967–970 Compound annual return continuous, 216, 217–218, 905–906 from 10 years of return data, 904–905 Compute function (VBA), 793 Conditional execution, VBA, 963–970 Boolean and comparison operators in, 967–970 If … ElseIf statements in, 964–965 nested If statements in, 965–966 one-line If statements in, 963–964 Conditional Formatting function (Excel), 125 Conditional functions (Excel), 889–890 Confidence levels in investor opinions, in Black-Litterman approach to portfolio optimization, 323–324 for value at risk, 723, 725–727 Consolidated statement of cash flows (CSCF) corporate valuation using, 63–67, 117–126 adjustments made to, 121–122 examples of, 64–67, 121, 122 procedure for computing, 63–64 reverse engineering market value and, 124–125 free cash flows estimate using, 62, 118, 119–123 mid-year discounting in, 120 technical issues for, 118 template for, 117–118 terminal value in, 119–120 Constant-correlation model, for variance-covariance matrix, 261, 264–266, 268, 270 Constantcorr function (VBA), 265–266 Continuously compounded returns computation of, 216, 217–218, 905–906 geometric returns vs., 218–219 Control sequence, assigning macro to, 610 Convexity of bond yields, 523 of call option prices, 377–378 in immunization strategy, 545–546 of put process, 378–379 Copy as Picture feature (Excel), 934–940 Copy|Copy as Picture command (Excel), 934 Copying, in Excel cells, using Fast copy, 913–914 copy as picture feature in, 934–940 multiple sheets of notebook, 919 Corporate valuation, 53–70 areas covered in, 53 debt in, 53 enterprise valuation in, 53–69 accounting book values approach to, 54–58 consolidated statement of cash flows in, 54, 63–67 definition of, 53 discounted cash flow in, 54 efficient markets approach to, 58–60 methods to compute, 53–54 present value of free cash flows in, 60–62 pro forma financial statements for, 67–69 equity in, 53 other securities related to company in, 53 Correl function (Excel) for returns, 199, 201, 256–257 using, 876 1090 Index Correlated random simulations correlated pseudo-random numbers generation in, 630–634, 633f multiple random variables with Cholesky decomposition in, 638–645, 645f retirement planning with, 635–638 Correlated stock returns, Monte Carlo simulation of, 705–706 Correlation coefficient, of returns, 202 Correlation matrix, of portfolio returns, 256–259, 847–848 CorrNormal function (VBA), 708–710 Cost of capital, 71–113 beta in, 90–92, 93f computation of, 102–109 for Caterpillar, 106–109 for Merck, 103–104 for Whole Foods Market, 104–105 cost of debt in, 72, 76–81 average, 76, 77–80 for Merck, 79–81 rating-adjusted yield in, 76–77, 80–81 for United States Steel, 77–78 cost of equity in, 72, 82–102 capital asset pricing model for, 82, 89–95 expected return on market for, 98–102 Gordon dividend model for, 82–88 security market line for, 96–99 formula for, 71 overview of, 71–72 problems with models for, 109–113 uses of, 71 weighted average. See Weighted average cost of capital (WACC) Cost of debt, 72, 76–81 average, 76, 77–80 in financial modeling, 174–175 for Merck, 79–81 rating-adjusted yield in, 76–77, 80–81 for United States Steel, 77–78 Cost of equity, 72, 82–102 capital asset pricing model for, 82, 89–95 beta in, 90–92 for Caterpillar, 108 Excel ’ s data analysis add-in in, 94–95 for Merck, 103–104 problems with, 111–113 TIntercept and TSlope functions in, 91–94 for Whole Foods Market, 10 expected return on market for, 98–102 Gordon dividend model for, 82–88 accounting for all cash flows to equity in, 85–87 application of, 83–84 for Caterpillar, 106–109 expected return on market in, 101–102 for Merck, 84–85, 88–89, 103–104 problems with, 109–110 with supernormal growth, 87–88 two-stage model for, 88–89 for Whole Foods Market, 104–105 security market line for, 96–99 Count function (Excel) Boolean, 896 for Monte Carlo computation of π , 658–661 using, 891, 892 Count property (VBA), 1050 CountA function (Excel), 891, 892 CountIf function (Excel) Boolean, 896 in event study, 355, 356 in Monte Carlo computation of π , 658–661 for stock prices and returns, 680 using, 891, 892–894 Coupon effect, in bond duration, 524–525 Coupdaybs formula (Excel), 570 Coupdays formula (Excel), 570 Coupon rate, 579 Covar function (Excel), 256 in capital asset pricing model, 92 for returns, 200 using, 876 Covariance, of portfolio returns, 200–202, 222 Covariance function (VBA), 254–255 Covariance functions (Excel), 201, 254, 255, 876 CSCF. See Consolidated statement of cash flows Cumulative abnormal returns (CAR), 331, 334 examples of, 337, 340, 341–342, 346–349, 353 CurrentRegion object (VBA), 1054 CVErr function (VBA), 986 Data analysis for regression, 882–883 Data menu (Excel), 35 Data simulation, for value at risk, 730–744 Data tables (Excel), 1, 823–835 as arrays, 828 on blank cells, 704, 713, 749, 829–835 examples of, 823–824, 893 hidden formula cells in, 827–828 one-dimensional, 824–825 overview of, 823 recalculation to manual in setting up, 835 two-dimensional, 826 1091 Index Data|Data Analysis|Histogram command (Excel), 618 Data|Data Analysis|Random Number Generation command (Excel) for normally distributed random numbers, 617–618 for stock price distribution, 683 Data|Data Analysis|Regression command (Excel) capital asset pricing model with, 95 installing, 882n using, 882–883 Data|Solver command (Excel). See Solver function (Excel) Data|Sort command (Excel), 738–739 Data|Table command (Excel), 177 in Black-Scholes model, 427, 434–435, 449–450 for computation of efficient portfolio, 285–286 for enterprise valuation, 122, 124–125 for hedging of call, 475 for hedging of collar, 487 in immunization strategy, 544 in Monte Carlo pricing of Asian option, 806 in Monte Carlo simulation of call option with portfolio, 749 of stock returns, 704, 713, 718 for portfolio returns, 204, 704 retirement planning with, 637–638, 667–668 setting up table using one-dimensional, 824–825 two-dimensional, 826 Data|What-if Analysis|Data Table command (Excel), 825 Database, computing statistics for, 876–879 Date function (Excel), 868 Date function (VBA), 1060 Datedif function (Excel), 868–869 Dates, in Excel, 863–869 addition of, 865 calculating difference between two, 868–869 entering into spreadsheet, 863 Excel functions for, 868 formatting of, 864 stretching out, 865 subtraction of, 864–865 translation into numbers of, 864 See also Times, in Excel DAverage function (Excel), 876–879 DCF. See Discounted cash flow DCount function (Excel), 876 DDuration function, 520, 527, 528, 533 Discontinuities, stock price, 676n DMin function (Excel), 876 DStdev function (Excel), 876–879 DStevP function (Excel), 876 DVar function (Excel), 876–877 DVarP function (Excel), 876 Debt corporate valuation using, 53, 59 cost of, 72, 76–81 average, 76, 77–80 for Merck, 79–81 rating-adjusted yield in, 76–77, 80–81 for United States Steel, 77–78 Debt repayment schedules, financial statement modeling for, 150–153 Debug|Compile VBAproject command, 962 Default risk, for bonds, 579 Default-adjusted expected returns, on bonds, 579–603 accrued interest in, 592–593 calculation of payoff for, 588–589 computation of actual bond of, 591–594 computation of bond beta for, 599–602 experimenting with example of, 589–591 in multi-period framework, 582–586 in one-period framework, 581–582 overview of, 579 payoff vector for, 586–587 promised return vs., 579 recovery percentage and, 581–582, 586–587 recovery rates for, 579, 594–595 semiannual transition matrices for, 596–599 terminology for, 579–581 transition matrix for, 582–583, 584–586 Delta hedging of call, 474–476 of collar, 479–483 DeltaCall function (VBA), 470 DeltaPut function (VBA), 471 Deltas, in option pricing, 467, 469, 471, 471f, 472f Depreciation in free cash flo w, 61, 119 in leveraged lease analysis, 190–191 Developer tab (Excel), activating, 936–937, 946–947 Developer|Add-Ins command (Excel), 1066–1067 Differences between two dates, in Excel, 868–869 Dim statement (VBA), 990, 995–996, 1028 Discount factors, 906 term structure modeling with computation of, 554, 555–556 different sets of annual coupon rates in, 558 Nelson-Siegel term structure with, 564, 570 1092 Index pricing advantages of, 556–557 pure discount yields in, 553 Discount rate, price elasticity of bond with respect to, 521–522 Discounted cash flow (DCF) corporate valuation using, 54 two approaches to, 54 real options vs., 498, 506, 507 Discounted expected value, of asset payoffs, 780–781 Discounting, midyear, 141–142, 154 Discovery phase, of biotechnology project, 506 Discretely compounded terms, 215–216 Distribution function (VBA), 614 Dividend adjustments to Black-Scholes model, 437–441 for continuous payouts, 439–441 for known dividend payout before option expiration, 437–439, 438f in portfolio models, 215–217 Dividends in financial modeling, 173 Gordon model for, 82–88 accounting for all cash flows to equity in, 85–87 application of, 83–84 for Caterpillar, 106–109 expected return on market in, 101–102 for Merck, 84–85, 88–89, 103–104 problems with, 109–110 with supernormal growth, 87–88 two-stage model for, 88–89 for Whole Foods Market, 104–105 reinvestment of, 216–217 Do … Loop Until statement (VBA), 974 Do … Loop While statement (VBA), 972 Do Until statement (VBA), 973 Do While statement (VBA), 971 DoWhileDemo function (VBA), 989–990 dOne function (VBA), 427–428 Dot operator (VBA), 1048 dTwo function (VBA), 427–428 Duration, of bond, 517–536 Babcock ’ s formula for, 523 bond maturity and, 535 as convex combination of yields, 523 coupon effect on, 524–525 examples of, 517–530 Excel Duration formula for, 518–520 Macaulay measure of, 533–535 meaning of, 520–522 non-flat term structures and, 533–534 overview of, 517 patterns of, 524–525 as price elasticity with respect to discount rate, 521–522 as time-weighted average of payments, 520–521 with uneven payments, 520, 526–533 uses of, 517 Duration function (Excel), 515, 518–520, 522, 527–528 Dynamic function, 901 Earning announcements, and stock prices, 342–349 Earnings before income and taxes (EBIT), and free cash flow, 62 Edit|Move command (Excel), 919 Edit|Paste Special|Values command (Excel), 738 Editing|Fill|Series command (Excel), 915–916 Efficient frontier in capital asset pricing model, 274 for portfolios, 210 calculation of, 227–233 with capital market line, 239 defined, 222 without short sales, 298–200 VBA program to create, 299–302 Efficient markets approach, to corporate valuation, 54, 58–60 Efficient portfolios, 221–245 capital asset pricing model for, 221, 223–227, 283–285 capital market line for, 239–241 computation of, 259–261 efficient frontier for, 227–233 notation for, 221–223 one-step calculation of, 234–236 optimization procedure for, 236–238 overview of, 221 security market line for, 241–244, 249 theorems on, 223–227 proofs of statements for, 247–250 without short sales, 291–303 constrained, 295–296 efficient frontier graph for, 298–200 numerical example of, 292–298 other position restrictions for, 302–303 overview, 291–292 unconstrained, 293–294 VBA program for, 299–302 Element variable (VBA), 1056, 1060 Else clause (VBA), 963, 964–965 ElseIf clause (VBA), 964–965 Discount f actors (cont.) 1093 Index Employee stock options (ESOs), 408 binomial option pricing model for, 408–417 corporate valuation using, 53 exercise prices for, 408 sensitivity analysis for, 415–417 valuation of, 409 VBA code for, 408–414 vesting period for, 408 Enable Iterative Calculation option (Excel), 134 End-of-year portfolio value lognormal distribution for, 727–728 probability of, 723–725 Enterprise valuation model for company, 53–69 accounting book values approach to, 54–58 consolidated statement of cash flows in, 54, 63–67, 117–126 definition of, 53 discounted cash flow in, 54 efficient markets approach to, 58–60 methods to compute, 53–54 mid-year discounting in, 120, 141–142, 154 present value of free cash flows in, 60–62 pro forma financial statements for, 67–69 value per share and, 122–123 for non-financial company cash and marketable securities in, 140–141 fixed assets in, 142–144 free cash flows in, 138–142, 177–178 mid-year discounting in, 141–142, 154 sensitivity analysis of, 144–145 terminal value in, 138, 139, 140, 145 Enterprise value (EV), 53 accounting statements and, 54, 56, 57 efficient markets approach to, 58, 59 methods to compute, 53–54 mid-year discounting in, 120, 141–142, 154 as present value of free cash flows, 60–62, 119–120 pro forma financial statements for, 68–69 terminal value in, 119–120 value per share and, 122–123 Envelope portfolios, 222 efficient frontier and, 227–233 finding, 226–227 optimization procedure for, 236–238 security market line for, 241–244, 249 theorems for, 223–227 proofs of, 247–250 Epsilon, for yield to maturity for uneven periods, 530–531 Equity corporate valuation using, 53, 58 cost of. See Cost of equity Equity payout, total, in financial modeling, 86, 88, 103, 104–105, 108, 110 Equivalent-loan method for lease analysis, 181–184 Errors cell, in Excel and VBA, 986–987 checking for, 962 in VBA fixing of, 960–962, 991 run time, 990–991 ESO function (Excel), 409–411, 415–417 ESOs. See Employee stock options (ESOs) Estimation window, 332–334 examples of, 336–338, 340, 353 European call, Monte Carlo pricing of convergence to Black-Scholes pricing of, 745–747 simple example of, 776–780, 786–793 two-period model in, 782–786 VBA program for, 787–791 European call options, 362 binomial model for, 393–395 EV . See Enterprise value Event, 337 Event studies, 331–357 abnormal returns in, 331, 334–335 examples of, 337, 338–339, 340, 342, 345, 346, 353, 354 estimation window in, 332–334 examples of, 336–338, 340, 353 event in, 337 event window in, 332, 333–334 examples of, 338–339, 342, 353, 354 examples of fuller, 342–349 initial, 335–342 Linest function (Excel) in, 351–352 market-adjusted model for, 334–335 Offset function (Excel) in, 346, 355–357 outline of, 331–333 overview of, 331 post-event window in, 333 Steyx function (Excel) in, 338–340, 346, 349, 355 time line of, 331–332 two-factor model for, 335, 350–355 Event window, 332, 333–334 examples of, 338–339, 342, 353, 354 Excel Add-Ins with, 1064–1067 array formulas with matrices in, 907–910 cell errors in, 986–987 circular references in, 134 Function Wizard in, 952, 955–958 1094 Index names in, 1061–1063 versions for this book, xxiii Excel functions, 855–898 arrays, 899–911 annual continuous return using, 905–906 built-in, 899–903 compound annual return using, 904–905 for discount factors, 906 entry into spreadsheet of, 899 Frequency as, 902–903 homemade, 904–906 with matrices, 907–910 matrix with ones on diagonal and zeroes elsewhere created using, 907–908 MMult and NInverse in, 902 maximum and maximum off-diagonal elements of matrix using, 908–910 overview of, 899 replacing off-diagonals of matrix using, 910–911 subtracting constant from a matrix using, 907 Transpose as, 899–900 variance-covariance matrices with, 251 Boolean, 894–896 conditional, 889–890 Count , CountA , CountIf , CountIfs , AverageIf , and AverageIfs in, 891–894 date and date functions, 863–869 calculating difference between two dates using, 868–869 stretching out dates using, 865 time and date functions in, 868 times in spreadsheet using, 865–867 financial, 855–863 IPMT and PPMT in, 862–863 IRR as, 857–859 NPV as, 855–856 PMT as, 860–862 PV as, 859–860 Getformula as, 1–10 Large , Rank , Percentile , and PercentRank as, 890–891 normally distributed random number generation using, 617–628 Box-Muller method for, 625–628 Data|Data Analysis|Random Number Generation for, 617–618 Norm.S.Inv for, 621–625 Norm.S.Inv(Rand( )) for, 618–620 Offset as, 896–898 overview of, 855 for regressions, 879–889 data analysis for, 882–883 Index as, 885 Linest as, 885–889 multiple, 884 scatter plot with Trendline as, 880–882 statistical, 875–879 Covar , Covariance , and Corr el as, 876 for databases, 876–879 Var and Stdev as, 875 stock price computations using, 680 in VBA, 977–978 XIRR and XNPV as, 869–874 Excel Object Model, 1047, 1055 Excel software hints, 915–942 for annotating spreadsheets, 940 for automating frequent procedures, 934 copy as picture feature in, 934–940 editing files in personal notebook, 940 quick number formatting using, 941–942 using macros in personal notebook, 941 for chart titles with automatic update, 920–924 for fast copy, 913–914 for filling cells with series, 915–916 for formatting millions as thousands, 932–934 for formula auditing, 930–932 for hiding cells, 928–930 for multi-line cells, 916–918 for naming cells, 926–928 for precedents of cells, 932 for putting Greek letters in cells, 924–925 for superscripts and subscripts, 925–926 text functions in, 920 for working on multiple spreadsheets, 918–919 Excel spreadsheets. See Spreadsheets Excel VBA help files, adding user-defined function to, 955–958 Excess returns in capital asset pricing model, 286–287 matrix for, 252–253 Exercise price of employee stock options, 408 of options, 361, 372 Exp function (Excel), 38–39, 832 Expected monthly return, 198 Expected portfolio return, 222 Expected return on market, 98–102 Expiration date, of options, 361 Face value, of bond, 541–542, 543 FASB. See Financial Accounting Standards Board Fast copy, Excel software for, 913–914 FCF. See Free cash flows (FCF) Feasible portfolios, 222, 223 Feasible set, 222 Excel (cont.) 1095 Index File|Options|Add-Ins|Manage command (Excel), 869, 882n File|Options|Customize Ribbon command (Excel), 936–937, 946–947 Financial Accounting Standards Board (FASB) Statement 13 (FASB-13) on accounting for leases, 179, 190 Statement 123 (FASB-123) on employee stock option valuation, 409, 416 Financial functions (Excel), 855–863 IPMT and PPMT in, 862–863 IRR as, 857–859 NPV as, 855–856 PMT as, 860–862 PV as, 859–860 Financial statement modeling, 127–159 balance sheet analysis in, 165 balance sheet equations in, 133 cash and short-term securities in, 175 for Caterpillar, 161–178 cost of debt in, 174–175 current assets and current liabilities in, 168 for debt repayment schedules, 150–153 depreciation in, 172–173 dividends in, 173 example of, 161–178 extension to years 2 and beyond in, 134–135 fixed assets and sales in, 170–172 free cash flows in, 136–142, 177 measuring, 136–137 reconciling cash balances for, 137–138 for valuing firm, 138–142, 177–178 income statement equations in, 132 long-term receivables in, 174 operating costs in, 169–170 other liabilities and pensions in, 173–174 overview of, 127 plugs in, 129–130, 175 projecting next year ’ s balance sheet and income statement in, 130–131 return on equity in, 153–155 sales projections in, 166–168 target debt/equity ratio in, 148–149 tax loss carryforwards, 155–156 tax rate analysis in, 174 theory and initial example of, 127–129 valuations of firm in cash and marketable securities in, 140–141 fixed assets in, 142–144 free cash flows in, 138–142, 177–178 mid-year discounting in, 141–142, 154 sensitivity analysis of, 144–145 terminal value in, 138, 139, 140, 145 weighted average cost of capital in, 138–139 Financial statements, pro forma, 127 Financing cash flows, 64 Firm, valuation of cash and marketable securities in, 140–141 fixed assets in, 142–144 free cash flows in, 138–142, 177–178 mid-year discounting in, 141–142, 154 sensitivity analysis of, 144–145 terminal value in, 138, 139, 140, 145 First-pass regression, in testing of security market line, 242–243, 276, 277–278 For Each statement with arrays, 1055–1057 with Collections , 1057–1058 For loops (Excel), in bootstrapping, 734 Format, of cells hidden cells and, 827–828, 928–930 millions as thousands in, 932–934 superscripts and subscripts in, 925–926 subroutines for changes to, 1033–1035 Format Cells command (Excel) for formatting millions as thousands, 933–934 for hiding cells, 827–828, 928–930 for superscripts and subscripts, 925–926 Format|Cells|Alignment command (Excel), 916–917 Format|Cells|Custom command (Excel), 932–934 Format|Cells|Number command (Excel), 844, 864, 867, 928–930, 941–942 Format|Cells|Number|Time command (Excel), 614 Format DateTime function (VBA), 1060 Formula auditing, 930–932 Formula cells, in data tables, 824–825, 826 hidden, 827–828 Formula property, of ActiveCell object, 1047 Formulas, names of, 1061 Forward price, of bond, 460–462 Forward-looking estimate, 431 Free cash flows (FCF) in corporate valuation, 54, 60–62 central concepts in, 60 consolidated statement of cash flows and, 62, 63–67, 118, 121–122 earnings before income and taxes (EBIT) for, 62 income statement for defining, 61–62, 119 prediction of, 62 predictive periods for, 60–61 pro forma f inancial statements and, 62, 67–69 1096 Index reverse engineering market value and, 124–125 terminal value in, 119–120 weighted average cost of capital and, 54, 60–61, 70 definition of, 119 in financial statement modeling, 136–142, 177 measuring, 136–137 reconciling cash balances for, 137–138 for valuing firm, 138–142, 177–178 Frequency distribution, 625, 644, 645f, 650–651 Frequency function (Excel) for bootstrapping, 735 for random number generation, 611–612, 618, 644 for stock prices and returns, 679, 695 using, 902–903 Function variables, 889–992 Function Wizard (Excel), 952, 955–958 Functions, in Excel. See Excel functions FV function (Excel), 32–33 Gamma of collar moderation of, 483–485 neutral, 483 of hedge, neutral, 485 in option pricing, 467, 469 Gamma function (VBA), 489 Geometric diffusions, and lognormal price distribution, 681–684, 727–728 Geometric returns, 218–219 Getformula function (Excel), 1–10 activating, xxii–xxiii automating, 6–7 Enable Content for, xxiii macro for using, 6–10 overview of, 1 putting into Excel notebook, 1–4 recording on a Macintosh, 10 in Windows, 7–9 saving notebook with, 4–6 Global minimum variance portfolio (GMVP), computation of, 259–261, 849–851 Goal Seek function (Excel) in Black-Scholes model, 443 for highest acceptable lease rental, 184–185 for internal rate of return, 21–22, 24–25, 47–50 for retirement problem, 35 for state prices, 503 Goals (stock-linked securities), Black-Scholes model for, 450–455, 456f Goodwill, in consolidated statement of cash flows, 64 Gordon dividend model, 82–88 accounting for all cash flows to equity in, 85–87 application of, 83–84 for Caterpillar, 106–109 expected return on market in, 101–102 for Merck, 84–85, 88–89, 103–104 problems with, 109–110 with supernormal growth, 87–88 two-stage model for, 88–89 for Whole Foods Market, 104–105 Gordon formula, 20 Graph titles, automatic updates of, 922–924 Greeks in cells, 924–925 in option pricing, 467–491 calculations for puts in, 471 cell and put deltas as, 471, 471f, 472f cell and put thetas as, 471, 472f, 473f computation of, 468–471 delta hedging of call as, 474–476 hedging of collar with, 476–485 overview of, 467 spreadsheet implementation of, 470 stock price simulations with, 482–483 VBA program with, 486–491 Growth option, 493 Head-and-shoulders pattern, of stock prices, 693 Header line, for user-defined function, 948 Hedge gamma neutral, 485 increasing frequency of, 483–485 Hedging of call, 474–476 of collar, 476–485 Helen Bingo Card exercise, 736–744 Help files (VBA), adding user-defined function to, 955–958 Hidden cells, 827–828, 928–930 Highest acceptable lease rental, 184–187 Hints, for Excel. See Excel software hints Historical returns, in Black-Scholes model, 430–431, 434 HLookup function (Excel), 889–890 Hull-White model, 408, 416, 417 Identity matrix, 843 If … ElseIf statements (VBA), 964–965 Free cash flows (FCF) (cont.) 1097 Index If function (Excel) nested, 965–966 using, 889–890 If statements assigning value to function before introducing, 964 Boolean and comparison operators in, 967–970 to create matrix with ones on diagonal and zeroes elsewhere, 908 for default-adjusted expected bond returns, 588–589 for enterprise valuation, 123 nested, 965–966 one-line, 963–964 in VBA functions, 963–970 using, in Excel, 889 Ill-conditioned matrix, 844 Immunization strategies, 539–551 convexity in, 545–546 improving portfolio performance in, 547–551 limitations of, 540–541 numerical example of, 541–544 overview of, 539 simple model of, 539–541 term structure in, 540–541, 546n Implied variance, in Black-Scholes model, 431–434 Implied volatility in Black-Scholes model, 431–434, 696 for variance-covariance matrix computation, 262, 267–269, 270 ImpliedVolVarCov function (VBA), 269 In-the-money options, 362 Income statement, free cash flow on, 61–62 Index function (Excel), 680 in capital pricing asset model, 93 for regressions, 885 Initial state of bond, 587 InputBox function (VBA), 1032–1033 Insert|Module command (VBA), 948 Int function (Excel), 780 Int function (VBA), 614 Intercept function (Excel) in capital asset pricing model, 92, 277 in event study, 355, 357 for regressions, 880 Internal rates of return (IRRs) annualized, 870 daily, 870 IRR function (Excel) for, 21, 24, 26–28, 857, 1001 on leveraged leases, 189, 190 Rate function (Excel) for, 26 successive refinement technique for, 1001–1002 International Accounting Standards Board (IASB), and executive stock option valuation, 409 Inverses of matrices, 843–844 Investment cash flows, 64 Investments Monte Carlo simulation for, 667–670, 699–720 beta and return in, 715–720 correlated stock returns with, 705–706 Data Table in Excel for, 667–668, 704, 713, 718 Excel notebooks used with, 699 multiple stock portfolio with, 708–709 overview of, 699 portfolio of two stocks in, 702–703 price and returns for single stock in, 699–702 retirement planning and, 663–666 with risk-free asset, 706–707 savings for pension in, 710–714 VBA simulation for, 668–670 Investor opinions, in portfolio optimization, 313, 316–317 Invoice price, of bond, 580n IPMT function (Excel) problem with, 860 using, 862–863 IRR function (Excel) for default-adjusted expected bond returns, 587 for internal rates of return, 21, 24, 26–28, 1001 using, 857–859, 869n IRRs. See Internal rates of return (IRRs) Iteration function (Excel), 134 Kappa, in option pricing, 467, 469 Keyboard shortcuts, for macro, 1025 Knockin barrier call option, 807, 809–811, 813–816 Knockout barrier call option, 807–809, 811–813, 816 Large function (Excel), 890–891 LBound function (VBA), 997–1000 Lease analysis, 179–193 asset residual v alue in, 187–189 equivalent-loan method for, 181–184 highest acceptable lease rental in, 184–187 leveraged, 189–192, 191f overview of, 179 simple example of, 179–180 1098 Index Lease rental, highest acceptable, 184–187 Least squares approximation, for multiple bonds with same maturity, 558–560 Lehman Brothers (LB) Global Aggregate index, 325 Lessee, 179 Lessor, 179 Leveraged leases, 189–192 example of, 190–192 internal rate of return in, 189, 190 multiple phases method for, 189–190 net present value in, 189 parties involved in, 189, 191f Liabilities, in financial modeling, 168, 173–174 Linear equations, solving systems of simultaneous, 845 Linest function (Excel) in capital asset pricing model, 93–94 in event study, 351–352 for regressions multiple regressions, 888–889 using, 885–887 Litterman, Robert, 306 Ln function (Excel), 253 Loan tables, calculation of, 860–861 Logest function (Excel), 885n Loginv function (Excel), for value at risk, 726 Lognormal distribution appearance of, 684–688 in Black-Scholes pricing model, 675 computation of, 681–684 continuous return-generating process and, 680–681 geometric diffusions and, 681–684 head-and-shoulders pattern in, 693 parameters calculation from stock prices of, 694–696 stock price paths and, 676–680 simulation of, 688–692 technical analysis of, 692–694 value at risk with, 727–728 Loops, in VBA, 970–977 bottom-checking, 970 Do … Loop Until statement as, 974 Do … Loop While statement as, 972 Do Until statement as, 973 Do While statement as, 971 For statement as, 975–977 top-checking, 970 Lower triangular square matrices, 639 Macaulay duration measure, 533–535 Macro-enabled file, 958 Macros in Excel assignment of button or control sequence of, 610, 1028–1030 editing, 940 for providing help for user-defined functions, 955–958 recording and saving, 938–940 using, from personal notebook, 941 in VBA for naming of ranges, 1061–1063 Manual calculation, in data tables, 835 Market portfolios in capital asset pricing model efficient, 283–285 non-efficiency of, 283–285 true, 285–286 envelope and, 236–237 finding, 239–241 Market price, of bond, 580 Market wage, of biotechnology project, 506 Marketable securities, in enterprise valuation, 116 Market-adjusted model, for event study, 334–335 Market value, reverse engineering of, 124–125 Markowitz, Henry, 305 Match function (Excel), 680 Mathematica , 596, 673 Matrices, 839–851 addition to, 840 array formulas with, 907–911 maximum and maximum off-diagonal elements using, 908–910 with ones on diagonal and zeroes elsewhere created using, 907–908 replacing off-diagonals using, 910–911 subtracting constant using, 907 variance-covariance using, 251 correlation, 847–848 identity, 843 ill-conditioned, 844 inverses of, 843–844 multiplication of, 841–843 non-singular, 844 off-diagonal elements of finding maximum and minimum, 908–910 replacing, 910–911 with ones on diagonal and zeroes elsewhere, 908 operations on, 840–843 overview of, 839 portfolio calculations using, 205–207 scalar multiplication of, 840 1099 Index square, 839, 843, 844 Cholesky decomposition of, 639–640 lower triangular, 639 positive-definite, 636–639 subtraction of constant from, 907 symmetric, 839 systems of simultaneous linear equations solved with, 845 terminology for, 839 transition, for default-adjusted expected returns on bonds, 582–583, 584–586, 596–599 transposition in, 841 unit rows and unit columns in, 849–851 variance-covariance. See Variance- covariance matrix MatrixPower function (VBA), 585–586, 588–589 Max function (Excel) for carrier option pricing, 813 to find maximum off-diagonal elements of matrix, 909–910 MC methods. See Monte Carlo (MC) methods MCAsian function (VBA), 606–607, 813 MCBarrierIn function (VBA), 814–815 MCBarrierOut function (VBA), 813–815 McCullogh, J. Huston, 534 MDuration function (Excel), 518–519, 522 Mean, of portfolio, 202–209 Mean annual return, 219 Merton model, for option pricing, 439–441, 467 Methods, 1048 using objects, 1048–1049 Mid-year discounting, in enterprise valuation, 120, 141–142, 154 Millions, formatted as thousands, 932–934 Min function (Excel), to find maximum off-diagonal elements of matrix, 909–910 MInverse function (Excel), 843 for efficient frontiers, 229 for efficient portfolio, 234 using, 902 Mistakes, in VBA, fixing, 960–962 MMult function (Excel) for default-adjusted expected bond returns, 584–585, 588, 589 for efficient frontiers, 228, 230 for efficient portfolio, 234 for matrix inverses, 844 for matrix multiplication, 208, 842–843, 902 for portfolio models, 207, 208 for portfolio optimization, 327 using, 902 for variance-covariance matrix, 251, 312 Modern portfolio theory (MPT), 305, 306 Modules, in VBA, 1036–1040 opening new, 948 renaming of, 1036–1038 unique names for, 1038 variables in, 1038–1040 Monte-Carlo (MC) methods, 655–671 for call pricing, 782–786 computing pi ( π ) using, 655–661 for investments, 667–670, 699–720 beta and return in, 715–720 correlated stock returns with, 705–706 Excel notebooks used with, 699 multiple stock portfolio with, 708–709 overview of, 699 portfolio of two stocks in, 702–703 price and returns for single stock in, 699–702 with risk-free asset, 706–707 savings for pension in, 710–714 for option pricing, 775–816 of Asian options, 794–805, 795f, 796f of barrier options, 807–816 Black-Scholes formula and, 745–747, 786–793 improving efficiency of, 791–793 overview of, 775 of plain-vanilla call, 776–780, 786–793 principles of, 789 risk-neutral probabilities in, 775, 780–782, 784–785, 800–801 state prices, probabilities, and risk neutrality in, 781–782, 782f stock price formula for, 745–746 two-period model in, 782–786 VBA programs for, 787–791, 792–793, 802–805, 811–816 overview of, 655 retirement planning with, 663–666 VBA programs for, 661–663, 668–670 value at risk and, 735–736 MonteCarloTimer function (VBA), 662–663 MonteCarloTimeRecord program (VBA), 662–663 Month function (Excel), 868 Monthly return, 198, 219 expected, 198 Moody ’ s bond ratings, 580 Morgan Stanley Capital International (MSCI) Emerging Markets index of, 324 World ex-US index of, 324 MPM (multiple phases method), for analysis of leveraged leases, 189–190 MPT (modern portfolio theory), 305, 306 1100 Index MsgBox function (VBA), 1023, 1030–1032 Multi-line cells line breaks in, 916–917 with text formulas, 917–918 Multi-period binomial model, for option pricing, 389–395 Multiple phases method (MPM), for analysis of leveraged leases, 189–190 Multiple regressions, Excel function for, 884, 888–889 Multiple spreadsheets moving, 919 writing on, 918–919 Multiplication, of matrices, 841–843, 902 scalar, 840 Multivariate simulations non-zero asset returns using, 646–647 uniform distributions using, 648–651 Naïve approach, to portfolio optimization, 307–311 Names in Excel, 1061–1063 of cells, 235–236, 926–928 in VBA looking for, 1062–1063 of modules, 1036–1038 of range, 1061–1063 referring to, 1063 Name Box feature (Excel), 235 Name Manager feature (Excel), 927–928 Named cells, 926–928 Names (VBA), 1062 Names Collection (VBA), 1062 Nelson-Siegel (NS) term structure, 553, 566–568 alternative method of computing, 571–572 Treasury notes using, 569–571 Nelson-Siegel-Svensson model, 553, 573–574 Nested If structures, 965–966 Net present value (NPV) of leveraged leases, 189 NPV function (Excel) for, 14–16 real options vs., 493–494 for unevenly spaced cash flows, 871–872 NewMistake function (Excel), 987 nIRR function (VBA), 1001–1003, 1014–1015 nNPV function (VBA), 1001–1002, 1014–1015 Nonsingular matrix, 844 Non-standard options, binomial option pricing model for, 417–419 Norm.Dist ( NormDist ) function (Excel), for value at risk, 724–725 Norm.Inv function (Excel) for stock price simulation, 690–691 for value at risk, 726 Norm.Inv(Rand( )) function (Excel), for random number generation, 630 Norm.S.Dist function (Excel), for correlated uniform simulated random numbers, 633–634, 648–651 Norm.S.Inv function (Excel) older version of, 745n for random number generation, 619–625, 641–642 for value at risk, 726 Norm.S.Inv(Rand( )) function (Excel) for correlated standard normal variables, 631–632, 636 for portfolio simulation for beta and return, 716 with multiple stocks, 708 with two stocks, 703 for random number generation, 618–620, 632, 664 for retirement planning, 636, 664 for risk-neutral stock prices, 778 for stock price paths, 691–692 Norm.Inv(Rand( ).mean,sigma) function (Excel) for random number generation, 628–629 NormSDist function (Excel), in Black-Scholes model, 428 Norm.S.Dist function (Excel), for correlated uniform variables, 632, 633–634 Norm.S.In v(Rand( )), for correlated uniform variables, 632–634 NormStandardRandom program (VBA), for random number generation, 620–625 NormStandardRandom2 program (VBA), for frequency distribution, 624–625 Now function (Excel), 868 NPV . See Net present value (NPV) NPV function (Excel), 14–16, 906 computing value of finite growing annuity with, 19 fixing, 1000–1001 potential problems with, 856 using, 855–856, 869n NSprice function (VBA), in Nelson-Siegel term structure, 570 Numbers, in Excel changing to text, 920 formatting millions as thousands, 932–934 quick formatting of, 941–942 NXIRR function (Excel), 43, 45, 872n, 874 NXNPV function (Excel), 43–44, 872n, 873 1101 Index Objects (VBA), 1047–1061 ActiveCell variable in, 1047–1048 Collection in, 1055–1060 introduction to, 1047–1049 methods using, 1048–1049 as parameter to function, 1049–1051 properties of, 1047 Range Object variables in, 1049–1053 Selection variable in, 1048–1049 With statement and, 1053–1055 Offset function (Excel) in event study, 346, 355–357 with negative values, 897–898 using, 896–898 OLS (ordinary least squares) regression, 879 One-dimensional data table, 824–825 OneLineIf function (Excel), 963–964 Operating cash flows, 63–64 Opinions, of investors, in portfolio optimization, 313, 316–317, 321–323 Optimal investment portfolios, 273, 275–276 Option arbitrage propositions, 372–379 Option Base statement (VBA), for arrays, 996, 1004, 1017 Option Explicit statement (VBA), 990–991 Option Greeks, 467–491 calculations for puts in, 471 cell and put deltas as, 471, 471f, 472f cell and put thetas as, 471, 472f, 473f computation of, 468–471 delta hedging of call as, 474–476 hedging of collar with, 476–485 overview of, 467 spreadsheet implementation of, 470 stock price simulations with, 482–483 VBA program with, 486–491 Option methods with implied volatility, for variance-covariance matrix, 262, 267–269, 270 Option on a stock, 361 Option price, 361 Option pricing arbitrage restrictions of, 372–379 binomial model for, 383–419 advantage of, 383 for American options, 395–398 convergence to Black-Scholes price of, 404–407 employee stock options with, 408–417 multi-period, 389–395 for non-standard options, 417–419 overview of, 383 state prices in, 385–389 two-date example of, 383–385 VBA programming of, 398–404 Black-Scholes (BS) model for, 425–462 “bang for the buck” with, 457–459 basic formula used in, 425–426 for bond option valuation, 459–462 central assumption of, 675 convergence of binomial pricing to, 404–407 dividend adjustments to, 437–439, 438f historical return calculations with, 430–431, 434 implied volatility calculations with, 431–434 overview of, 425 pricing puts in, 429 spreadsheet implementation of, 426–429 for structured securities, 441–456 VBA program for, 427–429, 434–436 volatility calculation using, 430–434 Greeks in, 467–491 calculations for puts in, 471 cell and put deltas as, 471, 471f, 472f cell and put thetas as, 471, 472f, 473f computation of, 468–471 delta hedging of call as, 474–476 hedging of collar with, 476–485 overview of, 467 spreadsheet implementation of, 470 stock price simulations with, 482–483 VBA program with, 486–491 Merton model for, 439–441, 467 Monte Carlo method for, 775–816 of Asian options, 794–805, 795f, 796f of barrier options, 807–816 Black-Scholes formula and, 745–747, 786–793 improving efficiency of, 791–793 overview of, 775 of plain-vanilla call, 776–780, 786–793 principles of, 789 risk-neutral probabilities in, 775, 780–782, 784–785, 800–801 state prices, probabilities, and risk neutrality in, 781–782, 782f stock price formula for, 745–746 two-period model in, 782–786 VBA programs for, 787–791, 792–793, 802–805, 811–816 OptionGamma function (VBA), 470, 471, 489 Options, 361–379 abandonment, 497–505 with equipment sale, 499 state prices with, 500–502, 509–510, 511 value enhancement with, 498–499 valuing as series of puts of, 503–505 valuing of project for, 497–498 1102 Index to alter operating scale, 493 American vs. European, 362 at-the-money, in-the-money, and out-of-the- money, 362, 432–433 average price, 794 call, 361 butterfly strategy with, 765–771 payoff patterns for, 363, 365, 367–366, 368–369 profit patterns for, 366–369 replication of, 747–750 to contract scale, 493 to defer or wait, 493 examples of, 364–365 exercise price of, 361 to expand, 494–496 expiration date of, 361 growth, 493 path-dependent, 775, 776, 782f, 800 path-independent, 776, 781, 782f payoff and profit patterns for, 363–364, 365–370 strategies to change, 370–372 price of, 361 pricing. See Option pricing put, 361 lower bounds of, 375–376 payoff patterns from, 363–364, 369–370 pricing of, 429 profit patterns for, 369–370 protective, 370–371 valuing abandonment option as series of, 503–505 real, 493–511 abandonment option as, 497–505 Black-Scholes model for, 496–497 discounted cash flow vs., 498, 506, 507 examples of, 494–496 option to expand as, 494–496 overview of, 493–494 for valuing of biotechnology project, 505–511 spreads for, 372 stock price and, 361 terminology for, 361–362 time-to-build, 493 writing vs. purchasing, 362–363, 368 Option strategies, 370–372 OptionReturnEnd (VBA), in binomial option pricing model, 402 OptionReturnMiddle (VBA), in binomial option pricing model, 402 Or Boolean operator, 969–970 OrDemo function (VBA), 969–970 Ordinary least squares (OLS) regression, 879 Out-of-the-money options, 362 Parameter variables, 889 Paste|Paste Special command (Excel), 901 Path-dependent options, 775, 776, 782f, 800 Path-independent options, 776, 781, 782f Payoff patterns, for options, 363–364, 365–370 call, 367–369 put, 369–370 strategies to change, 370–372 Payoff vector, of bond, 586–587 Pension savings, Monte Carlo simulation for, 710–714 Percentile function (Excel), 890, 891 PercentRank function (Excel), 890, 891 “Perfect” regression, 243 Personal Macro Notebook (Excel) automating frequent procedures in, 934 copy as picture feature in, 934–940 editing files in, 940 quick number formatting using, 941–942 saving to, 939–940, 945n using macros in, 941 Pi ( π ) value of, 661, 673 Monte-Carlo computation of, 655–661 Picture, copy as, in Excel, 934–940 Plain-vanilla call, Monte Carlo pricing of convergence to Black-Scholes pricing of, 745–747 simple example of, 776–780, 786–793 two-period model in, 782–786 VBA program for, 787–791 Plugs, in financial statement modeling, 129–130, 175 PMT function (Excel), 29, 33, 37–38 problem with, 860 using, 860–862 Population covariance, 255 Population standard deviation, 262 Population statistics, in portfolio return computation, 199–200 Population variance, 256 Portfolio insurance butterfly strategy for, 765–771 payoff pattern of, 371 simulation of strategy for, 750–758 on total portfolio returns, 759–764 VBA functions for, 767–768 Portfolio models, 197–219 dividend adjustments in, 215–217 matrices in, 205–207 Options (cont.) 1103 Index means and variances in, 202–209 overview of, 197 returns in, 197–202 computation of, 197–199 continuously compounded vs. geometric, 218–219 correlation coefficient of, 202 covariance of, 200–202 sample vs. population statistics in, 199–200 Portfolio optimization, Black-Litterman approach to, 305–329 assumptions in, 306–307 degree of confidence in, 323–324 implied asset returns in, 307 international asset allocation using, 324–325 naïve approach to, 307–311 overview of, 305–329 Step 1 (benchmark portfolios) in, 313–316 Step 2 (investor opinions) in, 313, 316–317 tracking matrix in, 319–321 two or more opinions in, 321–323 variance-covariance matrix in, 311–312, 325–328 Portfolio returns, 197–202 continuously compounded vs. geometric, 218–219 correlation coefficient of, 202 correlation matrix of, 256–259, 847–848 covariance of, 200–202 expected, 222 Monte Carlo simulations in, 735–736, 699–720 sample vs. population statistics in, 199–200 variance of, 204–205, 222 Portfolios benchmark, 306, 313–316 efficient. See Efficient portfolios envelope, 210–213 efficient frontier and, 227–233 finding, 226–227 optimization procedure for, 236–238 security market line for, 241–244, 249 theorems for, 223–227, 247–250 feasible, 222, 223 global minimum variance (GMVP), 259–261, 849–851 market efficient, 283–285 envelope and, 236–237 finding, 239–241 non-efficiency of, 283–285 true, 285–286 means and variances of, 204–209 not efficient, 213, 283 optimal investment, 273 of risky assets, 222 value at risk and, 723 zero-beta, 274–275 Position sizes, for value at risk, 729 Positive-definite square matrices, 638–639 Post-event window, 333 PPMT function (Excel) problem with, 860 using, 862–863 PPUP (principal-protected, upside potential) security, Black-Scholes model for, 441–443 Precedents of cells, in spreadsheets, 932 Present value (PV) net. See Net present value (NPV) PV function (Excel) for, 15 Price elasticity, 458 of bond with respect to discount rate, 521–522 Price paths, for Asian options, 797–800 Price volatility, of bond, 521–522 PricePathSimulation function (Excel), 688–690 Prices, risk-neutral vs. state, 388–389 Pricing by arbitrage, 384–385 capital asset. See Capital asset pricing model (CAPM) option. See Option pricing Principal, of bond, 579 Principal-protected, upside potential (PPUP) security, Black-Scholes model for, 441–443 Pro forma financial statements, 127 enterprise value of firm from, 68–69 free cash flows based on, 62, 67–69 typical model of, 67–68 Probability, and end-of-year portfolio value, 723–725 Product function (Excel), for compound annual return, 904–905 Profit patterns for options, 365–370 Project Explorer pane (VBA), 1036–1037 Properties pane (VBA), 1037 Prorated coupon, of bond, 580n Protective put, 370–371. See also Portfolio insurance Pseudo-random number generators, 607–608 Pure discount yields, 553 Put bang, in Black-Scholes model, 458 Put options, 361 lower bounds of, 375–376 payoff patterns from, 363–364 purchased, 369 written, 369–370 1104 Index pricing of, in Black-Scholes formulas, 426–427, 429 profit patterns for, 369–370 protective, 370–371 valuing abandonment option as series of, 503–505 Put prices, convexity of, 378–379 Put writer, 369–370 Put-call parity, 371n, 376–377 in Black-Scholes model, 425–426 PutVolatility function (VBA), 432 PV . See Present value (PV) PV function (Excel), 15, 18–19, 33, 37–38, 523 problem with, 860 using, 859–860 PVCalculator macro (VBA), 1032–1033 Quantiles, for value at risk, 723, 725–727 Quarter unit circle, in Monte Carlo computation of π , 655–656 RADR (risk-adjusted discount rate), 72. See also Cost of capital Ramanujan, Srinivasan, 661n, 672, 673 Rand function (Excel), 829 for bootstrapping, 738, 744 for Monte Carlo method, 656–657, 659, 656 for option pricing, 784 for random number generation, 608–609, 641–642 Random number generation, 607–651 correlated pseudo-random numbers in, 630–634, 633f normally distributed, 616–630 Box-Muller method for, 625–628 Data|Data Analysis|Random Number Generation command (Excel) for, 617–618 Norm.Inv(Rand( )) for, 630 Norm.Inv(Rand( ).mean,sigma) function (Excel) in, 628–629, 630 Norm.S.Inv(Rand( )) function (Excel) in, 618–620 NormStandardRandom function (VBA) for, 620–625 overview of, 607–608 pseudo-generators for, 630 Rand function (Excel) for, 608–609, 641–642 Rnd function (VBA) for, 609–610, 615–616 testing of generators for, 611–614 Randomize function (VBA) for, 615–616 Random numbers, 607, 829 uniformly distributed, 607, 611–614, 616 Random_EachDifferent macro, 615 Random_Same macro, 615–616 Randombetweenlow.high function (Excel), 740n Randomize function (VBA), 615–616 RandomList macro, 609, 610 Range, as collection of cells, 1055, 1058 Range name macro for, 1061–1062 referring to, 1063 Range Object (VBA), 1047, 1049 ActiveCell object (VBA) of, 1047–1048 as parameter to function, 1049–1051 Range parameter of, 1049–1051 Range property of, 1051–1053 Selection variable of, 1048–1049 Variant type variables with, 1050 Range property (VBA), 1047, 1049–1050, 1051–1053 RangeRound function (VBA), 1015–1016 Rank function (Excel), 890–891 for bootstrapping, 743–744 Rate function (Excel), 26 Rating-adjusted yield, on debt, 76–77, 80–81 R&D (research and development), valuing, 510–511 Real options, 493–511 abandonment option as, 497–505 with equipment sale, 499 state prices with, 500–502, 509–510, 511 value enhancement with, 498–499 valuing as series of puts of, 503–505 valuing of project for, 497–498 Black-Scholes model for, 496–497 discounted cash flow vs., 498, 506, 507 example of, 494–496 option to expand as, 494–496 overview of, 493–494 for valuing of biotechnology project, 505–511 Record Macro function (Excel), 7–9, 936, 938–939, 1026, 1027f Record New Macro function (Excel), 10 Recovery percentage, of bond, 581–582, 586–587 Recovery rates, on defaulted bonds, 579, 594–595 Recursion, in VBA, 980 Regressions Excel functions for, 879–889 data analysis for, 882–883 Index as, 885 Linest as, 885–889 multiple, 884 scatter plot with Trendline as, 880–882 Put options (cont.) 1105 Index first-pass, 242–243, 276, 277–278 “perfect,” 243 second-pass, 243, 276, 278–279 Reinvestment, of dividends, 216–217 Research and development (R&D), valuing, 510–511 Reserved words, in user-defined function in VBA, 949 Residual value, in lease analysis, 187–189, 191 Retirement planning correlated random simulations for, 635–638 Data|Table command for, 637–638, 667–668 Goal Seek function (Excel) for, 35 Monte Carlo method for, 663–666 savings for pension in, 710–714 random number generation for, 636, 664 safety cushion in, 665–666 Return on equity (ROE), in financial statement modeling, 153–155 Returns abnormal (AR), 331, 334–335 average, 347, 349 cumulative, 331, 334, 337, 340, 341–342, 346–349, 353 examples of, 337, 338–339, 340, 342, 345, 346, 353, 354 asset, for value at risk, 723–724 on bonds default-adjusted expected returns. See Default-adjusted expected returns, on bonds promised, 579 compound annual, 904–905 excess in capital asset pricing model, 286–287 matrix for, 252–253 internal rate of. See Internal rates of return (IRRs) portfolio, 197–202 annual, 219 average periodic, 218 continuously compounded vs. geometric, 218–219 correlation coefficient of, 202 correlation matrix of, 256–259, 847–848 covariance of, 200–202 expected, 222 monthly, 198, 219 sample vs. population statistics in, 199–200 variance of, 204–209, 222 Reverse convertible, Black-Scholes model for, 450–455, 456f Reverse engineering, of market value and, 124–125 Rho, in option pricing, 467, 469 RhoCall function (VBA), 470 RhoPut function (VBA), 471 Risk, value at. See Value at risk (VaR) Risk-adjusted discount rate (RADR), 72. See also Cost of capital Risk-free asset capital asset pricing model with, 273–274 capital asset pricing model without, 274–275 Risk neutrality, 775–776 Risk-neutral prices, vs. state prices, 781–782, 782f Risk-neutral probabilities, in Monte Carlo simulation, 775, 780–782, 784–785, 800–801 Riskiness of bonds, in term structure modeling, 553 Risky assets, portfolio of, 222 Rnd function (VBA), for random number generation, 609–610, 615–616 ROE (return on equity), in financial statement modeling, 153–155 Round function (Excel), in binomial option pricing model, 403 Row function (Excel), to create matrix with ones on diagonal and zeroes elsewhere, 908 Row Input Cell (Excel), 825, 826 Row vector, 839 RSMertoncall function (Excel), 475 RSQ function (Excel) in capital asset pricing model, 92, 277 in event study, 355, 357 for regression, 880 Run time errors, 990–991 Runs variable (VBA), 787–789 Russell 2000 Index, 324 Russell 3000 Index, 324 Safety cushion, in retirement planning, 665–666 Sales protections, in financial modeling, 166–168 Sample co variance, 255 Sample statistics, in portfolio return computation, 199–200 Sample variance, 256 Sample variance-covariance matrix, 251 computation of, 251–256, 270 alternative methods for, 261, 270 global minimum variance portfolio and, 259–261 S&P (Standard & Poor) bond ratings, 580 1106 Index S&P 500 (Standard & Poor 500 Index), 276, 280–281, 324, 327 SPDR (SPY; “spiders”), 430, 431–434, 440 Save As command (Excel), for workbook as Add-In, 1065–1066 Scalar multiplication, of matrices, 840 Scatter plots of random standard normal simulates with different correlations, 632, 633f Trendline for, 880–882 Scholes, Myron, 425 SecondDur function (VBA), in immunization strategy, 548 Second-pass regression, in testing of security market line, 243, 276, 278–279 Security market line (SML), 273 classic, 96 for computing bond beta, 599–600 for cost of equity, 96–99 for envelope portfolios, 241–244, 249 tax-adjusted, 97–98 testing of, 241–244, 276–280 Select method (VBA), 1049 Selection object (VBA), 1048–1049 Seller, of call options, 362 Semiannual transition matrices, for default- adjusted expected returns on bonds, 596–599 Sensitivity analysis data tables for, 825 employee stock option pricing using, 415–417 enterprise valuation using, 122, 124–125 Serial values, 868 Series, filling cells with, in Excel, 915–916 Set statement (VBA), 1058 Short sales efficient portfolio without, 291–303 constrained, 295–296 efficient frontier graph for, 298–200 numerical example of, 292–298 other position restrictions for, 302–303 overview, 291–292 unconstrained, 293–294 VBA program for, 299–302 Short-term investment, in financial modeling, 175 Shrinkage methods, for variance-covariance matrix, 262, 266, 311–312 Single-index model (SIM), for variance- covariance matrix, 261, 262–264, 270 Slope function (Excel) in capital asset pricing model, 91, 92, 277 in event study, 355, 357 for regressions, 880 for returns, 200 SML. See Security market line (SML) Solver function (Excel) in Black-Scholes model, 443 in future value problem, 35–37 for hedging of collar, 477 for highest acceptable lease control, 185 in portfolio insurance, 762 in portfolio optimization, 293–294, 295–297, 298 for real options, 509–510 for state prices, 502 for term structure modeling, 566, 573 for Nelson-Siegel term structure for Treasury notes, 570 for Svensson variation to Nelson-Siegel model, 573 for value at risk, 725–727 Sort function (Excel), for bootstrapping, 734–735, 738–739 SPDR S&P 500 (SPY; “spiders”), Black- Scholes option pricing model for, 430, 431–434, 440 SpecialCells method (VBA), 1049 Spreads, 372 Spreadsheets annotation of, 940 automating frequent procedures for, 934 copy as picture feature in, 934–940 editing files in personal notebook, 940 quick number formatting using, 941–942 using macros in personal notebook, 941 Black-Scholes formulas implemented in, 426–429 fast copy in, 913–914 formatting millions as thousands on, 932–934 formula auditing on, 930–932 Greek letters on, 924–925 hiding cells in, 928–930 Monte Carlo investment simulation in, 667–668 multi-line cells in line breaks in, 916–917 with text formulas, 917–918 multiple moving, 919 writing on, 918–919 naming cells in, 926–928 precedents of cells in, 932 running macros from button on, 610, 1028–1030 subroutines for changes to, 1033–1035 superscripts and subscripts in, 925–926 text functions in, 920 titles with automatic update for, 920–924 1107 Index Square matrices, 839, 843, 844 lower triangular, 639 positive-definite, 636–639 Sqrt() function (Excel), 680 Staged investment, 493 Standard & Poor (S&P) bond ratings, 580 Standard & Poor 500 Index (S&P 500), 276, 280–281, 324, 327 SPDR (SPY; “spiders”), 430, 431–434, 440 StartTime function (VBA), for Monte Carlo computation of π , 662–663 State prices, 385–387 with abandonment option, 500–502, 509–510, 511 for biotechnology project, 500–502, 509–510, 511 in real-option approach, 497–498 risk-neutral prices vs., 388–389, 780–781 Statistical functions, in Excel, 875–879 advanced use of “D” functions in, 878–879 Covar , Covariance , and Correl as, 876 for databases, 876–877 Var and Stdev as, 875 Statistics, in portfolio return computation, 199–200 Stdev function (Excel), 875 Stdevp function (Excel), 875 for expected monthly returns, 199, 200 for stock price distribution, 695 using, 875 Steyx function (Excel), in event study, 338–340, 346, 349, 355 Stock options, employee. See Employee stock options (ESOs) Stock price paths, 676–680 example of, 677–678 Excel computations for, 680 frequencies of daily returns for, 679–680 graph of daily returns for, 677–679 reasonable properties of, 677 simulation of, 688–690 stock properties and, 677–679 Stock prices, 361 discontinuities of, 676n earning announcements an, 342–349 lognormal distribution from, 681–688, 694–696 reasonable properties of, 676–677 simulation of, 675–696 fundamentalists vs. technicians on, 692–693 Norm.Inv for, 690–691 overview of, 675 10 lognormal price paths in, 691–692 weak efficient markets hypothesis on, 693–694 takeover bid and, 336–339 technical analysis of, 692–693 Stock returns continuous return-generating process of, 680–681 correlation matrix of, 256–259, 847–848 in portfolio models, 197–202 computation of, 197–199 continuously compounded vs. geometric, 218–219 correlation coefficient of, 202 covariance of, 200–202 sample vs. population statistics in, 199–200 Stock-linked securities, Black-Scholes model for, 450–455, 456f Stocks in Black-Scholes model historical returns of, 430–431, 434 implied volatility of, 431–434 payoff patterns from purchased, 266 short sale, 366 profit patterns for, 366–367 StopTime function (VBA), for Monte Carlo computation of π , 662–663 Stoxx50 stock index, 445, 448–450 Stretching out dates, in Excel, 865 Structured securities, 441–456 more complicated example of, 443–450, 446f with reverse convertible, 450–455, 456f simple example of, 441–443 Subroutines in VBA, 1023–1030 activation of, 1024–1025 changes to spreadsheet using, 1033–1035 editing, 940 format of, 1023 keyboard shortcut for, 1025 recording, 1026–1028, 1027f running from button on worksheet, 610, 1028–1030 user interaction with, 1030–1033 InputBox function in, 1032–1033 MsgBox function in, 1030–1031 using, 941 Subscripts, in cells, 925–926 Subtraction of dates in Excel, 864–865 of times in Excel, 867 Successive refinement technique (VBA), 1001–1002 Successfulruns function (VBA), 668–670 Sum function (Excel), 906 1108 Index SumProduct function (Excel) for efficient frontiers, 230 for valuing of biotechnology project, 508 for weighted average depreciation rate, 172 SumRange function (VBA), 992–993 Supernormal growth, and Gordon model, 87–88 Superscripts, in cells, 925–926 Svensson variation to Nelson-Siegel model, 553, 573–574 Symmetric matrix, 839 Syntax errors, in VBA, 960–962 Takeover bid, and stock prices, 336–339 Tax rate, in weighted average cost of credit, 75–76 Tax loss carryforwards, in financial statement modeling, 155–156 T-bill rate, in portfolio optimization, 309 Technical analysis, of stock prices, 692–693 Term structure modeling, 553–577 basic example of, 553–556 bond riskiness in, 553 bonds with same maturity in, 558–562 discount factors in pricing advantages of, 556–557 pure discount yields in, 553 functional form fitted to, 562–566 in immunization strategy, 540–541, 546n Nelson-Siegel, 566–568 Nelson-Siegel-Svensson model and, 573–574 overview of, 553 Treasury notes using, 569–571 VBA functions in, 575–577 yield to maturity in, 553 single bond, 554–555 multiple bonds for same maturity, 558–562 zero-coupon, 557, 567 Term structure risk, for bonds, 579n Terminal value, in enterprise valuation, 138, 139, 140, 145 Text alignment, in Excel, 917 Text formulas, multi-line cells with, 917–918 Text function (Excel) changing numbers to text using, 920 in event study, 355, 356 examples of, 920 using, 878, 892, 920 ThetaCall function (VBA), 470 ThetaPut function (VBA), 471 Thetas, in option pricing, 467, 469, 472, 473f Thousands, formatted millions as, 932–934 Time function (VBA), 990 Time period, in value at risk, 723 TimeFirst parameter, 520 Times, in Excel entering into spreadsheet, 865–867 Excel functions for, 868 formatting of, 867 subtraction of, 867 See also Dates, in Excel Time-to-build option, 493 Time-weighted average, of bond payments, 520–521 TIntercept function, in capital asset pricing model, 92, 93–94 Today function (Excel), 868 Tools|Data Analysis|Regression command (Excel), in capital asset pricing model, 94–95 Tools|Formula Auditing command (Excel), 930–932 Tools|Goal Seek (Excel). See Goal Seek function (Excel) Tools|Solver (Excel) command, 502 Total equity payout, in financial modeling, 86, 88, 103, 104–105, 108, 110 Tracking matrix, in Black-Litterman approach, to portfolio optimization, 319–321 Transition matrix, for default-adjusted expected returns on bonds, 582–583, 584–586 Transpose function (Excel) for matrix transposition, 841 for portfolio models, 208 for portfolio optimization, 326 using, 899–900 for variance-covariance matrix, 251, 326 Transposition, of matrices, 841 Treasury bond strip market, 553n Treasury notes, Nelson-Siegel term structure for, 569–571 Trendline function (Excel), 202 in capital asset pricing model, 92 scatter plot using, 880–882 True market portfolios, 285–286 TSlope function, in capital asset pricing model, 91–92, 94 Two-dimensional data table, 826 Two-factor model, for event study, 335, 350–355 Two-stage Gordon model, 88–89 TwoStageGordon function (Excel), 88–89 Types, in VBA, 1015–1016 Typing errors, in VBA, 961–962 UBound function (VBA), 997–1000 UCase function (VBA), 999 1109 Index Uneven payments, bond duration with, 520, 526–533 Unevenly spaced cash flows, XNPV function (Excel) for, 871–872 UnevenYTM function (Excel), 531–533 UniformRandom function (VBA), 613–616 Upcounter (VBA), 789, 791 URandomList function (VBA), 710 User-defined functions (VBA), 945–987 access to, 946 comments in code in, 981 conditional execution ( If statements) in, 963–970 Excel functions in, 977–979 fixing mistakes in, 960–962 syntax errors in, 960–961 typing errors in, 961–962 function line in, 950 header and closing lines for, 948 module, 948, 1038 obligatory elements of, 948 in other user-defined functions, 979–981 overview of, 945 providing help in Function Wizard for, 955–958 reserved words in, 949 saving, 945n, 958–960 VBA editor for building, 946–954 activating, 946–947 opening new module in, 948 writing and using sample function in, 948–954 Valuation of bond options, 459–462 of company, 53–69 accounting book values approach to, 54–58 consolidated statement of cash flows in, 54, 63–67, 117–126 definition of, 53 discounted cash flow in, 54 efficient markets approach to, 58–60 methods to compute, 53–54 present value of free cash flows in, 60–62 pro forma financial statements for, 67–69 of employee stock options, 409 of firm cash and marketable securities in, 140–141 fixed assets in, 142–144 free cash flow in, 138–142, 177–178 mid-year discounting in, 141–142, 154 sensitivity analysis of, 144–145 terminal value in, 138, 139, 140, 145 Value at risk (VaR), 723–744 asset returns for, 723–724 bingo game card exercise in, 736–744 bootstrapping (simulating data) for, 730–744 lognormal distribution for, 727–728 Monte Carlo simulations and, 735–736 Norm.Dist function (Excel) for, 725–726 overview of, 723 position size for, 729 quantiles (confidence levels) for, 723, 725–727 simple example of, 723–725 three-asset problem and, 728–730 time period for, 723 variance-covariance matrix for, 728–730 Value property, of Range object (VBA), 1050 VanillaCall function (VBA), 787–791 VaR. See Value at risk (VaR) Var function (Excel), 198–199, 200, 256 for expected monthly returns, 199, 200 using, 875 VarCovar function (Excel), 254, 284, 846 Variable types, in VBA, 1015–1016 Variables, in VBA, 989–992 in modules, 1038–1040 Variance implied, in Black-Scholes model, 431–434 of portfolio returns, 202–209, 222 Variance-covariance matrix, 251–270 computation of, 251–256 choice of alternatives in, 270 constant-correlation model, 261, 264–266, 268, 270 division by M vs. M - 1 in, 255–256 option methods with implied volatility, 262, 267–269, 270 sample, 252, 261, 270 shrinkage methods, 262, 266, 270, 311–312 single-index model for, 261, 262–264, 270 VBA function for, 254–255 in computation of efficient portfolio, 259–261 global minimum variance portfolio and, 259–261 overview of, 251 in portfolio models, 207 in portfolio optimization, 311–312, 325–328 with stock returns, 846–847 value at risk and, 728–730 Variant parameter, 992 Variant type variables (VBA), 1015, 1058 containing arrays, 992, 1011–1012 with Range object, 1050 Varp function (Excel) in capital asset pricing model, 92 for expected monthly returns, 198 using, 875 1110 Index VBA. See Visual Basic for Applications (VBA) Vega, in option pricing, 467, 469 Vega function (VBA), 470 Vesting period, for employee stock options, 408 Visual Basic Editor function (VBA), 946 Visual Basic for Applications (VBA), 943 activating, 946–947 Add-Ins and integration in, 1064–1067 binomial option pricing model for, 398–404 for employee stock options, 410–414 Black-Scholes model using to define pricing function, 427–429 to find implied variance, 434–436 with Greeks, 468–470, 480–483 Boolean and comparison operators in, 967–970 cell errors in, 986–987 comments in code for, 981 efficient frontier using, 299–302 help files in, adding user-defined function to, 955–958 loops in, 970–977 bottom-checking, 970 Do … Loop Until statement as, 974 Do … Loop While statement as, 972 Do Until statement as, 973 Do While statement as, 971 For statement as, 975–977 top-checking, 970 macro subroutines in, 1023–1030 activation of, 1024–1025 changes to spreadsheet using, 1033–1035 editing, 940 format for, 1023 keyboard shortcut for, 1025 recording, 1026–1028, 1027f running from button on worksheet, 610, 1028–1030 user interaction with, 1030–1033 using, 941 modules in, 1036–1040 opening new module, 948 renaming of, 1036–1038 unique names for, 1038 variables in, 1038–1040 Monte Carlo method using, 661–663, 668–670 for Asian option pricing, 792–793 for barrier option pricing, 802–805 for plain-vanilla call option pricing, 787–791 names in, 1061–1063 looking for, 1062–1063 of modules, 1036–1038 of range, 1061–1063 referring to, 1063 objects in, 1047–1061 ActiveCall variable in, 1047–1048 Collection in, 1055–1060 introduction to, 1047–1049 methods using, 1048–1049 as parameter to function, 1049–1051 properties of, 1047 Range Object variables in, 1049–1053 Selection variable in, 1048–1049 With statement and, 1053–1055 portfolio insurance with, 767–768 random number generation using, 612–613, 620–622, 626–627 recursion in, 980 stock price distribution using, 686–689 term structure modeling using, 575–577 types in, 1015–1016 user input and InputBox function in, 1032–1033 user output and MsgBox function in, 1030–1031 user-defined functions using, 945–987 access to, 946 comments in code in, 981 conditional execution ( If statements) in, 963–970 Excel functions in, 977–979 fixing mistakes in, 960–962 function line in, 950 header and closing lines for, 948 module, 948, 1038 obligatory elements of, 948 in other user-defined functions, 979–981 overview of, 945 providing help in Function Wizard for, 955–958 reserved words in, 949 saving, 945n, 958–960 VBA editor for building, 946–954 value at risk using, 733–735 variables in, 989–992, 1038–1040 variance-covariance matrix using, 265–266 yield to maturity for uneven periods using, 530–532 VLookup function (Excel), 889–890, 910–911 V olatility, implied, in Black-Scholes model, 431–434, 696 1111 Index WACC. See Weighted average cost of capital (WACC) Weak efficient markets hypothesis, 693–694 Weekday function (Excel), 868 Weighted average cost of capital (WACC), 71–113 beta in, 90–92, 93f computation of, 102–109 for Caterpillar, 106–109 for Merck, 103–104 for Whole Foods Market, 104–105 cost of debt in, 72, 76–81 cost of equity in, 72, 82–102 capital asset pricing model for, 82, 89–95 expected return on market for, 98–102 Gordon dividend model for, 82–88 security market line for, 96–99 in financial modeling, 138–139 firm ’ s debt in, 74–75 firm ’ s equity in, 73 formula for, 71 free cash flows discounted at, 54, 60–61, 70 overview of, 71–72 problems with models for, 109–113 tax rate in, 75–76 uses of, 71 With statement (VBA), 1053–1055 Word file, copying from Excel and pasting into, 934 Word-wrap (Excel), 916–917, 918 Workbook object (VBA), 1059–1060 Workbooks, 1055 converting to Add-In, 1065–1066 creating for Add-In, 1064–1065 installing and using as Add-In, 1066–1067 saving with user-defined VBA content, 958–960 See also Personal Macro Notebook Workbooks Collection (VBA), 1059–1060 Worksheet object (VBA), 1060 Worksheets, 1055 Worksheets Collection (VBA), 1060 Wrap text function (Excel), 916–917, 918 Writer, of call options, 362 XIRR function (Excel) for annualized returns, 42 in Black-Scholes model, 455 for default-adjusted expected bond returns, 592 installing, 869 problems with, 43, 44–45, 872, 873–874 return on assets vs. return on equity using, 118 using, 869–871 for yield to maturity for uneven periods, 528–530 XNPV function (Excel) consolidated statement of cash flows with, 118 installing, 869 for net present value on specific dates, 42–43 problems with, 43–44, 872–873 using, 869, 871–872 for yield to maturity for uneven periods, 530n XY Scatter Plot function (Excel), 92, 93f, 880 Yield to maturity (YTM), of bond, 580 immunization strategy and, 543–544, 546 term structure modeling and, 553 single bond, 554–555 multiple bonds with same maturity, 558–562 with uneven payments, 528–533 Zero-beta capital asset pricing model, 274–275 Zero-beta portfolios, 225–226 Zero-coupon term structure, 557, 567"
}